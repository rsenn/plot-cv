{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Prom",
				"PromiseWorker"
			],
			[
				"trans",
				"transformation"
			],
			[
				"allow",
				"allowedDirs"
			],
			[
				"Get",
				"GetElementsBySignal"
			],
			[
				"GetEle",
				"GetElementsBySignal"
			],
			[
				"getOwn",
				"getOwnPropertyNames(...)"
			],
			[
				"ColorSi",
				"ColorSignals"
			],
			[
				"HTML",
				"HTMLTableRow"
			],
			[
				"HTMLTable",
				"HTMLTableColumn"
			],
			[
				"rend",
				"renderToString"
			],
			[
				"Pack",
				"Package2Circuit"
			],
			[
				"lazyP",
				"lazyProperties"
			],
			[
				"JS_Get",
				"JS_GetProperty"
			],
			[
				"Ret",
				"ReturnValuePathFunction"
			],
			[
				"cFunc",
				"cFuncListObjects"
			],
			[
				"isC",
				"isCFuncCall"
			],
			[
				"En",
				"EntityNames"
			],
			[
				"parseFrom",
				"parseFromString"
			],
			[
				"pseu",
				"pseudoClassArg"
			],
			[
				"pseudoC",
				"pseudoClassName"
			],
			[
				"Key",
				"KeyboardEvent"
			],
			[
				"getOp",
				"getOptionEntries"
			],
			[
				"setProp",
				"setPropertyValue"
			],
			[
				"parse",
				"parseSelectors"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyStr"
			],
			[
				"jsm_buil",
				"jsm_builtin_init"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"JS_Set",
				"JS_SetProperty"
			],
			[
				"JS_New",
				"JS_NewObject"
			],
			[
				"ide",
				"importIdentifiers"
			],
			[
				"iden",
				"importIdentifiers"
			],
			[
				"import",
				"importIdentifiers"
			],
			[
				"ident",
				"identifierSets"
			],
			[
				"path_is",
				"path_is_absolute"
			],
			[
				"js_is_",
				"js_is_null_or_undefined"
			],
			[
				"path_skip_se",
				"path_skip_separator_s"
			],
			[
				"WRITABLE_METHO",
				"WRITABLE_METHOD_CLOSE"
			],
			[
				"list_fo",
				"list_for_each_prev"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"underly",
				"underlying_source"
			],
			[
				"Tok",
				"TokenSequence"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"getAt",
				"getAttributeNames"
			],
			[
				"self",
				"self_closing_tags"
			],
			[
				"self_",
				"self_closing_tags"
			],
			[
				"JS_PROP",
				"JS_PROP_ENUMERABLE"
			],
			[
				"depe",
				"dependencyMap"
			],
			[
				"de",
				"dependencyMap"
			],
			[
				"dep",
				"dependencyMap"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"spec",
				"specifiers"
			],
			[
				"Num",
				"NumericRange"
			],
			[
				"token_r",
				"token_release_rt"
			],
			[
				"JS_Thr",
				"JS_ThrowTypeError"
			],
			[
				"js_",
				"js_location_data"
			],
			[
				"debug_js_mall",
				"debug_js_malloc_usable_size"
			],
			[
				"repl",
				"replaceRange"
			],
			[
				"js_malloc_u",
				"js_malloc_usable_size_rt"
			],
			[
				"malloc",
				"malloc_usable_size"
			],
			[
				"all",
				"alloc_block_list"
			],
			[
				"alloc",
				"alloc_block_list"
			],
			[
				"path_skip",
				"path_skip_component"
			],
			[
				"jsm_mo",
				"jsm_module_loader"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			],
			[
				"inotify",
				"inotify_add_watch"
			],
			[
				"JS_SetProp",
				"JS_SetPropertyUint32"
			],
			[
				"JS_GEt",
				"JS_GetGlobalObject"
			],
			[
				"dbuf_put",
				"dbuf_put_colorstr"
			],
			[
				"REPEATER_",
				"REPEATER_REJECTED"
			],
			[
				"REP",
				"REPEATER_DONE"
			],
			[
				"resol",
				"resolving_funcs"
			],
			[
				"JS_NEwCFun",
				"JS_NewCFunctionData"
			],
			[
				"js_function",
				"js_function_bind_this"
			],
			[
				"js_repeater_iter",
				"js_repeater_iteration"
			],
			[
				"REPEA",
				"REPEATER_REJECTED"
			],
			[
				"exe",
				"execution"
			],
			[
				"REPEAT",
				"REPEATER_STOPPED"
			],
			[
				"JS_THro",
				"JS_ThrowOutOfMemory"
			],
			[
				"repeater",
				"repeater_finalizer"
			],
			[
				"BACK",
				"BACKGROUND_RED"
			],
			[
				"js_inspec",
				"js_inspect_tostring"
			],
			[
				"JS_Atom",
				"JS_AtomToValue"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"js_misc_glob_err",
				"js_misc_glob_errfunc_ctx"
			],
			[
				"js_misc",
				"js_misc_glob"
			],
			[
				"js_mi",
				"js_misc_glob_errfunc"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  main()\n(v, i) =>\nLoop()\n  log = (t, name) =>\n  fire = (...args) =>\n  redraw = (...args) =>\nFire()\n(a, p) =>\nRedraw()\nCreatePalette()\nCreatePaletteHSL()\n  v =>\n   () =>\n   v =>\n  b =>\nRandomByte()\nModulo(n, m)\nBlaze(x, y)\nMouseHandler(e)\nMouseIterator()\nResizeHandler(e)\nInit()",
			"settings":
			{
				"buffer_size": 278,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					572,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/geom/transformation.js",
						"symkeys":
						[
							[
								204,
								218
							],
							[
								245,
								272
							],
							[
								738,
								748
							],
							[
								1077,
								1095
							],
							[
								1190,
								1200
							],
							[
								1277,
								1284
							],
							[
								1306,
								1317
							],
							[
								1373,
								1379
							],
							[
								1402,
								1411
							],
							[
								1505,
								1515
							],
							[
								1551,
								1560
							],
							[
								1589,
								1596
							],
							[
								1625,
								1633
							],
							[
								1690,
								1702
							],
							[
								1814,
								1822
							],
							[
								1842,
								1850
							],
							[
								1871,
								1886
							],
							[
								2158,
								2165
							],
							[
								2257,
								2271
							],
							[
								2380,
								2402
							],
							[
								2636,
								2642
							],
							[
								2685,
								2691
							],
							[
								4013,
								4034
							],
							[
								4064,
								4088
							],
							[
								4121,
								4141
							],
							[
								4170,
								4189
							],
							[
								4360,
								4371
							],
							[
								4482,
								4495
							],
							[
								4527,
								4531
							],
							[
								4648,
								4656
							],
							[
								4720,
								4744
							],
							[
								5022,
								5030
							],
							[
								5089,
								5101
							],
							[
								5158,
								5168
							],
							[
								5207,
								5215
							],
							[
								5253,
								5268
							],
							[
								5548,
								5556
							],
							[
								5601,
								5611
							],
							[
								5921,
								5929
							],
							[
								6066,
								6083
							],
							[
								6287,
								6319
							],
							[
								6551,
								6559
							],
							[
								6713,
								6724
							],
							[
								6790,
								6810
							],
							[
								7087,
								7091
							],
							[
								7330,
								7342
							],
							[
								7431,
								7439
							],
							[
								7793,
								7801
							],
							[
								7983,
								8000
							],
							[
								8290,
								8301
							],
							[
								8464,
								8471
							],
							[
								8537,
								8557
							],
							[
								8950,
								8962
							],
							[
								9159,
								9167
							],
							[
								9279,
								9289
							],
							[
								9599,
								9607
							],
							[
								9738,
								9755
							],
							[
								10037,
								10044
							],
							[
								10195,
								10215
							],
							[
								10272,
								10289
							],
							[
								10481,
								10493
							],
							[
								10627,
								10637
							],
							[
								10684,
								10692
							],
							[
								10761,
								10769
							],
							[
								10816,
								10833
							],
							[
								11036,
								11056
							],
							[
								11250,
								11268
							],
							[
								11287,
								11318
							],
							[
								12094,
								12110
							],
							[
								12230,
								12248
							],
							[
								12323,
								12341
							],
							[
								12725,
								12740
							],
							[
								13009,
								13023
							],
							[
								13325,
								13346
							],
							[
								13440,
								13466
							],
							[
								13576,
								13594
							],
							[
								13682,
								13705
							],
							[
								13808,
								13830
							],
							[
								13893,
								13914
							],
							[
								13976,
								14001
							],
							[
								14182,
								14191
							],
							[
								14294,
								14303
							],
							[
								14571,
								14584
							],
							[
								14826,
								14833
							],
							[
								14856,
								14860
							],
							[
								14897,
								14904
							],
							[
								14965,
								14979
							],
							[
								15047,
								15062
							],
							[
								15131,
								15146
							],
							[
								15215,
								15227
							],
							[
								15293,
								15326
							],
							[
								15339,
								15352
							],
							[
								15525,
								15541
							],
							[
								15729,
								15744
							],
							[
								15883,
								15898
							],
							[
								15929,
								15933
							],
							[
								16354,
								16368
							],
							[
								16503,
								16518
							],
							[
								16705,
								16727
							],
							[
								16867,
								16879
							],
							[
								17046,
								17053
							],
							[
								17168,
								17178
							],
							[
								17319,
								17323
							],
							[
								17401,
								17413
							],
							[
								17462,
								17467
							],
							[
								17636,
								17642
							],
							[
								17806,
								17820
							],
							[
								17932,
								17950
							],
							[
								18014,
								18066
							],
							[
								18500,
								18529
							],
							[
								18600,
								18624
							],
							[
								18763,
								18782
							],
							[
								18863,
								18877
							],
							[
								18905,
								18912
							],
							[
								18972,
								18991
							],
							[
								19029,
								19036
							],
							[
								19201,
								19214
							],
							[
								19242,
								19249
							],
							[
								19308,
								19326
							],
							[
								19364,
								19371
							],
							[
								19533,
								19550
							],
							[
								19578,
								19585
							],
							[
								19681,
								19703
							],
							[
								19741,
								19748
							],
							[
								20030,
								20040
							],
							[
								20073,
								20084
							],
							[
								20117,
								20124
							],
							[
								20192,
								20202
							],
							[
								20566,
								20579
							],
							[
								20648,
								20659
							],
							[
								20818,
								20826
							],
							[
								20944,
								20955
							],
							[
								20991,
								21006
							],
							[
								21065,
								21072
							],
							[
								21154,
								21178
							],
							[
								21341,
								21359
							],
							[
								21701,
								21719
							],
							[
								22301,
								22365
							],
							[
								22428,
								22495
							],
							[
								22561,
								22624
							],
							[
								22748,
								22754
							]
						],
						"symlist":
						[
							"Transformation",
							"constructor(transformation)",
							"get type()",
							"TransformationList",
							"get axes()",
							"axis =>",
							"get props()",
							"key =>",
							"has(axis)",
							"get is3D()",
							"entries()",
							"prop =>",
							"toJSON()",
							"vector(unit)",
							" axis =>",
							" axis =>",
							"toString(tUnit)",
							"clone()",
							"(acc, prop) =>",
							"static fromString(arg)",
							"arg =>",
							"arg =>",
							"static get rotation()",
							"static get translation()",
							"static get scaling()",
							"static get matrix()",
							"value(inst)",
							" ctor =>",
							"ctor",
							"Rotation",
							"constructor(angle, x, y)",
							"invert()",
							"get values()",
							"get is3D()",
							"isZero()",
							"toString(rUnit)",
							"coord =>",
							"toSource()",
							"coord =>",
							"accumulate(other)",
							"static convertAngle(angle, unit)",
							"Rotation",
							"Translation",
							"constructor(...args)",
							"a =>",
							"get values()",
							"isZero()",
							"invert()",
							"accumulate(other)",
							"Translation",
							"Scaling",
							"constructor(...args)",
							"get values()",
							"isZero()",
							"toString()",
							"invert()",
							"accumulate(other)",
							"Scaling",
							"MatrixTransformation",
							"constructor(init)",
							"get values()",
							"toString()",
							"invert()",
							"isZero()",
							"accumulate(other)",
							"MatrixTransformation",
							"TransformationList",
							"constructor(init, tUnit, rUnit)",
							"initialize(init)",
							"TransformationList",
							"TransformationList",
							"fromString(str)",
							"fromArray(arr)",
							"get translationUnit()",
							"set translationUnit(value)",
							"get rotationUnit()",
							"set rotationUnit(value)",
							"static fromString(str)",
							"static fromArray(arr)",
							"static fromMatrix(matrix)",
							"toArray()",
							"toArray()",
							"push(...args)",
							"clone()",
							"t =>",
							"map(fn)",
							"slice(...args)",
							"splice(...args)",
							"concat(...args)",
							"filter(pred)",
							"baseCall(c = Array.prototype.map)",
							" (...args) =>",
							"unshift(...args)",
							"rotate(...args)",
							"translate(x, y)",
							"t =>",
							"scale(...args)",
							"matrix(...args)",
							"toString(tUnit, rUnit)",
							" t =>",
							"toDOM()",
							"toSource()",
							"t =>",
							"toMatrices()",
							" t =>",
							"undo()",
							"merge(...args)",
							"TransformationList",
							"decompose(degrees = true, transformationList = true)",
							".toArray = function toArray()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"get rotation()",
							"item =>",
							"set rotation(value)",
							"item =>",
							"get scaling()",
							"item =>",
							"set scaling(value)",
							"item =>",
							"get translation()",
							"item =>",
							"set translation(value)",
							"item =>",
							"get last()",
							"get first()",
							"at(pos)",
							"collapse()",
							"collapseAll()",
							"get angle()",
							"invert()",
							"(acc, t) =>",
							"join(sep = ' ')",
							"clear()",
							"apply(obj, round = true)",
							"TransformationList",
							"TransformationList",
							"ImmutableTransformationList.prototype.rotate = function(...args)",
							"ImmutableTransformationList.prototype.translate = function(...args)",
							"ImmutableTransformationList.prototype.scale = function(...args)",
							" () =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAWAQAAICBtYWluKCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkJsYXplKHgsIHkpCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkAAAAAAAAAAIoJAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					573,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								404,
								419
							],
							[
								1069,
								1078
							],
							[
								1467,
								1488
							],
							[
								1531,
								1549
							],
							[
								1630,
								1649
							],
							[
								1705,
								1726
							],
							[
								1913,
								1930
							],
							[
								2323,
								2332
							],
							[
								2413,
								2436
							],
							[
								2863,
								2889
							],
							[
								3274,
								3303
							],
							[
								3726,
								3730
							],
							[
								3741,
								3747
							],
							[
								3765,
								3770
							],
							[
								3797,
								3801
							],
							[
								4307,
								4330
							],
							[
								4437,
								4460
							],
							[
								4524,
								4546
							],
							[
								4715,
								4741
							],
							[
								5493,
								5524
							],
							[
								5792,
								5819
							],
							[
								5948,
								5965
							]
						],
						"symlist":
						[
							"function main()",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Blaze(x, y)",
							" function MouseHandler(e)",
							"async function* MouseIterator()",
							" function ResizeHandler(e)",
							" function Init()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACKCQAAVHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm1hdGlvbikKICBnZXQgdHlwZSgpClRyYW5zZm9ybWF0aW9uTGlzdAogIGdldCBheGVzKCkKICBheGlzID0+CiAgZ2V0IHByb3BzKCkKICBrZXkgPT4KICBoYXMoYXhpcykKICBnZXQgaXMzRCgpCiAgZW50cmllcygpCiAgcHJvcCA9PgogIHRvSlNPTigpCiAgdmVjdG9yKHVuaXQpCiAgIGF4aXMgPT4KICAgYXhpcyA9PgogIHRvU3RyaW5nKHRVbml0KQogIGNsb25lKCkKKGFjYywgcHJvcCkgPT4KICBzdGF0aWMgZnJvbVN0cmluZyhhcmcpCiAgYXJnID0+CiAgYXJnID0+CiAgc3RhdGljIGdldCByb3RhdGlvbigpCiAgc3RhdGljIGdldCB0cmFuc2xhdGlvbigpCiAgc3RhdGljIGdldCBzY2FsaW5nKCkKICBzdGF0aWMgZ2V0IG1hdHJpeCgpCiAgdmFsdWUoaW5zdCkKICAgY3RvciA9PgogIGN0b3IKUm90YXRpb24KICBjb25zdHJ1Y3RvcihhbmdsZSwgeCwgeSkKICBpbnZlcnQoKQogIGdldCB2YWx1ZXMoKQogIGdldCBpczNEKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKHJVbml0KQogIGNvb3JkID0+CiAgdG9Tb3VyY2UoKQogIGNvb3JkID0+CiAgYWNjdW11bGF0ZShvdGhlcikKICBzdGF0aWMgY29udmVydEFuZ2xlKGFuZ2xlLCB1bml0KQpSb3RhdGlvbgpUcmFuc2xhdGlvbgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgYSA9PgogIGdldCB2YWx1ZXMoKQogIGlzWmVybygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpUcmFuc2xhdGlvbgpTY2FsaW5nCiAgY29uc3RydWN0b3IoLi4uYXJncykKICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGFjY3VtdWxhdGUob3RoZXIpClNjYWxpbmcKTWF0cml4VHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcihpbml0KQogIGdldCB2YWx1ZXMoKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGlzWmVybygpCiAgYWNjdW11bGF0ZShvdGhlcikKTWF0cml4VHJhbnNmb3JtYXRpb24KVHJhbnNmb3JtYXRpb25MaXN0CiAgY29uc3RydWN0b3IoaW5pdCwgdFVuaXQsIHJVbml0KQogIGluaXRpYWxpemUoaW5pdCkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdAogIGZyb21TdHJpbmcoc3RyKQogIGZyb21BcnJheShhcnIpCiAgZ2V0IHRyYW5zbGF0aW9uVW5pdCgpCiAgc2V0IHRyYW5zbGF0aW9uVW5pdCh2YWx1ZSkKICBnZXQgcm90YXRpb25Vbml0KCkKICBzZXQgcm90YXRpb25Vbml0KHZhbHVlKQogIHN0YXRpYyBmcm9tU3RyaW5nKHN0cikKICBzdGF0aWMgZnJvbUFycmF5KGFycikKICBzdGF0aWMgZnJvbU1hdHJpeChtYXRyaXgpCiAgdG9BcnJheSgpCiAgdG9BcnJheSgpCiAgcHVzaCguLi5hcmdzKQogIGNsb25lKCkKICB0ID0+CiAgbWFwKGZuKQogIHNsaWNlKC4uLmFyZ3MpCiAgc3BsaWNlKC4uLmFyZ3MpCiAgY29uY2F0KC4uLmFyZ3MpCiAgZmlsdGVyKHByZWQpCiAgYmFzZUNhbGwoYyA9IEFycmF5LnByb3RvdHlwZS5tYXApCiAgICguLi5hcmdzKSA9PgogIHVuc2hpZnQoLi4uYXJncykKICByb3RhdGUoLi4uYXJncykKICB0cmFuc2xhdGUoeCwgeSkKICB0ID0+CiAgc2NhbGUoLi4uYXJncykKICBtYXRyaXgoLi4uYXJncykKICB0b1N0cmluZyh0VW5pdCwgclVuaXQpCiAgIHQgPT4KICB0b0RPTSgpCiAgdG9Tb3VyY2UoKQogIHQgPT4KICB0b01hdHJpY2VzKCkKICAgdCA9PgogIHVuZG8oKQogIG1lcmdlKC4uLmFyZ3MpClRyYW5zZm9ybWF0aW9uTGlzdAogIGRlY29tcG9zZShkZWdyZWVzID0gdHJ1ZSwgdHJhbnNmb3JtYXRpb25MaXN0ID0gdHJ1ZSkKICAudG9BcnJheSA9IGZ1bmN0aW9uIHRvQXJyYXkoKQogIGZpbmRMYXN0SW5kZXgocHJlZGljYXRlKQogIGZpbmRMYXN0KHByZWRpY2F0ZSkKICBnZXQgcm90YXRpb24oKQogIGl0ZW0gPT4KICBzZXQgcm90YXRpb24odmFsdWUpCiAgaXRlbSA9PgogIGdldCBzY2FsaW5nKCkKICBpdGVtID0+CiAgc2V0IHNjYWxpbmcodmFsdWUpCiAgaXRlbSA9PgogIGdldCB0cmFuc2xhdGlvbigpCiAgaXRlbSA9PgogIHNldCB0cmFuc2xhdGlvbih2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IGxhc3QoKQogIGdldCBmaXJzdCgpCiAgYXQocG9zKQogIGNvbGxhcHNlKCkKICBjb2xsYXBzZUFsbCgpCiAgZ2V0IGFuZ2xlKCkKICBpbnZlcnQoKQooYWNjLCB0KSA9PgogIGpvaW4oc2VwID0gJyAnKQogIGNsZWFyKCkKICBhcHBseShvYmosIHJvdW5kID0gdHJ1ZSkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdApJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnJvdGF0ZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUudHJhbnNsYXRlID0gZnVuY3Rpb24oLi4uYXJncykKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS5zY2FsZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCiAgICgpID0+AAAAAAAAAAAWAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					574,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire-es.html",
						"symkeys":
						[
							[
								194,
								198
							],
							[
								308,
								314
							]
						],
						"symlist":
						[
							"body",
							"canvas"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAWAQAAICBtYWluKCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkJsYXplKHgsIHkpCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkAAAAAAAAAAA8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					575,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								404,
								419
							],
							[
								1069,
								1078
							],
							[
								1467,
								1488
							],
							[
								1531,
								1549
							],
							[
								1630,
								1649
							],
							[
								1705,
								1726
							],
							[
								1913,
								1930
							],
							[
								2323,
								2332
							],
							[
								2413,
								2436
							],
							[
								2863,
								2889
							],
							[
								3274,
								3303
							],
							[
								3726,
								3730
							],
							[
								3741,
								3747
							],
							[
								3765,
								3770
							],
							[
								3797,
								3801
							],
							[
								4307,
								4330
							],
							[
								4437,
								4460
							],
							[
								4524,
								4546
							],
							[
								4715,
								4741
							],
							[
								5493,
								5524
							],
							[
								5792,
								5819
							],
							[
								5948,
								5965
							]
						],
						"symlist":
						[
							"function main()",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Blaze(x, y)",
							" function MouseHandler(e)",
							"async function* MouseIterator()",
							" function ResizeHandler(e)",
							" function Init()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBib2R5CiAgY2FudmFzAAAAAAAAAAAWAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					576,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/crosskit.js",
						"symkeys":
						[
							[
								1993,
								2014
							],
							[
								2086,
								2096
							],
							[
								2175,
								2188
							],
							[
								2362,
								2373
							],
							[
								2441,
								2454
							],
							[
								2685,
								2704
							],
							[
								2880,
								2903
							],
							[
								2983,
								3000
							],
							[
								3086,
								3108
							],
							[
								3194,
								3205
							],
							[
								3575,
								3591
							],
							[
								4369,
								4390
							],
							[
								4542,
								4554
							],
							[
								4675,
								4698
							],
							[
								4764,
								4815
							],
							[
								5134,
								5178
							],
							[
								5310,
								5354
							],
							[
								5417,
								5459
							],
							[
								5854,
								5897
							],
							[
								5973,
								6015
							],
							[
								6105,
								6114
							],
							[
								6141,
								6187
							],
							[
								6428,
								6437
							],
							[
								6464,
								6506
							],
							[
								6736,
								6745
							],
							[
								6772,
								6814
							],
							[
								7189,
								7223
							],
							[
								7745,
								7760
							],
							[
								7773,
								7791
							],
							[
								8898,
								8940
							],
							[
								9160,
								9243
							],
							[
								10051,
								10142
							],
							[
								11208,
								11288
							],
							[
								13580,
								13634
							],
							[
								14042,
								14081
							],
							[
								14159,
								14221
							],
							[
								14817,
								14850
							],
							[
								15133,
								15159
							],
							[
								15605,
								15640
							],
							[
								17605,
								17638
							],
							[
								21626,
								21653
							],
							[
								21801,
								21827
							],
							[
								22732,
								22761
							],
							[
								23124,
								23129
							],
							[
								23195,
								23205
							],
							[
								23404,
								23409
							],
							[
								23477,
								23487
							],
							[
								23839,
								23844
							],
							[
								23892,
								23902
							],
							[
								24119,
								24124
							],
							[
								24170,
								24180
							],
							[
								24308,
								24313
							],
							[
								24360,
								24370
							],
							[
								24498,
								24503
							],
							[
								24552,
								24562
							],
							[
								24697,
								24702
							],
							[
								24754,
								24764
							],
							[
								24902,
								24907
							],
							[
								24959,
								24969
							],
							[
								25101,
								25106
							],
							[
								25155,
								25165
							],
							[
								25315,
								25320
							],
							[
								25370,
								25380
							],
							[
								25514,
								25519
							],
							[
								25562,
								25572
							],
							[
								25727,
								25732
							],
							[
								25780,
								25790
							],
							[
								25933,
								25938
							],
							[
								25989,
								25999
							],
							[
								26205,
								26210
							],
							[
								26260,
								26270
							],
							[
								26498,
								26503
							],
							[
								26566,
								26576
							],
							[
								26705,
								26746
							],
							[
								26936,
								26971
							],
							[
								26981,
								27018
							],
							[
								27144,
								27167
							],
							[
								27234,
								27263
							],
							[
								27332,
								27369
							],
							[
								27418,
								27446
							],
							[
								27489,
								27518
							],
							[
								27563,
								27621
							],
							[
								27685,
								27743
							],
							[
								28284,
								28338
							],
							[
								28386,
								28445
							],
							[
								28643,
								28676
							],
							[
								28885,
								28950
							],
							[
								29038,
								29088
							],
							[
								29742,
								29796
							],
							[
								30455,
								30507
							],
							[
								30535,
								30559
							],
							[
								30707,
								30740
							],
							[
								30888,
								30921
							],
							[
								31389,
								31420
							],
							[
								31471,
								31502
							],
							[
								31696,
								31759
							],
							[
								31769,
								31838
							],
							[
								31848,
								31873
							],
							[
								31940,
								31973
							],
							[
								32106,
								32176
							],
							[
								32182,
								32211
							],
							[
								32956,
								32979
							],
							[
								33063,
								33094
							],
							[
								33947,
								33974
							],
							[
								34064,
								34087
							],
							[
								34097,
								34138
							],
							[
								34148,
								34189
							],
							[
								34242,
								34267
							],
							[
								35774,
								35836
							],
							[
								38397,
								38417
							],
							[
								38623,
								38650
							],
							[
								38853,
								38860
							],
							[
								40657,
								40664
							],
							[
								43316,
								43323
							],
							[
								46134,
								46143
							],
							[
								48041,
								48049
							],
							[
								49686,
								49700
							],
							[
								52950,
								52959
							],
							[
								55877,
								55883
							],
							[
								56121,
								56136
							],
							[
								58012,
								58019
							],
							[
								60011,
								60022
							],
							[
								62916,
								62926
							],
							[
								65263,
								65270
							],
							[
								66271,
								66281
							],
							[
								66482,
								66490
							],
							[
								66597,
								66607
							],
							[
								67801,
								67815
							],
							[
								67855,
								67866
							],
							[
								67905,
								67917
							],
							[
								67959,
								67967
							],
							[
								68260,
								68277
							],
							[
								68340,
								68358
							],
							[
								68434,
								68451
							],
							[
								68514,
								68532
							],
							[
								68639,
								68644
							]
						],
						"symlist":
						[
							"function isPOT(value)",
							"length(pt)",
							"normalize(pt)",
							"dot(v1, v2)",
							"angle(v1, v2)",
							"cross(vectA, vectB)",
							"multiply(vectA, constB)",
							"add(vectA, vectB)",
							"subtract(vectA, vectB)",
							"equal(a, b)",
							"multiply(m1, m2)",
							"vec2_multiply(m1, m2)",
							"transpose(m)",
							"function Transform(mat)",
							"Transform.prototype.clearStack = function(init_mat)",
							"Transform.prototype.setIdentity = function()",
							"Transform.prototype.getIdentity = function()",
							"Transform.prototype.getResult = function()",
							"Transform.prototype.pushMatrix = function()",
							"Transform.prototype.popMatrix = function()",
							"Transform",
							"Transform.prototype.translate = function(x, y)",
							"Transform",
							"Transform.prototype.scale = function(x, y)",
							"Transform",
							"Transform.prototype.rotate = function(ang)",
							" function WebGL2D(canvas, options)",
							"function (gl2d)",
							" function(context)",
							"WebGL2D.enable = function(canvas, options)",
							"WebGL2D.prototype.getFragmentShaderSource = function getFragmentShaderSource(sMask)",
							"WebGL2D.prototype.getVertexShaderSource = function getVertexShaderSource(stackDepth, sMask)",
							"WebGL2D.prototype.initShaders = function initShaders(transformStackDepth, sMask)",
							"WebGL2D.prototype.initBuffers = function initBuffers()",
							"WebGL2D.prototype.postInit = function()",
							"WebGL2D.prototype.initCanvas2DAPI = function initCanvas2DAPI()",
							" function HSLAToRGBA(h, s, l, a)",
							" function getHue(value)",
							" function colorStringToVec4(value)",
							" function colorVecToString(vec4)",
							" function cloneObject(obj)",
							" function saveDrawState()",
							" function restoreDrawState()",
							"get()",
							"set(value)",
							"get()",
							"set(value)",
							"get()",
							"set(value)",
							"get()",
							"set(value)",
							"get()",
							"set(value)",
							"get()",
							"set(value)",
							"get()",
							"set(value)",
							"get()",
							"set(value)",
							"get()",
							"set(value)",
							"get()",
							"set(value)",
							"get()",
							"set(value)",
							"get()",
							"set(value)",
							"get()",
							"set(value)",
							"get()",
							"set(value)",
							"get()",
							"set(value)",
							".fillText = function fillText(text, x, y)",
							".strokeText = function strokeText()",
							".measureText = function measureText()",
							".save = function save()",
							".restore = function restore()",
							".translate = function translate(x, y)",
							".rotate = function rotate(a)",
							".scale = function scale(x, y)",
							".createImageData = function createImageData(width, height)",
							".getImageData = function getImageData(x, y, width, height)",
							".putImageData = function putImageData(imageData, x, y)",
							".transform = function transform(m11, m12, m21, m22, dx, dy)",
							" function sendTransformStack(sp)",
							".setTransform = function setTransform(m11, m12, m21, m22, dx, dy)",
							".fillRect = function fillRect(x, y, width, height)",
							".strokeRect = function strokeRect(x, y, width, height)",
							".clearRect = function clearRect(x, y, width, height)",
							" function SubPath(x, y)",
							".beginPath = function beginPath()",
							".closePath = function closePath()",
							".moveTo = function moveTo(x, y)",
							".lineTo = function lineTo(x, y)",
							".quadraticCurveTo = function quadraticCurveTo(cp1x, cp1y, x, y)",
							".bezierCurveTo = function bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)",
							".arcTo = function arcTo()",
							".rect = function rect(x, y, w, h)",
							".arc = function arc(x, y, radius, startAngle, endAngle, anticlockwise)",
							" function fillSubPath(index)",
							".fill = function fill()",
							" function strokeSubPath(index)",
							".stroke = function stroke()",
							".clip = function clip()",
							".isPointInPath = function isPointInPath()",
							".drawFocusRing = function drawFocusRing()",
							" function Texture(image)",
							".drawImage = function drawImage(image, a, b, c, d, e, f, g, h)",
							".update = function()",
							" function(callback, fps)",
							"init(v)",
							"line(v)",
							"rect(v)",
							"square(v)",
							"pixel(v)",
							"roundedrect(v)",
							"circle(v)",
							"img(v)",
							".onload = () =>",
							"text(v)",
							"triangle(v)",
							"polygon(v)",
							"clear()",
							"bgcolor(c)",
							"bgimg(v)",
							"animate(v)",
							"interval(f, t)",
							"timer(f, t)",
							"update(f, t)",
							"pause(v)",
							"rgb = function(v)",
							"rgba = function(v)",
							"hsl = function(v)",
							"hsla = function(v)",
							" e =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAWAQAAICBtYWluKCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkJsYXplKHgsIHkpCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkAAAAAAAAAAOYNAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					577,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								404,
								419
							],
							[
								1069,
								1078
							],
							[
								1467,
								1488
							],
							[
								1531,
								1549
							],
							[
								1630,
								1649
							],
							[
								1705,
								1726
							],
							[
								1913,
								1930
							],
							[
								2323,
								2332
							],
							[
								2413,
								2436
							],
							[
								2863,
								2889
							],
							[
								3274,
								3303
							],
							[
								3726,
								3730
							],
							[
								3741,
								3747
							],
							[
								3765,
								3770
							],
							[
								3797,
								3801
							],
							[
								4307,
								4330
							],
							[
								4437,
								4460
							],
							[
								4524,
								4546
							],
							[
								4715,
								4741
							],
							[
								5493,
								5524
							],
							[
								5792,
								5819
							],
							[
								5948,
								5965
							]
						],
						"symlist":
						[
							"function main()",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Blaze(x, y)",
							" function MouseHandler(e)",
							"async function* MouseIterator()",
							" function ResizeHandler(e)",
							" function Init()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmDQAAICBpc1BPVCh2YWx1ZSkKICBsZW5ndGgocHQpCiAgbm9ybWFsaXplKHB0KQogIGRvdCh2MSwgdjIpCiAgYW5nbGUodjEsIHYyKQogIGNyb3NzKHZlY3RBLCB2ZWN0QikKICBtdWx0aXBseSh2ZWN0QSwgY29uc3RCKQogIGFkZCh2ZWN0QSwgdmVjdEIpCiAgc3VidHJhY3QodmVjdEEsIHZlY3RCKQogIGVxdWFsKGEsIGIpCiAgbXVsdGlwbHkobTEsIG0yKQogIHZlYzJfbXVsdGlwbHkobTEsIG0yKQogIHRyYW5zcG9zZShtKQpUcmFuc2Zvcm0obWF0KQpUcmFuc2Zvcm0ucHJvdG90eXBlLmNsZWFyU3RhY2sgPSBmdW5jdGlvbihpbml0X21hdCkKVHJhbnNmb3JtLnByb3RvdHlwZS5zZXRJZGVudGl0eSA9IGZ1bmN0aW9uKCkKVHJhbnNmb3JtLnByb3RvdHlwZS5nZXRJZGVudGl0eSA9IGZ1bmN0aW9uKCkKVHJhbnNmb3JtLnByb3RvdHlwZS5nZXRSZXN1bHQgPSBmdW5jdGlvbigpClRyYW5zZm9ybS5wcm90b3R5cGUucHVzaE1hdHJpeCA9IGZ1bmN0aW9uKCkKVHJhbnNmb3JtLnByb3RvdHlwZS5wb3BNYXRyaXggPSBmdW5jdGlvbigpClRyYW5zZm9ybQpUcmFuc2Zvcm0ucHJvdG90eXBlLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKHgsIHkpClRyYW5zZm9ybQpUcmFuc2Zvcm0ucHJvdG90eXBlLnNjYWxlID0gZnVuY3Rpb24oeCwgeSkKVHJhbnNmb3JtClRyYW5zZm9ybS5wcm90b3R5cGUucm90YXRlID0gZnVuY3Rpb24oYW5nKQpXZWJHTDJEKGNhbnZhcywgb3B0aW9ucykKKGdsMmQpCiAgIGZ1bmN0aW9uKGNvbnRleHQpCldlYkdMMkQuZW5hYmxlID0gZnVuY3Rpb24oY2FudmFzLCBvcHRpb25zKQpXZWJHTDJELnByb3RvdHlwZS5nZXRGcmFnbWVudFNoYWRlclNvdXJjZSA9IGZ1bmN0aW9uIGdldEZyYWdtZW50U2hhZGVyU291cmNlKHNNYXNrKQpXZWJHTDJELnByb3RvdHlwZS5nZXRWZXJ0ZXhTaGFkZXJTb3VyY2UgPSBmdW5jdGlvbiBnZXRWZXJ0ZXhTaGFkZXJTb3VyY2Uoc3RhY2tEZXB0aCwgc01hc2spCldlYkdMMkQucHJvdG90eXBlLmluaXRTaGFkZXJzID0gZnVuY3Rpb24gaW5pdFNoYWRlcnModHJhbnNmb3JtU3RhY2tEZXB0aCwgc01hc2spCldlYkdMMkQucHJvdG90eXBlLmluaXRCdWZmZXJzID0gZnVuY3Rpb24gaW5pdEJ1ZmZlcnMoKQpXZWJHTDJELnByb3RvdHlwZS5wb3N0SW5pdCA9IGZ1bmN0aW9uKCkKV2ViR0wyRC5wcm90b3R5cGUuaW5pdENhbnZhczJEQVBJID0gZnVuY3Rpb24gaW5pdENhbnZhczJEQVBJKCkKSFNMQVRvUkdCQShoLCBzLCBsLCBhKQogIGdldEh1ZSh2YWx1ZSkKICBjb2xvclN0cmluZ1RvVmVjNCh2YWx1ZSkKICBjb2xvclZlY1RvU3RyaW5nKHZlYzQpCiAgY2xvbmVPYmplY3Qob2JqKQogIHNhdmVEcmF3U3RhdGUoKQogIHJlc3RvcmVEcmF3U3RhdGUoKQogIGdldCgpCiAgc2V0KHZhbHVlKQogIGdldCgpCiAgc2V0KHZhbHVlKQogIGdldCgpCiAgc2V0KHZhbHVlKQogIGdldCgpCiAgc2V0KHZhbHVlKQogIGdldCgpCiAgc2V0KHZhbHVlKQogIGdldCgpCiAgc2V0KHZhbHVlKQogIGdldCgpCiAgc2V0KHZhbHVlKQogIGdldCgpCiAgc2V0KHZhbHVlKQogIGdldCgpCiAgc2V0KHZhbHVlKQogIGdldCgpCiAgc2V0KHZhbHVlKQogIGdldCgpCiAgc2V0KHZhbHVlKQogIGdldCgpCiAgc2V0KHZhbHVlKQogIGdldCgpCiAgc2V0KHZhbHVlKQogIGdldCgpCiAgc2V0KHZhbHVlKQogIGdldCgpCiAgc2V0KHZhbHVlKQogIC5maWxsVGV4dCA9IGZ1bmN0aW9uIGZpbGxUZXh0KHRleHQsIHgsIHkpCiAgLnN0cm9rZVRleHQgPSBmdW5jdGlvbiBzdHJva2VUZXh0KCkKICAubWVhc3VyZVRleHQgPSBmdW5jdGlvbiBtZWFzdXJlVGV4dCgpCiAgLnNhdmUgPSBmdW5jdGlvbiBzYXZlKCkKICAucmVzdG9yZSA9IGZ1bmN0aW9uIHJlc3RvcmUoKQogIC50cmFuc2xhdGUgPSBmdW5jdGlvbiB0cmFuc2xhdGUoeCwgeSkKICAucm90YXRlID0gZnVuY3Rpb24gcm90YXRlKGEpCiAgLnNjYWxlID0gZnVuY3Rpb24gc2NhbGUoeCwgeSkKICAuY3JlYXRlSW1hZ2VEYXRhID0gZnVuY3Rpb24gY3JlYXRlSW1hZ2VEYXRhKHdpZHRoLCBoZWlnaHQpCiAgLmdldEltYWdlRGF0YSA9IGZ1bmN0aW9uIGdldEltYWdlRGF0YSh4LCB5LCB3aWR0aCwgaGVpZ2h0KQogIC5wdXRJbWFnZURhdGEgPSBmdW5jdGlvbiBwdXRJbWFnZURhdGEoaW1hZ2VEYXRhLCB4LCB5KQogIC50cmFuc2Zvcm0gPSBmdW5jdGlvbiB0cmFuc2Zvcm0obTExLCBtMTIsIG0yMSwgbTIyLCBkeCwgZHkpCiAgc2VuZFRyYW5zZm9ybVN0YWNrKHNwKQogIC5zZXRUcmFuc2Zvcm0gPSBmdW5jdGlvbiBzZXRUcmFuc2Zvcm0obTExLCBtMTIsIG0yMSwgbTIyLCBkeCwgZHkpCiAgLmZpbGxSZWN0ID0gZnVuY3Rpb24gZmlsbFJlY3QoeCwgeSwgd2lkdGgsIGhlaWdodCkKICAuc3Ryb2tlUmVjdCA9IGZ1bmN0aW9uIHN0cm9rZVJlY3QoeCwgeSwgd2lkdGgsIGhlaWdodCkKICAuY2xlYXJSZWN0ID0gZnVuY3Rpb24gY2xlYXJSZWN0KHgsIHksIHdpZHRoLCBoZWlnaHQpClN1YlBhdGgoeCwgeSkKICAuYmVnaW5QYXRoID0gZnVuY3Rpb24gYmVnaW5QYXRoKCkKICAuY2xvc2VQYXRoID0gZnVuY3Rpb24gY2xvc2VQYXRoKCkKICAubW92ZVRvID0gZnVuY3Rpb24gbW92ZVRvKHgsIHkpCiAgLmxpbmVUbyA9IGZ1bmN0aW9uIGxpbmVUbyh4LCB5KQogIC5xdWFkcmF0aWNDdXJ2ZVRvID0gZnVuY3Rpb24gcXVhZHJhdGljQ3VydmVUbyhjcDF4LCBjcDF5LCB4LCB5KQogIC5iZXppZXJDdXJ2ZVRvID0gZnVuY3Rpb24gYmV6aWVyQ3VydmVUbyhjcDF4LCBjcDF5LCBjcDJ4LCBjcDJ5LCB4LCB5KQogIC5hcmNUbyA9IGZ1bmN0aW9uIGFyY1RvKCkKICAucmVjdCA9IGZ1bmN0aW9uIHJlY3QoeCwgeSwgdywgaCkKICAuYXJjID0gZnVuY3Rpb24gYXJjKHgsIHksIHJhZGl1cywgc3RhcnRBbmdsZSwgZW5kQW5nbGUsIGFudGljbG9ja3dpc2UpCiAgZmlsbFN1YlBhdGgoaW5kZXgpCiAgLmZpbGwgPSBmdW5jdGlvbiBmaWxsKCkKICBzdHJva2VTdWJQYXRoKGluZGV4KQogIC5zdHJva2UgPSBmdW5jdGlvbiBzdHJva2UoKQogIC5jbGlwID0gZnVuY3Rpb24gY2xpcCgpCiAgLmlzUG9pbnRJblBhdGggPSBmdW5jdGlvbiBpc1BvaW50SW5QYXRoKCkKICAuZHJhd0ZvY3VzUmluZyA9IGZ1bmN0aW9uIGRyYXdGb2N1c1JpbmcoKQpUZXh0dXJlKGltYWdlKQogIC5kcmF3SW1hZ2UgPSBmdW5jdGlvbiBkcmF3SW1hZ2UoaW1hZ2UsIGEsIGIsIGMsIGQsIGUsIGYsIGcsIGgpCiAgLnVwZGF0ZSA9IGZ1bmN0aW9uKCkKICAgZnVuY3Rpb24oY2FsbGJhY2ssIGZwcykKICBpbml0KHYpCiAgbGluZSh2KQogIHJlY3QodikKICBzcXVhcmUodikKICBwaXhlbCh2KQogIHJvdW5kZWRyZWN0KHYpCiAgY2lyY2xlKHYpCiAgaW1nKHYpCiAgLm9ubG9hZCA9ICgpID0+CiAgdGV4dCh2KQogIHRyaWFuZ2xlKHYpCiAgcG9seWdvbih2KQogIGNsZWFyKCkKICBiZ2NvbG9yKGMpCiAgYmdpbWcodikKICBhbmltYXRlKHYpCiAgaW50ZXJ2YWwoZiwgdCkKICB0aW1lcihmLCB0KQogIHVwZGF0ZShmLCB0KQogIHBhdXNlKHYpCiAgcmdiID0gZnVuY3Rpb24odikKICByZ2JhID0gZnVuY3Rpb24odikKICBoc2wgPSBmdW5jdGlvbih2KQogIGhzbGEgPSBmdW5jdGlvbih2KQogICBlID0+AAAAAAAAAAAWAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					578,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								402,
								417
							],
							[
								1067,
								1076
							],
							[
								1465,
								1486
							],
							[
								1529,
								1547
							],
							[
								1628,
								1647
							],
							[
								1703,
								1724
							],
							[
								1911,
								1928
							],
							[
								2321,
								2330
							],
							[
								2411,
								2434
							],
							[
								2861,
								2887
							],
							[
								3272,
								3301
							],
							[
								3724,
								3728
							],
							[
								3739,
								3745
							],
							[
								3763,
								3768
							],
							[
								3795,
								3799
							],
							[
								4305,
								4328
							],
							[
								4435,
								4458
							],
							[
								4522,
								4544
							],
							[
								4713,
								4739
							],
							[
								5491,
								5522
							],
							[
								5790,
								5817
							],
							[
								5946,
								5963
							]
						],
						"symlist":
						[
							"function main()",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Blaze(x, y)",
							" function MouseHandler(e)",
							"async function* MouseIterator()",
							" function ResizeHandler(e)",
							" function Init()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAWAQAAICBtYWluKCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkJsYXplKHgsIHkpCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkAAAAAAAAAABYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					579,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								402,
								417
							],
							[
								1067,
								1076
							],
							[
								1465,
								1486
							],
							[
								1529,
								1547
							],
							[
								1628,
								1647
							],
							[
								1703,
								1724
							],
							[
								1911,
								1928
							],
							[
								2321,
								2330
							],
							[
								2411,
								2434
							],
							[
								2861,
								2887
							],
							[
								3272,
								3301
							],
							[
								3724,
								3728
							],
							[
								3739,
								3745
							],
							[
								3763,
								3768
							],
							[
								3795,
								3799
							],
							[
								4305,
								4328
							],
							[
								4435,
								4458
							],
							[
								4522,
								4544
							],
							[
								4713,
								4739
							],
							[
								5491,
								5522
							],
							[
								5790,
								5817
							],
							[
								5946,
								5963
							]
						],
						"symlist":
						[
							"function main()",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Blaze(x, y)",
							" function MouseHandler(e)",
							"async function* MouseIterator()",
							" function ResizeHandler(e)",
							" function Init()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAWAQAAICBtYWluKCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkJsYXplKHgsIHkpCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkAAAAAAAAAABYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					580,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								333,
								348
							],
							[
								998,
								1007
							],
							[
								1396,
								1417
							],
							[
								1460,
								1478
							],
							[
								1559,
								1578
							],
							[
								1634,
								1655
							],
							[
								1842,
								1859
							],
							[
								2252,
								2261
							],
							[
								2342,
								2365
							],
							[
								2792,
								2818
							],
							[
								3203,
								3232
							],
							[
								3655,
								3659
							],
							[
								3670,
								3676
							],
							[
								3694,
								3699
							],
							[
								3726,
								3730
							],
							[
								4236,
								4259
							],
							[
								4366,
								4389
							],
							[
								4453,
								4475
							],
							[
								4644,
								4670
							],
							[
								5422,
								5453
							],
							[
								5721,
								5748
							],
							[
								5877,
								5894
							]
						],
						"symlist":
						[
							"function main()",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Blaze(x, y)",
							" function MouseHandler(e)",
							"async function* MouseIterator()",
							" function ResizeHandler(e)",
							" function Init()"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAAWAQAAICBtYWluKCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkJsYXplKHgsIHkpCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkAAAAAAAAAABYBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAQAAICBtYWluKCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkJsYXplKHgsIHkpCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkAAAAAAAAAABYBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAQAAICBtYWluKCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkJsYXplKHgsIHkpCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkAAAAAAAAAABYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					581,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAWAQAAICBtYWluKCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkJsYXplKHgsIHkpCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					582,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/geom/transformation.js",
						"symkeys":
						[
							[
								204,
								218
							],
							[
								245,
								272
							],
							[
								738,
								748
							],
							[
								1077,
								1095
							],
							[
								1190,
								1200
							],
							[
								1277,
								1284
							],
							[
								1306,
								1317
							],
							[
								1373,
								1379
							],
							[
								1402,
								1411
							],
							[
								1505,
								1515
							],
							[
								1551,
								1560
							],
							[
								1589,
								1596
							],
							[
								1625,
								1633
							],
							[
								1690,
								1702
							],
							[
								1814,
								1822
							],
							[
								1842,
								1850
							],
							[
								1871,
								1886
							],
							[
								2158,
								2165
							],
							[
								2257,
								2271
							],
							[
								2380,
								2402
							],
							[
								2636,
								2642
							],
							[
								2685,
								2691
							],
							[
								4013,
								4034
							],
							[
								4064,
								4088
							],
							[
								4121,
								4141
							],
							[
								4170,
								4189
							],
							[
								4360,
								4371
							],
							[
								4482,
								4495
							],
							[
								4527,
								4531
							],
							[
								4648,
								4656
							],
							[
								4720,
								4744
							],
							[
								5022,
								5030
							],
							[
								5089,
								5101
							],
							[
								5158,
								5168
							],
							[
								5207,
								5215
							],
							[
								5253,
								5268
							],
							[
								5548,
								5556
							],
							[
								5601,
								5611
							],
							[
								5921,
								5929
							],
							[
								6066,
								6083
							],
							[
								6287,
								6319
							],
							[
								6551,
								6559
							],
							[
								6713,
								6724
							],
							[
								6790,
								6810
							],
							[
								7087,
								7091
							],
							[
								7330,
								7342
							],
							[
								7431,
								7439
							],
							[
								7793,
								7801
							],
							[
								7983,
								8000
							],
							[
								8290,
								8301
							],
							[
								8464,
								8471
							],
							[
								8537,
								8557
							],
							[
								8950,
								8962
							],
							[
								9159,
								9167
							],
							[
								9279,
								9289
							],
							[
								9599,
								9607
							],
							[
								9738,
								9755
							],
							[
								10037,
								10044
							],
							[
								10195,
								10215
							],
							[
								10272,
								10289
							],
							[
								10481,
								10493
							],
							[
								10627,
								10637
							],
							[
								10684,
								10692
							],
							[
								10761,
								10769
							],
							[
								10816,
								10833
							],
							[
								11036,
								11056
							],
							[
								11250,
								11268
							],
							[
								11287,
								11318
							],
							[
								12094,
								12110
							],
							[
								12230,
								12248
							],
							[
								12323,
								12341
							],
							[
								12725,
								12740
							],
							[
								13009,
								13023
							],
							[
								13325,
								13346
							],
							[
								13440,
								13466
							],
							[
								13576,
								13594
							],
							[
								13682,
								13705
							],
							[
								13808,
								13830
							],
							[
								13893,
								13914
							],
							[
								13976,
								14001
							],
							[
								14182,
								14191
							],
							[
								14294,
								14303
							],
							[
								14571,
								14584
							],
							[
								14826,
								14833
							],
							[
								14856,
								14860
							],
							[
								14897,
								14904
							],
							[
								14965,
								14979
							],
							[
								15047,
								15062
							],
							[
								15131,
								15146
							],
							[
								15215,
								15227
							],
							[
								15293,
								15326
							],
							[
								15339,
								15352
							],
							[
								15525,
								15541
							],
							[
								15729,
								15744
							],
							[
								15883,
								15898
							],
							[
								15929,
								15933
							],
							[
								16354,
								16368
							],
							[
								16503,
								16518
							],
							[
								16705,
								16727
							],
							[
								16867,
								16879
							],
							[
								17046,
								17053
							],
							[
								17168,
								17178
							],
							[
								17319,
								17323
							],
							[
								17401,
								17413
							],
							[
								17462,
								17467
							],
							[
								17636,
								17642
							],
							[
								17806,
								17820
							],
							[
								17932,
								17950
							],
							[
								18014,
								18066
							],
							[
								18500,
								18529
							],
							[
								18600,
								18624
							],
							[
								18763,
								18782
							],
							[
								18863,
								18877
							],
							[
								18905,
								18912
							],
							[
								18972,
								18991
							],
							[
								19029,
								19036
							],
							[
								19201,
								19214
							],
							[
								19242,
								19249
							],
							[
								19308,
								19326
							],
							[
								19364,
								19371
							],
							[
								19533,
								19550
							],
							[
								19578,
								19585
							],
							[
								19681,
								19703
							],
							[
								19741,
								19748
							],
							[
								20030,
								20040
							],
							[
								20073,
								20084
							],
							[
								20117,
								20124
							],
							[
								20192,
								20202
							],
							[
								20566,
								20579
							],
							[
								20648,
								20659
							],
							[
								20818,
								20826
							],
							[
								20944,
								20955
							],
							[
								20991,
								21006
							],
							[
								21065,
								21072
							],
							[
								21154,
								21178
							],
							[
								21341,
								21359
							],
							[
								21701,
								21719
							],
							[
								22301,
								22365
							],
							[
								22428,
								22495
							],
							[
								22561,
								22624
							],
							[
								22748,
								22754
							]
						],
						"symlist":
						[
							"Transformation",
							"constructor(transformation)",
							"get type()",
							"TransformationList",
							"get axes()",
							"axis =>",
							"get props()",
							"key =>",
							"has(axis)",
							"get is3D()",
							"entries()",
							"prop =>",
							"toJSON()",
							"vector(unit)",
							" axis =>",
							" axis =>",
							"toString(tUnit)",
							"clone()",
							"(acc, prop) =>",
							"static fromString(arg)",
							"arg =>",
							"arg =>",
							"static get rotation()",
							"static get translation()",
							"static get scaling()",
							"static get matrix()",
							"value(inst)",
							" ctor =>",
							"ctor",
							"Rotation",
							"constructor(angle, x, y)",
							"invert()",
							"get values()",
							"get is3D()",
							"isZero()",
							"toString(rUnit)",
							"coord =>",
							"toSource()",
							"coord =>",
							"accumulate(other)",
							"static convertAngle(angle, unit)",
							"Rotation",
							"Translation",
							"constructor(...args)",
							"a =>",
							"get values()",
							"isZero()",
							"invert()",
							"accumulate(other)",
							"Translation",
							"Scaling",
							"constructor(...args)",
							"get values()",
							"isZero()",
							"toString()",
							"invert()",
							"accumulate(other)",
							"Scaling",
							"MatrixTransformation",
							"constructor(init)",
							"get values()",
							"toString()",
							"invert()",
							"isZero()",
							"accumulate(other)",
							"MatrixTransformation",
							"TransformationList",
							"constructor(init, tUnit, rUnit)",
							"initialize(init)",
							"TransformationList",
							"TransformationList",
							"fromString(str)",
							"fromArray(arr)",
							"get translationUnit()",
							"set translationUnit(value)",
							"get rotationUnit()",
							"set rotationUnit(value)",
							"static fromString(str)",
							"static fromArray(arr)",
							"static fromMatrix(matrix)",
							"toArray()",
							"toArray()",
							"push(...args)",
							"clone()",
							"t =>",
							"map(fn)",
							"slice(...args)",
							"splice(...args)",
							"concat(...args)",
							"filter(pred)",
							"baseCall(c = Array.prototype.map)",
							" (...args) =>",
							"unshift(...args)",
							"rotate(...args)",
							"translate(x, y)",
							"t =>",
							"scale(...args)",
							"matrix(...args)",
							"toString(tUnit, rUnit)",
							" t =>",
							"toDOM()",
							"toSource()",
							"t =>",
							"toMatrices()",
							" t =>",
							"undo()",
							"merge(...args)",
							"TransformationList",
							"decompose(degrees = true, transformationList = true)",
							".toArray = function toArray()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"get rotation()",
							"item =>",
							"set rotation(value)",
							"item =>",
							"get scaling()",
							"item =>",
							"set scaling(value)",
							"item =>",
							"get translation()",
							"item =>",
							"set translation(value)",
							"item =>",
							"get last()",
							"get first()",
							"at(pos)",
							"collapse()",
							"collapseAll()",
							"get angle()",
							"invert()",
							"(acc, t) =>",
							"join(sep = ' ')",
							"clear()",
							"apply(obj, round = true)",
							"TransformationList",
							"TransformationList",
							"ImmutableTransformationList.prototype.rotate = function(...args)",
							"ImmutableTransformationList.prototype.translate = function(...args)",
							"ImmutableTransformationList.prototype.scale = function(...args)",
							" () =>"
						]
					},
					"AwAAAAAAAAAAAAAAigkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIoJAABUcmFuc2Zvcm1hdGlvbgogIGNvbnN0cnVjdG9yKHRyYW5zZm9ybWF0aW9uKQogIGdldCB0eXBlKCkKVHJhbnNmb3JtYXRpb25MaXN0CiAgZ2V0IGF4ZXMoKQogIGF4aXMgPT4KICBnZXQgcHJvcHMoKQogIGtleSA9PgogIGhhcyhheGlzKQogIGdldCBpczNEKCkKICBlbnRyaWVzKCkKICBwcm9wID0+CiAgdG9KU09OKCkKICB2ZWN0b3IodW5pdCkKICAgYXhpcyA9PgogICBheGlzID0+CiAgdG9TdHJpbmcodFVuaXQpCiAgY2xvbmUoKQooYWNjLCBwcm9wKSA9PgogIHN0YXRpYyBmcm9tU3RyaW5nKGFyZykKICBhcmcgPT4KICBhcmcgPT4KICBzdGF0aWMgZ2V0IHJvdGF0aW9uKCkKICBzdGF0aWMgZ2V0IHRyYW5zbGF0aW9uKCkKICBzdGF0aWMgZ2V0IHNjYWxpbmcoKQogIHN0YXRpYyBnZXQgbWF0cml4KCkKICB2YWx1ZShpbnN0KQogICBjdG9yID0+CiAgY3RvcgpSb3RhdGlvbgogIGNvbnN0cnVjdG9yKGFuZ2xlLCB4LCB5KQogIGludmVydCgpCiAgZ2V0IHZhbHVlcygpCiAgZ2V0IGlzM0QoKQogIGlzWmVybygpCiAgdG9TdHJpbmcoclVuaXQpCiAgY29vcmQgPT4KICB0b1NvdXJjZSgpCiAgY29vcmQgPT4KICBhY2N1bXVsYXRlKG90aGVyKQogIHN0YXRpYyBjb252ZXJ0QW5nbGUoYW5nbGUsIHVuaXQpClJvdGF0aW9uClRyYW5zbGF0aW9uCiAgY29uc3RydWN0b3IoLi4uYXJncykKICBhID0+CiAgZ2V0IHZhbHVlcygpCiAgaXNaZXJvKCkKICBpbnZlcnQoKQogIGFjY3VtdWxhdGUob3RoZXIpClRyYW5zbGF0aW9uClNjYWxpbmcKICBjb25zdHJ1Y3RvciguLi5hcmdzKQogIGdldCB2YWx1ZXMoKQogIGlzWmVybygpCiAgdG9TdHJpbmcoKQogIGludmVydCgpCiAgYWNjdW11bGF0ZShvdGhlcikKU2NhbGluZwpNYXRyaXhUcmFuc2Zvcm1hdGlvbgogIGNvbnN0cnVjdG9yKGluaXQpCiAgZ2V0IHZhbHVlcygpCiAgdG9TdHJpbmcoKQogIGludmVydCgpCiAgaXNaZXJvKCkKICBhY2N1bXVsYXRlKG90aGVyKQpNYXRyaXhUcmFuc2Zvcm1hdGlvbgpUcmFuc2Zvcm1hdGlvbkxpc3QKICBjb25zdHJ1Y3Rvcihpbml0LCB0VW5pdCwgclVuaXQpCiAgaW5pdGlhbGl6ZShpbml0KQpUcmFuc2Zvcm1hdGlvbkxpc3QKVHJhbnNmb3JtYXRpb25MaXN0CiAgZnJvbVN0cmluZyhzdHIpCiAgZnJvbUFycmF5KGFycikKICBnZXQgdHJhbnNsYXRpb25Vbml0KCkKICBzZXQgdHJhbnNsYXRpb25Vbml0KHZhbHVlKQogIGdldCByb3RhdGlvblVuaXQoKQogIHNldCByb3RhdGlvblVuaXQodmFsdWUpCiAgc3RhdGljIGZyb21TdHJpbmcoc3RyKQogIHN0YXRpYyBmcm9tQXJyYXkoYXJyKQogIHN0YXRpYyBmcm9tTWF0cml4KG1hdHJpeCkKICB0b0FycmF5KCkKICB0b0FycmF5KCkKICBwdXNoKC4uLmFyZ3MpCiAgY2xvbmUoKQogIHQgPT4KICBtYXAoZm4pCiAgc2xpY2UoLi4uYXJncykKICBzcGxpY2UoLi4uYXJncykKICBjb25jYXQoLi4uYXJncykKICBmaWx0ZXIocHJlZCkKICBiYXNlQ2FsbChjID0gQXJyYXkucHJvdG90eXBlLm1hcCkKICAgKC4uLmFyZ3MpID0+CiAgdW5zaGlmdCguLi5hcmdzKQogIHJvdGF0ZSguLi5hcmdzKQogIHRyYW5zbGF0ZSh4LCB5KQogIHQgPT4KICBzY2FsZSguLi5hcmdzKQogIG1hdHJpeCguLi5hcmdzKQogIHRvU3RyaW5nKHRVbml0LCByVW5pdCkKICAgdCA9PgogIHRvRE9NKCkKICB0b1NvdXJjZSgpCiAgdCA9PgogIHRvTWF0cmljZXMoKQogICB0ID0+CiAgdW5kbygpCiAgbWVyZ2UoLi4uYXJncykKVHJhbnNmb3JtYXRpb25MaXN0CiAgZGVjb21wb3NlKGRlZ3JlZXMgPSB0cnVlLCB0cmFuc2Zvcm1hdGlvbkxpc3QgPSB0cnVlKQogIC50b0FycmF5ID0gZnVuY3Rpb24gdG9BcnJheSgpCiAgZmluZExhc3RJbmRleChwcmVkaWNhdGUpCiAgZmluZExhc3QocHJlZGljYXRlKQogIGdldCByb3RhdGlvbigpCiAgaXRlbSA9PgogIHNldCByb3RhdGlvbih2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IHNjYWxpbmcoKQogIGl0ZW0gPT4KICBzZXQgc2NhbGluZyh2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IHRyYW5zbGF0aW9uKCkKICBpdGVtID0+CiAgc2V0IHRyYW5zbGF0aW9uKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgbGFzdCgpCiAgZ2V0IGZpcnN0KCkKICBhdChwb3MpCiAgY29sbGFwc2UoKQogIGNvbGxhcHNlQWxsKCkKICBnZXQgYW5nbGUoKQogIGludmVydCgpCihhY2MsIHQpID0+CiAgam9pbihzZXAgPSAnICcpCiAgY2xlYXIoKQogIGFwcGx5KG9iaiwgcm91bmQgPSB0cnVlKQpUcmFuc2Zvcm1hdGlvbkxpc3QKVHJhbnNmb3JtYXRpb25MaXN0CkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUucm90YXRlID0gZnVuY3Rpb24oLi4uYXJncykKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS50cmFuc2xhdGUgPSBmdW5jdGlvbiguLi5hcmdzKQpJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnNjYWxlID0gZnVuY3Rpb24oLi4uYXJncykKICAgKCkgPT4AAAAAAAAAAIoJAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					583,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACKCQAAVHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm1hdGlvbikKICBnZXQgdHlwZSgpClRyYW5zZm9ybWF0aW9uTGlzdAogIGdldCBheGVzKCkKICBheGlzID0+CiAgZ2V0IHByb3BzKCkKICBrZXkgPT4KICBoYXMoYXhpcykKICBnZXQgaXMzRCgpCiAgZW50cmllcygpCiAgcHJvcCA9PgogIHRvSlNPTigpCiAgdmVjdG9yKHVuaXQpCiAgIGF4aXMgPT4KICAgYXhpcyA9PgogIHRvU3RyaW5nKHRVbml0KQogIGNsb25lKCkKKGFjYywgcHJvcCkgPT4KICBzdGF0aWMgZnJvbVN0cmluZyhhcmcpCiAgYXJnID0+CiAgYXJnID0+CiAgc3RhdGljIGdldCByb3RhdGlvbigpCiAgc3RhdGljIGdldCB0cmFuc2xhdGlvbigpCiAgc3RhdGljIGdldCBzY2FsaW5nKCkKICBzdGF0aWMgZ2V0IG1hdHJpeCgpCiAgdmFsdWUoaW5zdCkKICAgY3RvciA9PgogIGN0b3IKUm90YXRpb24KICBjb25zdHJ1Y3RvcihhbmdsZSwgeCwgeSkKICBpbnZlcnQoKQogIGdldCB2YWx1ZXMoKQogIGdldCBpczNEKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKHJVbml0KQogIGNvb3JkID0+CiAgdG9Tb3VyY2UoKQogIGNvb3JkID0+CiAgYWNjdW11bGF0ZShvdGhlcikKICBzdGF0aWMgY29udmVydEFuZ2xlKGFuZ2xlLCB1bml0KQpSb3RhdGlvbgpUcmFuc2xhdGlvbgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgYSA9PgogIGdldCB2YWx1ZXMoKQogIGlzWmVybygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpUcmFuc2xhdGlvbgpTY2FsaW5nCiAgY29uc3RydWN0b3IoLi4uYXJncykKICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGFjY3VtdWxhdGUob3RoZXIpClNjYWxpbmcKTWF0cml4VHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcihpbml0KQogIGdldCB2YWx1ZXMoKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGlzWmVybygpCiAgYWNjdW11bGF0ZShvdGhlcikKTWF0cml4VHJhbnNmb3JtYXRpb24KVHJhbnNmb3JtYXRpb25MaXN0CiAgY29uc3RydWN0b3IoaW5pdCwgdFVuaXQsIHJVbml0KQogIGluaXRpYWxpemUoaW5pdCkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdAogIGZyb21TdHJpbmcoc3RyKQogIGZyb21BcnJheShhcnIpCiAgZ2V0IHRyYW5zbGF0aW9uVW5pdCgpCiAgc2V0IHRyYW5zbGF0aW9uVW5pdCh2YWx1ZSkKICBnZXQgcm90YXRpb25Vbml0KCkKICBzZXQgcm90YXRpb25Vbml0KHZhbHVlKQogIHN0YXRpYyBmcm9tU3RyaW5nKHN0cikKICBzdGF0aWMgZnJvbUFycmF5KGFycikKICBzdGF0aWMgZnJvbU1hdHJpeChtYXRyaXgpCiAgdG9BcnJheSgpCiAgdG9BcnJheSgpCiAgcHVzaCguLi5hcmdzKQogIGNsb25lKCkKICB0ID0+CiAgbWFwKGZuKQogIHNsaWNlKC4uLmFyZ3MpCiAgc3BsaWNlKC4uLmFyZ3MpCiAgY29uY2F0KC4uLmFyZ3MpCiAgZmlsdGVyKHByZWQpCiAgYmFzZUNhbGwoYyA9IEFycmF5LnByb3RvdHlwZS5tYXApCiAgICguLi5hcmdzKSA9PgogIHVuc2hpZnQoLi4uYXJncykKICByb3RhdGUoLi4uYXJncykKICB0cmFuc2xhdGUoeCwgeSkKICB0ID0+CiAgc2NhbGUoLi4uYXJncykKICBtYXRyaXgoLi4uYXJncykKICB0b1N0cmluZyh0VW5pdCwgclVuaXQpCiAgIHQgPT4KICB0b0RPTSgpCiAgdG9Tb3VyY2UoKQogIHQgPT4KICB0b01hdHJpY2VzKCkKICAgdCA9PgogIHVuZG8oKQogIG1lcmdlKC4uLmFyZ3MpClRyYW5zZm9ybWF0aW9uTGlzdAogIGRlY29tcG9zZShkZWdyZWVzID0gdHJ1ZSwgdHJhbnNmb3JtYXRpb25MaXN0ID0gdHJ1ZSkKICAudG9BcnJheSA9IGZ1bmN0aW9uIHRvQXJyYXkoKQogIGZpbmRMYXN0SW5kZXgocHJlZGljYXRlKQogIGZpbmRMYXN0KHByZWRpY2F0ZSkKICBnZXQgcm90YXRpb24oKQogIGl0ZW0gPT4KICBzZXQgcm90YXRpb24odmFsdWUpCiAgaXRlbSA9PgogIGdldCBzY2FsaW5nKCkKICBpdGVtID0+CiAgc2V0IHNjYWxpbmcodmFsdWUpCiAgaXRlbSA9PgogIGdldCB0cmFuc2xhdGlvbigpCiAgaXRlbSA9PgogIHNldCB0cmFuc2xhdGlvbih2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IGxhc3QoKQogIGdldCBmaXJzdCgpCiAgYXQocG9zKQogIGNvbGxhcHNlKCkKICBjb2xsYXBzZUFsbCgpCiAgZ2V0IGFuZ2xlKCkKICBpbnZlcnQoKQooYWNjLCB0KSA9PgogIGpvaW4oc2VwID0gJyAnKQogIGNsZWFyKCkKICBhcHBseShvYmosIHJvdW5kID0gdHJ1ZSkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdApJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnJvdGF0ZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUudHJhbnNsYXRlID0gZnVuY3Rpb24oLi4uYXJncykKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS5zY2FsZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCiAgICgpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					584,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/geom/transformation.js",
						"symkeys":
						[
							[
								204,
								218
							],
							[
								245,
								272
							],
							[
								738,
								748
							],
							[
								1077,
								1095
							],
							[
								1190,
								1200
							],
							[
								1277,
								1284
							],
							[
								1306,
								1317
							],
							[
								1373,
								1379
							],
							[
								1402,
								1411
							],
							[
								1505,
								1515
							],
							[
								1551,
								1560
							],
							[
								1589,
								1596
							],
							[
								1625,
								1633
							],
							[
								1690,
								1702
							],
							[
								1814,
								1822
							],
							[
								1842,
								1850
							],
							[
								1871,
								1886
							],
							[
								2158,
								2165
							],
							[
								2257,
								2271
							],
							[
								2380,
								2402
							],
							[
								2636,
								2642
							],
							[
								2685,
								2691
							],
							[
								4013,
								4034
							],
							[
								4064,
								4088
							],
							[
								4121,
								4141
							],
							[
								4170,
								4189
							],
							[
								4360,
								4371
							],
							[
								4482,
								4495
							],
							[
								4527,
								4531
							],
							[
								4648,
								4656
							],
							[
								4720,
								4744
							],
							[
								5022,
								5030
							],
							[
								5089,
								5101
							],
							[
								5158,
								5168
							],
							[
								5207,
								5215
							],
							[
								5253,
								5268
							],
							[
								5548,
								5556
							],
							[
								5601,
								5611
							],
							[
								5921,
								5929
							],
							[
								6066,
								6083
							],
							[
								6287,
								6319
							],
							[
								6551,
								6559
							],
							[
								6713,
								6724
							],
							[
								6790,
								6810
							],
							[
								7087,
								7091
							],
							[
								7330,
								7342
							],
							[
								7431,
								7439
							],
							[
								7793,
								7801
							],
							[
								7983,
								8000
							],
							[
								8290,
								8301
							],
							[
								8464,
								8471
							],
							[
								8537,
								8557
							],
							[
								8950,
								8962
							],
							[
								9159,
								9167
							],
							[
								9279,
								9289
							],
							[
								9599,
								9607
							],
							[
								9738,
								9755
							],
							[
								10037,
								10044
							],
							[
								10195,
								10215
							],
							[
								10272,
								10289
							],
							[
								10481,
								10493
							],
							[
								10627,
								10637
							],
							[
								10684,
								10692
							],
							[
								10761,
								10769
							],
							[
								10816,
								10833
							],
							[
								11036,
								11056
							],
							[
								11250,
								11268
							],
							[
								11287,
								11318
							],
							[
								12094,
								12110
							],
							[
								12230,
								12248
							],
							[
								12323,
								12341
							],
							[
								12725,
								12740
							],
							[
								13009,
								13023
							],
							[
								13325,
								13346
							],
							[
								13440,
								13466
							],
							[
								13576,
								13594
							],
							[
								13682,
								13705
							],
							[
								13808,
								13830
							],
							[
								13893,
								13914
							],
							[
								13976,
								14001
							],
							[
								14182,
								14191
							],
							[
								14294,
								14303
							],
							[
								14571,
								14584
							],
							[
								14826,
								14833
							],
							[
								14856,
								14860
							],
							[
								14897,
								14904
							],
							[
								14965,
								14979
							],
							[
								15047,
								15062
							],
							[
								15131,
								15146
							],
							[
								15215,
								15227
							],
							[
								15293,
								15326
							],
							[
								15339,
								15352
							],
							[
								15525,
								15541
							],
							[
								15729,
								15744
							],
							[
								15883,
								15898
							],
							[
								15929,
								15933
							],
							[
								16354,
								16368
							],
							[
								16503,
								16518
							],
							[
								16705,
								16727
							],
							[
								16867,
								16879
							],
							[
								17046,
								17053
							],
							[
								17168,
								17178
							],
							[
								17319,
								17323
							],
							[
								17401,
								17413
							],
							[
								17462,
								17467
							],
							[
								17636,
								17642
							],
							[
								17806,
								17820
							],
							[
								17932,
								17950
							],
							[
								18014,
								18066
							],
							[
								18500,
								18529
							],
							[
								18600,
								18624
							],
							[
								18763,
								18782
							],
							[
								18863,
								18877
							],
							[
								18905,
								18912
							],
							[
								18972,
								18991
							],
							[
								19029,
								19036
							],
							[
								19201,
								19214
							],
							[
								19242,
								19249
							],
							[
								19308,
								19326
							],
							[
								19364,
								19371
							],
							[
								19533,
								19550
							],
							[
								19578,
								19585
							],
							[
								19681,
								19703
							],
							[
								19741,
								19748
							],
							[
								20030,
								20040
							],
							[
								20073,
								20084
							],
							[
								20117,
								20124
							],
							[
								20192,
								20202
							],
							[
								20566,
								20579
							],
							[
								20648,
								20659
							],
							[
								20818,
								20826
							],
							[
								20944,
								20955
							],
							[
								20991,
								21006
							],
							[
								21065,
								21072
							],
							[
								21154,
								21178
							],
							[
								21341,
								21359
							],
							[
								21701,
								21719
							],
							[
								22301,
								22365
							],
							[
								22428,
								22495
							],
							[
								22561,
								22624
							],
							[
								22748,
								22754
							]
						],
						"symlist":
						[
							"Transformation",
							"constructor(transformation)",
							"get type()",
							"TransformationList",
							"get axes()",
							"axis =>",
							"get props()",
							"key =>",
							"has(axis)",
							"get is3D()",
							"entries()",
							"prop =>",
							"toJSON()",
							"vector(unit)",
							" axis =>",
							" axis =>",
							"toString(tUnit)",
							"clone()",
							"(acc, prop) =>",
							"static fromString(arg)",
							"arg =>",
							"arg =>",
							"static get rotation()",
							"static get translation()",
							"static get scaling()",
							"static get matrix()",
							"value(inst)",
							" ctor =>",
							"ctor",
							"Rotation",
							"constructor(angle, x, y)",
							"invert()",
							"get values()",
							"get is3D()",
							"isZero()",
							"toString(rUnit)",
							"coord =>",
							"toSource()",
							"coord =>",
							"accumulate(other)",
							"static convertAngle(angle, unit)",
							"Rotation",
							"Translation",
							"constructor(...args)",
							"a =>",
							"get values()",
							"isZero()",
							"invert()",
							"accumulate(other)",
							"Translation",
							"Scaling",
							"constructor(...args)",
							"get values()",
							"isZero()",
							"toString()",
							"invert()",
							"accumulate(other)",
							"Scaling",
							"MatrixTransformation",
							"constructor(init)",
							"get values()",
							"toString()",
							"invert()",
							"isZero()",
							"accumulate(other)",
							"MatrixTransformation",
							"TransformationList",
							"constructor(init, tUnit, rUnit)",
							"initialize(init)",
							"TransformationList",
							"TransformationList",
							"fromString(str)",
							"fromArray(arr)",
							"get translationUnit()",
							"set translationUnit(value)",
							"get rotationUnit()",
							"set rotationUnit(value)",
							"static fromString(str)",
							"static fromArray(arr)",
							"static fromMatrix(matrix)",
							"toArray()",
							"toArray()",
							"push(...args)",
							"clone()",
							"t =>",
							"map(fn)",
							"slice(...args)",
							"splice(...args)",
							"concat(...args)",
							"filter(pred)",
							"baseCall(c = Array.prototype.map)",
							" (...args) =>",
							"unshift(...args)",
							"rotate(...args)",
							"translate(x, y)",
							"t =>",
							"scale(...args)",
							"matrix(...args)",
							"toString(tUnit, rUnit)",
							" t =>",
							"toDOM()",
							"toSource()",
							"t =>",
							"toMatrices()",
							" t =>",
							"undo()",
							"merge(...args)",
							"TransformationList",
							"decompose(degrees = true, transformationList = true)",
							".toArray = function toArray()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"get rotation()",
							"item =>",
							"set rotation(value)",
							"item =>",
							"get scaling()",
							"item =>",
							"set scaling(value)",
							"item =>",
							"get translation()",
							"item =>",
							"set translation(value)",
							"item =>",
							"get last()",
							"get first()",
							"at(pos)",
							"collapse()",
							"collapseAll()",
							"get angle()",
							"invert()",
							"(acc, t) =>",
							"join(sep = ' ')",
							"clear()",
							"apply(obj, round = true)",
							"TransformationList",
							"TransformationList",
							"ImmutableTransformationList.prototype.rotate = function(...args)",
							"ImmutableTransformationList.prototype.translate = function(...args)",
							"ImmutableTransformationList.prototype.scale = function(...args)",
							" () =>"
						]
					},
					"AQAAAAAAAAAAAAAAigkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					585,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACKCQAAVHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm1hdGlvbikKICBnZXQgdHlwZSgpClRyYW5zZm9ybWF0aW9uTGlzdAogIGdldCBheGVzKCkKICBheGlzID0+CiAgZ2V0IHByb3BzKCkKICBrZXkgPT4KICBoYXMoYXhpcykKICBnZXQgaXMzRCgpCiAgZW50cmllcygpCiAgcHJvcCA9PgogIHRvSlNPTigpCiAgdmVjdG9yKHVuaXQpCiAgIGF4aXMgPT4KICAgYXhpcyA9PgogIHRvU3RyaW5nKHRVbml0KQogIGNsb25lKCkKKGFjYywgcHJvcCkgPT4KICBzdGF0aWMgZnJvbVN0cmluZyhhcmcpCiAgYXJnID0+CiAgYXJnID0+CiAgc3RhdGljIGdldCByb3RhdGlvbigpCiAgc3RhdGljIGdldCB0cmFuc2xhdGlvbigpCiAgc3RhdGljIGdldCBzY2FsaW5nKCkKICBzdGF0aWMgZ2V0IG1hdHJpeCgpCiAgdmFsdWUoaW5zdCkKICAgY3RvciA9PgogIGN0b3IKUm90YXRpb24KICBjb25zdHJ1Y3RvcihhbmdsZSwgeCwgeSkKICBpbnZlcnQoKQogIGdldCB2YWx1ZXMoKQogIGdldCBpczNEKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKHJVbml0KQogIGNvb3JkID0+CiAgdG9Tb3VyY2UoKQogIGNvb3JkID0+CiAgYWNjdW11bGF0ZShvdGhlcikKICBzdGF0aWMgY29udmVydEFuZ2xlKGFuZ2xlLCB1bml0KQpSb3RhdGlvbgpUcmFuc2xhdGlvbgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgYSA9PgogIGdldCB2YWx1ZXMoKQogIGlzWmVybygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpUcmFuc2xhdGlvbgpTY2FsaW5nCiAgY29uc3RydWN0b3IoLi4uYXJncykKICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGFjY3VtdWxhdGUob3RoZXIpClNjYWxpbmcKTWF0cml4VHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcihpbml0KQogIGdldCB2YWx1ZXMoKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGlzWmVybygpCiAgYWNjdW11bGF0ZShvdGhlcikKTWF0cml4VHJhbnNmb3JtYXRpb24KVHJhbnNmb3JtYXRpb25MaXN0CiAgY29uc3RydWN0b3IoaW5pdCwgdFVuaXQsIHJVbml0KQogIGluaXRpYWxpemUoaW5pdCkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdAogIGZyb21TdHJpbmcoc3RyKQogIGZyb21BcnJheShhcnIpCiAgZ2V0IHRyYW5zbGF0aW9uVW5pdCgpCiAgc2V0IHRyYW5zbGF0aW9uVW5pdCh2YWx1ZSkKICBnZXQgcm90YXRpb25Vbml0KCkKICBzZXQgcm90YXRpb25Vbml0KHZhbHVlKQogIHN0YXRpYyBmcm9tU3RyaW5nKHN0cikKICBzdGF0aWMgZnJvbUFycmF5KGFycikKICBzdGF0aWMgZnJvbU1hdHJpeChtYXRyaXgpCiAgdG9BcnJheSgpCiAgdG9BcnJheSgpCiAgcHVzaCguLi5hcmdzKQogIGNsb25lKCkKICB0ID0+CiAgbWFwKGZuKQogIHNsaWNlKC4uLmFyZ3MpCiAgc3BsaWNlKC4uLmFyZ3MpCiAgY29uY2F0KC4uLmFyZ3MpCiAgZmlsdGVyKHByZWQpCiAgYmFzZUNhbGwoYyA9IEFycmF5LnByb3RvdHlwZS5tYXApCiAgICguLi5hcmdzKSA9PgogIHVuc2hpZnQoLi4uYXJncykKICByb3RhdGUoLi4uYXJncykKICB0cmFuc2xhdGUoeCwgeSkKICB0ID0+CiAgc2NhbGUoLi4uYXJncykKICBtYXRyaXgoLi4uYXJncykKICB0b1N0cmluZyh0VW5pdCwgclVuaXQpCiAgIHQgPT4KICB0b0RPTSgpCiAgdG9Tb3VyY2UoKQogIHQgPT4KICB0b01hdHJpY2VzKCkKICAgdCA9PgogIHVuZG8oKQogIG1lcmdlKC4uLmFyZ3MpClRyYW5zZm9ybWF0aW9uTGlzdAogIGRlY29tcG9zZShkZWdyZWVzID0gdHJ1ZSwgdHJhbnNmb3JtYXRpb25MaXN0ID0gdHJ1ZSkKICAudG9BcnJheSA9IGZ1bmN0aW9uIHRvQXJyYXkoKQogIGZpbmRMYXN0SW5kZXgocHJlZGljYXRlKQogIGZpbmRMYXN0KHByZWRpY2F0ZSkKICBnZXQgcm90YXRpb24oKQogIGl0ZW0gPT4KICBzZXQgcm90YXRpb24odmFsdWUpCiAgaXRlbSA9PgogIGdldCBzY2FsaW5nKCkKICBpdGVtID0+CiAgc2V0IHNjYWxpbmcodmFsdWUpCiAgaXRlbSA9PgogIGdldCB0cmFuc2xhdGlvbigpCiAgaXRlbSA9PgogIHNldCB0cmFuc2xhdGlvbih2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IGxhc3QoKQogIGdldCBmaXJzdCgpCiAgYXQocG9zKQogIGNvbGxhcHNlKCkKICBjb2xsYXBzZUFsbCgpCiAgZ2V0IGFuZ2xlKCkKICBpbnZlcnQoKQooYWNjLCB0KSA9PgogIGpvaW4oc2VwID0gJyAnKQogIGNsZWFyKCkKICBhcHBseShvYmosIHJvdW5kID0gdHJ1ZSkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdApJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnJvdGF0ZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUudHJhbnNsYXRlID0gZnVuY3Rpb24oLi4uYXJncykKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS5zY2FsZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCiAgICgpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					586,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/geom/transformation.js",
						"symkeys":
						[
							[
								204,
								218
							],
							[
								245,
								272
							],
							[
								738,
								748
							],
							[
								1077,
								1095
							],
							[
								1190,
								1200
							],
							[
								1277,
								1284
							],
							[
								1306,
								1317
							],
							[
								1373,
								1379
							],
							[
								1402,
								1411
							],
							[
								1505,
								1515
							],
							[
								1551,
								1560
							],
							[
								1589,
								1596
							],
							[
								1625,
								1633
							],
							[
								1690,
								1702
							],
							[
								1814,
								1822
							],
							[
								1842,
								1850
							],
							[
								1871,
								1886
							],
							[
								2158,
								2165
							],
							[
								2257,
								2271
							],
							[
								2380,
								2402
							],
							[
								2636,
								2642
							],
							[
								2685,
								2691
							],
							[
								4013,
								4034
							],
							[
								4064,
								4088
							],
							[
								4121,
								4141
							],
							[
								4170,
								4189
							],
							[
								4360,
								4371
							],
							[
								4482,
								4495
							],
							[
								4527,
								4531
							],
							[
								4648,
								4656
							],
							[
								4720,
								4744
							],
							[
								5022,
								5030
							],
							[
								5089,
								5101
							],
							[
								5158,
								5168
							],
							[
								5207,
								5215
							],
							[
								5253,
								5268
							],
							[
								5548,
								5556
							],
							[
								5601,
								5611
							],
							[
								5921,
								5929
							],
							[
								6066,
								6083
							],
							[
								6287,
								6319
							],
							[
								6551,
								6559
							],
							[
								6713,
								6724
							],
							[
								6790,
								6810
							],
							[
								7087,
								7091
							],
							[
								7330,
								7342
							],
							[
								7431,
								7439
							],
							[
								7793,
								7801
							],
							[
								7983,
								8000
							],
							[
								8290,
								8301
							],
							[
								8464,
								8471
							],
							[
								8537,
								8557
							],
							[
								8950,
								8962
							],
							[
								9159,
								9167
							],
							[
								9279,
								9289
							],
							[
								9599,
								9607
							],
							[
								9738,
								9755
							],
							[
								10037,
								10044
							],
							[
								10195,
								10215
							],
							[
								10272,
								10289
							],
							[
								10481,
								10493
							],
							[
								10627,
								10637
							],
							[
								10684,
								10692
							],
							[
								10761,
								10769
							],
							[
								10816,
								10833
							],
							[
								11036,
								11056
							],
							[
								11250,
								11268
							],
							[
								11287,
								11318
							],
							[
								12094,
								12110
							],
							[
								12230,
								12248
							],
							[
								12323,
								12341
							],
							[
								12725,
								12740
							],
							[
								13009,
								13023
							],
							[
								13325,
								13346
							],
							[
								13440,
								13466
							],
							[
								13576,
								13594
							],
							[
								13682,
								13705
							],
							[
								13808,
								13830
							],
							[
								13893,
								13914
							],
							[
								13976,
								14001
							],
							[
								14182,
								14191
							],
							[
								14294,
								14303
							],
							[
								14571,
								14584
							],
							[
								14826,
								14833
							],
							[
								14856,
								14860
							],
							[
								14897,
								14904
							],
							[
								14965,
								14979
							],
							[
								15047,
								15062
							],
							[
								15131,
								15146
							],
							[
								15215,
								15227
							],
							[
								15293,
								15326
							],
							[
								15339,
								15352
							],
							[
								15525,
								15541
							],
							[
								15729,
								15744
							],
							[
								15883,
								15898
							],
							[
								15929,
								15933
							],
							[
								16354,
								16368
							],
							[
								16503,
								16518
							],
							[
								16705,
								16727
							],
							[
								16867,
								16879
							],
							[
								17046,
								17053
							],
							[
								17168,
								17178
							],
							[
								17319,
								17323
							],
							[
								17401,
								17413
							],
							[
								17462,
								17467
							],
							[
								17636,
								17642
							],
							[
								17806,
								17820
							],
							[
								17932,
								17950
							],
							[
								18014,
								18066
							],
							[
								18500,
								18529
							],
							[
								18600,
								18624
							],
							[
								18763,
								18782
							],
							[
								18863,
								18877
							],
							[
								18905,
								18912
							],
							[
								18972,
								18991
							],
							[
								19029,
								19036
							],
							[
								19201,
								19214
							],
							[
								19242,
								19249
							],
							[
								19308,
								19326
							],
							[
								19364,
								19371
							],
							[
								19533,
								19550
							],
							[
								19578,
								19585
							],
							[
								19681,
								19703
							],
							[
								19741,
								19748
							],
							[
								20030,
								20040
							],
							[
								20073,
								20084
							],
							[
								20117,
								20124
							],
							[
								20192,
								20202
							],
							[
								20566,
								20579
							],
							[
								20648,
								20659
							],
							[
								20818,
								20826
							],
							[
								20944,
								20955
							],
							[
								20991,
								21006
							],
							[
								21065,
								21072
							],
							[
								21154,
								21178
							],
							[
								21341,
								21359
							],
							[
								21701,
								21719
							],
							[
								22301,
								22365
							],
							[
								22428,
								22495
							],
							[
								22561,
								22624
							],
							[
								22748,
								22754
							]
						],
						"symlist":
						[
							"Transformation",
							"constructor(transformation)",
							"get type()",
							"TransformationList",
							"get axes()",
							"axis =>",
							"get props()",
							"key =>",
							"has(axis)",
							"get is3D()",
							"entries()",
							"prop =>",
							"toJSON()",
							"vector(unit)",
							" axis =>",
							" axis =>",
							"toString(tUnit)",
							"clone()",
							"(acc, prop) =>",
							"static fromString(arg)",
							"arg =>",
							"arg =>",
							"static get rotation()",
							"static get translation()",
							"static get scaling()",
							"static get matrix()",
							"value(inst)",
							" ctor =>",
							"ctor",
							"Rotation",
							"constructor(angle, x, y)",
							"invert()",
							"get values()",
							"get is3D()",
							"isZero()",
							"toString(rUnit)",
							"coord =>",
							"toSource()",
							"coord =>",
							"accumulate(other)",
							"static convertAngle(angle, unit)",
							"Rotation",
							"Translation",
							"constructor(...args)",
							"a =>",
							"get values()",
							"isZero()",
							"invert()",
							"accumulate(other)",
							"Translation",
							"Scaling",
							"constructor(...args)",
							"get values()",
							"isZero()",
							"toString()",
							"invert()",
							"accumulate(other)",
							"Scaling",
							"MatrixTransformation",
							"constructor(init)",
							"get values()",
							"toString()",
							"invert()",
							"isZero()",
							"accumulate(other)",
							"MatrixTransformation",
							"TransformationList",
							"constructor(init, tUnit, rUnit)",
							"initialize(init)",
							"TransformationList",
							"TransformationList",
							"fromString(str)",
							"fromArray(arr)",
							"get translationUnit()",
							"set translationUnit(value)",
							"get rotationUnit()",
							"set rotationUnit(value)",
							"static fromString(str)",
							"static fromArray(arr)",
							"static fromMatrix(matrix)",
							"toArray()",
							"toArray()",
							"push(...args)",
							"clone()",
							"t =>",
							"map(fn)",
							"slice(...args)",
							"splice(...args)",
							"concat(...args)",
							"filter(pred)",
							"baseCall(c = Array.prototype.map)",
							" (...args) =>",
							"unshift(...args)",
							"rotate(...args)",
							"translate(x, y)",
							"t =>",
							"scale(...args)",
							"matrix(...args)",
							"toString(tUnit, rUnit)",
							" t =>",
							"toDOM()",
							"toSource()",
							"t =>",
							"toMatrices()",
							" t =>",
							"undo()",
							"merge(...args)",
							"TransformationList",
							"decompose(degrees = true, transformationList = true)",
							".toArray = function toArray()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"get rotation()",
							"item =>",
							"set rotation(value)",
							"item =>",
							"get scaling()",
							"item =>",
							"set scaling(value)",
							"item =>",
							"get translation()",
							"item =>",
							"set translation(value)",
							"item =>",
							"get last()",
							"get first()",
							"at(pos)",
							"collapse()",
							"collapseAll()",
							"get angle()",
							"invert()",
							"(acc, t) =>",
							"join(sep = ' ')",
							"clear()",
							"apply(obj, round = true)",
							"TransformationList",
							"TransformationList",
							"ImmutableTransformationList.prototype.rotate = function(...args)",
							"ImmutableTransformationList.prototype.translate = function(...args)",
							"ImmutableTransformationList.prototype.scale = function(...args)",
							" () =>"
						]
					},
					"AQAAAAAAAAAAAAAAigkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					587,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACKCQAAVHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm1hdGlvbikKICBnZXQgdHlwZSgpClRyYW5zZm9ybWF0aW9uTGlzdAogIGdldCBheGVzKCkKICBheGlzID0+CiAgZ2V0IHByb3BzKCkKICBrZXkgPT4KICBoYXMoYXhpcykKICBnZXQgaXMzRCgpCiAgZW50cmllcygpCiAgcHJvcCA9PgogIHRvSlNPTigpCiAgdmVjdG9yKHVuaXQpCiAgIGF4aXMgPT4KICAgYXhpcyA9PgogIHRvU3RyaW5nKHRVbml0KQogIGNsb25lKCkKKGFjYywgcHJvcCkgPT4KICBzdGF0aWMgZnJvbVN0cmluZyhhcmcpCiAgYXJnID0+CiAgYXJnID0+CiAgc3RhdGljIGdldCByb3RhdGlvbigpCiAgc3RhdGljIGdldCB0cmFuc2xhdGlvbigpCiAgc3RhdGljIGdldCBzY2FsaW5nKCkKICBzdGF0aWMgZ2V0IG1hdHJpeCgpCiAgdmFsdWUoaW5zdCkKICAgY3RvciA9PgogIGN0b3IKUm90YXRpb24KICBjb25zdHJ1Y3RvcihhbmdsZSwgeCwgeSkKICBpbnZlcnQoKQogIGdldCB2YWx1ZXMoKQogIGdldCBpczNEKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKHJVbml0KQogIGNvb3JkID0+CiAgdG9Tb3VyY2UoKQogIGNvb3JkID0+CiAgYWNjdW11bGF0ZShvdGhlcikKICBzdGF0aWMgY29udmVydEFuZ2xlKGFuZ2xlLCB1bml0KQpSb3RhdGlvbgpUcmFuc2xhdGlvbgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgYSA9PgogIGdldCB2YWx1ZXMoKQogIGlzWmVybygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpUcmFuc2xhdGlvbgpTY2FsaW5nCiAgY29uc3RydWN0b3IoLi4uYXJncykKICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGFjY3VtdWxhdGUob3RoZXIpClNjYWxpbmcKTWF0cml4VHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcihpbml0KQogIGdldCB2YWx1ZXMoKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGlzWmVybygpCiAgYWNjdW11bGF0ZShvdGhlcikKTWF0cml4VHJhbnNmb3JtYXRpb24KVHJhbnNmb3JtYXRpb25MaXN0CiAgY29uc3RydWN0b3IoaW5pdCwgdFVuaXQsIHJVbml0KQogIGluaXRpYWxpemUoaW5pdCkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdAogIGZyb21TdHJpbmcoc3RyKQogIGZyb21BcnJheShhcnIpCiAgZ2V0IHRyYW5zbGF0aW9uVW5pdCgpCiAgc2V0IHRyYW5zbGF0aW9uVW5pdCh2YWx1ZSkKICBnZXQgcm90YXRpb25Vbml0KCkKICBzZXQgcm90YXRpb25Vbml0KHZhbHVlKQogIHN0YXRpYyBmcm9tU3RyaW5nKHN0cikKICBzdGF0aWMgZnJvbUFycmF5KGFycikKICBzdGF0aWMgZnJvbU1hdHJpeChtYXRyaXgpCiAgdG9BcnJheSgpCiAgdG9BcnJheSgpCiAgcHVzaCguLi5hcmdzKQogIGNsb25lKCkKICB0ID0+CiAgbWFwKGZuKQogIHNsaWNlKC4uLmFyZ3MpCiAgc3BsaWNlKC4uLmFyZ3MpCiAgY29uY2F0KC4uLmFyZ3MpCiAgZmlsdGVyKHByZWQpCiAgYmFzZUNhbGwoYyA9IEFycmF5LnByb3RvdHlwZS5tYXApCiAgICguLi5hcmdzKSA9PgogIHVuc2hpZnQoLi4uYXJncykKICByb3RhdGUoLi4uYXJncykKICB0cmFuc2xhdGUoeCwgeSkKICB0ID0+CiAgc2NhbGUoLi4uYXJncykKICBtYXRyaXgoLi4uYXJncykKICB0b1N0cmluZyh0VW5pdCwgclVuaXQpCiAgIHQgPT4KICB0b0RPTSgpCiAgdG9Tb3VyY2UoKQogIHQgPT4KICB0b01hdHJpY2VzKCkKICAgdCA9PgogIHVuZG8oKQogIG1lcmdlKC4uLmFyZ3MpClRyYW5zZm9ybWF0aW9uTGlzdAogIGRlY29tcG9zZShkZWdyZWVzID0gdHJ1ZSwgdHJhbnNmb3JtYXRpb25MaXN0ID0gdHJ1ZSkKICAudG9BcnJheSA9IGZ1bmN0aW9uIHRvQXJyYXkoKQogIGZpbmRMYXN0SW5kZXgocHJlZGljYXRlKQogIGZpbmRMYXN0KHByZWRpY2F0ZSkKICBnZXQgcm90YXRpb24oKQogIGl0ZW0gPT4KICBzZXQgcm90YXRpb24odmFsdWUpCiAgaXRlbSA9PgogIGdldCBzY2FsaW5nKCkKICBpdGVtID0+CiAgc2V0IHNjYWxpbmcodmFsdWUpCiAgaXRlbSA9PgogIGdldCB0cmFuc2xhdGlvbigpCiAgaXRlbSA9PgogIHNldCB0cmFuc2xhdGlvbih2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IGxhc3QoKQogIGdldCBmaXJzdCgpCiAgYXQocG9zKQogIGNvbGxhcHNlKCkKICBjb2xsYXBzZUFsbCgpCiAgZ2V0IGFuZ2xlKCkKICBpbnZlcnQoKQooYWNjLCB0KSA9PgogIGpvaW4oc2VwID0gJyAnKQogIGNsZWFyKCkKICBhcHBseShvYmosIHJvdW5kID0gdHJ1ZSkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdApJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnJvdGF0ZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUudHJhbnNsYXRlID0gZnVuY3Rpb24oLi4uYXJncykKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS5zY2FsZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCiAgICgpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					588,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					589,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/geom/transformation.js",
						"symkeys":
						[
							[
								204,
								218
							],
							[
								245,
								272
							],
							[
								738,
								748
							],
							[
								1077,
								1095
							],
							[
								1190,
								1200
							],
							[
								1277,
								1284
							],
							[
								1306,
								1317
							],
							[
								1373,
								1379
							],
							[
								1402,
								1411
							],
							[
								1505,
								1515
							],
							[
								1551,
								1560
							],
							[
								1589,
								1596
							],
							[
								1625,
								1633
							],
							[
								1690,
								1702
							],
							[
								1814,
								1822
							],
							[
								1842,
								1850
							],
							[
								1871,
								1886
							],
							[
								2158,
								2165
							],
							[
								2257,
								2271
							],
							[
								2380,
								2402
							],
							[
								2636,
								2642
							],
							[
								2685,
								2691
							],
							[
								4013,
								4034
							],
							[
								4064,
								4088
							],
							[
								4121,
								4141
							],
							[
								4170,
								4189
							],
							[
								4360,
								4371
							],
							[
								4482,
								4495
							],
							[
								4527,
								4531
							],
							[
								4648,
								4656
							],
							[
								4720,
								4744
							],
							[
								5022,
								5030
							],
							[
								5089,
								5101
							],
							[
								5158,
								5168
							],
							[
								5207,
								5215
							],
							[
								5253,
								5268
							],
							[
								5548,
								5556
							],
							[
								5601,
								5611
							],
							[
								5921,
								5929
							],
							[
								6066,
								6083
							],
							[
								6287,
								6319
							],
							[
								6551,
								6559
							],
							[
								6713,
								6724
							],
							[
								6790,
								6810
							],
							[
								7087,
								7091
							],
							[
								7330,
								7342
							],
							[
								7431,
								7439
							],
							[
								7793,
								7801
							],
							[
								7983,
								8000
							],
							[
								8290,
								8301
							],
							[
								8464,
								8471
							],
							[
								8537,
								8557
							],
							[
								8950,
								8962
							],
							[
								9159,
								9167
							],
							[
								9279,
								9289
							],
							[
								9599,
								9607
							],
							[
								9738,
								9755
							],
							[
								10037,
								10044
							],
							[
								10195,
								10215
							],
							[
								10272,
								10289
							],
							[
								10481,
								10493
							],
							[
								10627,
								10637
							],
							[
								10684,
								10692
							],
							[
								10761,
								10769
							],
							[
								10816,
								10833
							],
							[
								11036,
								11056
							],
							[
								11250,
								11268
							],
							[
								11287,
								11318
							],
							[
								12094,
								12110
							],
							[
								12230,
								12248
							],
							[
								12323,
								12341
							],
							[
								12725,
								12740
							],
							[
								13009,
								13023
							],
							[
								13325,
								13346
							],
							[
								13440,
								13466
							],
							[
								13576,
								13594
							],
							[
								13682,
								13705
							],
							[
								13808,
								13830
							],
							[
								13893,
								13914
							],
							[
								13976,
								14001
							],
							[
								14182,
								14191
							],
							[
								14294,
								14303
							],
							[
								14571,
								14584
							],
							[
								14826,
								14833
							],
							[
								14856,
								14860
							],
							[
								14897,
								14904
							],
							[
								14965,
								14979
							],
							[
								15047,
								15062
							],
							[
								15131,
								15146
							],
							[
								15215,
								15227
							],
							[
								15293,
								15326
							],
							[
								15339,
								15352
							],
							[
								15525,
								15541
							],
							[
								15729,
								15744
							],
							[
								15883,
								15898
							],
							[
								15929,
								15933
							],
							[
								16354,
								16368
							],
							[
								16503,
								16518
							],
							[
								16705,
								16727
							],
							[
								16867,
								16879
							],
							[
								17046,
								17053
							],
							[
								17168,
								17178
							],
							[
								17319,
								17323
							],
							[
								17401,
								17413
							],
							[
								17462,
								17467
							],
							[
								17636,
								17642
							],
							[
								17806,
								17820
							],
							[
								17932,
								17950
							],
							[
								18014,
								18066
							],
							[
								18500,
								18529
							],
							[
								18600,
								18624
							],
							[
								18763,
								18782
							],
							[
								18863,
								18877
							],
							[
								18905,
								18912
							],
							[
								18972,
								18991
							],
							[
								19029,
								19036
							],
							[
								19201,
								19214
							],
							[
								19242,
								19249
							],
							[
								19308,
								19326
							],
							[
								19364,
								19371
							],
							[
								19533,
								19550
							],
							[
								19578,
								19585
							],
							[
								19681,
								19703
							],
							[
								19741,
								19748
							],
							[
								20030,
								20040
							],
							[
								20073,
								20084
							],
							[
								20117,
								20124
							],
							[
								20192,
								20202
							],
							[
								20566,
								20579
							],
							[
								20648,
								20659
							],
							[
								20818,
								20826
							],
							[
								20944,
								20955
							],
							[
								20991,
								21006
							],
							[
								21065,
								21072
							],
							[
								21154,
								21178
							],
							[
								21341,
								21359
							],
							[
								21701,
								21719
							],
							[
								22301,
								22365
							],
							[
								22428,
								22495
							],
							[
								22561,
								22624
							],
							[
								22748,
								22754
							]
						],
						"symlist":
						[
							"Transformation",
							"constructor(transformation)",
							"get type()",
							"TransformationList",
							"get axes()",
							"axis =>",
							"get props()",
							"key =>",
							"has(axis)",
							"get is3D()",
							"entries()",
							"prop =>",
							"toJSON()",
							"vector(unit)",
							" axis =>",
							" axis =>",
							"toString(tUnit)",
							"clone()",
							"(acc, prop) =>",
							"static fromString(arg)",
							"arg =>",
							"arg =>",
							"static get rotation()",
							"static get translation()",
							"static get scaling()",
							"static get matrix()",
							"value(inst)",
							" ctor =>",
							"ctor",
							"Rotation",
							"constructor(angle, x, y)",
							"invert()",
							"get values()",
							"get is3D()",
							"isZero()",
							"toString(rUnit)",
							"coord =>",
							"toSource()",
							"coord =>",
							"accumulate(other)",
							"static convertAngle(angle, unit)",
							"Rotation",
							"Translation",
							"constructor(...args)",
							"a =>",
							"get values()",
							"isZero()",
							"invert()",
							"accumulate(other)",
							"Translation",
							"Scaling",
							"constructor(...args)",
							"get values()",
							"isZero()",
							"toString()",
							"invert()",
							"accumulate(other)",
							"Scaling",
							"MatrixTransformation",
							"constructor(init)",
							"get values()",
							"toString()",
							"invert()",
							"isZero()",
							"accumulate(other)",
							"MatrixTransformation",
							"TransformationList",
							"constructor(init, tUnit, rUnit)",
							"initialize(init)",
							"TransformationList",
							"TransformationList",
							"fromString(str)",
							"fromArray(arr)",
							"get translationUnit()",
							"set translationUnit(value)",
							"get rotationUnit()",
							"set rotationUnit(value)",
							"static fromString(str)",
							"static fromArray(arr)",
							"static fromMatrix(matrix)",
							"toArray()",
							"toArray()",
							"push(...args)",
							"clone()",
							"t =>",
							"map(fn)",
							"slice(...args)",
							"splice(...args)",
							"concat(...args)",
							"filter(pred)",
							"baseCall(c = Array.prototype.map)",
							" (...args) =>",
							"unshift(...args)",
							"rotate(...args)",
							"translate(x, y)",
							"t =>",
							"scale(...args)",
							"matrix(...args)",
							"toString(tUnit, rUnit)",
							" t =>",
							"toDOM()",
							"toSource()",
							"t =>",
							"toMatrices()",
							" t =>",
							"undo()",
							"merge(...args)",
							"TransformationList",
							"decompose(degrees = true, transformationList = true)",
							".toArray = function toArray()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"get rotation()",
							"item =>",
							"set rotation(value)",
							"item =>",
							"get scaling()",
							"item =>",
							"set scaling(value)",
							"item =>",
							"get translation()",
							"item =>",
							"set translation(value)",
							"item =>",
							"get last()",
							"get first()",
							"at(pos)",
							"collapse()",
							"collapseAll()",
							"get angle()",
							"invert()",
							"(acc, t) =>",
							"join(sep = ' ')",
							"clear()",
							"apply(obj, round = true)",
							"TransformationList",
							"TransformationList",
							"ImmutableTransformationList.prototype.rotate = function(...args)",
							"ImmutableTransformationList.prototype.translate = function(...args)",
							"ImmutableTransformationList.prototype.scale = function(...args)",
							" () =>"
						]
					},
					"AQAAAAAAAAAAAAAAigkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					590,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								334,
								349
							],
							[
								999,
								1008
							],
							[
								1397,
								1418
							],
							[
								1461,
								1479
							],
							[
								1560,
								1579
							],
							[
								1635,
								1656
							],
							[
								1843,
								1860
							],
							[
								2253,
								2262
							],
							[
								2343,
								2366
							],
							[
								2793,
								2819
							],
							[
								3204,
								3233
							],
							[
								3656,
								3660
							],
							[
								3671,
								3677
							],
							[
								3695,
								3700
							],
							[
								3727,
								3731
							],
							[
								4237,
								4260
							],
							[
								4367,
								4390
							],
							[
								4454,
								4476
							],
							[
								4645,
								4671
							],
							[
								5423,
								5454
							],
							[
								5722,
								5749
							],
							[
								5878,
								5895
							]
						],
						"symlist":
						[
							"function main()",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Blaze(x, y)",
							" function MouseHandler(e)",
							"async function* MouseIterator()",
							" function ResizeHandler(e)",
							" function Init()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACKCQAAVHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm1hdGlvbikKICBnZXQgdHlwZSgpClRyYW5zZm9ybWF0aW9uTGlzdAogIGdldCBheGVzKCkKICBheGlzID0+CiAgZ2V0IHByb3BzKCkKICBrZXkgPT4KICBoYXMoYXhpcykKICBnZXQgaXMzRCgpCiAgZW50cmllcygpCiAgcHJvcCA9PgogIHRvSlNPTigpCiAgdmVjdG9yKHVuaXQpCiAgIGF4aXMgPT4KICAgYXhpcyA9PgogIHRvU3RyaW5nKHRVbml0KQogIGNsb25lKCkKKGFjYywgcHJvcCkgPT4KICBzdGF0aWMgZnJvbVN0cmluZyhhcmcpCiAgYXJnID0+CiAgYXJnID0+CiAgc3RhdGljIGdldCByb3RhdGlvbigpCiAgc3RhdGljIGdldCB0cmFuc2xhdGlvbigpCiAgc3RhdGljIGdldCBzY2FsaW5nKCkKICBzdGF0aWMgZ2V0IG1hdHJpeCgpCiAgdmFsdWUoaW5zdCkKICAgY3RvciA9PgogIGN0b3IKUm90YXRpb24KICBjb25zdHJ1Y3RvcihhbmdsZSwgeCwgeSkKICBpbnZlcnQoKQogIGdldCB2YWx1ZXMoKQogIGdldCBpczNEKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKHJVbml0KQogIGNvb3JkID0+CiAgdG9Tb3VyY2UoKQogIGNvb3JkID0+CiAgYWNjdW11bGF0ZShvdGhlcikKICBzdGF0aWMgY29udmVydEFuZ2xlKGFuZ2xlLCB1bml0KQpSb3RhdGlvbgpUcmFuc2xhdGlvbgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgYSA9PgogIGdldCB2YWx1ZXMoKQogIGlzWmVybygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpUcmFuc2xhdGlvbgpTY2FsaW5nCiAgY29uc3RydWN0b3IoLi4uYXJncykKICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGFjY3VtdWxhdGUob3RoZXIpClNjYWxpbmcKTWF0cml4VHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcihpbml0KQogIGdldCB2YWx1ZXMoKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGlzWmVybygpCiAgYWNjdW11bGF0ZShvdGhlcikKTWF0cml4VHJhbnNmb3JtYXRpb24KVHJhbnNmb3JtYXRpb25MaXN0CiAgY29uc3RydWN0b3IoaW5pdCwgdFVuaXQsIHJVbml0KQogIGluaXRpYWxpemUoaW5pdCkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdAogIGZyb21TdHJpbmcoc3RyKQogIGZyb21BcnJheShhcnIpCiAgZ2V0IHRyYW5zbGF0aW9uVW5pdCgpCiAgc2V0IHRyYW5zbGF0aW9uVW5pdCh2YWx1ZSkKICBnZXQgcm90YXRpb25Vbml0KCkKICBzZXQgcm90YXRpb25Vbml0KHZhbHVlKQogIHN0YXRpYyBmcm9tU3RyaW5nKHN0cikKICBzdGF0aWMgZnJvbUFycmF5KGFycikKICBzdGF0aWMgZnJvbU1hdHJpeChtYXRyaXgpCiAgdG9BcnJheSgpCiAgdG9BcnJheSgpCiAgcHVzaCguLi5hcmdzKQogIGNsb25lKCkKICB0ID0+CiAgbWFwKGZuKQogIHNsaWNlKC4uLmFyZ3MpCiAgc3BsaWNlKC4uLmFyZ3MpCiAgY29uY2F0KC4uLmFyZ3MpCiAgZmlsdGVyKHByZWQpCiAgYmFzZUNhbGwoYyA9IEFycmF5LnByb3RvdHlwZS5tYXApCiAgICguLi5hcmdzKSA9PgogIHVuc2hpZnQoLi4uYXJncykKICByb3RhdGUoLi4uYXJncykKICB0cmFuc2xhdGUoeCwgeSkKICB0ID0+CiAgc2NhbGUoLi4uYXJncykKICBtYXRyaXgoLi4uYXJncykKICB0b1N0cmluZyh0VW5pdCwgclVuaXQpCiAgIHQgPT4KICB0b0RPTSgpCiAgdG9Tb3VyY2UoKQogIHQgPT4KICB0b01hdHJpY2VzKCkKICAgdCA9PgogIHVuZG8oKQogIG1lcmdlKC4uLmFyZ3MpClRyYW5zZm9ybWF0aW9uTGlzdAogIGRlY29tcG9zZShkZWdyZWVzID0gdHJ1ZSwgdHJhbnNmb3JtYXRpb25MaXN0ID0gdHJ1ZSkKICAudG9BcnJheSA9IGZ1bmN0aW9uIHRvQXJyYXkoKQogIGZpbmRMYXN0SW5kZXgocHJlZGljYXRlKQogIGZpbmRMYXN0KHByZWRpY2F0ZSkKICBnZXQgcm90YXRpb24oKQogIGl0ZW0gPT4KICBzZXQgcm90YXRpb24odmFsdWUpCiAgaXRlbSA9PgogIGdldCBzY2FsaW5nKCkKICBpdGVtID0+CiAgc2V0IHNjYWxpbmcodmFsdWUpCiAgaXRlbSA9PgogIGdldCB0cmFuc2xhdGlvbigpCiAgaXRlbSA9PgogIHNldCB0cmFuc2xhdGlvbih2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IGxhc3QoKQogIGdldCBmaXJzdCgpCiAgYXQocG9zKQogIGNvbGxhcHNlKCkKICBjb2xsYXBzZUFsbCgpCiAgZ2V0IGFuZ2xlKCkKICBpbnZlcnQoKQooYWNjLCB0KSA9PgogIGpvaW4oc2VwID0gJyAnKQogIGNsZWFyKCkKICBhcHBseShvYmosIHJvdW5kID0gdHJ1ZSkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdApJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnJvdGF0ZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUudHJhbnNsYXRlID0gZnVuY3Rpb24oLi4uYXJncykKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS5zY2FsZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCiAgICgpID0+AAAAAAAAAAAWAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					591,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/geom/transformation.js",
						"symkeys":
						[
							[
								204,
								218
							],
							[
								245,
								272
							],
							[
								738,
								748
							],
							[
								1077,
								1095
							],
							[
								1190,
								1200
							],
							[
								1277,
								1284
							],
							[
								1306,
								1317
							],
							[
								1373,
								1379
							],
							[
								1402,
								1411
							],
							[
								1505,
								1515
							],
							[
								1551,
								1560
							],
							[
								1589,
								1596
							],
							[
								1625,
								1633
							],
							[
								1690,
								1702
							],
							[
								1814,
								1822
							],
							[
								1842,
								1850
							],
							[
								1871,
								1886
							],
							[
								2158,
								2165
							],
							[
								2257,
								2271
							],
							[
								2380,
								2402
							],
							[
								2636,
								2642
							],
							[
								2685,
								2691
							],
							[
								4013,
								4034
							],
							[
								4064,
								4088
							],
							[
								4121,
								4141
							],
							[
								4170,
								4189
							],
							[
								4360,
								4371
							],
							[
								4482,
								4495
							],
							[
								4527,
								4531
							],
							[
								4648,
								4656
							],
							[
								4720,
								4744
							],
							[
								5022,
								5030
							],
							[
								5089,
								5101
							],
							[
								5158,
								5168
							],
							[
								5207,
								5215
							],
							[
								5253,
								5268
							],
							[
								5548,
								5556
							],
							[
								5601,
								5611
							],
							[
								5921,
								5929
							],
							[
								6066,
								6083
							],
							[
								6287,
								6319
							],
							[
								6551,
								6559
							],
							[
								6713,
								6724
							],
							[
								6790,
								6810
							],
							[
								7087,
								7091
							],
							[
								7330,
								7342
							],
							[
								7431,
								7439
							],
							[
								7793,
								7801
							],
							[
								7983,
								8000
							],
							[
								8290,
								8301
							],
							[
								8464,
								8471
							],
							[
								8537,
								8557
							],
							[
								8950,
								8962
							],
							[
								9159,
								9167
							],
							[
								9279,
								9289
							],
							[
								9599,
								9607
							],
							[
								9738,
								9755
							],
							[
								10037,
								10044
							],
							[
								10195,
								10215
							],
							[
								10272,
								10289
							],
							[
								10481,
								10493
							],
							[
								10627,
								10637
							],
							[
								10684,
								10692
							],
							[
								10761,
								10769
							],
							[
								10816,
								10833
							],
							[
								11036,
								11056
							],
							[
								11250,
								11268
							],
							[
								11287,
								11318
							],
							[
								12094,
								12110
							],
							[
								12230,
								12248
							],
							[
								12323,
								12341
							],
							[
								12725,
								12740
							],
							[
								13009,
								13023
							],
							[
								13325,
								13346
							],
							[
								13440,
								13466
							],
							[
								13576,
								13594
							],
							[
								13682,
								13705
							],
							[
								13808,
								13830
							],
							[
								13893,
								13914
							],
							[
								13976,
								14001
							],
							[
								14182,
								14191
							],
							[
								14294,
								14303
							],
							[
								14571,
								14584
							],
							[
								14826,
								14833
							],
							[
								14856,
								14860
							],
							[
								14897,
								14904
							],
							[
								14965,
								14979
							],
							[
								15047,
								15062
							],
							[
								15131,
								15146
							],
							[
								15215,
								15227
							],
							[
								15293,
								15326
							],
							[
								15339,
								15352
							],
							[
								15525,
								15541
							],
							[
								15729,
								15744
							],
							[
								15883,
								15898
							],
							[
								15929,
								15933
							],
							[
								16354,
								16368
							],
							[
								16503,
								16518
							],
							[
								16705,
								16727
							],
							[
								16867,
								16879
							],
							[
								17046,
								17053
							],
							[
								17168,
								17178
							],
							[
								17319,
								17323
							],
							[
								17401,
								17413
							],
							[
								17462,
								17467
							],
							[
								17636,
								17642
							],
							[
								17806,
								17820
							],
							[
								17932,
								17950
							],
							[
								18014,
								18066
							],
							[
								18500,
								18529
							],
							[
								18600,
								18624
							],
							[
								18763,
								18782
							],
							[
								18863,
								18877
							],
							[
								18905,
								18912
							],
							[
								18972,
								18991
							],
							[
								19029,
								19036
							],
							[
								19201,
								19214
							],
							[
								19242,
								19249
							],
							[
								19308,
								19326
							],
							[
								19364,
								19371
							],
							[
								19533,
								19550
							],
							[
								19578,
								19585
							],
							[
								19681,
								19703
							],
							[
								19741,
								19748
							],
							[
								20030,
								20040
							],
							[
								20073,
								20084
							],
							[
								20117,
								20124
							],
							[
								20192,
								20202
							],
							[
								20566,
								20579
							],
							[
								20648,
								20659
							],
							[
								20818,
								20826
							],
							[
								20944,
								20955
							],
							[
								20991,
								21006
							],
							[
								21065,
								21072
							],
							[
								21154,
								21178
							],
							[
								21341,
								21359
							],
							[
								21701,
								21719
							],
							[
								22301,
								22365
							],
							[
								22428,
								22495
							],
							[
								22561,
								22624
							],
							[
								22748,
								22754
							]
						],
						"symlist":
						[
							"Transformation",
							"constructor(transformation)",
							"get type()",
							"TransformationList",
							"get axes()",
							"axis =>",
							"get props()",
							"key =>",
							"has(axis)",
							"get is3D()",
							"entries()",
							"prop =>",
							"toJSON()",
							"vector(unit)",
							" axis =>",
							" axis =>",
							"toString(tUnit)",
							"clone()",
							"(acc, prop) =>",
							"static fromString(arg)",
							"arg =>",
							"arg =>",
							"static get rotation()",
							"static get translation()",
							"static get scaling()",
							"static get matrix()",
							"value(inst)",
							" ctor =>",
							"ctor",
							"Rotation",
							"constructor(angle, x, y)",
							"invert()",
							"get values()",
							"get is3D()",
							"isZero()",
							"toString(rUnit)",
							"coord =>",
							"toSource()",
							"coord =>",
							"accumulate(other)",
							"static convertAngle(angle, unit)",
							"Rotation",
							"Translation",
							"constructor(...args)",
							"a =>",
							"get values()",
							"isZero()",
							"invert()",
							"accumulate(other)",
							"Translation",
							"Scaling",
							"constructor(...args)",
							"get values()",
							"isZero()",
							"toString()",
							"invert()",
							"accumulate(other)",
							"Scaling",
							"MatrixTransformation",
							"constructor(init)",
							"get values()",
							"toString()",
							"invert()",
							"isZero()",
							"accumulate(other)",
							"MatrixTransformation",
							"TransformationList",
							"constructor(init, tUnit, rUnit)",
							"initialize(init)",
							"TransformationList",
							"TransformationList",
							"fromString(str)",
							"fromArray(arr)",
							"get translationUnit()",
							"set translationUnit(value)",
							"get rotationUnit()",
							"set rotationUnit(value)",
							"static fromString(str)",
							"static fromArray(arr)",
							"static fromMatrix(matrix)",
							"toArray()",
							"toArray()",
							"push(...args)",
							"clone()",
							"t =>",
							"map(fn)",
							"slice(...args)",
							"splice(...args)",
							"concat(...args)",
							"filter(pred)",
							"baseCall(c = Array.prototype.map)",
							" (...args) =>",
							"unshift(...args)",
							"rotate(...args)",
							"translate(x, y)",
							"t =>",
							"scale(...args)",
							"matrix(...args)",
							"toString(tUnit, rUnit)",
							" t =>",
							"toDOM()",
							"toSource()",
							"t =>",
							"toMatrices()",
							" t =>",
							"undo()",
							"merge(...args)",
							"TransformationList",
							"decompose(degrees = true, transformationList = true)",
							".toArray = function toArray()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"get rotation()",
							"item =>",
							"set rotation(value)",
							"item =>",
							"get scaling()",
							"item =>",
							"set scaling(value)",
							"item =>",
							"get translation()",
							"item =>",
							"set translation(value)",
							"item =>",
							"get last()",
							"get first()",
							"at(pos)",
							"collapse()",
							"collapseAll()",
							"get angle()",
							"invert()",
							"(acc, t) =>",
							"join(sep = ' ')",
							"clear()",
							"apply(obj, round = true)",
							"TransformationList",
							"TransformationList",
							"ImmutableTransformationList.prototype.rotate = function(...args)",
							"ImmutableTransformationList.prototype.translate = function(...args)",
							"ImmutableTransformationList.prototype.scale = function(...args)",
							" () =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAWAQAAICBtYWluKCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkJsYXplKHgsIHkpCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkAAAAAAAAAAIoJAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					592,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								334,
								349
							],
							[
								999,
								1008
							],
							[
								1397,
								1418
							],
							[
								1461,
								1479
							],
							[
								1560,
								1579
							],
							[
								1635,
								1656
							],
							[
								1843,
								1860
							],
							[
								2253,
								2262
							],
							[
								2343,
								2366
							],
							[
								2793,
								2819
							],
							[
								3204,
								3233
							],
							[
								3656,
								3660
							],
							[
								3671,
								3677
							],
							[
								3695,
								3700
							],
							[
								3727,
								3731
							],
							[
								4237,
								4260
							],
							[
								4367,
								4390
							],
							[
								4454,
								4476
							],
							[
								4645,
								4671
							],
							[
								5423,
								5454
							],
							[
								5722,
								5749
							],
							[
								5878,
								5895
							]
						],
						"symlist":
						[
							"function main()",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Blaze(x, y)",
							" function MouseHandler(e)",
							"async function* MouseIterator()",
							" function ResizeHandler(e)",
							" function Init()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACKCQAAVHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm1hdGlvbikKICBnZXQgdHlwZSgpClRyYW5zZm9ybWF0aW9uTGlzdAogIGdldCBheGVzKCkKICBheGlzID0+CiAgZ2V0IHByb3BzKCkKICBrZXkgPT4KICBoYXMoYXhpcykKICBnZXQgaXMzRCgpCiAgZW50cmllcygpCiAgcHJvcCA9PgogIHRvSlNPTigpCiAgdmVjdG9yKHVuaXQpCiAgIGF4aXMgPT4KICAgYXhpcyA9PgogIHRvU3RyaW5nKHRVbml0KQogIGNsb25lKCkKKGFjYywgcHJvcCkgPT4KICBzdGF0aWMgZnJvbVN0cmluZyhhcmcpCiAgYXJnID0+CiAgYXJnID0+CiAgc3RhdGljIGdldCByb3RhdGlvbigpCiAgc3RhdGljIGdldCB0cmFuc2xhdGlvbigpCiAgc3RhdGljIGdldCBzY2FsaW5nKCkKICBzdGF0aWMgZ2V0IG1hdHJpeCgpCiAgdmFsdWUoaW5zdCkKICAgY3RvciA9PgogIGN0b3IKUm90YXRpb24KICBjb25zdHJ1Y3RvcihhbmdsZSwgeCwgeSkKICBpbnZlcnQoKQogIGdldCB2YWx1ZXMoKQogIGdldCBpczNEKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKHJVbml0KQogIGNvb3JkID0+CiAgdG9Tb3VyY2UoKQogIGNvb3JkID0+CiAgYWNjdW11bGF0ZShvdGhlcikKICBzdGF0aWMgY29udmVydEFuZ2xlKGFuZ2xlLCB1bml0KQpSb3RhdGlvbgpUcmFuc2xhdGlvbgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgYSA9PgogIGdldCB2YWx1ZXMoKQogIGlzWmVybygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpUcmFuc2xhdGlvbgpTY2FsaW5nCiAgY29uc3RydWN0b3IoLi4uYXJncykKICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGFjY3VtdWxhdGUob3RoZXIpClNjYWxpbmcKTWF0cml4VHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcihpbml0KQogIGdldCB2YWx1ZXMoKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGlzWmVybygpCiAgYWNjdW11bGF0ZShvdGhlcikKTWF0cml4VHJhbnNmb3JtYXRpb24KVHJhbnNmb3JtYXRpb25MaXN0CiAgY29uc3RydWN0b3IoaW5pdCwgdFVuaXQsIHJVbml0KQogIGluaXRpYWxpemUoaW5pdCkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdAogIGZyb21TdHJpbmcoc3RyKQogIGZyb21BcnJheShhcnIpCiAgZ2V0IHRyYW5zbGF0aW9uVW5pdCgpCiAgc2V0IHRyYW5zbGF0aW9uVW5pdCh2YWx1ZSkKICBnZXQgcm90YXRpb25Vbml0KCkKICBzZXQgcm90YXRpb25Vbml0KHZhbHVlKQogIHN0YXRpYyBmcm9tU3RyaW5nKHN0cikKICBzdGF0aWMgZnJvbUFycmF5KGFycikKICBzdGF0aWMgZnJvbU1hdHJpeChtYXRyaXgpCiAgdG9BcnJheSgpCiAgdG9BcnJheSgpCiAgcHVzaCguLi5hcmdzKQogIGNsb25lKCkKICB0ID0+CiAgbWFwKGZuKQogIHNsaWNlKC4uLmFyZ3MpCiAgc3BsaWNlKC4uLmFyZ3MpCiAgY29uY2F0KC4uLmFyZ3MpCiAgZmlsdGVyKHByZWQpCiAgYmFzZUNhbGwoYyA9IEFycmF5LnByb3RvdHlwZS5tYXApCiAgICguLi5hcmdzKSA9PgogIHVuc2hpZnQoLi4uYXJncykKICByb3RhdGUoLi4uYXJncykKICB0cmFuc2xhdGUoeCwgeSkKICB0ID0+CiAgc2NhbGUoLi4uYXJncykKICBtYXRyaXgoLi4uYXJncykKICB0b1N0cmluZyh0VW5pdCwgclVuaXQpCiAgIHQgPT4KICB0b0RPTSgpCiAgdG9Tb3VyY2UoKQogIHQgPT4KICB0b01hdHJpY2VzKCkKICAgdCA9PgogIHVuZG8oKQogIG1lcmdlKC4uLmFyZ3MpClRyYW5zZm9ybWF0aW9uTGlzdAogIGRlY29tcG9zZShkZWdyZWVzID0gdHJ1ZSwgdHJhbnNmb3JtYXRpb25MaXN0ID0gdHJ1ZSkKICAudG9BcnJheSA9IGZ1bmN0aW9uIHRvQXJyYXkoKQogIGZpbmRMYXN0SW5kZXgocHJlZGljYXRlKQogIGZpbmRMYXN0KHByZWRpY2F0ZSkKICBnZXQgcm90YXRpb24oKQogIGl0ZW0gPT4KICBzZXQgcm90YXRpb24odmFsdWUpCiAgaXRlbSA9PgogIGdldCBzY2FsaW5nKCkKICBpdGVtID0+CiAgc2V0IHNjYWxpbmcodmFsdWUpCiAgaXRlbSA9PgogIGdldCB0cmFuc2xhdGlvbigpCiAgaXRlbSA9PgogIHNldCB0cmFuc2xhdGlvbih2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IGxhc3QoKQogIGdldCBmaXJzdCgpCiAgYXQocG9zKQogIGNvbGxhcHNlKCkKICBjb2xsYXBzZUFsbCgpCiAgZ2V0IGFuZ2xlKCkKICBpbnZlcnQoKQooYWNjLCB0KSA9PgogIGpvaW4oc2VwID0gJyAnKQogIGNsZWFyKCkKICBhcHBseShvYmosIHJvdW5kID0gdHJ1ZSkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdApJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnJvdGF0ZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUudHJhbnNsYXRlID0gZnVuY3Rpb24oLi4uYXJncykKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS5zY2FsZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCiAgICgpID0+AAAAAAAAAAAWAQAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					593,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/async/helpers.js",
						"symkeys":
						[
							[
								61,
								81
							],
							[
								105,
								115
							],
							[
								242,
								269
							],
							[
								478,
								528
							],
							[
								607,
								684
							],
							[
								746,
								787
							],
							[
								820,
								825
							],
							[
								894,
								903
							],
							[
								938,
								956
							],
							[
								1124,
								1157
							],
							[
								1236,
								1246
							],
							[
								1257,
								1279
							],
							[
								1303,
								1311
							],
							[
								1408,
								1416
							],
							[
								1531,
								1570
							]
						],
						"symlist":
						[
							"timer = function(ms)",
							"resolve =>",
							"source = async function* ()",
							"map = async function* (stream, transform = a => a)",
							"consume = async function(stream, fn = a => console.log(`async consume =`, a))",
							"accumulate = async function(stream, accu)",
							" a =>",
							"WebSocket",
							"async function* ()",
							"oncePromise = (emitter, event) =>",
							"resolve =>",
							"handler = (...args) =>",
							"event =>",
							"event =>",
							"filter = async function* (stream, test)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAWAQAAICBtYWluKCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkJsYXplKHgsIHkpCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkAAAAAAAAAAGoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					594,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABqAQAAICB0aW1lciA9IGZ1bmN0aW9uKG1zKQogIHJlc29sdmUgPT4KICBzb3VyY2UgPSBmdW5jdGlvbiooKQogIG1hcCA9IGZ1bmN0aW9uKihzdHJlYW0sIHRyYW5zZm9ybSA9IGEgPT4gYSkKICBjb25zdW1lID0gZnVuY3Rpb24oc3RyZWFtLCBmbiA9IGEgPT4gY29uc29sZS5sb2coYGNvbnN1bWUgPWAsIGEpKQogIGFjY3VtdWxhdGUgPSBmdW5jdGlvbihzdHJlYW0sIGFjY3UpCiAgIGEgPT4KV2ViU29ja2V0CigpCiAgb25jZVByb21pc2UgPSAoZW1pdHRlciwgZXZlbnQpID0+CiAgcmVzb2x2ZSA9PgogIGhhbmRsZXIgPSAoLi4uYXJncykgPT4KICBldmVudCA9PgogIGV2ZW50ID0+CiAgZmlsdGVyID0gZnVuY3Rpb24qKHN0cmVhbSwgdGVzdCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					595,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/async/helpers.js",
						"symkeys":
						[
							[
								61,
								81
							],
							[
								105,
								115
							],
							[
								242,
								269
							],
							[
								478,
								528
							],
							[
								607,
								684
							],
							[
								746,
								787
							],
							[
								820,
								825
							],
							[
								894,
								903
							],
							[
								938,
								956
							],
							[
								1124,
								1157
							],
							[
								1236,
								1246
							],
							[
								1257,
								1279
							],
							[
								1303,
								1311
							],
							[
								1408,
								1416
							],
							[
								1531,
								1570
							]
						],
						"symlist":
						[
							"timer = function(ms)",
							"resolve =>",
							"source = async function* ()",
							"map = async function* (stream, transform = a => a)",
							"consume = async function(stream, fn = a => console.log(`async consume =`, a))",
							"accumulate = async function(stream, accu)",
							" a =>",
							"WebSocket",
							"async function* ()",
							"oncePromise = (emitter, event) =>",
							"resolve =>",
							"handler = (...args) =>",
							"event =>",
							"event =>",
							"filter = async function* (stream, test)"
						]
					},
					"AQAAAAAAAAAAAAAAagEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					596,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/async/helpers.js",
						"symkeys":
						[
							[
								61,
								81
							],
							[
								105,
								115
							],
							[
								242,
								269
							],
							[
								611,
								688
							],
							[
								750,
								791
							],
							[
								824,
								829
							],
							[
								898,
								907
							],
							[
								942,
								960
							],
							[
								1128,
								1161
							],
							[
								1240,
								1250
							],
							[
								1261,
								1283
							],
							[
								1307,
								1315
							],
							[
								1412,
								1420
							],
							[
								1535,
								1574
							]
						],
						"symlist":
						[
							"timer = function(ms)",
							"resolve =>",
							"source = async function* ()",
							"consume = async function(stream, fn = a => console.log(`async consume =`, a))",
							"accumulate = async function(stream, accu)",
							" a =>",
							"WebSocket",
							"async function* ()",
							"oncePromise = (emitter, event) =>",
							"resolve =>",
							"handler = (...args) =>",
							"event =>",
							"event =>",
							"filter = async function* (stream, test)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABqAQAAICB0aW1lciA9IGZ1bmN0aW9uKG1zKQogIHJlc29sdmUgPT4KICBzb3VyY2UgPSBmdW5jdGlvbiooKQogIG1hcCA9IGZ1bmN0aW9uKihzdHJlYW0sIHRyYW5zZm9ybSA9IGEgPT4gYSkKICBjb25zdW1lID0gZnVuY3Rpb24oc3RyZWFtLCBmbiA9IGEgPT4gY29uc29sZS5sb2coYGNvbnN1bWUgPWAsIGEpKQogIGFjY3VtdWxhdGUgPSBmdW5jdGlvbihzdHJlYW0sIGFjY3UpCiAgIGEgPT4KV2ViU29ja2V0CigpCiAgb25jZVByb21pc2UgPSAoZW1pdHRlciwgZXZlbnQpID0+CiAgcmVzb2x2ZSA9PgogIGhhbmRsZXIgPSAoLi4uYXJncykgPT4KICBldmVudCA9PgogIGV2ZW50ID0+CiAgZmlsdGVyID0gZnVuY3Rpb24qKHN0cmVhbSwgdGVzdCkAAAAAAAAAADwBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AQAAICB0aW1lciA9IGZ1bmN0aW9uKG1zKQogIHJlc29sdmUgPT4KICBzb3VyY2UgPSBmdW5jdGlvbiooKQogIGNvbnN1bWUgPSBmdW5jdGlvbihzdHJlYW0sIGZuID0gYSA9PiBjb25zb2xlLmxvZyhgY29uc3VtZSA9YCwgYSkpCiAgYWNjdW11bGF0ZSA9IGZ1bmN0aW9uKHN0cmVhbSwgYWNjdSkKICAgYSA9PgpXZWJTb2NrZXQKKCkKICBvbmNlUHJvbWlzZSA9IChlbWl0dGVyLCBldmVudCkgPT4KICByZXNvbHZlID0+CiAgaGFuZGxlciA9ICguLi5hcmdzKSA9PgogIGV2ZW50ID0+CiAgZXZlbnQgPT4KICBmaWx0ZXIgPSBmdW5jdGlvbiooc3RyZWFtLCB0ZXN0KQAAAAAAAAAAPAEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					597,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA8AQAAICB0aW1lciA9IGZ1bmN0aW9uKG1zKQogIHJlc29sdmUgPT4KICBzb3VyY2UgPSBmdW5jdGlvbiooKQogIGNvbnN1bWUgPSBmdW5jdGlvbihzdHJlYW0sIGZuID0gYSA9PiBjb25zb2xlLmxvZyhgY29uc3VtZSA9YCwgYSkpCiAgYWNjdW11bGF0ZSA9IGZ1bmN0aW9uKHN0cmVhbSwgYWNjdSkKICAgYSA9PgpXZWJTb2NrZXQKKCkKICBvbmNlUHJvbWlzZSA9IChlbWl0dGVyLCBldmVudCkgPT4KICByZXNvbHZlID0+CiAgaGFuZGxlciA9ICguLi5hcmdzKSA9PgogIGV2ZW50ID0+CiAgZXZlbnQgPT4KICBmaWx0ZXIgPSBmdW5jdGlvbiooc3RyZWFtLCB0ZXN0KQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					598,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/async/helpers.js",
						"symkeys":
						[
							[
								61,
								81
							],
							[
								105,
								115
							],
							[
								242,
								269
							],
							[
								611,
								688
							],
							[
								750,
								791
							],
							[
								824,
								829
							],
							[
								898,
								907
							],
							[
								942,
								960
							],
							[
								1128,
								1161
							],
							[
								1240,
								1250
							],
							[
								1261,
								1283
							],
							[
								1307,
								1315
							],
							[
								1412,
								1420
							],
							[
								1535,
								1574
							]
						],
						"symlist":
						[
							"timer = function(ms)",
							"resolve =>",
							"source = async function* ()",
							"consume = async function(stream, fn = a => console.log(`async consume =`, a))",
							"accumulate = async function(stream, accu)",
							" a =>",
							"WebSocket",
							"async function* ()",
							"oncePromise = (emitter, event) =>",
							"resolve =>",
							"handler = (...args) =>",
							"event =>",
							"event =>",
							"filter = async function* (stream, test)"
						]
					},
					"AQAAAAAAAAAAAAAAPAEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					599,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/async/helpers.js",
						"symkeys":
						[
							[
								61,
								81
							],
							[
								105,
								115
							],
							[
								242,
								269
							],
							[
								611,
								688
							],
							[
								750,
								791
							],
							[
								824,
								829
							],
							[
								898,
								907
							],
							[
								942,
								960
							],
							[
								1128,
								1161
							],
							[
								1240,
								1250
							],
							[
								1261,
								1283
							],
							[
								1307,
								1315
							],
							[
								1412,
								1420
							]
						],
						"symlist":
						[
							"timer = function(ms)",
							"resolve =>",
							"source = async function* ()",
							"consume = async function(stream, fn = a => console.log(`async consume =`, a))",
							"accumulate = async function(stream, accu)",
							" a =>",
							"WebSocket",
							"async function* ()",
							"oncePromise = (emitter, event) =>",
							"resolve =>",
							"handler = (...args) =>",
							"event =>",
							"event =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA8AQAAICB0aW1lciA9IGZ1bmN0aW9uKG1zKQogIHJlc29sdmUgPT4KICBzb3VyY2UgPSBmdW5jdGlvbiooKQogIGNvbnN1bWUgPSBmdW5jdGlvbihzdHJlYW0sIGZuID0gYSA9PiBjb25zb2xlLmxvZyhgY29uc3VtZSA9YCwgYSkpCiAgYWNjdW11bGF0ZSA9IGZ1bmN0aW9uKHN0cmVhbSwgYWNjdSkKICAgYSA9PgpXZWJTb2NrZXQKKCkKICBvbmNlUHJvbWlzZSA9IChlbWl0dGVyLCBldmVudCkgPT4KICByZXNvbHZlID0+CiAgaGFuZGxlciA9ICguLi5hcmdzKSA9PgogIGV2ZW50ID0+CiAgZXZlbnQgPT4KICBmaWx0ZXIgPSBmdW5jdGlvbiooc3RyZWFtLCB0ZXN0KQAAAAAAAAAAGQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkBAAAgIHRpbWVyID0gZnVuY3Rpb24obXMpCiAgcmVzb2x2ZSA9PgogIHNvdXJjZSA9IGZ1bmN0aW9uKigpCiAgY29uc3VtZSA9IGZ1bmN0aW9uKHN0cmVhbSwgZm4gPSBhID0+IGNvbnNvbGUubG9nKGBjb25zdW1lID1gLCBhKSkKICBhY2N1bXVsYXRlID0gZnVuY3Rpb24oc3RyZWFtLCBhY2N1KQogICBhID0+CldlYlNvY2tldAooKQogIG9uY2VQcm9taXNlID0gKGVtaXR0ZXIsIGV2ZW50KSA9PgogIHJlc29sdmUgPT4KICBoYW5kbGVyID0gKC4uLmFyZ3MpID0+CiAgZXZlbnQgPT4KICBldmVudCA9PgAAAAAAAAAAGQEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					600,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAZAQAAICB0aW1lciA9IGZ1bmN0aW9uKG1zKQogIHJlc29sdmUgPT4KICBzb3VyY2UgPSBmdW5jdGlvbiooKQogIGNvbnN1bWUgPSBmdW5jdGlvbihzdHJlYW0sIGZuID0gYSA9PiBjb25zb2xlLmxvZyhgY29uc3VtZSA9YCwgYSkpCiAgYWNjdW11bGF0ZSA9IGZ1bmN0aW9uKHN0cmVhbSwgYWNjdSkKICAgYSA9PgpXZWJTb2NrZXQKKCkKICBvbmNlUHJvbWlzZSA9IChlbWl0dGVyLCBldmVudCkgPT4KICByZXNvbHZlID0+CiAgaGFuZGxlciA9ICguLi5hcmdzKSA9PgogIGV2ZW50ID0+CiAgZXZlbnQgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					601,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								334,
								349
							],
							[
								999,
								1008
							],
							[
								1397,
								1418
							],
							[
								1461,
								1479
							],
							[
								1560,
								1579
							],
							[
								1635,
								1656
							],
							[
								1843,
								1860
							],
							[
								2253,
								2262
							],
							[
								2343,
								2366
							],
							[
								2793,
								2819
							],
							[
								3204,
								3233
							],
							[
								3656,
								3660
							],
							[
								3671,
								3677
							],
							[
								3695,
								3700
							],
							[
								3727,
								3731
							],
							[
								4237,
								4260
							],
							[
								4367,
								4390
							],
							[
								4454,
								4476
							],
							[
								4645,
								4671
							],
							[
								5423,
								5454
							],
							[
								5722,
								5749
							],
							[
								5878,
								5895
							]
						],
						"symlist":
						[
							"function main()",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Blaze(x, y)",
							" function MouseHandler(e)",
							"async function* MouseIterator()",
							" function ResizeHandler(e)",
							" function Init()"
						]
					},
					"AQAAAAAAAAAAAAAAFgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					602,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAWAQAAICBtYWluKCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkJsYXplKHgsIHkpCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					603,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								334,
								349
							],
							[
								999,
								1008
							],
							[
								1397,
								1418
							],
							[
								1461,
								1479
							],
							[
								1560,
								1579
							],
							[
								1635,
								1656
							],
							[
								1843,
								1860
							],
							[
								2253,
								2262
							],
							[
								2343,
								2366
							],
							[
								2793,
								2819
							],
							[
								3204,
								3233
							],
							[
								3656,
								3660
							],
							[
								3671,
								3677
							],
							[
								3695,
								3700
							],
							[
								3727,
								3731
							],
							[
								4237,
								4260
							],
							[
								4367,
								4390
							],
							[
								4454,
								4476
							],
							[
								4645,
								4671
							],
							[
								5423,
								5454
							],
							[
								5722,
								5749
							],
							[
								5878,
								5895
							]
						],
						"symlist":
						[
							"function main()",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Blaze(x, y)",
							" function MouseHandler(e)",
							"async function* MouseIterator()",
							" function ResizeHandler(e)",
							" function Init()"
						]
					},
					"AQAAAAAAAAAAAAAAFgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					604,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								332,
								347
							],
							[
								997,
								1006
							],
							[
								1395,
								1416
							],
							[
								1459,
								1477
							],
							[
								1558,
								1577
							],
							[
								1633,
								1654
							],
							[
								1841,
								1858
							],
							[
								2251,
								2260
							],
							[
								2341,
								2364
							],
							[
								2791,
								2817
							],
							[
								3202,
								3231
							],
							[
								3654,
								3658
							],
							[
								3669,
								3675
							],
							[
								3693,
								3698
							],
							[
								3725,
								3729
							],
							[
								4235,
								4258
							],
							[
								4365,
								4388
							],
							[
								4452,
								4474
							],
							[
								4643,
								4669
							],
							[
								5421,
								5452
							],
							[
								5720,
								5747
							],
							[
								5876,
								5893
							]
						],
						"symlist":
						[
							"function main()",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Blaze(x, y)",
							" function MouseHandler(e)",
							"async function* MouseIterator()",
							" function ResizeHandler(e)",
							" function Init()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAWAQAAICBtYWluKCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkJsYXplKHgsIHkpCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkAAAAAAAAAABYBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAQAAICBtYWluKCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkJsYXplKHgsIHkpCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkAAAAAAAAAABYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					605,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								332,
								347
							],
							[
								1017,
								1026
							],
							[
								1415,
								1436
							],
							[
								1479,
								1497
							],
							[
								1578,
								1597
							],
							[
								1653,
								1674
							],
							[
								1861,
								1878
							],
							[
								2271,
								2280
							],
							[
								2361,
								2384
							],
							[
								2811,
								2837
							],
							[
								3222,
								3251
							],
							[
								3674,
								3678
							],
							[
								3689,
								3695
							],
							[
								3713,
								3718
							],
							[
								3745,
								3749
							],
							[
								4255,
								4278
							],
							[
								4385,
								4408
							],
							[
								4472,
								4494
							],
							[
								4663,
								4689
							],
							[
								5441,
								5472
							],
							[
								5740,
								5767
							],
							[
								5896,
								5913
							]
						],
						"symlist":
						[
							"function main()",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Blaze(x, y)",
							" function MouseHandler(e)",
							"async function* MouseIterator()",
							" function ResizeHandler(e)",
							" function Init()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAWAQAAICBtYWluKCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkJsYXplKHgsIHkpCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkAAAAAAAAAABYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					606,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAWAQAAICBtYWluKCkKKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpDcmVhdGVQYWxldHRlKCkKQ3JlYXRlUGFsZXR0ZUhTTCgpCiAgdiA9PgogICAoKSA9PgogICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCkJsYXplKHgsIHkpCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					607,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					608,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/async/events.js",
						"symkeys":
						[
							[
								109,
								143
							],
							[
								167,
								177
							],
							[
								199,
								206
							],
							[
								268,
								295
							],
							[
								319,
								326
							],
							[
								475,
								537
							],
							[
								766,
								805
							],
							[
								1026,
								1041
							],
							[
								1109,
								1161
							],
							[
								1405,
								1447
							]
						],
						"symlist":
						[
							" function once(emitter, ...events)",
							"resolve =>",
							"type =>",
							" function handler(event)",
							"type =>",
							"async function* streamify(event, element, cond = last => true)",
							"async function* throttle(stream, delay)",
							"identity = e =>",
							"async function* distinct(stream, extract = identity)",
							"async function subscribe(stream, callback)"
						]
					},
					"AQAAAAAAAAAAAAAA7gAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					609,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADuAAAAICBvbmNlKGVtaXR0ZXIsIC4uLmV2ZW50cykKICByZXNvbHZlID0+CiAgdHlwZSA9PgogIGhhbmRsZXIoZXZlbnQpCiAgdHlwZSA9PgogIHN0cmVhbWlmeShldmVudCwgZWxlbWVudCwgY29uZCA9IGxhc3QgPT4gdHJ1ZSkKICB0aHJvdHRsZShzdHJlYW0sIGRlbGF5KQogIGlkZW50aXR5ID0gZSA9PgogIGRpc3RpbmN0KHN0cmVhbSwgZXh0cmFjdCA9IGlkZW50aXR5KQogIHN1YnNjcmliZShzdHJlYW0sIGNhbGxiYWNrKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					610,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/async/events.js",
						"symkeys":
						[
							[
								101,
								135
							],
							[
								159,
								169
							],
							[
								191,
								198
							],
							[
								260,
								287
							],
							[
								311,
								318
							],
							[
								467,
								529
							],
							[
								758,
								797
							],
							[
								1018,
								1033
							],
							[
								1101,
								1153
							],
							[
								1397,
								1439
							]
						],
						"symlist":
						[
							" function once(emitter, ...events)",
							"resolve =>",
							"type =>",
							" function handler(event)",
							"type =>",
							"async function* streamify(event, element, cond = last => true)",
							"async function* throttle(stream, delay)",
							"identity = e =>",
							"async function* distinct(stream, extract = identity)",
							"async function subscribe(stream, callback)"
						]
					},
					"AQAAAAAAAAAAAAAA7gAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					611,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/async/events.js",
						"symkeys":
						[
							[
								65,
								99
							],
							[
								123,
								133
							],
							[
								155,
								162
							],
							[
								224,
								251
							],
							[
								275,
								282
							],
							[
								431,
								493
							],
							[
								722,
								761
							],
							[
								982,
								997
							],
							[
								1065,
								1117
							],
							[
								1361,
								1403
							]
						],
						"symlist":
						[
							" function once(emitter, ...events)",
							"resolve =>",
							"type =>",
							" function handler(event)",
							"type =>",
							"async function* streamify(event, element, cond = last => true)",
							"async function* throttle(stream, delay)",
							"identity = e =>",
							"async function* distinct(stream, extract = identity)",
							"async function subscribe(stream, callback)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADuAAAAICBvbmNlKGVtaXR0ZXIsIC4uLmV2ZW50cykKICByZXNvbHZlID0+CiAgdHlwZSA9PgogIGhhbmRsZXIoZXZlbnQpCiAgdHlwZSA9PgogIHN0cmVhbWlmeShldmVudCwgZWxlbWVudCwgY29uZCA9IGxhc3QgPT4gdHJ1ZSkKICB0aHJvdHRsZShzdHJlYW0sIGRlbGF5KQogIGlkZW50aXR5ID0gZSA9PgogIGRpc3RpbmN0KHN0cmVhbSwgZXh0cmFjdCA9IGlkZW50aXR5KQogIHN1YnNjcmliZShzdHJlYW0sIGNhbGxiYWNrKQAAAAAAAAAA7gAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					612,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								332,
								347
							],
							[
								1017,
								1026
							],
							[
								1415,
								1436
							],
							[
								1479,
								1497
							],
							[
								1578,
								1597
							],
							[
								1653,
								1674
							],
							[
								1861,
								1878
							],
							[
								2271,
								2280
							],
							[
								2361,
								2384
							],
							[
								2811,
								2837
							],
							[
								3222,
								3251
							],
							[
								3674,
								3678
							],
							[
								3689,
								3695
							],
							[
								3713,
								3718
							],
							[
								3745,
								3749
							],
							[
								4255,
								4278
							],
							[
								4385,
								4408
							],
							[
								4472,
								4494
							],
							[
								4663,
								4689
							],
							[
								5441,
								5472
							],
							[
								5740,
								5767
							],
							[
								5896,
								5913
							]
						],
						"symlist":
						[
							"function main()",
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function CreatePalette()",
							" function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							" function RandomByte()",
							" function Modulo(n, m)",
							" function Blaze(x, y)",
							" function MouseHandler(e)",
							"async function* MouseIterator()",
							" function ResizeHandler(e)",
							" function Init()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADuAAAAICBvbmNlKGVtaXR0ZXIsIC4uLmV2ZW50cykKICByZXNvbHZlID0+CiAgdHlwZSA9PgogIGhhbmRsZXIoZXZlbnQpCiAgdHlwZSA9PgogIHN0cmVhbWlmeShldmVudCwgZWxlbWVudCwgY29uZCA9IGxhc3QgPT4gdHJ1ZSkKICB0aHJvdHRsZShzdHJlYW0sIGRlbGF5KQogIGlkZW50aXR5ID0gZSA9PgogIGRpc3RpbmN0KHN0cmVhbSwgZXh0cmFjdCA9IGlkZW50aXR5KQogIHN1YnNjcmliZShzdHJlYW0sIGNhbGxiYWNrKQAAAAAAAAAAFgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "fire.js",
			"settings":
			{
				"buffer_size": 6305,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					414,
					1,
					"insert",
					{
						"characters": "let"
					},
					"BAAAAMcRAAAAAAAAyBEAAAAAAAAAAAAAyBEAAAAAAADIEQAAAAAAAAUAAABjb25zdMgRAAAAAAAAyREAAAAAAAAAAAAAyREAAAAAAADKEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxxEAAAAAAADMEQAAAAAAAAAAAAAAAPC/"
				],
				[
					419,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAANQRAAAAAAAA1REAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1BEAAAAAAADUEQAAAAAAAAAAAAAAAPC/"
				],
				[
					420,
					1,
					"insert",
					{
						"characters": " client"
					},
					"BwAAANURAAAAAAAA1hEAAAAAAAAAAAAA1hEAAAAAAADXEQAAAAAAAAAAAADXEQAAAAAAANgRAAAAAAAAAAAAANgRAAAAAAAA2REAAAAAAAAAAAAA2REAAAAAAADaEQAAAAAAAAAAAADaEQAAAAAAANsRAAAAAAAAAAAAANsRAAAAAAAA3BEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1REAAAAAAADVEQAAAAAAAAAAAAAAAPC/"
				],
				[
					421,
					6,
					"left_delete",
					null,
					"BgAAANsRAAAAAAAA2xEAAAAAAAABAAAAdNoRAAAAAAAA2hEAAAAAAAABAAAAbtkRAAAAAAAA2REAAAAAAAABAAAAZdgRAAAAAAAA2BEAAAAAAAABAAAAadcRAAAAAAAA1xEAAAAAAAABAAAAbNYRAAAAAAAA1hEAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAA3BEAAAAAAADcEQAAAAAAAAAAAAAAAPC/"
				],
				[
					422,
					1,
					"insert",
					{
						"characters": "e.clientX"
					},
					"CQAAANYRAAAAAAAA1xEAAAAAAAAAAAAA1xEAAAAAAADYEQAAAAAAAAAAAADYEQAAAAAAANkRAAAAAAAAAAAAANkRAAAAAAAA2hEAAAAAAAAAAAAA2hEAAAAAAADbEQAAAAAAAAAAAADbEQAAAAAAANwRAAAAAAAAAAAAANwRAAAAAAAA3REAAAAAAAAAAAAA3REAAAAAAADeEQAAAAAAAAAAAADeEQAAAAAAAN8RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1hEAAAAAAADWEQAAAAAAAAAAAAAAAPC/"
				],
				[
					428,
					1,
					"paste",
					null,
					"AQAAAOgRAAAAAAAA8xEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6BEAAAAAAADoEQAAAAAAAAAAAAAAAPC/"
				],
				[
					429,
					1,
					"left_delete",
					null,
					"AQAAAPIRAAAAAAAA8hEAAAAAAAABAAAAWA",
					"AQAAAAAAAAABAAAA8xEAAAAAAADzEQAAAAAAAAAAAAAAAPC/"
				],
				[
					430,
					1,
					"insert",
					{
						"characters": "Y"
					},
					"AQAAAPIRAAAAAAAA8xEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8hEAAAAAAADyEQAAAAAAAAAAAAAAAPC/"
				],
				[
					453,
					1,
					"left_delete",
					null,
					"AQAAANQRAAAAAAAA1BEAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAA1REAAAAAAADVEQAAAAAAAAAAAAAAAPC/"
				],
				[
					454,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAANQRAAAAAAAA1REAAAAAAAAAAAAA1REAAAAAAADWEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1BEAAAAAAADUEQAAAAAAAAAAAAAAAPC/"
				],
				[
					457,
					1,
					"left_delete",
					null,
					"AQAAAOkRAAAAAAAA6REAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAA6hEAAAAAAADqEQAAAAAAAAAAAAAAAPC/"
				],
				[
					458,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAOkRAAAAAAAA6hEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6REAAAAAAADpEQAAAAAAAAAAAAAAAPC/"
				],
				[
					463,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAB/FgAAaW1wb3J0IHsgY3Jvc3NraXQsIENBTlZBUyB9IGZyb20gJy4vbGliL2Nyb3Nza2l0LmpzJzsKaW1wb3J0IHsgUkdCQSwgSFNMQSB9IGZyb20gJy4vbGliL2NvbG9yLmpzJzsKaW1wb3J0IHsgTWF0cml4IH0gZnJvbSAnLi9saWIvZ2VvbS9tYXRyaXguanMnOwppbXBvcnQgeyBzdHJlYW1pZnksIG9uY2UsIHN1YnNjcmliZSB9IGZyb20gJy4vbGliL2FzeW5jL2V2ZW50cy5qcyc7Ci8vaW1wb3J0IFV0aWwgZnJvbSAnLi9saWIvdXRpbC5qcyc7CgpmdW5jdGlvbiBtYWluKCkgewogIE9iamVjdC5hc3NpZ24oZ2xvYmFsVGhpcywgeyBjcm9zc2tpdCwgUkdCQSwgSFNMQSwgVXRpbCwgTWF0cml4IH0pOwoKICBjb25zdCB3ID0gMzIwOwogIGNvbnN0IGggPSAyMDA7CgogIGNyb3Nza2l0LmluaXQoewogICAgcmVuZGVyZXI6IENBTlZBUywKICAgIHcsCiAgICBoLAogICAgYWxwaGE6IGZhbHNlCiAgfSk7CgogIGNyb3Nza2l0LmNsZWFyKCk7CiAgY3Jvc3NraXQucmVjdCh7CiAgICB4OiAwLAogICAgeTogMCwKICAgIHcsCiAgICBoLAogICAgZmlsbDogJ2JsYWNrJywKICAgIHN0cm9rZTogJ2JsYWNrJywKICAgIGFuZ2xlOiAwCiAgfSk7CgogIGNvbnN0IGJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcih3ICogKGggKyAyKSk7CiAgY29uc3QgcGFsZXR0ZSA9IENyZWF0ZVBhbGV0dGUoKTsKICBjb25zdCBwYWxldHRlSFNMID0gQ3JlYXRlUGFsZXR0ZUhTTCgpOwogIC8qY29uc3QgcGFsZXR0ZVggPSBwYWxldHRlLm1hcChjb2xvciA9PiBjb2xvci5oZXgoKSk7CiAgY29uc3QgcGFsZXR0ZTMyID0gVWludDMyQXJyYXkuZnJvbShwYWxldHRlLCBjID0+ICtjKTsqLwogIGNvbnN0IHBpeGVscyA9IEFycmF5LmZyb20oeyBsZW5ndGg6IGggKyAyIH0pLm1hcCgodiwgaSkgPT4gbmV3IFVpbnQ4Q2xhbXBlZEFycmF5KGJ1ZmZlciwgaSAqIHcsIHcpKTsKICBjb25zdCB7IGNvbnRleHQgfSA9IGNyb3Nza2l0OwogIGNvbnN0IGltYWdlID0gY29udGV4dC5jcmVhdGVJbWFnZURhdGEodywgaCk7CgogIGNvbnN0IHsgbm93LCB3YWl0Rm9yLCBhbmltYXRpb25GcmFtZSB9ID0gVXRpbDsKICBjb25zdCBmcHMgPSA1MDsKICBjb25zdCBtYXRyaXggPSBuZXcgTWF0cml4KCkudHJhbnNsYXRlKDE2MCwgMTAwKS5zY2FsZSgwLjUpOwoKICBPYmplY3QuYXNzaWduKGdsb2JhbFRoaXMsIHsKICAgIGJ1ZmZlciwKICAgIHBhbGV0dGUsCiAgICBwYWxldHRlSFNMLAogICAgcGl4ZWxzLAogICAgY29udGV4dCwKICAgIGltYWdlLAogICAgZnBzLAogICAgbWF0cml4CiAgfSk7CgogIGFzeW5jIGZ1bmN0aW9uIExvb3AoKSB7CiAgICBjb25zdCBkZWxheSA9IDEwMDAgLyBmcHM7CiAgICBjb25zdCBsb2cgPSAodCwgbmFtZSkgPT4gZ2xvYmFsVGhpcy5kb0xvZyAmJiBjb25zb2xlLmxvZyhgJHtuYW1lfSB0aW1pbmc6ICR7dC50b0ZpeGVkKDMpfW1zYCk7CiAgICBjb25zdCBmaXJlID0gKC4uLmFyZ3MpID0+IEZpcmUoLi4uYXJncyk7IC8vVXRpbC5pbnN0cnVtZW50KEZpcmUsIGxvZyk7CiAgICBjb25zdCByZWRyYXcgPSAoLi4uYXJncykgPT4gUmVkcmF3KC4uLmFyZ3MpOyAvL1V0aWwuaW5zdHJ1bWVudChSZWRyYXcsIGxvZyk7CgogICAgYXdhaXQgb25jZSh3aW5kb3csICdsb2FkJyk7CgogICAgSW5pdCgpOwoKICAgIGZvcig7OykgewogICAgICBmaXJlKCk7CiAgICAgIHJlZHJhdygpOwogICAgICBhd2FpdCBhbmltYXRpb25GcmFtZShkZWxheSk7CiAgICB9CiAgfQoKICBmdW5jdGlvbiBGaXJlKCkgewogICAgZm9yKGxldCB4ID0gMDsgeCA8IHc7IHgrKykgewogICAgICBwaXhlbHNbaF1beF0gPSAyNTUgLSAoUmFuZG9tQnl0ZSgpICUgMTI4KTsKICAgICAgcGl4ZWxzW2ggKyAxXVt4XSA9IDI1NSAtIChSYW5kb21CeXRlKCkgJSAxMjgpOwogICAgfQoKICAgIGZvcihsZXQgeSA9IDA7IHkgPCBoOyB5KyspIHsKICAgICAgZm9yKGxldCB4ID0gMDsgeCA8IHc7IHgrKykgewogICAgICAgIGNvbnN0IHN1bSA9IFsKICAgICAgICAgIHBpeGVsc1t5ICsgMV1bTW9kdWxvKHggLSAxLCB3KV0sCiAgICAgICAgICBwaXhlbHNbeSArIDFdW3hdLAogICAgICAgICAgcGl4ZWxzW3kgKyAxXVtNb2R1bG8oeCArIDEsIHcpXSwKICAgICAgICAgIHBpeGVsc1t5ICsgMl1beF0KICAgICAgICBdLnJlZHVjZSgoYSwgcCkgPT4gYSArIChwIHwgMCksIDApOwoKICAgICAgICBwaXhlbHNbeV1beF0gPSAoc3VtICogMTUpID4+PiA2OwogICAgICB9CiAgICB9CiAgfQoKICBhc3luYyBmdW5jdGlvbiBSZWRyYXcoKSB7CiAgICBjb25zdCB7IGRhdGEgfSA9IGltYWdlOwoKICAgIGxldCBpID0gMDsKICAgIGxldCB0ID0gWy4uLm1hdHJpeF07CgogICAgLyogY29udGV4dC50cmFuc2Zvcm0oLi4udCk7CiAgICBjb25zb2xlLmxvZygidDoiLCBjb250ZXh0LmN1cnJlbnRUcmFuc2Zvcm0pOwogICovCiAgICBmb3IobGV0IHkgPSAwOyB5IDwgaDsgeSsrKSB7CiAgICAgIGZvcihsZXQgeCA9IDA7IHggPCB3OyB4KyspIHsKICAgICAgICBjb25zdCBjID0gcGFsZXR0ZVtwaXhlbHNbeV1beF1dOwogICAgICAgIGRhdGFbaSsrXSA9IGMucjsKICAgICAgICBkYXRhW2krK10gPSBjLmc7CiAgICAgICAgZGF0YVtpKytdID0gYy5iOwogICAgICAgIGRhdGFbaSsrXSA9IGMuYTsKICAgICAgfQogICAgfQoKICAgIGNvbnRleHQucHV0SW1hZ2VEYXRhKGltYWdlLCAwLCAwKTsKICB9CgogIGZ1bmN0aW9uIENyZWF0ZVBhbGV0dGUoKSB7CiAgICBjb25zdCBjb2xvcnMgPSBuZXcgQXJyYXkoMjU2KTsKCiAgICBmb3IobGV0IGkgPSAwOyBpIDwgNjQ7IGkrKykgewogICAgICBjb25zdCB2YWx1ZSA9IGkgKiA0OwoKICAgICAgY29sb3JzW2ldID0gbmV3IFJHQkEodmFsdWUsIDAsIDApOyAvLyBibGFjayB0byByZWQKICAgICAgY29sb3JzW2kgKyA2NF0gPSBuZXcgUkdCQSgyNTUsIHZhbHVlLCAwKTsgLy8gcmVkIHRvIHllbGxvdwogICAgICBjb2xvcnNbaSArIDEyOF0gPSBuZXcgUkdCQSgyNTUsIDI1NSwgdmFsdWUpOyAvLyB5ZWxsb3cgdG8gd2hpdGUKICAgICAgY29sb3JzW2kgKyAxOTJdID0gbmV3IFJHQkEoMjU1LCAyNTUsIDI1NSk7IC8vIGFsbCB3aGl0ZQogICAgfQogICAgcmV0dXJuIGNvbG9yczsKICB9CgogIGZ1bmN0aW9uIENyZWF0ZVBhbGV0dGVIU0woKSB7CiAgICBjb25zdCBjb2xvcnMgPSBuZXcgQXJyYXkoMjU2KTsKCiAgICBjb25zdCBodWVzID0gWwogICAgICBuZXcgSFNMQSgwLCAxMDAsIDApLAogICAgICBuZXcgSFNMQSgwLCAxMDAsIDUwKSwKICAgICAgbmV3IEhTTEEoMzAsIDEwMCwgNTApLAogICAgICBuZXcgSFNMQSg2MCwgMTAwLCA1MCksCiAgICAgIG5ldyBIU0xBKDYwLCAxMDAsIDEwMCksCiAgICAgIG5ldyBIU0xBKDYwLCAxMDAsIDEwMCkKICAgIF07IC8qLm1hcChoc2xhID0+IGhzbGEudG9SR0JBKCkpKi8KCiAgICBjb25zdCBicmVha3BvaW50cyA9IFswLCA1MSwgODAsIDE1NCwgMjA1LCAyNTZdOwogICAgY29uc29sZS5sb2coJ2JyZWFrcG9pbnRzOicsIGJyZWFrcG9pbnRzKTsKCiAgICBmb3IobGV0IGkgPSAwOyBpIDwgMjU2OyBpKyspIHsKICAgICAgY29uc3QgaHVlID0gKHYgPT4gKHYgPT0gLTEgPyAoKSA9PiBodWVzLmxlbmd0aCAtIDIgOiB2ID0+IHYpKShicmVha3BvaW50cy5maW5kSW5kZXgoYiA9PiBpIDwgYikpOwogICAgICBjb25zdCByYW5nZSA9IGJyZWFrcG9pbnRzW2h1ZV0gLSAxIC0gYnJlYWtwb2ludHNbaHVlIC0gMV07CiAgICAgIC8vY29uc29sZS5sb2coImh1ZToiLCB7aSxodWUsIHJhbmdlfSk7CgogICAgICBjb2xvcnNbaV0gPSBIU0xBLmJsZW5kKGh1ZXNbaHVlIC0gMV0sIGh1ZXNbaHVlXSwgKGkgLSBicmVha3BvaW50c1todWUgLSAxXSkgLyByYW5nZSkudG9SR0JBKCk7CiAgICB9CiAgICByZXR1cm4gY29sb3JzOwogIH0KCiAgLy8gRm9yIHJhbmRvbSBudW1iZXJzLCB1c2UgInggPSAxODEgKiB4ICsgMzU5IiBmcm9tCiAgLy8gVG9tIERpY2tlbnMgIlJhbmRvbSBOdW1iZXIgR2VuZXJhdG9yIGZvciBNaWNyb2NvbnRyb2xsZXJzIgogIC8vIGh0dHBzOi8vd2ViLmFyY2hpdmUub3JnL3dlYi8yMDE3MDMyMzIwNDkxNy9odHRwOi8vaG9tZS5lYXJ0aGxpbmsubmV0L350ZGlja2Vucy82OGhjMTEvcmFuZG9tLzY4aGMxMXJhbmRvbS5odG1sCiAgbGV0IHNjcmF0Y2ggPSAwOwoKICBmdW5jdGlvbiBSYW5kb21CeXRlKCkgewogICAgY29uc3QgdmFsdWUgPSAxODEgKiBzY3JhdGNoICsgMzU5OwogICAgc2NyYXRjaCA9IHZhbHVlID4+PiAwOwogICAgcmV0dXJuICh2YWx1ZSA+Pj4gOCkgJiAweGZmOwogIH0KCiAgZnVuY3Rpb24gTW9kdWxvKG4sIG0pIHsKICAgIHJldHVybiAoKG4gJSBtKSArIG0pICUgbTsKICB9CgogIGxldCBlbGVtZW50LCByZWN0LCByYzsKCiAgZnVuY3Rpb24gQmxhemUoeCwgeSkgewogICAgZm9yKGxldCB0eSA9IHkgLSAxOyB0eSA8IHkgKyAxOyB0eSsrKSB7CiAgICAgIGZvcihsZXQgdHggPSB4IC0gMTsgdHggPCB4ICsgMTsgdHgrKykgewogICAgICAgIHBpeGVsc1t0eV1bdHhdID0gcmM7CiAgICAgIH0KICAgIH0KCiAgICBwaXhlbHNbeSArIDFdW3hdID0gcmM7CiAgfQoKICBmdW5jdGlvbiBNb3VzZUhhbmRsZXIoZSkgewogICAgbGV0IHsgb2Zmc2V0WCA9IGUuY2xpZW50WCwgb2Zmc2V0WT0gZS5jbGllbnRZLCB0YXJnZXQsIGJ1dHRvbnMsIHR5cGUgfSA9IGU7CgogICAgY29uc3QgeCA9IE1hdGgucm91bmQoKG9mZnNldFggKiB3KSAvIHJlY3Qud2lkdGgpOwogICAgY29uc3QgeSA9IE1hdGgucm91bmQoKG9mZnNldFkgKiBoKSAvIHJlY3QuaGVpZ2h0KTsKCiAgICAvL2NvbnNvbGUubG9nKGAke2UudHlwZX0gQCAke3h9LCR7eX1gKTsKCiAgICBpZigvKGRvd258c3RhcnQpJC8udGVzdCh0eXBlKSkgcmMgPSBwaXhlbHNbeV1beF0gPiAweDMwID8gMCA6IFJhbmRvbUJ5dGUoKSB8IDB4ODA7CgogICAgQmxhemUoeCwgeSk7CiAgfQoKICBhc3luYyBmdW5jdGlvbiogTW91c2VJdGVyYXRvcigpIHsKICAgIGZvcig7OykgewogICAgICB5aWVsZCBhd2FpdCBvbmNlKGVsZW1lbnQsICdtb3VzZWRvd24nLCAndG91Y2hzdGFydCcpOwoKICAgICAgZm9yIGF3YWl0KGxldCBldmVudCBvZiBzdHJlYW1pZnkoWydtb3VzZXVwJywgJ21vdXNlbW92ZScsICd0b3VjaGVuZCcsICd0b3VjaG1vdmUnXSwgZWxlbWVudCkpIHsKICAgICAgICB5aWVsZCBldmVudDsKICAgICAgICBpZigvKHVwfGVuZCkkLy50ZXN0KGV2ZW50LnR5cGUpKSBicmVhazsKICAgICAgfQogICAgfQogIH0KCiAgZnVuY3Rpb24gUmVzaXplSGFuZGxlcihlKSB7CiAgICByZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsKICAgIGNvbnNvbGUubG9nKCdyZWN0JywgcmVjdCk7CiAgfQoKICBPYmplY3QuYXNzaWduKGdsb2JhbFRoaXMsIHsgUmFuZG9tQnl0ZSB9KTsKCiAgZnVuY3Rpb24gSW5pdCgpIHsKICAgIHdpbmRvdy5jYW52YXMgPSBlbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignY2FudmFzJyk7CgogICAgcmVjdCA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7CgogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIFJlc2l6ZUhhbmRsZXIsIHRydWUpOwoKICAgIGNvbnN0IGhhbmRsZXIgPQogICAgICBNb3VzZUhhbmRsZXI7IC8qfHwgVXRpbC5pbnN0cnVtZW50KE1vdXNlSGFuZGxlciwgKGR1cmF0aW9uLCBuYW1lLCBhcmdzLCByZXQpID0+IGNvbnNvbGUubG9nKGBoYW5kbGVyIHRpbWU6ICR7ZHVyYXRpb259YCkpKi8KCiAgICBzdWJzY3JpYmUoTW91c2VJdGVyYXRvcigpLCBoYW5kbGVyKTsKICB9CgogIExvb3AoKTsKfQoKbWFpbigpOwoAAAAAAAAAAIAWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6hEAAAAAAADqEQAAAAAAAAAAAAAAAPC/"
				],
				[
					471,
					2,
					"left_delete",
					null,
					"AgAAAIgSAAAAAAAAiBIAAAAAAAABAAAAL4cSAAAAAAAAhxIAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAiRIAAAAAAACJEgAAAAAAAAAAAAAAAPC/"
				],
				[
					473,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAIISAAAAAAAAgxIAAAAAAAAAAAAAgxIAAAAAAACEEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAghIAAAAAAACCEgAAAAAAAAAAAAAAAEBA"
				],
				[
					475,
					1,
					"insert",
					{
						"characters": "gkl"
					},
					"AwAAAIMSAAAAAAAAhBIAAAAAAAAAAAAAhBIAAAAAAACFEgAAAAAAAAAAAACFEgAAAAAAAIYSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgxIAAAAAAACDEgAAAAAAAAAAAAAAAAAA"
				],
				[
					476,
					2,
					"left_delete",
					null,
					"AgAAAIUSAAAAAAAAhRIAAAAAAAABAAAAbIQSAAAAAAAAhBIAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAhhIAAAAAAACGEgAAAAAAAAAAAAAAAPC/"
				],
				[
					477,
					1,
					"insert",
					{
						"characters": "lobalThis.pointerEve"
					},
					"FAAAAIQSAAAAAAAAhRIAAAAAAAAAAAAAhRIAAAAAAACGEgAAAAAAAAAAAACGEgAAAAAAAIcSAAAAAAAAAAAAAIcSAAAAAAAAiBIAAAAAAAAAAAAAiBIAAAAAAACJEgAAAAAAAAAAAACJEgAAAAAAAIoSAAAAAAAAAAAAAIoSAAAAAAAAixIAAAAAAAAAAAAAixIAAAAAAACMEgAAAAAAAAAAAACMEgAAAAAAAI0SAAAAAAAAAAAAAI0SAAAAAAAAjhIAAAAAAAAAAAAAjhIAAAAAAACPEgAAAAAAAAAAAACPEgAAAAAAAJASAAAAAAAAAAAAAJASAAAAAAAAkRIAAAAAAAAAAAAAkRIAAAAAAACSEgAAAAAAAAAAAACSEgAAAAAAAJMSAAAAAAAAAAAAAJMSAAAAAAAAlBIAAAAAAAAAAAAAlBIAAAAAAACVEgAAAAAAAAAAAACVEgAAAAAAAJYSAAAAAAAAAAAAAJYSAAAAAAAAlxIAAAAAAAAAAAAAlxIAAAAAAACYEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhBIAAAAAAACEEgAAAAAAAAAAAAAAAPC/"
				],
				[
					478,
					1,
					"insert",
					{
						"characters": "nt=e;"
					},
					"BQAAAJgSAAAAAAAAmRIAAAAAAAAAAAAAmRIAAAAAAACaEgAAAAAAAAAAAACaEgAAAAAAAJsSAAAAAAAAAAAAAJsSAAAAAAAAnBIAAAAAAAAAAAAAnBIAAAAAAACdEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmBIAAAAAAACYEgAAAAAAAAAAAAAAAPC/"
				],
				[
					483,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACaFgAAaW1wb3J0IHsgY3Jvc3NraXQsIENBTlZBUyB9IGZyb20gJy4vbGliL2Nyb3Nza2l0LmpzJzsKaW1wb3J0IHsgUkdCQSwgSFNMQSB9IGZyb20gJy4vbGliL2NvbG9yLmpzJzsKaW1wb3J0IHsgTWF0cml4IH0gZnJvbSAnLi9saWIvZ2VvbS9tYXRyaXguanMnOwppbXBvcnQgeyBzdHJlYW1pZnksIG9uY2UsIHN1YnNjcmliZSB9IGZyb20gJy4vbGliL2FzeW5jL2V2ZW50cy5qcyc7Ci8vaW1wb3J0IFV0aWwgZnJvbSAnLi9saWIvdXRpbC5qcyc7CgpmdW5jdGlvbiBtYWluKCkgewogIE9iamVjdC5hc3NpZ24oZ2xvYmFsVGhpcywgeyBjcm9zc2tpdCwgUkdCQSwgSFNMQSwgVXRpbCwgTWF0cml4IH0pOwoKICBjb25zdCB3ID0gMzIwOwogIGNvbnN0IGggPSAyMDA7CgogIGNyb3Nza2l0LmluaXQoewogICAgcmVuZGVyZXI6IENBTlZBUywKICAgIHcsCiAgICBoLAogICAgYWxwaGE6IGZhbHNlCiAgfSk7CgogIGNyb3Nza2l0LmNsZWFyKCk7CiAgY3Jvc3NraXQucmVjdCh7CiAgICB4OiAwLAogICAgeTogMCwKICAgIHcsCiAgICBoLAogICAgZmlsbDogJ2JsYWNrJywKICAgIHN0cm9rZTogJ2JsYWNrJywKICAgIGFuZ2xlOiAwCiAgfSk7CgogIGNvbnN0IGJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcih3ICogKGggKyAyKSk7CiAgY29uc3QgcGFsZXR0ZSA9IENyZWF0ZVBhbGV0dGUoKTsKICBjb25zdCBwYWxldHRlSFNMID0gQ3JlYXRlUGFsZXR0ZUhTTCgpOwogIC8qY29uc3QgcGFsZXR0ZVggPSBwYWxldHRlLm1hcChjb2xvciA9PiBjb2xvci5oZXgoKSk7CiAgY29uc3QgcGFsZXR0ZTMyID0gVWludDMyQXJyYXkuZnJvbShwYWxldHRlLCBjID0+ICtjKTsqLwogIGNvbnN0IHBpeGVscyA9IEFycmF5LmZyb20oeyBsZW5ndGg6IGggKyAyIH0pLm1hcCgodiwgaSkgPT4gbmV3IFVpbnQ4Q2xhbXBlZEFycmF5KGJ1ZmZlciwgaSAqIHcsIHcpKTsKICBjb25zdCB7IGNvbnRleHQgfSA9IGNyb3Nza2l0OwogIGNvbnN0IGltYWdlID0gY29udGV4dC5jcmVhdGVJbWFnZURhdGEodywgaCk7CgogIGNvbnN0IHsgbm93LCB3YWl0Rm9yLCBhbmltYXRpb25GcmFtZSB9ID0gVXRpbDsKICBjb25zdCBmcHMgPSA1MDsKICBjb25zdCBtYXRyaXggPSBuZXcgTWF0cml4KCkudHJhbnNsYXRlKDE2MCwgMTAwKS5zY2FsZSgwLjUpOwoKICBPYmplY3QuYXNzaWduKGdsb2JhbFRoaXMsIHsKICAgIGJ1ZmZlciwKICAgIHBhbGV0dGUsCiAgICBwYWxldHRlSFNMLAogICAgcGl4ZWxzLAogICAgY29udGV4dCwKICAgIGltYWdlLAogICAgZnBzLAogICAgbWF0cml4CiAgfSk7CgogIGFzeW5jIGZ1bmN0aW9uIExvb3AoKSB7CiAgICBjb25zdCBkZWxheSA9IDEwMDAgLyBmcHM7CiAgICBjb25zdCBsb2cgPSAodCwgbmFtZSkgPT4gZ2xvYmFsVGhpcy5kb0xvZyAmJiBjb25zb2xlLmxvZyhgJHtuYW1lfSB0aW1pbmc6ICR7dC50b0ZpeGVkKDMpfW1zYCk7CiAgICBjb25zdCBmaXJlID0gKC4uLmFyZ3MpID0+IEZpcmUoLi4uYXJncyk7IC8vVXRpbC5pbnN0cnVtZW50KEZpcmUsIGxvZyk7CiAgICBjb25zdCByZWRyYXcgPSAoLi4uYXJncykgPT4gUmVkcmF3KC4uLmFyZ3MpOyAvL1V0aWwuaW5zdHJ1bWVudChSZWRyYXcsIGxvZyk7CgogICAgYXdhaXQgb25jZSh3aW5kb3csICdsb2FkJyk7CgogICAgSW5pdCgpOwoKICAgIGZvcig7OykgewogICAgICBmaXJlKCk7CiAgICAgIHJlZHJhdygpOwogICAgICBhd2FpdCBhbmltYXRpb25GcmFtZShkZWxheSk7CiAgICB9CiAgfQoKICBmdW5jdGlvbiBGaXJlKCkgewogICAgZm9yKGxldCB4ID0gMDsgeCA8IHc7IHgrKykgewogICAgICBwaXhlbHNbaF1beF0gPSAyNTUgLSAoUmFuZG9tQnl0ZSgpICUgMTI4KTsKICAgICAgcGl4ZWxzW2ggKyAxXVt4XSA9IDI1NSAtIChSYW5kb21CeXRlKCkgJSAxMjgpOwogICAgfQoKICAgIGZvcihsZXQgeSA9IDA7IHkgPCBoOyB5KyspIHsKICAgICAgZm9yKGxldCB4ID0gMDsgeCA8IHc7IHgrKykgewogICAgICAgIGNvbnN0IHN1bSA9IFsKICAgICAgICAgIHBpeGVsc1t5ICsgMV1bTW9kdWxvKHggLSAxLCB3KV0sCiAgICAgICAgICBwaXhlbHNbeSArIDFdW3hdLAogICAgICAgICAgcGl4ZWxzW3kgKyAxXVtNb2R1bG8oeCArIDEsIHcpXSwKICAgICAgICAgIHBpeGVsc1t5ICsgMl1beF0KICAgICAgICBdLnJlZHVjZSgoYSwgcCkgPT4gYSArIChwIHwgMCksIDApOwoKICAgICAgICBwaXhlbHNbeV1beF0gPSAoc3VtICogMTUpID4+PiA2OwogICAgICB9CiAgICB9CiAgfQoKICBhc3luYyBmdW5jdGlvbiBSZWRyYXcoKSB7CiAgICBjb25zdCB7IGRhdGEgfSA9IGltYWdlOwoKICAgIGxldCBpID0gMDsKICAgIGxldCB0ID0gWy4uLm1hdHJpeF07CgogICAgLyogY29udGV4dC50cmFuc2Zvcm0oLi4udCk7CiAgICBjb25zb2xlLmxvZygidDoiLCBjb250ZXh0LmN1cnJlbnRUcmFuc2Zvcm0pOwogICovCiAgICBmb3IobGV0IHkgPSAwOyB5IDwgaDsgeSsrKSB7CiAgICAgIGZvcihsZXQgeCA9IDA7IHggPCB3OyB4KyspIHsKICAgICAgICBjb25zdCBjID0gcGFsZXR0ZVtwaXhlbHNbeV1beF1dOwogICAgICAgIGRhdGFbaSsrXSA9IGMucjsKICAgICAgICBkYXRhW2krK10gPSBjLmc7CiAgICAgICAgZGF0YVtpKytdID0gYy5iOwogICAgICAgIGRhdGFbaSsrXSA9IGMuYTsKICAgICAgfQogICAgfQoKICAgIGNvbnRleHQucHV0SW1hZ2VEYXRhKGltYWdlLCAwLCAwKTsKICB9CgogIGZ1bmN0aW9uIENyZWF0ZVBhbGV0dGUoKSB7CiAgICBjb25zdCBjb2xvcnMgPSBuZXcgQXJyYXkoMjU2KTsKCiAgICBmb3IobGV0IGkgPSAwOyBpIDwgNjQ7IGkrKykgewogICAgICBjb25zdCB2YWx1ZSA9IGkgKiA0OwoKICAgICAgY29sb3JzW2ldID0gbmV3IFJHQkEodmFsdWUsIDAsIDApOyAvLyBibGFjayB0byByZWQKICAgICAgY29sb3JzW2kgKyA2NF0gPSBuZXcgUkdCQSgyNTUsIHZhbHVlLCAwKTsgLy8gcmVkIHRvIHllbGxvdwogICAgICBjb2xvcnNbaSArIDEyOF0gPSBuZXcgUkdCQSgyNTUsIDI1NSwgdmFsdWUpOyAvLyB5ZWxsb3cgdG8gd2hpdGUKICAgICAgY29sb3JzW2kgKyAxOTJdID0gbmV3IFJHQkEoMjU1LCAyNTUsIDI1NSk7IC8vIGFsbCB3aGl0ZQogICAgfQogICAgcmV0dXJuIGNvbG9yczsKICB9CgogIGZ1bmN0aW9uIENyZWF0ZVBhbGV0dGVIU0woKSB7CiAgICBjb25zdCBjb2xvcnMgPSBuZXcgQXJyYXkoMjU2KTsKCiAgICBjb25zdCBodWVzID0gWwogICAgICBuZXcgSFNMQSgwLCAxMDAsIDApLAogICAgICBuZXcgSFNMQSgwLCAxMDAsIDUwKSwKICAgICAgbmV3IEhTTEEoMzAsIDEwMCwgNTApLAogICAgICBuZXcgSFNMQSg2MCwgMTAwLCA1MCksCiAgICAgIG5ldyBIU0xBKDYwLCAxMDAsIDEwMCksCiAgICAgIG5ldyBIU0xBKDYwLCAxMDAsIDEwMCkKICAgIF07IC8qLm1hcChoc2xhID0+IGhzbGEudG9SR0JBKCkpKi8KCiAgICBjb25zdCBicmVha3BvaW50cyA9IFswLCA1MSwgODAsIDE1NCwgMjA1LCAyNTZdOwogICAgY29uc29sZS5sb2coJ2JyZWFrcG9pbnRzOicsIGJyZWFrcG9pbnRzKTsKCiAgICBmb3IobGV0IGkgPSAwOyBpIDwgMjU2OyBpKyspIHsKICAgICAgY29uc3QgaHVlID0gKHYgPT4gKHYgPT0gLTEgPyAoKSA9PiBodWVzLmxlbmd0aCAtIDIgOiB2ID0+IHYpKShicmVha3BvaW50cy5maW5kSW5kZXgoYiA9PiBpIDwgYikpOwogICAgICBjb25zdCByYW5nZSA9IGJyZWFrcG9pbnRzW2h1ZV0gLSAxIC0gYnJlYWtwb2ludHNbaHVlIC0gMV07CiAgICAgIC8vY29uc29sZS5sb2coImh1ZToiLCB7aSxodWUsIHJhbmdlfSk7CgogICAgICBjb2xvcnNbaV0gPSBIU0xBLmJsZW5kKGh1ZXNbaHVlIC0gMV0sIGh1ZXNbaHVlXSwgKGkgLSBicmVha3BvaW50c1todWUgLSAxXSkgLyByYW5nZSkudG9SR0JBKCk7CiAgICB9CiAgICByZXR1cm4gY29sb3JzOwogIH0KCiAgLy8gRm9yIHJhbmRvbSBudW1iZXJzLCB1c2UgInggPSAxODEgKiB4ICsgMzU5IiBmcm9tCiAgLy8gVG9tIERpY2tlbnMgIlJhbmRvbSBOdW1iZXIgR2VuZXJhdG9yIGZvciBNaWNyb2NvbnRyb2xsZXJzIgogIC8vIGh0dHBzOi8vd2ViLmFyY2hpdmUub3JnL3dlYi8yMDE3MDMyMzIwNDkxNy9odHRwOi8vaG9tZS5lYXJ0aGxpbmsubmV0L350ZGlja2Vucy82OGhjMTEvcmFuZG9tLzY4aGMxMXJhbmRvbS5odG1sCiAgbGV0IHNjcmF0Y2ggPSAwOwoKICBmdW5jdGlvbiBSYW5kb21CeXRlKCkgewogICAgY29uc3QgdmFsdWUgPSAxODEgKiBzY3JhdGNoICsgMzU5OwogICAgc2NyYXRjaCA9IHZhbHVlID4+PiAwOwogICAgcmV0dXJuICh2YWx1ZSA+Pj4gOCkgJiAweGZmOwogIH0KCiAgZnVuY3Rpb24gTW9kdWxvKG4sIG0pIHsKICAgIHJldHVybiAoKG4gJSBtKSArIG0pICUgbTsKICB9CgogIGxldCBlbGVtZW50LCByZWN0LCByYzsKCiAgZnVuY3Rpb24gQmxhemUoeCwgeSkgewogICAgZm9yKGxldCB0eSA9IHkgLSAxOyB0eSA8IHkgKyAxOyB0eSsrKSB7CiAgICAgIGZvcihsZXQgdHggPSB4IC0gMTsgdHggPCB4ICsgMTsgdHgrKykgewogICAgICAgIHBpeGVsc1t0eV1bdHhdID0gcmM7CiAgICAgIH0KICAgIH0KCiAgICBwaXhlbHNbeSArIDFdW3hdID0gcmM7CiAgfQoKICBmdW5jdGlvbiBNb3VzZUhhbmRsZXIoZSkgewogICAgbGV0IHsgb2Zmc2V0WCA9IGUuY2xpZW50WCwgb2Zmc2V0WSA9IGUuY2xpZW50WSwgdGFyZ2V0LCBidXR0b25zLCB0eXBlIH0gPSBlOwoKICAgIGNvbnN0IHggPSBNYXRoLnJvdW5kKChvZmZzZXRYICogdykgLyByZWN0LndpZHRoKTsKICAgIGNvbnN0IHkgPSBNYXRoLnJvdW5kKChvZmZzZXRZICogaCkgLyByZWN0LmhlaWdodCk7CgpnbG9iYWxUaGlzLnBvaW50ZXJFdmVudD1lOwoKICAgIGNvbnNvbGUubG9nKGAke2UudHlwZX0gQCAke3h9LCR7eX1gKTsKCiAgICBpZigvKGRvd258c3RhcnQpJC8udGVzdCh0eXBlKSkgcmMgPSBwaXhlbHNbeV1beF0gPiAweDMwID8gMCA6IFJhbmRvbUJ5dGUoKSB8IDB4ODA7CgogICAgQmxhemUoeCwgeSk7CiAgfQoKICBhc3luYyBmdW5jdGlvbiogTW91c2VJdGVyYXRvcigpIHsKICAgIGZvcig7OykgewogICAgICB5aWVsZCBhd2FpdCBvbmNlKGVsZW1lbnQsICdtb3VzZWRvd24nLCAndG91Y2hzdGFydCcpOwoKICAgICAgZm9yIGF3YWl0KGxldCBldmVudCBvZiBzdHJlYW1pZnkoWydtb3VzZXVwJywgJ21vdXNlbW92ZScsICd0b3VjaGVuZCcsICd0b3VjaG1vdmUnXSwgZWxlbWVudCkpIHsKICAgICAgICB5aWVsZCBldmVudDsKICAgICAgICBpZigvKHVwfGVuZCkkLy50ZXN0KGV2ZW50LnR5cGUpKSBicmVhazsKICAgICAgfQogICAgfQogIH0KCiAgZnVuY3Rpb24gUmVzaXplSGFuZGxlcihlKSB7CiAgICByZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsKICAgIGNvbnNvbGUubG9nKCdyZWN0JywgcmVjdCk7CiAgfQoKICBPYmplY3QuYXNzaWduKGdsb2JhbFRoaXMsIHsgUmFuZG9tQnl0ZSB9KTsKCiAgZnVuY3Rpb24gSW5pdCgpIHsKICAgIHdpbmRvdy5jYW52YXMgPSBlbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignY2FudmFzJyk7CgogICAgcmVjdCA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7CgogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIFJlc2l6ZUhhbmRsZXIsIHRydWUpOwoKICAgIGNvbnN0IGhhbmRsZXIgPQogICAgICBNb3VzZUhhbmRsZXI7IC8qfHwgVXRpbC5pbnN0cnVtZW50KE1vdXNlSGFuZGxlciwgKGR1cmF0aW9uLCBuYW1lLCBhcmdzLCByZXQpID0+IGNvbnNvbGUubG9nKGBoYW5kbGVyIHRpbWU6ICR7ZHVyYXRpb259YCkpKi8KCiAgICBzdWJzY3JpYmUoTW91c2VJdGVyYXRvcigpLCBoYW5kbGVyKTsKICB9CgogIExvb3AoKTsKfQoKbWFpbigpOwoAAAAAAAAAAKAWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnRIAAAAAAACdEgAAAAAAAAAAAAAAAPC/"
				],
				[
					620,
					1,
					"paste",
					null,
					"AgAAABQSAAAAAAAAxxMAAAAAAAAAAAAAxxMAAAAAAADHEwAAAAAAACgBAAAKICAgIGNvbnN0IHggPSBNYXRoLnJvdW5kKChvZmZzZXRYICogdykgLyByZWN0LndpZHRoKTsKICAgIGNvbnN0IHkgPSBNYXRoLnJvdW5kKChvZmZzZXRZICogaCkgLyByZWN0LmhlaWdodCk7CgogICAgZ2xvYmFsVGhpcy5wb2ludGVyRXZlbnQgPSBlOwoKICAgIGNvbnNvbGUubG9nKGAke2UudHlwZX0gQCAke3h9LCR7eX1gKTsKCiAgICBpZigvKGRvd258c3RhcnQpJC8udGVzdCh0eXBlKSkgcmMgPSBwaXhlbHNbeV1beF0gPiAweDMwID8gMCA6IFJhbmRvbUJ5dGUoKSB8IDB4ODA7CgogICAgQmxhemUoeCwgeSk7CiAgfQ",
					"AQAAAAAAAAABAAAAFBIAAAAAAAA8EwAAAAAAAAAAAAAAAPC/"
				],
				[
					678,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAPQSAAAAAAAA9RIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9BIAAAAAAAD0EgAAAAAAAAAAAAAAAPC/"
				],
				[
					679,
					1,
					"insert",
					{
						"characters": "\nconst"
					},
					"CQAAAPUSAAAAAAAA9hIAAAAAAAAAAAAA9hIAAAAAAAD8EgAAAAAAAAAAAAD2EgAAAAAAAPYSAAAAAAAABgAAACAgICAgIPYSAAAAAAAA/hIAAAAAAAAAAAAA/hIAAAAAAAD/EgAAAAAAAAAAAAD/EgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAARMAAAAAAAAAAAAAARMAAAAAAAACEwAAAAAAAAAAAAACEwAAAAAAAAMTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9RIAAAAAAAD1EgAAAAAAAAAAAAAAAPC/"
				],
				[
					680,
					1,
					"insert",
					{
						"characters": " {clientX,c"
					},
					"CwAAAAMTAAAAAAAABBMAAAAAAAAAAAAABBMAAAAAAAAFEwAAAAAAAAAAAAAFEwAAAAAAAAYTAAAAAAAAAAAAAAYTAAAAAAAABxMAAAAAAAAAAAAABxMAAAAAAAAIEwAAAAAAAAAAAAAIEwAAAAAAAAkTAAAAAAAAAAAAAAkTAAAAAAAAChMAAAAAAAAAAAAAChMAAAAAAAALEwAAAAAAAAAAAAALEwAAAAAAAAwTAAAAAAAAAAAAAAwTAAAAAAAADRMAAAAAAAAAAAAADRMAAAAAAAAOEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAxMAAAAAAAADEwAAAAAAAAAAAAAAAPC/"
				],
				[
					681,
					1,
					"insert",
					{
						"characters": "lientY"
					},
					"BgAAAA4TAAAAAAAADxMAAAAAAAAAAAAADxMAAAAAAAAQEwAAAAAAAAAAAAAQEwAAAAAAABETAAAAAAAAAAAAABETAAAAAAAAEhMAAAAAAAAAAAAAEhMAAAAAAAATEwAAAAAAAAAAAAATEwAAAAAAABQTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADhMAAAAAAAAOEwAAAAAAAAAAAAAAAPC/"
				],
				[
					683,
					1,
					"insert",
					{
						"characters": ":offsetX"
					},
					"CAAAAAwTAAAAAAAADRMAAAAAAAAAAAAADRMAAAAAAAAOEwAAAAAAAAAAAAAOEwAAAAAAAA8TAAAAAAAAAAAAAA8TAAAAAAAAEBMAAAAAAAAAAAAAEBMAAAAAAAAREwAAAAAAAAAAAAAREwAAAAAAABITAAAAAAAAAAAAABITAAAAAAAAExMAAAAAAAAAAAAAExMAAAAAAAAUEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADBMAAAAAAAAMEwAAAAAAAAAAAAAAAPC/"
				],
				[
					687,
					1,
					"insert",
					{
						"characters": ":offse5ty"
					},
					"CQAAABwTAAAAAAAAHRMAAAAAAAAAAAAAHRMAAAAAAAAeEwAAAAAAAAAAAAAeEwAAAAAAAB8TAAAAAAAAAAAAAB8TAAAAAAAAIBMAAAAAAAAAAAAAIBMAAAAAAAAhEwAAAAAAAAAAAAAhEwAAAAAAACITAAAAAAAAAAAAACITAAAAAAAAIxMAAAAAAAAAAAAAIxMAAAAAAAAkEwAAAAAAAAAAAAAkEwAAAAAAACUTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHBMAAAAAAAAcEwAAAAAAAAAAAAAAAPC/"
				],
				[
					688,
					3,
					"left_delete",
					null,
					"AwAAACQTAAAAAAAAJBMAAAAAAAABAAAAeSMTAAAAAAAAIxMAAAAAAAABAAAAdCITAAAAAAAAIhMAAAAAAAABAAAANQ",
					"AQAAAAAAAAABAAAAJRMAAAAAAAAlEwAAAAAAAAAAAAAAAPC/"
				],
				[
					689,
					1,
					"insert",
					{
						"characters": "tY}=touch;"
					},
					"CgAAACITAAAAAAAAIxMAAAAAAAAAAAAAIxMAAAAAAAAkEwAAAAAAAAAAAAAkEwAAAAAAACUTAAAAAAAAAAAAACUTAAAAAAAAJhMAAAAAAAAAAAAAJhMAAAAAAAAnEwAAAAAAAAAAAAAnEwAAAAAAACgTAAAAAAAAAAAAACgTAAAAAAAAKRMAAAAAAAAAAAAAKRMAAAAAAAAqEwAAAAAAAAAAAAAqEwAAAAAAACsTAAAAAAAAAAAAACsTAAAAAAAALBMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIhMAAAAAAAAiEwAAAAAAAAAAAAAAAPC/"
				],
				[
					690,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACwTAAAAAAAALRMAAAAAAAAAAAAALRMAAAAAAAA1EwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALBMAAAAAAAAsEwAAAAAAAAAAAAAAAPC/"
				],
				[
					699,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AgAAAFMTAAAAAAAAVBMAAAAAAAAAAAAAVBMAAAAAAABUEwAAAAAAAAUAAAB0b3VjaA",
					"AQAAAAAAAAABAAAAUxMAAAAAAABYEwAAAAAAAAAAAAAAAPC/"
				],
				[
					700,
					1,
					"insert",
					{
						"characters": "offsetX,offset"
					},
					"DgAAAFQTAAAAAAAAVRMAAAAAAAAAAAAAVRMAAAAAAABWEwAAAAAAAAAAAABWEwAAAAAAAFcTAAAAAAAAAAAAAFcTAAAAAAAAWBMAAAAAAAAAAAAAWBMAAAAAAABZEwAAAAAAAAAAAABZEwAAAAAAAFoTAAAAAAAAAAAAAFoTAAAAAAAAWxMAAAAAAAAAAAAAWxMAAAAAAABcEwAAAAAAAAAAAABcEwAAAAAAAF0TAAAAAAAAAAAAAF0TAAAAAAAAXhMAAAAAAAAAAAAAXhMAAAAAAABfEwAAAAAAAAAAAABfEwAAAAAAAGATAAAAAAAAAAAAAGATAAAAAAAAYRMAAAAAAAAAAAAAYRMAAAAAAABiEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVBMAAAAAAABUEwAAAAAAAAAAAAAAAPC/"
				],
				[
					701,
					1,
					"insert",
					{
						"characters": "Y})"
					},
					"AwAAAGITAAAAAAAAYxMAAAAAAAAAAAAAYxMAAAAAAABkEwAAAAAAAAAAAABkEwAAAAAAAGUTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYhMAAAAAAABiEwAAAAAAAAAAAAAAAPC/"
				],
				[
					702,
					1,
					"left_delete",
					null,
					"AQAAAGQTAAAAAAAAZBMAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAZRMAAAAAAABlEwAAAAAAAAAAAAAAAPC/"
				],
				[
					718,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAGkTAAAAAAAAahMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaRMAAAAAAABpEwAAAAAAAAAAAAAAAPC/"
				],
				[
					721,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAahMAAAAAAABqEwAAAAAAAAAAAAAAAPC/"
				],
				[
					749,
					5,
					"left_delete",
					null,
					"BQAAANkRAAAAAAAA2REAAAAAAAAHAAAAY2xpZW50WNgRAAAAAAAA2BEAAAAAAAABAAAALtcRAAAAAAAA1xEAAAAAAAABAAAAZdYRAAAAAAAA1hEAAAAAAAABAAAAINURAAAAAAAA1REAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAA2REAAAAAAADgEQAAAAAAAAAAAAAAAPC/"
				],
				[
					752,
					1,
					"left_delete",
					null,
					"AQAAAN8RAAAAAAAA3xEAAAAAAAALAAAAPSBlLmNsaWVudFk",
					"AQAAAAAAAAABAAAA3xEAAAAAAADqEQAAAAAAAAAAAAAAAPC/"
				],
				[
					810,
					1,
					"right_delete",
					null,
					"AQAAADMTAAAAAAAAMxMAAAAAAAAQAAAAT2JqZWN0LmFzc2lnbihlLA",
					"AQAAAAAAAAABAAAAMxMAAAAAAABDEwAAAAAAAAAAAAAAAPC/"
				],
				[
					820,
					1,
					"insert",
					{
						"characters": "type,m"
					},
					"BgAAADYTAAAAAAAANxMAAAAAAAAAAAAANxMAAAAAAAA4EwAAAAAAAAAAAAA4EwAAAAAAADkTAAAAAAAAAAAAADkTAAAAAAAAOhMAAAAAAAAAAAAAOhMAAAAAAAA7EwAAAAAAAAAAAAA7EwAAAAAAADwTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANhMAAAAAAAA2EwAAAAAAAAAAAAAAAGhA"
				],
				[
					821,
					1,
					"left_delete",
					null,
					"AQAAADsTAAAAAAAAOxMAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAPBMAAAAAAAA8EwAAAAAAAAAAAAAAAPC/"
				],
				[
					822,
					1,
					"insert",
					{
						"characters": "target,buttons,"
					},
					"DwAAADsTAAAAAAAAPBMAAAAAAAAAAAAAPBMAAAAAAAA9EwAAAAAAAAAAAAA9EwAAAAAAAD4TAAAAAAAAAAAAAD4TAAAAAAAAPxMAAAAAAAAAAAAAPxMAAAAAAABAEwAAAAAAAAAAAABAEwAAAAAAAEETAAAAAAAAAAAAAEETAAAAAAAAQhMAAAAAAAAAAAAAQhMAAAAAAABDEwAAAAAAAAAAAABDEwAAAAAAAEQTAAAAAAAAAAAAAEQTAAAAAAAARRMAAAAAAAAAAAAARRMAAAAAAABGEwAAAAAAAAAAAABGEwAAAAAAAEcTAAAAAAAAAAAAAEcTAAAAAAAASBMAAAAAAAAAAAAASBMAAAAAAABJEwAAAAAAAAAAAABJEwAAAAAAAEoTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxMAAAAAAAA7EwAAAAAAAAAAAAAAAPC/"
				],
				[
					829,
					1,
					"right_delete",
					null,
					"AQAAAF0TAAAAAAAAXRMAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAXRMAAAAAAABdEwAAAAAAAAAAAAAAAPC/"
				],
				[
					838,
					1,
					"insert",
					{
						"characters": "[-"
					},
					"AgAAANMSAAAAAAAA1BIAAAAAAAAAAAAA1BIAAAAAAADVEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0xIAAAAAAADTEgAAAAAAAAAAAAAAAPC/"
				],
				[
					839,
					1,
					"left_delete",
					null,
					"AQAAANQSAAAAAAAA1BIAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAA1RIAAAAAAADVEgAAAAAAAAAAAAAAAPC/"
				],
				[
					840,
					1,
					"insert",
					{
						"characters": "..."
					},
					"AwAAANQSAAAAAAAA1RIAAAAAAAAAAAAA1RIAAAAAAADWEgAAAAAAAAAAAADWEgAAAAAAANcSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1BIAAAAAAADUEgAAAAAAAAAAAAAAAPC/"
				],
				[
					846,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAAOASAAAAAAAA4RIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4BIAAAAAAADgEgAAAAAAAAAAAAAAAPC/"
				],
				[
					852,
					1,
					"insert",
					{
						"characters": ":y"
					},
					"AgAAANQRAAAAAAAA1REAAAAAAAAAAAAA1REAAAAAAADWEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1BEAAAAAAADUEQAAAAAAAAAAAAAAAPC/"
				],
				[
					853,
					1,
					"left_delete",
					null,
					"AQAAANURAAAAAAAA1REAAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAA1hEAAAAAAADWEQAAAAAAAAAAAAAAAPC/"
				],
				[
					854,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAANURAAAAAAAA1hEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1REAAAAAAADVEQAAAAAAAAAAAAAAAPC/"
				],
				[
					856,
					1,
					"insert",
					{
						"characters": ":y"
					},
					"AgAAAOARAAAAAAAA4REAAAAAAAAAAAAA4REAAAAAAADiEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4BEAAAAAAADgEQAAAAAAAAAAAAAAAPC/"
				],
				[
					865,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA4hEAAAAAAADiEQAAAAAAAAAAAAAAAPC/"
				],
				[
					891,
					3,
					"left_delete",
					null,
					"AwAAANYRAAAAAAAA1hEAAAAAAAABAAAAeNURAAAAAAAA1REAAAAAAAABAAAAINQRAAAAAAAA1BEAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAA1xEAAAAAAADXEQAAAAAAAAAAAAAAAPC/"
				],
				[
					893,
					3,
					"right_delete",
					null,
					"AwAAAN0RAAAAAAAA3REAAAAAAAABAAAAOt0RAAAAAAAA3REAAAAAAAABAAAAIN0RAAAAAAAA3REAAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAA3REAAAAAAADdEQAAAAAAAAAAAAAAAPC/"
				],
				[
					937,
					1,
					"paste",
					null,
					"AQAAAL8SAAAAAAAA6RIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvxIAAAAAAAC/EgAAAAAAAAAAAAAAAPC/"
				],
				[
					941,
					1,
					"left_delete",
					null,
					"AQAAANkSAAAAAAAA2RIAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA2hIAAAAAAADaEgAAAAAAAAAAAAAAAPC/"
				],
				[
					942,
					1,
					"insert",
					{
						"characters": "`,"
					},
					"AgAAANkSAAAAAAAA2hIAAAAAAAAAAAAA2hIAAAAAAADbEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2RIAAAAAAADZEgAAAAAAAAAAAAAAAPC/"
				],
				[
					943,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANsSAAAAAAAA3BIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2xIAAAAAAADbEgAAAAAAAAAAAAAAAPC/"
				],
				[
					946,
					1,
					"cut",
					null,
					"AQAAANwSAAAAAAAA3BIAAAAAAAAMAAAAQCAke3h9LCR7eX1g",
					"AQAAAAAAAAABAAAA3BIAAAAAAADoEgAAAAAAAAAAAAAAAPC/"
				],
				[
					947,
					1,
					"insert",
					{
						"characters": "...e.touches"
					},
					"DAAAANwSAAAAAAAA3RIAAAAAAAAAAAAA3RIAAAAAAADeEgAAAAAAAAAAAADeEgAAAAAAAN8SAAAAAAAAAAAAAN8SAAAAAAAA4BIAAAAAAAAAAAAA4BIAAAAAAADhEgAAAAAAAAAAAADhEgAAAAAAAOISAAAAAAAAAAAAAOISAAAAAAAA4xIAAAAAAAAAAAAA4xIAAAAAAADkEgAAAAAAAAAAAADkEgAAAAAAAOUSAAAAAAAAAAAAAOUSAAAAAAAA5hIAAAAAAAAAAAAA5hIAAAAAAADnEgAAAAAAAAAAAADnEgAAAAAAAOgSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3BIAAAAAAADcEgAAAAAAAAAAAAAAAPC/"
				],
				[
					954,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA6BIAAAAAAADoEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1027,
					1,
					"insert",
					{
						"characters": "'toczu"
					},
					"BwAAAJQSAAAAAAAAlRIAAAAAAAAAAAAAlRIAAAAAAACVEgAAAAAAACIAAAB4ID09PSB1bmRlZmluZWQgfHwgeSA9PT0gdW5kZWZpbmVklRIAAAAAAACWEgAAAAAAAAAAAACWEgAAAAAAAJcSAAAAAAAAAAAAAJcSAAAAAAAAmBIAAAAAAAAAAAAAmBIAAAAAAACZEgAAAAAAAAAAAACZEgAAAAAAAJoSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlBIAAAAAAAC2EgAAAAAAAAAAAAAAAPC/"
				],
				[
					1028,
					3,
					"left_delete",
					null,
					"AwAAAJkSAAAAAAAAmRIAAAAAAAABAAAAdZgSAAAAAAAAmBIAAAAAAAABAAAAepcSAAAAAAAAlxIAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAmhIAAAAAAACaEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1029,
					1,
					"insert",
					{
						"characters": "uches'"
					},
					"BgAAAJcSAAAAAAAAmBIAAAAAAAAAAAAAmBIAAAAAAACZEgAAAAAAAAAAAACZEgAAAAAAAJoSAAAAAAAAAAAAAJoSAAAAAAAAmxIAAAAAAAAAAAAAmxIAAAAAAACcEgAAAAAAAAAAAACcEgAAAAAAAJ0SAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlxIAAAAAAACXEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1030,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAAJ0SAAAAAAAAnhIAAAAAAAAAAAAAnhIAAAAAAACfEgAAAAAAAAAAAACfEgAAAAAAAKASAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnRIAAAAAAACdEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1031,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAKASAAAAAAAAoRIAAAAAAAAAAAAAoRIAAAAAAACiEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoBIAAAAAAACgEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1066,
					1,
					"cut",
					null,
					"AQAAAIwSAAAAAAAAjBIAAAAAAAAOAQAACiAgICBpZigndG91Y2hlcycgaW4gZSkgewogICAgICBjb25zb2xlLmxvZyhgJHtlLnR5cGV9YCwgLi4uZS50b3VjaGVzKTsKICAgICAgZm9yKGxldCB0b3VjaCBvZiBbLi4uZS50b3VjaGVzXSkgewogICAgICAgIGNvbnN0IHsgY2xpZW50WDogb2Zmc2V0WCwgY2xpZW50WTogb2Zmc2V0WSB9ID0gdG91Y2g7CiAgICAgICAgTW91c2VIYW5kbGVyKHsgdHlwZSwgdGFyZ2V0LCBidXR0b25zLCBvZmZzZXRYLCBvZmZzZXRZIH0pOwogICAgICB9CiAgICAgIHJldHVybjsKICAgIH0K",
					"AQAAAAAAAAABAAAAjBIAAAAAAACaEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1071,
					1,
					"paste",
					null,
					"AQAAAPwRAAAAAAAAChMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/BEAAAAAAAD8EQAAAAAAAAAAAAAAAPC/"
				],
				[
					1072,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAoTAAAAAAAACxMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAChMAAAAAAAAKEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1075,
					1,
					"left_delete",
					null,
					"AQAAAAoTAAAAAAAAChMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAACxMAAAAAAAALEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1086,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAACUTAAAAAAAAJhMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJRMAAAAAAAAlEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1091,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAACYTAAAAAAAAJxMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJhMAAAAAAAAmEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1094,
					1,
					"insert",
					{
						"characters": "e."
					},
					"AgAAAF0TAAAAAAAAXhMAAAAAAAAAAAAAXhMAAAAAAABfEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXRMAAAAAAABdEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1102,
					1,
					"right_delete",
					null,
					"AQAAAMwRAAAAAAAAzBEAAAAAAAASAAAAIG9mZnNldFgsIG9mZnNldFks",
					"AQAAAAAAAAABAAAAzBEAAAAAAADeEQAAAAAAAAAAAAAAAGtA"
				],
				[
					1221,
					1,
					"paste",
					null,
					"AQAAAPgSAAAAAAAAJhMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+BIAAAAAAAD4EgAAAAAAAAAAAAAAAPC/"
				],
				[
					1228,
					1,
					"cut",
					null,
					"AQAAAPgSAAAAAAAA+BIAAAAAAAAuAAAAICAgICAgY29uc29sZS5sb2coYCR7ZS50eXBlfWAsIC4uLmUudG91Y2hlcyk7Cg",
					"AQAAAAAAAAABAAAA+BIAAAAAAAAmEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1233,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAG8TAAAAAAAAcBMAAAAAAAAAAAAAcBMAAAAAAABxEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbxMAAAAAAABvEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1270,
					1,
					"cut",
					null,
					"AQAAAHISAAAAAAAAchIAAAAAAAAJAAAAOiBvZmZzZXRY",
					"AQAAAAAAAAABAAAAchIAAAAAAAB7EgAAAAAAAAAAAAAAAPC/"
				],
				[
					1273,
					1,
					"cut",
					null,
					"AQAAAHsSAAAAAAAAexIAAAAAAAAJAAAAOiBvZmZzZXRZ",
					"AQAAAAAAAAABAAAAexIAAAAAAACEEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1281,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAALwSAAAAAAAAvRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvBIAAAAAAAC8EgAAAAAAAAAAAAAAAPC/"
				],
				[
					1282,
					1,
					"left_delete",
					null,
					"AQAAALwSAAAAAAAAvBIAAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAvRIAAAAAAAC9EgAAAAAAAAAAAAAAAPC/"
				],
				[
					1283,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAALwSAAAAAAAAvRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvBIAAAAAAAC8EgAAAAAAAAAAAAAAAPC/"
				],
				[
					1284,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL0SAAAAAAAAvhIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvRIAAAAAAAC9EgAAAAAAAAAAAAAAAPC/"
				],
				[
					1285,
					1,
					"insert",
					{
						"characters": "Math.r"
					},
					"BgAAAL4SAAAAAAAAvxIAAAAAAAAAAAAAvxIAAAAAAADAEgAAAAAAAAAAAADAEgAAAAAAAMESAAAAAAAAAAAAAMESAAAAAAAAwhIAAAAAAAAAAAAAwhIAAAAAAADDEgAAAAAAAAAAAADDEgAAAAAAAMQSAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvhIAAAAAAAC+EgAAAAAAAAAAAAAAAPC/"
				],
				[
					1286,
					1,
					"left_delete",
					null,
					"AQAAAMMSAAAAAAAAwxIAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAxBIAAAAAAADEEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1287,
					1,
					"insert",
					{
						"characters": "trunc()"
					},
					"BwAAAMMSAAAAAAAAxBIAAAAAAAAAAAAAxBIAAAAAAADFEgAAAAAAAAAAAADFEgAAAAAAAMYSAAAAAAAAAAAAAMYSAAAAAAAAxxIAAAAAAAAAAAAAxxIAAAAAAADIEgAAAAAAAAAAAADIEgAAAAAAAMkSAAAAAAAAAAAAAMkSAAAAAAAAyhIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwxIAAAAAAADDEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1288,
					2,
					"left_delete",
					null,
					"AgAAAMkSAAAAAAAAyRIAAAAAAAABAAAAKcgSAAAAAAAAyBIAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAyhIAAAAAAADKEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1289,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAMgSAAAAAAAAyRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyBIAAAAAAADIEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1290,
					1,
					"insert",
					{
						"characters": "clientX)"
					},
					"CAAAAMkSAAAAAAAAyhIAAAAAAAAAAAAAyhIAAAAAAADLEgAAAAAAAAAAAADLEgAAAAAAAMwSAAAAAAAAAAAAAMwSAAAAAAAAzRIAAAAAAAAAAAAAzRIAAAAAAADOEgAAAAAAAAAAAADOEgAAAAAAAM8SAAAAAAAAAAAAAM8SAAAAAAAA0BIAAAAAAAAAAAAA0BIAAAAAAADREgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyRIAAAAAAADJEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1294,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAANoSAAAAAAAA2xIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2hIAAAAAAADaEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1295,
					1,
					"insert",
					{
						"characters": " Math.trunc(client"
					},
					"EgAAANsSAAAAAAAA3BIAAAAAAAAAAAAA3BIAAAAAAADdEgAAAAAAAAAAAADdEgAAAAAAAN4SAAAAAAAAAAAAAN4SAAAAAAAA3xIAAAAAAAAAAAAA3xIAAAAAAADgEgAAAAAAAAAAAADgEgAAAAAAAOESAAAAAAAAAAAAAOESAAAAAAAA4hIAAAAAAAAAAAAA4hIAAAAAAADjEgAAAAAAAAAAAADjEgAAAAAAAOQSAAAAAAAAAAAAAOQSAAAAAAAA5RIAAAAAAAAAAAAA5RIAAAAAAADmEgAAAAAAAAAAAADmEgAAAAAAAOcSAAAAAAAAAAAAAOcSAAAAAAAA6BIAAAAAAAAAAAAA6BIAAAAAAADpEgAAAAAAAAAAAADpEgAAAAAAAOoSAAAAAAAAAAAAAOoSAAAAAAAA6xIAAAAAAAAAAAAA6xIAAAAAAADsEgAAAAAAAAAAAADsEgAAAAAAAO0SAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2xIAAAAAAADbEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1296,
					1,
					"insert",
					{
						"characters": "Y)"
					},
					"AgAAAO0SAAAAAAAA7hIAAAAAAAAAAAAA7hIAAAAAAADvEgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7RIAAAAAAADtEgAAAAAAAAAAAAAAAPC/"
				],
				[
					1357,
					1,
					"insert",
					{
						"characters": "\nconst"
					},
					"BwAAAHQBAAAAAAAAdQEAAAAAAAAAAAAAdQEAAAAAAAB3AQAAAAAAAAAAAAB3AQAAAAAAAHgBAAAAAAAAAAAAAHgBAAAAAAAAeQEAAAAAAAAAAAAAeQEAAAAAAAB6AQAAAAAAAAAAAAB6AQAAAAAAAHsBAAAAAAAAAAAAAHsBAAAAAAAAfAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAEAAAAAAAB0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					1358,
					1,
					"insert",
					{
						"characters": " body"
					},
					"BQAAAHwBAAAAAAAAfQEAAAAAAAAAAAAAfQEAAAAAAAB+AQAAAAAAAAAAAAB+AQAAAAAAAH8BAAAAAAAAAAAAAH8BAAAAAAAAgAEAAAAAAAAAAAAAgAEAAAAAAACBAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAEAAAAAAAB8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					1359,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAIEBAAAAAAAAggEAAAAAAAAAAAAAggEAAAAAAACDAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQEAAAAAAACBAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1360,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIMBAAAAAAAAhAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwEAAAAAAACDAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1367,
					1,
					"insert",
					{
						"characters": "document.body.firstEl"
					},
					"FQAAAIQBAAAAAAAAhQEAAAAAAAAAAAAAhQEAAAAAAACGAQAAAAAAAAAAAACGAQAAAAAAAIcBAAAAAAAAAAAAAIcBAAAAAAAAiAEAAAAAAAAAAAAAiAEAAAAAAACJAQAAAAAAAAAAAACJAQAAAAAAAIoBAAAAAAAAAAAAAIoBAAAAAAAAiwEAAAAAAAAAAAAAiwEAAAAAAACMAQAAAAAAAAAAAACMAQAAAAAAAI0BAAAAAAAAAAAAAI0BAAAAAAAAjgEAAAAAAAAAAAAAjgEAAAAAAACPAQAAAAAAAAAAAACPAQAAAAAAAJABAAAAAAAAAAAAAJABAAAAAAAAkQEAAAAAAAAAAAAAkQEAAAAAAACSAQAAAAAAAAAAAACSAQAAAAAAAJMBAAAAAAAAAAAAAJMBAAAAAAAAlAEAAAAAAAAAAAAAlAEAAAAAAACVAQAAAAAAAAAAAACVAQAAAAAAAJYBAAAAAAAAAAAAAJYBAAAAAAAAlwEAAAAAAAAAAAAAlwEAAAAAAACYAQAAAAAAAAAAAACYAQAAAAAAAJkBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAEAAAAAAACEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1368,
					1,
					"insert",
					{
						"characters": "ementChild"
					},
					"CgAAAJkBAAAAAAAAmgEAAAAAAAAAAAAAmgEAAAAAAACbAQAAAAAAAAAAAACbAQAAAAAAAJwBAAAAAAAAAAAAAJwBAAAAAAAAnQEAAAAAAAAAAAAAnQEAAAAAAACeAQAAAAAAAAAAAACeAQAAAAAAAJ8BAAAAAAAAAAAAAJ8BAAAAAAAAoAEAAAAAAAAAAAAAoAEAAAAAAAChAQAAAAAAAAAAAAChAQAAAAAAAKIBAAAAAAAAAAAAAKIBAAAAAAAAowEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmQEAAAAAAACZAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1375,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKMBAAAAAAAApAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowEAAAAAAACjAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1392,
					1,
					"insert",
					{
						"characters": "globalThis.body,"
					},
					"EAAAAIQBAAAAAAAAhQEAAAAAAAAAAAAAhQEAAAAAAACGAQAAAAAAAAAAAACGAQAAAAAAAIcBAAAAAAAAAAAAAIcBAAAAAAAAiAEAAAAAAAAAAAAAiAEAAAAAAACJAQAAAAAAAAAAAACJAQAAAAAAAIoBAAAAAAAAAAAAAIoBAAAAAAAAiwEAAAAAAAAAAAAAiwEAAAAAAACMAQAAAAAAAAAAAACMAQAAAAAAAI0BAAAAAAAAAAAAAI0BAAAAAAAAjgEAAAAAAAAAAAAAjgEAAAAAAACPAQAAAAAAAAAAAACPAQAAAAAAAJABAAAAAAAAAAAAAJABAAAAAAAAkQEAAAAAAAAAAAAAkQEAAAAAAACSAQAAAAAAAAAAAACSAQAAAAAAAJMBAAAAAAAAAAAAAJMBAAAAAAAAlAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAEAAAAAAACEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1393,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJQBAAAAAAAAlQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAEAAAAAAACUAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1394,
					2,
					"left_delete",
					null,
					"AgAAAJQBAAAAAAAAlAEAAAAAAAABAAAAIJMBAAAAAAAAkwEAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAlQEAAAAAAACVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1395,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJMBAAAAAAAAlAEAAAAAAAAAAAAAlAEAAAAAAACVAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkwEAAAAAAACTAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1398,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJUBAAAAAAAAlgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQEAAAAAAACVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1406,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADkFwAAaW1wb3J0IHsgY3Jvc3NraXQsIENBTlZBUyB9IGZyb20gJy4vbGliL2Nyb3Nza2l0LmpzJzsKaW1wb3J0IHsgUkdCQSwgSFNMQSB9IGZyb20gJy4vbGliL2NvbG9yLmpzJzsKaW1wb3J0IHsgTWF0cml4IH0gZnJvbSAnLi9saWIvZ2VvbS9tYXRyaXguanMnOwppbXBvcnQgeyBzdHJlYW1pZnksIG9uY2UsIHN1YnNjcmliZSB9IGZyb20gJy4vbGliL2FzeW5jL2V2ZW50cy5qcyc7Ci8vaW1wb3J0IFV0aWwgZnJvbSAnLi9saWIvdXRpbC5qcyc7CgpmdW5jdGlvbiBtYWluKCkgewogIE9iamVjdC5hc3NpZ24oZ2xvYmFsVGhpcywgeyBjcm9zc2tpdCwgUkdCQSwgSFNMQSwgVXRpbCwgTWF0cml4IH0pOwoKICBjb25zdCB3ID0gMzIwOwogIGNvbnN0IGggPSAyMDA7CiAgY29uc3QgYm9keSA9IGdsb2JhbFRoaXMuYm9keSA9IGRvY3VtZW50LmJvZHkuZmlyc3RFbGVtZW50Q2hpbGQ7CgogIGNyb3Nza2l0LmluaXQoewogICAgcmVuZGVyZXI6IENBTlZBUywKICAgIHcsCiAgICBoLAogICAgYWxwaGE6IGZhbHNlCiAgfSk7CgogIGNyb3Nza2l0LmNsZWFyKCk7CiAgY3Jvc3NraXQucmVjdCh7CiAgICB4OiAwLAogICAgeTogMCwKICAgIHcsCiAgICBoLAogICAgZmlsbDogJ2JsYWNrJywKICAgIHN0cm9rZTogJ2JsYWNrJywKICAgIGFuZ2xlOiAwCiAgfSk7CgogIGNvbnN0IGJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcih3ICogKGggKyAyKSk7CiAgY29uc3QgcGFsZXR0ZSA9IENyZWF0ZVBhbGV0dGUoKTsKICBjb25zdCBwYWxldHRlSFNMID0gQ3JlYXRlUGFsZXR0ZUhTTCgpOwogIC8qY29uc3QgcGFsZXR0ZVggPSBwYWxldHRlLm1hcChjb2xvciA9PiBjb2xvci5oZXgoKSk7CiAgY29uc3QgcGFsZXR0ZTMyID0gVWludDMyQXJyYXkuZnJvbShwYWxldHRlLCBjID0+ICtjKTsqLwogIGNvbnN0IHBpeGVscyA9IEFycmF5LmZyb20oeyBsZW5ndGg6IGggKyAyIH0pLm1hcCgodiwgaSkgPT4gbmV3IFVpbnQ4Q2xhbXBlZEFycmF5KGJ1ZmZlciwgaSAqIHcsIHcpKTsKICBjb25zdCB7IGNvbnRleHQgfSA9IGNyb3Nza2l0OwogIGNvbnN0IGltYWdlID0gY29udGV4dC5jcmVhdGVJbWFnZURhdGEodywgaCk7CgogIGNvbnN0IHsgbm93LCB3YWl0Rm9yLCBhbmltYXRpb25GcmFtZSB9ID0gVXRpbDsKICBjb25zdCBmcHMgPSA1MDsKICBjb25zdCBtYXRyaXggPSBuZXcgTWF0cml4KCkudHJhbnNsYXRlKDE2MCwgMTAwKS5zY2FsZSgwLjUpOwoKICBPYmplY3QuYXNzaWduKGdsb2JhbFRoaXMsIHsKICAgIGJ1ZmZlciwKICAgIHBhbGV0dGUsCiAgICBwYWxldHRlSFNMLAogICAgcGl4ZWxzLAogICAgY29udGV4dCwKICAgIGltYWdlLAogICAgZnBzLAogICAgbWF0cml4CiAgfSk7CgogIGFzeW5jIGZ1bmN0aW9uIExvb3AoKSB7CiAgICBjb25zdCBkZWxheSA9IDEwMDAgLyBmcHM7CiAgICBjb25zdCBsb2cgPSAodCwgbmFtZSkgPT4gZ2xvYmFsVGhpcy5kb0xvZyAmJiBjb25zb2xlLmxvZyhgJHtuYW1lfSB0aW1pbmc6ICR7dC50b0ZpeGVkKDMpfW1zYCk7CiAgICBjb25zdCBmaXJlID0gKC4uLmFyZ3MpID0+IEZpcmUoLi4uYXJncyk7IC8vVXRpbC5pbnN0cnVtZW50KEZpcmUsIGxvZyk7CiAgICBjb25zdCByZWRyYXcgPSAoLi4uYXJncykgPT4gUmVkcmF3KC4uLmFyZ3MpOyAvL1V0aWwuaW5zdHJ1bWVudChSZWRyYXcsIGxvZyk7CgogICAgYXdhaXQgb25jZSh3aW5kb3csICdsb2FkJyk7CgogICAgSW5pdCgpOwoKICAgIGZvcig7OykgewogICAgICBmaXJlKCk7CiAgICAgIHJlZHJhdygpOwogICAgICBhd2FpdCBhbmltYXRpb25GcmFtZShkZWxheSk7CiAgICB9CiAgfQoKICBmdW5jdGlvbiBGaXJlKCkgewogICAgZm9yKGxldCB4ID0gMDsgeCA8IHc7IHgrKykgewogICAgICBwaXhlbHNbaF1beF0gPSAyNTUgLSAoUmFuZG9tQnl0ZSgpICUgMTI4KTsKICAgICAgcGl4ZWxzW2ggKyAxXVt4XSA9IDI1NSAtIChSYW5kb21CeXRlKCkgJSAxMjgpOwogICAgfQoKICAgIGZvcihsZXQgeSA9IDA7IHkgPCBoOyB5KyspIHsKICAgICAgZm9yKGxldCB4ID0gMDsgeCA8IHc7IHgrKykgewogICAgICAgIGNvbnN0IHN1bSA9IFsKICAgICAgICAgIHBpeGVsc1t5ICsgMV1bTW9kdWxvKHggLSAxLCB3KV0sCiAgICAgICAgICBwaXhlbHNbeSArIDFdW3hdLAogICAgICAgICAgcGl4ZWxzW3kgKyAxXVtNb2R1bG8oeCArIDEsIHcpXSwKICAgICAgICAgIHBpeGVsc1t5ICsgMl1beF0KICAgICAgICBdLnJlZHVjZSgoYSwgcCkgPT4gYSArIChwIHwgMCksIDApOwoKICAgICAgICBwaXhlbHNbeV1beF0gPSAoc3VtICogMTUpID4+PiA2OwogICAgICB9CiAgICB9CiAgfQoKICBhc3luYyBmdW5jdGlvbiBSZWRyYXcoKSB7CiAgICBjb25zdCB7IGRhdGEgfSA9IGltYWdlOwoKICAgIGxldCBpID0gMDsKICAgIGxldCB0ID0gWy4uLm1hdHJpeF07CgogICAgLyogY29udGV4dC50cmFuc2Zvcm0oLi4udCk7CiAgICBjb25zb2xlLmxvZygidDoiLCBjb250ZXh0LmN1cnJlbnRUcmFuc2Zvcm0pOwogICovCiAgICBmb3IobGV0IHkgPSAwOyB5IDwgaDsgeSsrKSB7CiAgICAgIGZvcihsZXQgeCA9IDA7IHggPCB3OyB4KyspIHsKICAgICAgICBjb25zdCBjID0gcGFsZXR0ZVtwaXhlbHNbeV1beF1dOwogICAgICAgIGRhdGFbaSsrXSA9IGMucjsKICAgICAgICBkYXRhW2krK10gPSBjLmc7CiAgICAgICAgZGF0YVtpKytdID0gYy5iOwogICAgICAgIGRhdGFbaSsrXSA9IGMuYTsKICAgICAgfQogICAgfQoKICAgIGNvbnRleHQucHV0SW1hZ2VEYXRhKGltYWdlLCAwLCAwKTsKICB9CgogIGZ1bmN0aW9uIENyZWF0ZVBhbGV0dGUoKSB7CiAgICBjb25zdCBjb2xvcnMgPSBuZXcgQXJyYXkoMjU2KTsKCiAgICBmb3IobGV0IGkgPSAwOyBpIDwgNjQ7IGkrKykgewogICAgICBjb25zdCB2YWx1ZSA9IGkgKiA0OwoKICAgICAgY29sb3JzW2ldID0gbmV3IFJHQkEodmFsdWUsIDAsIDApOyAvLyBibGFjayB0byByZWQKICAgICAgY29sb3JzW2kgKyA2NF0gPSBuZXcgUkdCQSgyNTUsIHZhbHVlLCAwKTsgLy8gcmVkIHRvIHllbGxvdwogICAgICBjb2xvcnNbaSArIDEyOF0gPSBuZXcgUkdCQSgyNTUsIDI1NSwgdmFsdWUpOyAvLyB5ZWxsb3cgdG8gd2hpdGUKICAgICAgY29sb3JzW2kgKyAxOTJdID0gbmV3IFJHQkEoMjU1LCAyNTUsIDI1NSk7IC8vIGFsbCB3aGl0ZQogICAgfQogICAgcmV0dXJuIGNvbG9yczsKICB9CgogIGZ1bmN0aW9uIENyZWF0ZVBhbGV0dGVIU0woKSB7CiAgICBjb25zdCBjb2xvcnMgPSBuZXcgQXJyYXkoMjU2KTsKCiAgICBjb25zdCBodWVzID0gWwogICAgICBuZXcgSFNMQSgwLCAxMDAsIDApLAogICAgICBuZXcgSFNMQSgwLCAxMDAsIDUwKSwKICAgICAgbmV3IEhTTEEoMzAsIDEwMCwgNTApLAogICAgICBuZXcgSFNMQSg2MCwgMTAwLCA1MCksCiAgICAgIG5ldyBIU0xBKDYwLCAxMDAsIDEwMCksCiAgICAgIG5ldyBIU0xBKDYwLCAxMDAsIDEwMCkKICAgIF07IC8qLm1hcChoc2xhID0+IGhzbGEudG9SR0JBKCkpKi8KCiAgICBjb25zdCBicmVha3BvaW50cyA9IFswLCA1MSwgODAsIDE1NCwgMjA1LCAyNTZdOwogICAgY29uc29sZS5sb2coJ2JyZWFrcG9pbnRzOicsIGJyZWFrcG9pbnRzKTsKCiAgICBmb3IobGV0IGkgPSAwOyBpIDwgMjU2OyBpKyspIHsKICAgICAgY29uc3QgaHVlID0gKHYgPT4gKHYgPT0gLTEgPyAoKSA9PiBodWVzLmxlbmd0aCAtIDIgOiB2ID0+IHYpKShicmVha3BvaW50cy5maW5kSW5kZXgoYiA9PiBpIDwgYikpOwogICAgICBjb25zdCByYW5nZSA9IGJyZWFrcG9pbnRzW2h1ZV0gLSAxIC0gYnJlYWtwb2ludHNbaHVlIC0gMV07CiAgICAgIC8vY29uc29sZS5sb2coImh1ZToiLCB7aSxodWUsIHJhbmdlfSk7CgogICAgICBjb2xvcnNbaV0gPSBIU0xBLmJsZW5kKGh1ZXNbaHVlIC0gMV0sIGh1ZXNbaHVlXSwgKGkgLSBicmVha3BvaW50c1todWUgLSAxXSkgLyByYW5nZSkudG9SR0JBKCk7CiAgICB9CiAgICByZXR1cm4gY29sb3JzOwogIH0KCiAgLy8gRm9yIHJhbmRvbSBudW1iZXJzLCB1c2UgInggPSAxODEgKiB4ICsgMzU5IiBmcm9tCiAgLy8gVG9tIERpY2tlbnMgIlJhbmRvbSBOdW1iZXIgR2VuZXJhdG9yIGZvciBNaWNyb2NvbnRyb2xsZXJzIgogIC8vIGh0dHBzOi8vd2ViLmFyY2hpdmUub3JnL3dlYi8yMDE3MDMyMzIwNDkxNy9odHRwOi8vaG9tZS5lYXJ0aGxpbmsubmV0L350ZGlja2Vucy82OGhjMTEvcmFuZG9tLzY4aGMxMXJhbmRvbS5odG1sCiAgbGV0IHNjcmF0Y2ggPSAwOwoKICBmdW5jdGlvbiBSYW5kb21CeXRlKCkgewogICAgY29uc3QgdmFsdWUgPSAxODEgKiBzY3JhdGNoICsgMzU5OwogICAgc2NyYXRjaCA9IHZhbHVlID4+PiAwOwogICAgcmV0dXJuICh2YWx1ZSA+Pj4gOCkgJiAweGZmOwogIH0KCiAgZnVuY3Rpb24gTW9kdWxvKG4sIG0pIHsKICAgIHJldHVybiAoKG4gJSBtKSArIG0pICUgbTsKICB9CgogIGxldCBlbGVtZW50LCByZWN0LCByYzsKCiAgZnVuY3Rpb24gQmxhemUoeCwgeSkgewogICAgZm9yKGxldCB0eSA9IHkgLSAxOyB0eSA8IHkgKyAxOyB0eSsrKSB7CiAgICAgIGZvcihsZXQgdHggPSB4IC0gMTsgdHggPCB4ICsgMTsgdHgrKykgewogICAgICAgIHBpeGVsc1t0eV1bdHhdID0gcmM7CiAgICAgIH0KICAgIH0KCiAgICBwaXhlbHNbeSArIDFdW3hdID0gcmM7CiAgfQoKICBmdW5jdGlvbiBNb3VzZUhhbmRsZXIoZSkgewogICAgbGV0IHsgdGFyZ2V0LCBidXR0b25zLCB0eXBlIH0gPSBlOwoKICAgIGlmKCd0b3VjaGVzJyBpbiBlKSB7CiAgICAgIGNvbnNvbGUubG9nKGAke2UudHlwZX1gLCAuLi5lLnRvdWNoZXMpOwogICAgICBmb3IobGV0IHRvdWNoIG9mIFsuLi5lLnRvdWNoZXNdKSB7CiAgICAgICAgY29uc3QgeyBjbGllbnRYLCBjbGllbnRZIH0gPSB0b3VjaDsKICAgICAgICBNb3VzZUhhbmRsZXIoeyB0eXBlLCB0YXJnZXQsIGJ1dHRvbnMsIG9mZnNldFg6IE1hdGgudHJ1bmMoY2xpZW50WCksIG9mZnNldFk6IE1hdGgudHJ1bmMoY2xpZW50WSkgfSk7CiAgICAgIH0KICAgICAgcmV0dXJuOwogICAgfQoKICAgIGNvbnN0IHggPSBNYXRoLnJvdW5kKChlLm9mZnNldFggKiB3KSAvIHJlY3Qud2lkdGgpOwogICAgY29uc3QgeSA9IE1hdGgucm91bmQoKGUub2Zmc2V0WSAqIGgpIC8gcmVjdC5oZWlnaHQpOwoKICAgIC8vZ2xvYmFsVGhpcy5wb2ludGVyRXZlbnQgPSBlOwoKICAgIGNvbnNvbGUubG9nKGAke2UudHlwZX0gQCAke3h9LCR7eX1gKTsKCiAgICBpZigvKGRvd258c3RhcnQpJC8udGVzdCh0eXBlKSkgcmMgPSBwaXhlbHNbeV1beF0gPiAweDMwID8gMCA6IFJhbmRvbUJ5dGUoKSB8IDB4ODA7CgogICAgQmxhemUoeCwgeSk7CiAgfQoKICBhc3luYyBmdW5jdGlvbiogTW91c2VJdGVyYXRvcigpIHsKICAgIGZvcig7OykgewogICAgICB5aWVsZCBhd2FpdCBvbmNlKGVsZW1lbnQsICdtb3VzZWRvd24nLCAndG91Y2hzdGFydCcpOwoKICAgICAgZm9yIGF3YWl0KGxldCBldmVudCBvZiBzdHJlYW1pZnkoWydtb3VzZXVwJywgJ21vdXNlbW92ZScsICd0b3VjaGVuZCcsICd0b3VjaG1vdmUnXSwgZWxlbWVudCkpIHsKICAgICAgICB5aWVsZCBldmVudDsKICAgICAgICBpZigvKHVwfGVuZCkkLy50ZXN0KGV2ZW50LnR5cGUpKSBicmVhazsKICAgICAgfQogICAgfQogIH0KCiAgZnVuY3Rpb24gUmVzaXplSGFuZGxlcihlKSB7CiAgICByZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTsKICAgIGNvbnNvbGUubG9nKCdyZWN0JywgcmVjdCk7CiAgfQoKICBPYmplY3QuYXNzaWduKGdsb2JhbFRoaXMsIHsgUmFuZG9tQnl0ZSB9KTsKCiAgZnVuY3Rpb24gSW5pdCgpIHsKICAgIHdpbmRvdy5jYW52YXMgPSBlbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignY2FudmFzJyk7CgogICAgcmVjdCA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7CgogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIFJlc2l6ZUhhbmRsZXIsIHRydWUpOwoKICAgIGNvbnN0IGhhbmRsZXIgPQogICAgICBNb3VzZUhhbmRsZXI7IC8qfHwgVXRpbC5pbnN0cnVtZW50KE1vdXNlSGFuZGxlciwgKGR1cmF0aW9uLCBuYW1lLCBhcmdzLCByZXQpID0+IGNvbnNvbGUubG9nKGBoYW5kbGVyIHRpbWU6ICR7ZHVyYXRpb259YCkpKi8KCiAgICBzdWJzY3JpYmUoTW91c2VJdGVyYXRvcigpLCBoYW5kbGVyKTsKICB9CgogIExvb3AoKTsKfQoKbWFpbigpOwoAAAAAAAAAAOYXAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgEAAAAAAACeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1419,
					1,
					"insert",
					{
						"characters": "parent"
					},
					"BwAAAH0BAAAAAAAAfgEAAAAAAAAAAAAAfgEAAAAAAAB+AQAAAAAAAAQAAABib2R5fgEAAAAAAAB/AQAAAAAAAAAAAAB/AQAAAAAAAIABAAAAAAAAAAAAAIABAAAAAAAAgQEAAAAAAAAAAAAAgQEAAAAAAACCAQAAAAAAAAAAAACCAQAAAAAAAIMBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQEAAAAAAACBAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1435,
					1,
					"right_delete",
					null,
					"AQAAAIUBAAAAAAAAhQEAAAAAAAATAAAAIChnbG9iYWxUaGlzLmJvZHkgPQ",
					"AQAAAAAAAAABAAAAhQEAAAAAAACYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1440,
					1,
					"cut",
					null,
					"AQAAAJMBAAAAAAAAkwEAAAAAAAATAAAALmZpcnN0RWxlbWVudENoaWxkKQ",
					"AQAAAAAAAAABAAAAkwEAAAAAAACmAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1452,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAL0BAAAAAAAAvgEAAAAAAAAAAAAAvgEAAAAAAADCAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvQEAAAAAAAC9AQAAAAAAAAAAAAAAAPC/"
				],
				[
					1453,
					1,
					"paste",
					null,
					"AQAAAMIBAAAAAAAAyAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgEAAAAAAADCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1454,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMgBAAAAAAAAyQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyAEAAAAAAADIAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1474,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAADYSAAAAAAAANxIAAAAAAAAAAAAANxIAAAAAAAA4EgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANhIAAAAAAAA2EgAAAAAAAAAAAAAAAPC/"
				],
				[
					1478,
					1,
					"cut",
					null,
					"AQAAALETAAAAAAAAsRMAAAAAAAAkAAAAICAgIC8vZ2xvYmFsVGhpcy5wb2ludGVyRXZlbnQgPSBlOwoK",
					"AQAAAAAAAAABAAAAsRMAAAAAAADVEwAAAAAAAAAAAAAAAAAA"
				],
				[
					1480,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAALUTAAAAAAAAthMAAAAAAAAAAAAAthMAAAAAAAC3EwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtRMAAAAAAAC1EwAAAAAAAAAAAAAAAPC/"
				],
				[
					1493,
					2,
					"left_delete",
					null,
					"AgAAALYTAAAAAAAAthMAAAAAAAABAAAAL7UTAAAAAAAAtRMAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAtxMAAAAAAAC3EwAAAAAAAAAAAAAAAPC/"
				],
				[
					1555,
					1,
					"insert",
					{
						"characters": "\n\nglobaol"
					},
					"DAAAAD0TAAAAAAAAPhMAAAAAAAAAAAAAPhMAAAAAAABCEwAAAAAAAAAAAABCEwAAAAAAAEMTAAAAAAAAAAAAAEMTAAAAAAAARxMAAAAAAAAAAAAAPhMAAAAAAAA+EwAAAAAAAAQAAAAgICAgQxMAAAAAAABEEwAAAAAAAAAAAABEEwAAAAAAAEUTAAAAAAAAAAAAAEUTAAAAAAAARhMAAAAAAAAAAAAARhMAAAAAAABHEwAAAAAAAAAAAABHEwAAAAAAAEgTAAAAAAAAAAAAAEgTAAAAAAAASRMAAAAAAAAAAAAASRMAAAAAAABKEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPRMAAAAAAAA9EwAAAAAAAAAAAAAAAPC/"
				],
				[
					1556,
					2,
					"left_delete",
					null,
					"AgAAAEkTAAAAAAAASRMAAAAAAAABAAAAbEgTAAAAAAAASBMAAAAAAAABAAAAbw",
					"AQAAAAAAAAABAAAAShMAAAAAAABKEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1557,
					1,
					"insert",
					{
						"characters": "lThis.pointerEven"
					},
					"EQAAAEgTAAAAAAAASRMAAAAAAAAAAAAASRMAAAAAAABKEwAAAAAAAAAAAABKEwAAAAAAAEsTAAAAAAAAAAAAAEsTAAAAAAAATBMAAAAAAAAAAAAATBMAAAAAAABNEwAAAAAAAAAAAABNEwAAAAAAAE4TAAAAAAAAAAAAAE4TAAAAAAAATxMAAAAAAAAAAAAATxMAAAAAAABQEwAAAAAAAAAAAABQEwAAAAAAAFETAAAAAAAAAAAAAFETAAAAAAAAUhMAAAAAAAAAAAAAUhMAAAAAAABTEwAAAAAAAAAAAABTEwAAAAAAAFQTAAAAAAAAAAAAAFQTAAAAAAAAVRMAAAAAAAAAAAAAVRMAAAAAAABWEwAAAAAAAAAAAABWEwAAAAAAAFcTAAAAAAAAAAAAAFcTAAAAAAAAWBMAAAAAAAAAAAAAWBMAAAAAAABZEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASBMAAAAAAABIEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1558,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAFkTAAAAAAAAWhMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWRMAAAAAAABZEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1559,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAFoTAAAAAAAAWxMAAAAAAAAAAAAAWxMAAAAAAABcEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWhMAAAAAAABaEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1560,
					1,
					"insert",
					{
						"characters": " e;"
					},
					"AwAAAFwTAAAAAAAAXRMAAAAAAAAAAAAAXRMAAAAAAABeEwAAAAAAAAAAAABeEwAAAAAAAF8TAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXBMAAAAAAABcEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1629,
					1,
					"insert",
					{
						"characters": "try{"
					},
					"BAAAAFkUAAAAAAAAWhQAAAAAAAAAAAAAWhQAAAAAAABbFAAAAAAAAAAAAABbFAAAAAAAAFwUAAAAAAAAAAAAAFwUAAAAAAAAXRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWRQAAAAAAABZFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1631,
					1,
					"insert",
					{
						"characters": "}catch()"
					},
					"CAAAAGoUAAAAAAAAaxQAAAAAAAAAAAAAaxQAAAAAAABsFAAAAAAAAAAAAABsFAAAAAAAAG0UAAAAAAAAAAAAAG0UAAAAAAAAbhQAAAAAAAAAAAAAbhQAAAAAAABvFAAAAAAAAAAAAABvFAAAAAAAAHAUAAAAAAAAAAAAAHAUAAAAAAAAcRQAAAAAAAAAAAAAcRQAAAAAAAByFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAahQAAAAAAABqFAAAAAAAAP///////+9/"
				],
				[
					1632,
					1,
					"left_delete",
					null,
					"AQAAAHEUAAAAAAAAcRQAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAchQAAAAAAAByFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1633,
					1,
					"insert",
					{
						"characters": "e)("
					},
					"AwAAAHEUAAAAAAAAchQAAAAAAAAAAAAAchQAAAAAAABzFAAAAAAAAAAAAABzFAAAAAAAAHQUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcRQAAAAAAABxFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1634,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHQUAAAAAAAAdRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdBQAAAAAAAB0FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1635,
					2,
					"left_delete",
					null,
					"AgAAAHQUAAAAAAAAdBQAAAAAAAABAAAAIHMUAAAAAAAAcxQAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAdRQAAAAAAAB1FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1636,
					1,
					"insert",
					{
						"characters": " {}"
					},
					"AwAAAHMUAAAAAAAAdBQAAAAAAAAAAAAAdBQAAAAAAAB1FAAAAAAAAAAAAAB1FAAAAAAAAHYUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcxQAAAAAAABzFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1641,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAdhQAAAAAAAB2FAAAAAAAAAAAAAAAAPC/"
				],
				[
					1651,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAANcTAAAAAAAA2BMAAAAAAAAAAAAA2BMAAAAAAADZEwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1xMAAAAAAADXEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1676,
					1,
					"cut",
					null,
					"AQAAAFgUAAAAAAAAWBQAAAAAAAAKAAAAICAgIHRyeSB7Cg",
					"AQAAAAAAAAABAAAAWBQAAAAAAABiFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1678,
					1,
					"paste",
					null,
					"AQAAAAAUAAAAAAAAChQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAABQAAAAAAAAAFAAAAAAAAAAAAAAAAAAA"
				],
				[
					1685,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADuFwAAaW1wb3J0IHsgY3Jvc3NraXQsIENBTlZBUyB9IGZyb20gJy4vbGliL2Nyb3Nza2l0LmpzJzsKaW1wb3J0IHsgUkdCQSwgSFNMQSB9IGZyb20gJy4vbGliL2NvbG9yLmpzJzsKaW1wb3J0IHsgTWF0cml4IH0gZnJvbSAnLi9saWIvZ2VvbS9tYXRyaXguanMnOwppbXBvcnQgeyBzdHJlYW1pZnksIG9uY2UsIHN1YnNjcmliZSB9IGZyb20gJy4vbGliL2FzeW5jL2V2ZW50cy5qcyc7Ci8vaW1wb3J0IFV0aWwgZnJvbSAnLi9saWIvdXRpbC5qcyc7CgpmdW5jdGlvbiBtYWluKCkgewogIE9iamVjdC5hc3NpZ24oZ2xvYmFsVGhpcywgeyBjcm9zc2tpdCwgUkdCQSwgSFNMQSwgVXRpbCwgTWF0cml4IH0pOwoKICBjb25zdCB3ID0gMzIwOwogIGNvbnN0IGggPSAyMDA7CiAgY29uc3QgcGFyZW50ID0gZG9jdW1lbnQuYm9keTsKCiAgY3Jvc3NraXQuaW5pdCh7CiAgICByZW5kZXJlcjogQ0FOVkFTLAogICAgcGFyZW50LAogICAgdywKICAgIGgsCiAgICBhbHBoYTogZmFsc2UKICB9KTsKCiAgY3Jvc3NraXQuY2xlYXIoKTsKICBjcm9zc2tpdC5yZWN0KHsKICAgIHg6IDAsCiAgICB5OiAwLAogICAgdywKICAgIGgsCiAgICBmaWxsOiAnYmxhY2snLAogICAgc3Ryb2tlOiAnYmxhY2snLAogICAgYW5nbGU6IDAKICB9KTsKCiAgY29uc3QgYnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKHcgKiAoaCArIDIpKTsKICBjb25zdCBwYWxldHRlID0gQ3JlYXRlUGFsZXR0ZSgpOwogIGNvbnN0IHBhbGV0dGVIU0wgPSBDcmVhdGVQYWxldHRlSFNMKCk7CiAgLypjb25zdCBwYWxldHRlWCA9IHBhbGV0dGUubWFwKGNvbG9yID0+IGNvbG9yLmhleCgpKTsKICBjb25zdCBwYWxldHRlMzIgPSBVaW50MzJBcnJheS5mcm9tKHBhbGV0dGUsIGMgPT4gK2MpOyovCiAgY29uc3QgcGl4ZWxzID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogaCArIDIgfSkubWFwKCh2LCBpKSA9PiBuZXcgVWludDhDbGFtcGVkQXJyYXkoYnVmZmVyLCBpICogdywgdykpOwogIGNvbnN0IHsgY29udGV4dCB9ID0gY3Jvc3NraXQ7CiAgY29uc3QgaW1hZ2UgPSBjb250ZXh0LmNyZWF0ZUltYWdlRGF0YSh3LCBoKTsKCiAgY29uc3QgeyBub3csIHdhaXRGb3IsIGFuaW1hdGlvbkZyYW1lIH0gPSBVdGlsOwogIGNvbnN0IGZwcyA9IDUwOwogIGNvbnN0IG1hdHJpeCA9IG5ldyBNYXRyaXgoKS50cmFuc2xhdGUoMTYwLCAxMDApLnNjYWxlKDAuNSk7CgogIE9iamVjdC5hc3NpZ24oZ2xvYmFsVGhpcywgewogICAgYnVmZmVyLAogICAgcGFsZXR0ZSwKICAgIHBhbGV0dGVIU0wsCiAgICBwaXhlbHMsCiAgICBjb250ZXh0LAogICAgaW1hZ2UsCiAgICBmcHMsCiAgICBtYXRyaXgKICB9KTsKCiAgYXN5bmMgZnVuY3Rpb24gTG9vcCgpIHsKICAgIGNvbnN0IGRlbGF5ID0gMTAwMCAvIGZwczsKICAgIGNvbnN0IGxvZyA9ICh0LCBuYW1lKSA9PiBnbG9iYWxUaGlzLmRvTG9nICYmIGNvbnNvbGUubG9nKGAke25hbWV9IHRpbWluZzogJHt0LnRvRml4ZWQoMyl9bXNgKTsKICAgIGNvbnN0IGZpcmUgPSAoLi4uYXJncykgPT4gRmlyZSguLi5hcmdzKTsgLy9VdGlsLmluc3RydW1lbnQoRmlyZSwgbG9nKTsKICAgIGNvbnN0IHJlZHJhdyA9ICguLi5hcmdzKSA9PiBSZWRyYXcoLi4uYXJncyk7IC8vVXRpbC5pbnN0cnVtZW50KFJlZHJhdywgbG9nKTsKCiAgICBhd2FpdCBvbmNlKHdpbmRvdywgJ2xvYWQnKTsKCiAgICBJbml0KCk7CgogICAgZm9yKDs7KSB7CiAgICAgIGZpcmUoKTsKICAgICAgcmVkcmF3KCk7CiAgICAgIGF3YWl0IGFuaW1hdGlvbkZyYW1lKGRlbGF5KTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIEZpcmUoKSB7CiAgICBmb3IobGV0IHggPSAwOyB4IDwgdzsgeCsrKSB7CiAgICAgIHBpeGVsc1toXVt4XSA9IDI1NSAtIChSYW5kb21CeXRlKCkgJSAxMjgpOwogICAgICBwaXhlbHNbaCArIDFdW3hdID0gMjU1IC0gKFJhbmRvbUJ5dGUoKSAlIDEyOCk7CiAgICB9CgogICAgZm9yKGxldCB5ID0gMDsgeSA8IGg7IHkrKykgewogICAgICBmb3IobGV0IHggPSAwOyB4IDwgdzsgeCsrKSB7CiAgICAgICAgY29uc3Qgc3VtID0gWwogICAgICAgICAgcGl4ZWxzW3kgKyAxXVtNb2R1bG8oeCAtIDEsIHcpXSwKICAgICAgICAgIHBpeGVsc1t5ICsgMV1beF0sCiAgICAgICAgICBwaXhlbHNbeSArIDFdW01vZHVsbyh4ICsgMSwgdyldLAogICAgICAgICAgcGl4ZWxzW3kgKyAyXVt4XQogICAgICAgIF0ucmVkdWNlKChhLCBwKSA9PiBhICsgKHAgfCAwKSwgMCk7CgogICAgICAgIHBpeGVsc1t5XVt4XSA9IChzdW0gKiAxNSkgPj4+IDY7CiAgICAgIH0KICAgIH0KICB9CgogIGFzeW5jIGZ1bmN0aW9uIFJlZHJhdygpIHsKICAgIGNvbnN0IHsgZGF0YSB9ID0gaW1hZ2U7CgogICAgbGV0IGkgPSAwOwogICAgbGV0IHQgPSBbLi4ubWF0cml4XTsKCiAgICAvKiBjb250ZXh0LnRyYW5zZm9ybSguLi50KTsKICAgIGNvbnNvbGUubG9nKCJ0OiIsIGNvbnRleHQuY3VycmVudFRyYW5zZm9ybSk7CiAgKi8KICAgIGZvcihsZXQgeSA9IDA7IHkgPCBoOyB5KyspIHsKICAgICAgZm9yKGxldCB4ID0gMDsgeCA8IHc7IHgrKykgewogICAgICAgIGNvbnN0IGMgPSBwYWxldHRlW3BpeGVsc1t5XVt4XV07CiAgICAgICAgZGF0YVtpKytdID0gYy5yOwogICAgICAgIGRhdGFbaSsrXSA9IGMuZzsKICAgICAgICBkYXRhW2krK10gPSBjLmI7CiAgICAgICAgZGF0YVtpKytdID0gYy5hOwogICAgICB9CiAgICB9CgogICAgY29udGV4dC5wdXRJbWFnZURhdGEoaW1hZ2UsIDAsIDApOwogIH0KCiAgZnVuY3Rpb24gQ3JlYXRlUGFsZXR0ZSgpIHsKICAgIGNvbnN0IGNvbG9ycyA9IG5ldyBBcnJheSgyNTYpOwoKICAgIGZvcihsZXQgaSA9IDA7IGkgPCA2NDsgaSsrKSB7CiAgICAgIGNvbnN0IHZhbHVlID0gaSAqIDQ7CgogICAgICBjb2xvcnNbaV0gPSBuZXcgUkdCQSh2YWx1ZSwgMCwgMCk7IC8vIGJsYWNrIHRvIHJlZAogICAgICBjb2xvcnNbaSArIDY0XSA9IG5ldyBSR0JBKDI1NSwgdmFsdWUsIDApOyAvLyByZWQgdG8geWVsbG93CiAgICAgIGNvbG9yc1tpICsgMTI4XSA9IG5ldyBSR0JBKDI1NSwgMjU1LCB2YWx1ZSk7IC8vIHllbGxvdyB0byB3aGl0ZQogICAgICBjb2xvcnNbaSArIDE5Ml0gPSBuZXcgUkdCQSgyNTUsIDI1NSwgMjU1KTsgLy8gYWxsIHdoaXRlCiAgICB9CiAgICByZXR1cm4gY29sb3JzOwogIH0KCiAgZnVuY3Rpb24gQ3JlYXRlUGFsZXR0ZUhTTCgpIHsKICAgIGNvbnN0IGNvbG9ycyA9IG5ldyBBcnJheSgyNTYpOwoKICAgIGNvbnN0IGh1ZXMgPSBbCiAgICAgIG5ldyBIU0xBKDAsIDEwMCwgMCksCiAgICAgIG5ldyBIU0xBKDAsIDEwMCwgNTApLAogICAgICBuZXcgSFNMQSgzMCwgMTAwLCA1MCksCiAgICAgIG5ldyBIU0xBKDYwLCAxMDAsIDUwKSwKICAgICAgbmV3IEhTTEEoNjAsIDEwMCwgMTAwKSwKICAgICAgbmV3IEhTTEEoNjAsIDEwMCwgMTAwKQogICAgXTsgLyoubWFwKGhzbGEgPT4gaHNsYS50b1JHQkEoKSkqLwoKICAgIGNvbnN0IGJyZWFrcG9pbnRzID0gWzAsIDUxLCA4MCwgMTU0LCAyMDUsIDI1Nl07CiAgICBjb25zb2xlLmxvZygnYnJlYWtwb2ludHM6JywgYnJlYWtwb2ludHMpOwoKICAgIGZvcihsZXQgaSA9IDA7IGkgPCAyNTY7IGkrKykgewogICAgICBjb25zdCBodWUgPSAodiA9PiAodiA9PSAtMSA/ICgpID0+IGh1ZXMubGVuZ3RoIC0gMiA6IHYgPT4gdikpKGJyZWFrcG9pbnRzLmZpbmRJbmRleChiID0+IGkgPCBiKSk7CiAgICAgIGNvbnN0IHJhbmdlID0gYnJlYWtwb2ludHNbaHVlXSAtIDEgLSBicmVha3BvaW50c1todWUgLSAxXTsKICAgICAgLy9jb25zb2xlLmxvZygiaHVlOiIsIHtpLGh1ZSwgcmFuZ2V9KTsKCiAgICAgIGNvbG9yc1tpXSA9IEhTTEEuYmxlbmQoaHVlc1todWUgLSAxXSwgaHVlc1todWVdLCAoaSAtIGJyZWFrcG9pbnRzW2h1ZSAtIDFdKSAvIHJhbmdlKS50b1JHQkEoKTsKICAgIH0KICAgIHJldHVybiBjb2xvcnM7CiAgfQoKICAvLyBGb3IgcmFuZG9tIG51bWJlcnMsIHVzZSAieCA9IDE4MSAqIHggKyAzNTkiIGZyb20KICAvLyBUb20gRGlja2VucyAiUmFuZG9tIE51bWJlciBHZW5lcmF0b3IgZm9yIE1pY3JvY29udHJvbGxlcnMiCiAgLy8gaHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTcwMzIzMjA0OTE3L2h0dHA6Ly9ob21lLmVhcnRobGluay5uZXQvfnRkaWNrZW5zLzY4aGMxMS9yYW5kb20vNjhoYzExcmFuZG9tLmh0bWwKICBsZXQgc2NyYXRjaCA9IDA7CgogIGZ1bmN0aW9uIFJhbmRvbUJ5dGUoKSB7CiAgICBjb25zdCB2YWx1ZSA9IDE4MSAqIHNjcmF0Y2ggKyAzNTk7CiAgICBzY3JhdGNoID0gdmFsdWUgPj4+IDA7CiAgICByZXR1cm4gKHZhbHVlID4+PiA4KSAmIDB4ZmY7CiAgfQoKICBmdW5jdGlvbiBNb2R1bG8obiwgbSkgewogICAgcmV0dXJuICgobiAlIG0pICsgbSkgJSBtOwogIH0KCiAgbGV0IGVsZW1lbnQsIHJlY3QsIHJjOwoKICBmdW5jdGlvbiBCbGF6ZSh4LCB5KSB7CiAgICBmb3IobGV0IHR5ID0geSAtIDE7IHR5IDwgeSArIDE7IHR5KyspIHsKICAgICAgZm9yKGxldCB0eCA9IHggLSAxOyB0eCA8IHggKyAxOyB0eCsrKSB7CiAgICAgICAgcGl4ZWxzW3R5XVt0eF0gPSByYzsKICAgICAgfQogICAgfQoKICAgIHBpeGVsc1t5ICsgMV1beF0gPSByYzsKICB9CgogIGZ1bmN0aW9uIE1vdXNlSGFuZGxlcihlKSB7CiAgICBsZXQgeyB0YXJnZXQsIGJ1dHRvbnMsIHR5cGUgfSA9IGU7CgogICAgaWYoJ3RvdWNoZXMnIGluIGUpIHsKICAgICAgLy9jb25zb2xlLmxvZyhgJHtlLnR5cGV9YCwgLi4uZS50b3VjaGVzKTsKICAgICAgZm9yKGxldCB0b3VjaCBvZiBbLi4uZS50b3VjaGVzXSkgewogICAgICAgIGNvbnN0IHsgY2xpZW50WCwgY2xpZW50WSB9ID0gdG91Y2g7CiAgICAgICAgTW91c2VIYW5kbGVyKHsgdHlwZSwgdGFyZ2V0LCBidXR0b25zLCBvZmZzZXRYOiBNYXRoLnRydW5jKGNsaWVudFgpLCBvZmZzZXRZOiBNYXRoLnRydW5jKGNsaWVudFkpIH0pOwogICAgICB9CiAgICAgIHJldHVybjsKICAgIH0KCiAgICBnbG9iYWxUaGlzLnBvaW50ZXJFdmVudCA9IGU7CgogICAgY29uc3QgeCA9IE1hdGgucm91bmQoKGUub2Zmc2V0WCAqIHcpIC8gcmVjdC53aWR0aCk7CiAgICBjb25zdCB5ID0gTWF0aC5yb3VuZCgoZS5vZmZzZXRZICogaCkgLyByZWN0LmhlaWdodCk7CgogICAgLy9jb25zb2xlLmxvZyhgJHtlLnR5cGV9IEAgJHt4fSwke3l9YCk7CgogICAgdHJ5IHsKICAgIGlmKC8oZG93bnxzdGFydCkkLy50ZXN0KHR5cGUpKSByYyA9IHBpeGVsc1t5XVt4XSA+IDB4MzAgPyAwIDogUmFuZG9tQnl0ZSgpIHwgMHg4MDsKCiAgICAgIEJsYXplKHgsIHkpOwogICAgfSBjYXRjaChlKSB7fQogIH0KCiAgYXN5bmMgZnVuY3Rpb24qIE1vdXNlSXRlcmF0b3IoKSB7CiAgICBmb3IoOzspIHsKICAgICAgeWllbGQgYXdhaXQgb25jZShlbGVtZW50LCAnbW91c2Vkb3duJywgJ3RvdWNoc3RhcnQnKTsKCiAgICAgIGZvciBhd2FpdChsZXQgZXZlbnQgb2Ygc3RyZWFtaWZ5KFsnbW91c2V1cCcsICdtb3VzZW1vdmUnLCAndG91Y2hlbmQnLCAndG91Y2htb3ZlJ10sIGVsZW1lbnQpKSB7CiAgICAgICAgeWllbGQgZXZlbnQ7CiAgICAgICAgaWYoLyh1cHxlbmQpJC8udGVzdChldmVudC50eXBlKSkgYnJlYWs7CiAgICAgIH0KICAgIH0KICB9CgogIGZ1bmN0aW9uIFJlc2l6ZUhhbmRsZXIoZSkgewogICAgcmVjdCA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7CiAgICBjb25zb2xlLmxvZygncmVjdCcsIHJlY3QpOwogIH0KCiAgT2JqZWN0LmFzc2lnbihnbG9iYWxUaGlzLCB7IFJhbmRvbUJ5dGUgfSk7CgogIGZ1bmN0aW9uIEluaXQoKSB7CiAgICB3aW5kb3cuY2FudmFzID0gZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2NhbnZhcycpOwoKICAgIHJlY3QgPSBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpOwoKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBSZXNpemVIYW5kbGVyLCB0cnVlKTsKCiAgICBjb25zdCBoYW5kbGVyID0KICAgICAgTW91c2VIYW5kbGVyOyAvKnx8IFV0aWwuaW5zdHJ1bWVudChNb3VzZUhhbmRsZXIsIChkdXJhdGlvbiwgbmFtZSwgYXJncywgcmV0KSA9PiBjb25zb2xlLmxvZyhgaGFuZGxlciB0aW1lOiAke2R1cmF0aW9ufWApKSovCgogICAgc3Vic2NyaWJlKE1vdXNlSXRlcmF0b3IoKSwgaGFuZGxlcik7CiAgfQoKICBMb29wKCk7Cn0KCm1haW4oKTsKAAAAAAAAAADwFwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYRQAAAAAAABhFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1698,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIcUAAAAAAAAiBQAAAAAAAAAAAAAiBQAAAAAAACMFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhxQAAAAAAACHFAAAAAAAAAAAAAAAAPC/"
				],
				[
					1766,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAP8SAAAAAAAAABMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/xIAAAAAAAD/EgAAAAAAAAAAAAAAAPC/"
				],
				[
					1767,
					1,
					"left_delete",
					null,
					"AQAAAP8SAAAAAAAA/xIAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAABMAAAAAAAAAEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1768,
					1,
					"insert",
					{
						"characters": "-rect.x"
					},
					"BwAAAP8SAAAAAAAAABMAAAAAAAAAAAAAABMAAAAAAAABEwAAAAAAAAAAAAABEwAAAAAAAAITAAAAAAAAAAAAAAITAAAAAAAAAxMAAAAAAAAAAAAAAxMAAAAAAAAEEwAAAAAAAAAAAAAEEwAAAAAAAAUTAAAAAAAAAAAAAAUTAAAAAAAABhMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/xIAAAAAAAD/EgAAAAAAAAAAAAAAAPC/"
				],
				[
					1770,
					1,
					"cut",
					null,
					"AQAAAP8SAAAAAAAA/xIAAAAAAAAHAAAALXJlY3QueA",
					"AQAAAAAAAAABAAAABhMAAAAAAAD/EgAAAAAAAAAAAAAAAPC/"
				],
				[
					1771,
					1,
					"paste",
					null,
					"AQAAAP8SAAAAAAAABhMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/xIAAAAAAAD/EgAAAAAAAAAAAAAAAPC/"
				],
				[
					1778,
					1,
					"paste",
					null,
					"AQAAACQTAAAAAAAAKxMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJBMAAAAAAAAkEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1779,
					1,
					"left_delete",
					null,
					"AQAAACoTAAAAAAAAKhMAAAAAAAABAAAAeA",
					"AQAAAAAAAAABAAAAKxMAAAAAAAArEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1780,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAACoTAAAAAAAAKxMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKhMAAAAAAAAqEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1787,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAKxMAAAAAAAArEwAAAAAAAAAAAAAAAPC/"
				],
				[
					1815,
					1,
					"cut",
					null,
					"AQAAAGMAAAAAAAAAYwAAAAAAAAAvAAAAaW1wb3J0IHsgTWF0cml4IH0gZnJvbSAnLi9saWIvZ2VvbS9tYXRyaXguanMnOwo",
					"AQAAAAAAAAABAAAAYwAAAAAAAACSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1816,
					2,
					"paste",
					null,
					"AgAAAGMAAAAAAAAAkgAAAAAAAAAAAAAAkgAAAAAAAADBAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwAAAAAAAABjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1821,
					1,
					"insert",
					{
						"characters": "Transforem"
					},
					"CwAAAJsAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACcAAAAAAAAAAYAAABNYXRyaXicAAAAAAAAAJ0AAAAAAAAAAAAAAJ0AAAAAAAAAngAAAAAAAAAAAAAAngAAAAAAAACfAAAAAAAAAAAAAACfAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAoQAAAAAAAAAAAAAAoQAAAAAAAACiAAAAAAAAAAAAAACiAAAAAAAAAKMAAAAAAAAAAAAAAKMAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAAClAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwAAAAAAAAChAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1822,
					2,
					"left_delete",
					null,
					"AgAAAKQAAAAAAAAApAAAAAAAAAABAAAAbaMAAAAAAAAAowAAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAApQAAAAAAAAClAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1823,
					1,
					"insert",
					{
						"characters": "ml"
					},
					"AgAAAKMAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAAClAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowAAAAAAAACjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1824,
					1,
					"left_delete",
					null,
					"AQAAAKQAAAAAAAAApAAAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAApQAAAAAAAAClAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1825,
					1,
					"insert",
					{
						"characters": "ationList"
					},
					"CQAAAKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACmAAAAAAAAAAAAAACmAAAAAAAAAKcAAAAAAAAAAAAAAKcAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACpAAAAAAAAAAAAAACpAAAAAAAAAKoAAAAAAAAAAAAAAKoAAAAAAAAAqwAAAAAAAAAAAAAAqwAAAAAAAACsAAAAAAAAAAAAAACsAAAAAAAAAK0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAAAAAAAAACkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1832,
					1,
					"insert",
					{
						"characters": "transformation"
					},
					"DwAAAMEAAAAAAAAAwgAAAAAAAAAAAAAAwgAAAAAAAADCAAAAAAAAAAYAAABtYXRyaXjCAAAAAAAAAMMAAAAAAAAAAAAAAMMAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADFAAAAAAAAAAAAAADFAAAAAAAAAMYAAAAAAAAAAAAAAMYAAAAAAAAAxwAAAAAAAAAAAAAAxwAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMkAAAAAAAAAAAAAAMkAAAAAAAAAygAAAAAAAAAAAAAAygAAAAAAAADLAAAAAAAAAAAAAADLAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAAzQAAAAAAAAAAAAAAzQAAAAAAAADOAAAAAAAAAAAAAADOAAAAAAAAAM8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQAAAAAAAADHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1851,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABkBAAAAAAAAGgEAAAAAAAAAAAAAGgEAAAAAAAAaAQAAAAAAACQAAAAvL2ltcG9ydCBVdGlsIGZyb20gJy4vbGliL3V0aWwuanMnOwo",
					"AQAAAAAAAAABAAAAGQEAAAAAAAA9AQAAAAAAAAAAAAAAAPC/"
				],
				[
					1868,
					1,
					"paste",
					null,
					"AgAAAJIAAAAAAAAAqgEAAAAAAAAAAAAAqgEAAAAAAACqAQAAAAAAAEMAAABpbXBvcnQgeyBUcmFuc2Zvcm1hdGlvbkxpc3QgfSBmcm9tICcuL2xpYi9nZW9tL3RyYW5zZm9ybWF0aW9uLmpzJzsK",
					"AQAAAAAAAAABAAAAkgAAAAAAAADVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1877,
					2,
					"right_delete",
					null,
					"AgAAAKsAAAAAAAAAqwAAAAAAAAAXAAAASW1tdXRhYmxlVHJhbnNmb3JtYXRpb26rAAAAAAAAAKsAAAAAAAAAAQAAACw",
					"AQAAAAAAAAABAAAAwgAAAAAAAACrAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1882,
					2,
					"right_delete",
					null,
					"AgAAALYAAAAAAAAAtgAAAAAAAAARAAAASW1tdXRhYmxlUm90YXRpb262AAAAAAAAALYAAAAAAAAAAQAAACw",
					"AQAAAAAAAAABAAAAtgAAAAAAAADHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1887,
					2,
					"right_delete",
					null,
					"AgAAAMQAAAAAAAAAxAAAAAAAAAAUAAAASW1tdXRhYmxlVHJhbnNsYXRpb27EAAAAAAAAAMQAAAAAAAAAAQAAACw",
					"AQAAAAAAAAABAAAAxAAAAAAAAADYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1892,
					2,
					"right_delete",
					null,
					"AgAAAM4AAAAAAAAAzgAAAAAAAAAQAAAASW1tdXRhYmxlU2NhbGluZ84AAAAAAAAAzgAAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAzgAAAAAAAADeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1897,
					2,
					"right_delete",
					null,
					"AgAAAOUAAAAAAAAA5QAAAAAAAAAdAAAASW1tdXRhYmxlTWF0cml4VHJhbnNmb3JtYXRpb27lAAAAAAAAAOUAAAAAAAAAAQAAACw",
					"AQAAAAAAAAABAAAA5QAAAAAAAAACAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1902,
					3,
					"left_delete",
					null,
					"AwAAAPoAAAAAAAAA+gAAAAAAAAAbAAAASW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0+QAAAAAAAAD5AAAAAAAAAAEAAAAg+AAAAAAAAAD4AAAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAA+gAAAAAAAAAVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					1907,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA+AAAAAAAAAD4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					1939,
					1,
					"cut",
					null,
					"AQAAAGMAAAAAAAAAYwAAAAAAAAAvAAAAaW1wb3J0IHsgTWF0cml4IH0gZnJvbSAnLi9saWIvZ2VvbS9tYXRyaXguanMnOwo",
					"AQAAAAAAAAABAAAAYwAAAAAAAACSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1940,
					2,
					"paste",
					null,
					"AgAAAGMAAAAAAAAAkgAAAAAAAAAAAAAAkgAAAAAAAADBAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYwAAAAAAAABjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1955,
					1,
					"insert",
					{
						"characters": "Element"
					},
					"CAAAAJsAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACcAAAAAAAAAAYAAABNYXRyaXicAAAAAAAAAJ0AAAAAAAAAAAAAAJ0AAAAAAAAAngAAAAAAAAAAAAAAngAAAAAAAACfAAAAAAAAAAAAAACfAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAoQAAAAAAAAAAAAAAoQAAAAAAAACiAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmwAAAAAAAAChAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1960,
					1,
					"insert",
					{
						"characters": "d0"
					},
					"AwAAALEAAAAAAAAAsgAAAAAAAAAAAAAAsgAAAAAAAACyAAAAAAAAAAQAAABnZW9tsgAAAAAAAACzAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsQAAAAAAAAC1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					1961,
					1,
					"left_delete",
					null,
					"AQAAALIAAAAAAAAAsgAAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAswAAAAAAAACzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1962,
					1,
					"insert",
					{
						"characters": "om"
					},
					"AgAAALIAAAAAAAAAswAAAAAAAAAAAAAAswAAAAAAAAC0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsgAAAAAAAACyAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1969,
					1,
					"insert",
					{
						"characters": "element"
					},
					"CAAAALUAAAAAAAAAtgAAAAAAAAAAAAAAtgAAAAAAAAC2AAAAAAAAAAYAAABtYXRyaXi2AAAAAAAAALcAAAAAAAAAAAAAALcAAAAAAAAAuAAAAAAAAAAAAAAAuAAAAAAAAAC5AAAAAAAAAAAAAAC5AAAAAAAAALoAAAAAAAAAAAAAALoAAAAAAAAAuwAAAAAAAAAAAAAAuwAAAAAAAAC8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtQAAAAAAAAC7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					1977,
					1,
					"insert",
					{
						"characters": "///"
					},
					"AwAAAJIAAAAAAAAAkwAAAAAAAAAAAAAAkwAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgAAAAAAAACSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1978,
					1,
					"left_delete",
					null,
					"AQAAAJQAAAAAAAAAlAAAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAlQAAAAAAAACVAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2040,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAMQAAAAAAAAAxQAAAAAAAAAAAAAAxQAAAAAAAADGAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAAAAAAAAADEAAAAAAAAAAAAAAAAAAAA"
				],
				[
					2077,
					2,
					"right_delete",
					null,
					"AgAAAMQAAAAAAAAAxAAAAAAAAAABAAAAL8QAAAAAAAAAxAAAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAxAAAAAAAAADEAAAAAAAAAAAAAAAAAAAA"
				],
				[
					2090,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAM0AAAAAAAAAzgAAAAAAAAAAAAAAzgAAAAAAAADOAAAAAAAAAEYAAABUcmFuc2Zvcm1hdGlvbiwgUm90YXRpb24sIFRyYW5zbGF0aW9uLCBTY2FsaW5nLCBNYXRyaXhUcmFuc2Zvcm1hdGlvbiwg",
					"AQAAAAAAAAABAAAAzQAAAAAAAAATAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2097,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAzgAAAAAAAADOAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2099,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAMQAAAAAAAAAxQAAAAAAAAAAAAAAxQAAAAAAAADGAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAAAAAAAAADEAAAAAAAAAAAAAAAAAAAA"
				],
				[
					2112,
					3,
					"left_delete",
					null,
					"AwAAAMYAAAAAAAAAxgAAAAAAAAABAAAAacUAAAAAAAAAxQAAAAAAAAABAAAAL8QAAAAAAAAAxAAAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAxwAAAAAAAADHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2113,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAMQAAAAAAAAAxQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAAAAAAAAADEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2122,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJ4BAAAAAAAAnwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAngEAAAAAAACeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2123,
					1,
					"insert",
					{
						"characters": " Trans"
					},
					"BgAAAJ8BAAAAAAAAoAEAAAAAAAAAAAAAoAEAAAAAAAChAQAAAAAAAAAAAAChAQAAAAAAAKIBAAAAAAAAAAAAAKIBAAAAAAAAowEAAAAAAAAAAAAAowEAAAAAAACkAQAAAAAAAAAAAACkAQAAAAAAAKUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnwEAAAAAAACfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					2124,
					1,
					"insert_completion",
					{
						"completion": "TransformationList",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "TransformationList"
					},
					"AgAAAKABAAAAAAAAoAEAAAAAAAAFAAAAVHJhbnOgAQAAAAAAALIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQEAAAAAAAClAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/async/events.js",
			"settings":
			{
				"buffer_size": 1468,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					15,
					3,
					"left_delete",
					null,
					"AwAAAA4AAAAAAAAADgAAAAAAAAAGAAAAZmlsdGVyDQAAAAAAAAANAAAAAAAAAAEAAAAgDAAAAAAAAAAMAAAAAAAAAAEAAAAs",
					"AQAAAAAAAAABAAAADgAAAAAAAAAUAAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"right_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAkAAAAaW1wb3J0IHsgbWFwIH0gZnJvbSAnLi9oZWxwZXJzLmpzJzsK",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC9BQAACi8vIEdlbmVyYXRlIGEgUHJvbWlzZSB0aGF0IGxpc3RlbnMgb25seSBvbmNlIGZvciBhbiBldmVudApleHBvcnQgZnVuY3Rpb24gb25jZShlbWl0dGVyLCAuLi5ldmVudHMpIHsKICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7CiAgICBldmVudHMuZm9yRWFjaCh0eXBlID0+IGVtaXR0ZXIuYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCBoYW5kbGVyLCB7IHBhc3NpdmU6IHRydWUgfSkpOwogICAgZnVuY3Rpb24gaGFuZGxlcihldmVudCkgewogICAgICBldmVudHMuZm9yRWFjaCh0eXBlID0+IGVtaXR0ZXIucmVtb3ZlRXZlbnRMaXN0ZW5lcih0eXBlLCBoYW5kbGVyLCB7IHBhc3NpdmU6IHRydWUgfSkpOwogICAgICByZXNvbHZlKGV2ZW50KTsKICAgIH0KICB9KTsKfQoKLy8gVHVybiBhbnkgZXZlbnQgZW1pdHRlciBpbnRvIGEgc3RyZWFtCmV4cG9ydCBhc3luYyBmdW5jdGlvbiogc3RyZWFtaWZ5KGV2ZW50LCBlbGVtZW50LCBjb25kID0gbGFzdCA9PiB0cnVlKSB7CiAgbGV0IGV2ZW50cyA9IEFycmF5LmlzQXJyYXkoZXZlbnQpID8gZXZlbnQgOiBbZXZlbnRdOwogIGxldCBsYXN0OwogIGRvIHsKICAgIHlpZWxkIChsYXN0ID0gYXdhaXQgb25jZShlbGVtZW50LCAuLi5ldmVudHMpKTsKICB9IHdoaWxlKGNvbmQobGFzdCkpOwp9CgovLyBPbmx5IHBhc3MgYWxvbmcgZXZlbnQgaWYgc29tZSB0aW1lIGhhcyBwYXNzZWQgc2luY2UgdGhlIGxhc3Qgb25lCmV4cG9ydCBhc3luYyBmdW5jdGlvbiogdGhyb3R0bGUoc3RyZWFtLCBkZWxheSkgewogIGxldCBsYXN0VGltZTsKICBsZXQgdGhpc1RpbWU7CiAgZm9yIGF3YWl0KGxldCBldmVudCBvZiBzdHJlYW0pIHsKICAgIHRoaXNUaW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7CiAgICBpZighbGFzdFRpbWUgfHwgdGhpc1RpbWUgLSBsYXN0VGltZSA+IGRlbGF5KSB7CiAgICAgIGxhc3RUaW1lID0gdGhpc1RpbWU7CiAgICAgIHlpZWxkIGV2ZW50OwogICAgfQogIH0KfQoKbGV0IGlkZW50aXR5ID0gZSA9PiBlOwoKLy8gT25seSBwYXNzIGFsb25nIGV2ZW50cyB0aGF0IGRpZmZlciBmcm9tIHRoZSBsYXN0IG9uZQpleHBvcnQgYXN5bmMgZnVuY3Rpb24qIGRpc3RpbmN0KHN0cmVhbSwgZXh0cmFjdCA9IGlkZW50aXR5KSB7CiAgbGV0IHByZXZpb3VzOwogIGxldCBjdXJyZW50OwogIGZvciBhd2FpdChsZXQgZXZlbnQgb2Ygc3RyZWFtKSB7CiAgICBjdXJyZW50ID0gZXh0cmFjdChldmVudCk7CiAgICBpZihjdXJyZW50ICE9PSBwcmV2aW91cykgewogICAgICBwcmV2aW91cyA9IGN1cnJlbnQ7CiAgICAgIHlpZWxkIGV2ZW50OwogICAgfQogIH0KfQoKLy8gSW52b2tlIGEgY2FsbGJhY2sgZXZlcnkgdGltZSBhbiBldmVudCBhcnJpdmVzCmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzdWJzY3JpYmUoc3RyZWFtLCBjYWxsYmFjaykgewogIGZvciBhd2FpdChsZXQgZXZlbnQgb2Ygc3RyZWFtKSBjYWxsYmFjayhldmVudCk7Cn0KCi8vIHJ1bigpOwoAAAAAAAAAALwFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/async/helpers.js",
			"settings":
			{
				"buffer_size": 1760,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					16,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAFACAAAAAAAAUgIAAAAAAAAAAAAA0QEAAAAAAADTAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAIAAAAAAADRAQAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAIEGAAAAAAAAgwYAAAAAAAAAAAAA8gUAAAAAAAD0BQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQYAAAAAAADyBQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAKMGAAAAAAAApAYAAAAAAAAAAAAApAYAAAAAAAClBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowYAAAAAAACjBgAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAMYGAAAAAAAAxwYAAAAAAAAAAAAAxwYAAAAAAADIBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxgYAAAAAAADGBgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/geom/transformation.js",
			"settings":
			{
				"buffer_size": 22785,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"",
				"Auto indent"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv",
		"/home/roman/Projects/plot-cv/lib",
		"/home/roman/Projects/plot-cv/lib/async"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/lib/crosskit.js",
		"/home/roman/Projects/plot-cv/fire-es.html",
		"/home/roman/Projects/plot-cv/lib/geom/transformation.js",
		"/home/roman/Projects/plot-cv/fire-es.js",
		"/home/roman/Projects/plot-cv/lib/async/helpers.js",
		"/home/roman/Projects/plot-cv/lib/async/events.js",
		"/home/roman/Projects/plot-cv/lib/async/timer.js",
		"/home/roman/Projects/plot-cv/lib/dom/element.js",
		"/home/roman/Projects/plot-cv/test-worker.js",
		"/home/roman/Projects/plot-cv/fire.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/promise-worker.js",
		"/home/roman/Projects/plot-cv/workerScript.js",
		"/home/roman/Projects/plot-cv/resolve-imports.js",
		"/home/roman/Projects/plot-cv/fire.es",
		"/home/roman/Projects/plot-cv/process-pool.js",
		"/home/roman/Projects/plot-cv/worker.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/fs.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/streams.js",
		"/home/roman/Projects/plot-cv/test-stream.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/cmake/QuickJSModule.cmake",
		"/home/roman/Projects/plot-cv/test-worker2.js",
		"/home/roman/Projects/quickjs.c",
		"/home/roman/Projects/plot-cv/static/css/upload.css",
		"/home/roman/Projects/plot-cv/object-helpers.js",
		"/home/roman/Projects/plot-cv/lib/eagle/boardRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/pad.js",
		"/home/roman/Projects/plot-cv/src/matrix.cpp",
		"/home/roman/Projects/plot-cv/lib/eagle/renderUtils.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/text.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/package.js",
		"/home/roman/Projects/plot-cv/lib/eagle/libraryRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/board.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/frame.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/element.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/pin.js",
		"/home/roman/Projects/an-tronics/eagle/AGC-Amplifier-LM13600-Stereo.sch",
		"/home/roman/Projects/plot-cv/lib/eagle/components/textElement.js",
		"/home/roman/Projects/plot-cv/ws-worker.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/symbol.js",
		"/home/roman/Projects/plot-cv/lib/geom/matrix.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/instance.js",
		"/home/roman/Projects/plot-cv/lib/eagle/schematicRenderer.js",
		"/home/roman/Projects/plot-cv/string-helpers.js",
		"/home/roman/Projects/plot-cv/AGC-Amplifier-LM13600-Stereo-schematic.svg",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_childprocess.js",
		"/home/roman/Projects/plot-cv/test-childprocess.js",
		"/home/roman/Projects/plot-cv/ol-helpers.js",
		"/home/roman/Projects/plot-cv/ol-map.js",
		"/home/roman/Projects/plot-cv/map.html",
		"/home/roman/Projects/plot-cv/upload.js",
		"/home/roman/Projects/plot-cv/os-helpers.js",
		"/home/roman/Projects/plot-cv/upload-server.js",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/debugger.js",
		"/home/roman/Projects/plot-cv/test-debuggerprotocol.js",
		"/home/roman/Projects/plot-cv/lib/eagle/node.js",
		"/home/roman/Projects/plot-cv/static/css/draw.css",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/draw.js",
		"/home/roman/Projects/plot-cv/lib/geom/point.js",
		"/home/roman/Projects/plot-cv/lib/geom/rect.js",
		"/home/roman/Projects/plot-cv/lib/geom/align.js",
		"/home/roman/Projects/plot-cv/lib/dom/css.js",
		"/home/roman/Projects/plot-cv/lib/geom/line.js",
		"/home/roman/Projects/plot-cv/lib/dom/svg.js",
		"/home/roman/Projects/plot-cv/lib/eagle/svgRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/wire.js",
		"/home/roman/Projects/plot-cv/lib/autoStore.js",
		"/home/roman/Projects/plot-cv/lib/lscache.js",
		"/home/roman/Projects/plot-cv/lib/dom/preactComponent.js",
		"/home/roman/Projects/plot-cv/draw.html",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/lib/eagle/element.js",
		"/home/roman/Projects/plot-cv/test-dom.js",
		"/home/roman/Projects/plot-cv/lib/eagle/elementProxy.js",
		"/home/roman/Projects/an-tronics/eagle/Mind-Synchronizing-Generator-PinHdrPot-Cinch.sch",
		"/home/roman/Projects/plot-cv/lib/eagle/ref.js",
		"/home/roman/Projects/plot-cv/lib/pointer.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/rect.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/drawing.js",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/lib/eagle/nodeList.js",
		"/home/roman/Projects/plot-cv/lib/eagle/nodeMap.js",
		"/home/roman/Projects/plot-cv/lib/eagle/document.js",
		"/home/roman/Projects/plot-cv/FM-Radio-Circuit-Mirrored-board.svg",
		"/home/roman/Projects/plot-cv/VCF-LM324-Stereo-board.svg",
		"/home/roman/Bilder/RaspberryPi-PICPgm/RaspberryPi-PICPgm.svg",
		"/home/roman/Projects/plot-cv/lib/eda/circuitjs.js",
		"/home/roman/Projects/plot-cv/filelist.js",
		"/home/roman/Projects/plot-cv/list-directory.js",
		"/home/roman/Projects/plot-cv/list.html",
		"/home/roman/Projects/plot-cv/test-renderer.js",
		"/home/roman/Projects/plot-cv/static/css/list.css",
		"/home/roman/Projects/plot-cv/test-mmap.js",
		"/home/roman/Schreibtisch/calc-angles.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-path.c",
		"/home/roman/Projects/plot-cv/lib/eagle/components/svg.js",
		"/home/roman/Projects/an-tronics/eagle/Mind-Synchronizing-Generator-PinHdrPot-Cinch.brd",
		"/home/roman/Projects/plot-cv/lib/eagle/components/via.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/signal.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/background.js",
		"/home/roman/Projects/plot-cv/eagle2svg.js",
		"/home/roman/Projects/plot-cv/lib/geom/bbox.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/wirePath.js",
		"/home/roman/Projects/plot-cv/upload-area.html",
		"/home/roman/Projects/plot-cv/lib/dom/layer.js",
		"/home/roman/Projects/plot-cv/static/css/ol-popup.css",
		"/home/roman/Projects/plot-cv/array-helpers.js",
		"/home/roman/Projects/plot-cv/blah.html",
		"/home/roman/Projects/plot-cv/upload.html",
		"/home/roman/Projects/plot-cv/xml2react.js",
		"/home/roman/Projects/plot-cv/ol-marker.js",
		"/home/roman/Projects/plot-cv/ft.js",
		"/home/roman/Projects/plot-cv/static/svg/gallery-icon.svg",
		"/home/roman/Projects/plot-cv/gallery-icon.svg",
		"/home/janos/Sources/plot-cv/upload.html",
		"/home/janos/Sources/plot-cv/quickjs/qjs-modules/doc/latex/structJSBinaryOperatorDefEntry.tex",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/xpath.js"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 146.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.js,-*/build/*,-*/inst/*",
			"/home/roman/Projects/plot-cv,*.js,-*/build/*",
			"/home/roman/Projects/plot-cv,*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"map\\(",
			"filter\\(",
			"Util\\(",
			"Util\\.",
			"identity",
			"streamify",
			"};,",
			"Return a new async iterator that applies a",
			"\nReturn a new async iterator that applies a",
			"Return a new async iterator that applies a",
			"Only pass along events that meet a condition",
			"function\\* filter",
			"filter",
			"TransformationList",
			"rect =",
			"MouseIterator",
			"MouseHandler",
			"relative",
			"getOpt",
			"getOPt",
			"g",
			"'h'",
			"getOpt",
			"rect =",
			"init\\(",
			"write err",
			"document",
			"init",
			"canvas",
			"pixels",
			"Util\\.",
			"fire",
			"Util\\.",
			"main\\(",
			"addEvent",
			"^const matrix =?",
			"matrix =?",
			"getOpt",
			"'test'",
			"434",
			"^(\\s*)(console)",
			"ReadableStream.pull",
			"^(\\s*)(console)",
			"^\\s*console",
			"setTime",
			"Timer",
			"CHILD",
			"console =",
			"'test'",
			"message",
			"jsm_module_locate",
			"jsm_stack_find",
			"jsm_module_loader",
			"orker",
			"SetModule",
			"package_json",
			"load_package",
			"module_package",
			"jsm_module_loader",
			"jsm_module_load",
			"jsm_module_loader",
			"package_json",
			"replOb",
			"jsm_init",
			"thread_local",
			"[^_a-z]module_loader",
			"module_loader",
			" module_loader =",
			"module_loader =",
			"module_loader",
			"package_js",
			"jsm_conte",
			"jsm_init",
			"jsm_context",
			"jsm_init_modules",
			"jsm_init",
			"initialized",
			"jsm_modules_initialized",
			"initialized",
			"jsm_init_modules",
			"jsm_inmit_modules",
			"jsm_con",
			"jsm_ini",
			"jsm_builtin",
			"jsm_modules_init",
			"jsm_builti",
			"jsm_builti8n",
			"jsm_init_modules",
			"jsm_built",
			"WorkerScript",
			"jsm_builtin_modules",
			"jsm_init_modules",
			"package_json",
			"SetModuleLoad",
			"extern_com",
			"thread_local",
			"jsm_stack",
			"thread_local",
			"jsm_stack",
			"mkstemp",
			"tempnam",
			"fopen",
			"fdopen",
			"write",
			"printF",
			"BUFF/IN",
			"useTransformation",
			"font-family",
			"font-size",
			"font-family",
			"dms2dec",
			"ParseCoordinates",
			"parseGPSLocation",
			"HeifConvert",
			"eifConvert",
			"HeifConvert",
			"Execute",
			"onHttp",
			"ParseCoordinates",
			"ParseCoo",
			"by_uuid",
			"Overlay",
			"ObjectWrapper",
			"parse[A-Z]",
			"parseGPS",
			"parseGPSLocation",
			"-radius",
			"FileList"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\\1//\\2",
			""
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 278,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/fire.js",
							"function_name_status_row": 4,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									332,
									347
								],
								[
									1017,
									1026
								],
								[
									1415,
									1436
								],
								[
									1479,
									1497
								],
								[
									1578,
									1597
								],
								[
									1653,
									1674
								],
								[
									1861,
									1878
								],
								[
									2271,
									2280
								],
								[
									2361,
									2384
								],
								[
									2811,
									2837
								],
								[
									3222,
									3251
								],
								[
									3674,
									3678
								],
								[
									3689,
									3695
								],
								[
									3713,
									3718
								],
								[
									3745,
									3749
								],
								[
									4255,
									4278
								],
								[
									4385,
									4408
								],
								[
									4472,
									4494
								],
								[
									4663,
									4689
								],
								[
									5441,
									5472
								],
								[
									5740,
									5767
								],
								[
									5896,
									5913
								]
							],
							"symlist":
							[
								"  main()",
								"(v, i) =>",
								"Loop()",
								"  log = (t, name) =>",
								"  fire = (...args) =>",
								"  redraw = (...args) =>",
								"Fire()",
								"(a, p) =>",
								"Redraw()",
								"CreatePalette()",
								"CreatePaletteHSL()",
								"  v =>",
								"\t() =>",
								"\tv =>",
								"  b =>",
								"RandomByte()",
								"Modulo(n, m)",
								"Blaze(x, y)",
								"MouseHandler(e)",
								"MouseIterator()",
								"ResizeHandler(e)",
								"Init()"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 3,
							"tabs_extra_last_activated": 1667836888.33,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "fire.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6305,
						"regions":
						{
						},
						"selection":
						[
							[
								434,
								434
							]
						],
						"settings":
						{
							"function_name_status_row": 8,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1667932817.57,
							"tabs_extra_last_activated_sheet_index": 0,
							"tabs_extra_moving":
							[
								2,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "lib/async/events.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1468,
						"regions":
						{
						},
						"selection":
						[
							[
								1304,
								1353
							]
						],
						"settings":
						{
							"function_name_status_row": 48,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1667932814.46,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 225.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/async/helpers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1760,
						"regions":
						{
						},
						"selection":
						[
							[
								1760,
								1760
							]
						],
						"settings":
						{
							"function_name_status_row": 69,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1667837068.75,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 444.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/geom/transformation.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22785,
						"regions":
						{
						},
						"selection":
						[
							[
								585,
								561
							]
						],
						"settings":
						{
							"function_name_status_row": 16,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1667837000.48,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.804001835481,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 0.0
	},
	"output.Debugger Console":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"transformation",
				"lib/geom/transformation.js"
			],
			[
				"element.",
				"lib/dom/element.js"
			],
			[
				"crosskit",
				"lib/crosskit.js"
			],
			[
				"fire-es",
				"fire-es.html"
			],
			[
				"lib/util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"resolve-im",
				"quickjs/qjs-modules/resolve-imports.js"
			],
			[
				"resolve",
				"resolve-imports.js"
			],
			[
				"fire-es.h",
				"fire-es.html"
			],
			[
				"fire.html",
				"fire.html"
			],
			[
				"fire.js",
				"fire.js"
			],
			[
				"fire-es.js",
				"fire-es.js"
			],
			[
				"fire.es",
				"fire.es"
			],
			[
				"",
				"test-worker.js"
			],
			[
				"quickjs",
				"qjs-opencv/cmake/QuickJSModule.cmake"
			],
			[
				"test-strea",
				"test-stream.js"
			],
			[
				"worker.js",
				"worker.js"
			],
			[
				"vector.h",
				"quickjs/qjs-modules/include/vector.h"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/src/qjsm.c"
			],
			[
				"quickjs-misc",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"fs.js",
				"quickjs/qjs-modules/lib/fs.js"
			],
			[
				"console.js",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"test-work",
				"test-worker.js"
			],
			[
				"worker",
				"worker.js"
			],
			[
				"workerSc",
				"workerScript.js"
			],
			[
				"wworker",
				"ws-worker.js"
			],
			[
				"matrix.js",
				"lib/geom/matrix.js"
			],
			[
				"matrix",
				"src/matrix.cpp"
			],
			[
				"test_chil",
				"quickjs/qjs-modules/tests/test_childprocess.js"
			],
			[
				"test-child",
				"test-childprocess.js"
			],
			[
				"string-he",
				"string-helpers.js"
			],
			[
				"os-help",
				"os-helpers.js"
			],
			[
				"object-help",
				"object-helpers.js"
			],
			[
				"ol-help",
				"ol-helpers.js"
			],
			[
				"ol-map",
				"ol-map.js"
			],
			[
				"map.html",
				"map.html"
			],
			[
				"upload.css",
				"static/css/upload.css"
			],
			[
				"upload.js",
				"upload.js"
			],
			[
				"upload-ser",
				"upload-server.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"test-debu",
				"test-debuggerprotocol.js"
			],
			[
				"node.js",
				"lib/eagle/node.js"
			],
			[
				"misc.",
				"lib/misc.js"
			],
			[
				"draw.css",
				"static/css/draw.css"
			],
			[
				"draw.js",
				"draw.js"
			],
			[
				"rect.js",
				"lib/geom/rect.js"
			],
			[
				"svg.js",
				"lib/dom/svg.js"
			],
			[
				"lscache",
				"lib/lscache.js"
			],
			[
				"autoStore",
				"lib/autoStore.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"preactCom",
				"lib/dom/preactComponent.js"
			],
			[
				"draw.html",
				"draw.html"
			],
			[
				"test-dom",
				"test-dom.js"
			],
			[
				"elemen",
				"lib/eagle/element.js"
			],
			[
				"eagle-shel",
				"eagle-shell.js"
			],
			[
				"io-help",
				"io-helpers.js"
			],
			[
				"list-dir",
				"list-directory.js"
			],
			[
				"test-mmap",
				"test-mmap.js"
			],
			[
				"list.cs",
				"static/css/list.css"
			],
			[
				"test-rend",
				"test-renderer.js"
			],
			[
				"list-dire",
				"list-directory.js"
			],
			[
				"list.html",
				"list.html"
			],
			[
				"drawin",
				"lib/eagle/components/drawing.js"
			],
			[
				"wire.js",
				"lib/eagle/components/wire.js"
			],
			[
				"io-he",
				"io-helpers.js"
			],
			[
				"circui",
				"lib/eda/circuitjs.js"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"document",
				"lib/eagle/document.js"
			],
			[
				"upload",
				"upload.js"
			],
			[
				"upload-server",
				"upload-server.js"
			],
			[
				"io-helper",
				"io-helpers.js"
			],
			[
				"eagle-shell",
				"eagle-shell.js"
			],
			[
				"quickjs-pa",
				"quickjs/qjs-modules/quickjs-path.c"
			],
			[
				"quickjs-path",
				"quickjs/qjs-modules/quickjs-path.c"
			],
			[
				"bbox",
				"lib/geom/bbox.js"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"eagle2sv",
				"eagle2svg.js"
			],
			[
				"bbox.js",
				"lib/geom/bbox.js"
			],
			[
				"eagle2svg",
				"eagle2svg.js"
			],
			[
				"object-he",
				"object-helpers.js"
			],
			[
				"ol-map.js",
				"ol-map.js"
			],
			[
				"xml2react",
				"xml2react.js"
			],
			[
				"layer.js",
				"lib/dom/layer.js"
			],
			[
				"gallery-i",
				"static/svg/gallery-icon.svg"
			],
			[
				"gallery-ic",
				"gallery-icon.svg"
			],
			[
				"rect.j",
				"lib/geom/rect.js"
			],
			[
				"ol-he",
				"ol-helpers.js"
			],
			[
				"uploa",
				"upload.html"
			],
			[
				"upload.cs",
				"static/css/upload.css"
			],
			[
				"list-exp",
				"list-exports.js"
			],
			[
				"xpath",
				"lib/xpath.js"
			],
			[
				"quickjs.h",
				"~/Projects/plot-cv/quickjs/quickjs.h"
			],
			[
				"xml.js",
				"lib/xml.js"
			],
			[
				"quickjs-deep",
				"quickjs-deep.c"
			],
			[
				"dom.js",
				"lib/dom.js"
			],
			[
				"lit-ex",
				"list-exports.js"
			],
			[
				"util",
				"lib/util.js"
			],
			[
				"dom",
				"lib/dom.js"
			],
			[
				"css3-",
				"lib/css3-selectors.js"
			],
			[
				"predicate.c",
				"src/predicate.c"
			],
			[
				"writ",
				"lib/xml/write.js"
			],
			[
				"xpath.js",
				"lib/xpath.js"
			],
			[
				"quickjs-bl",
				"quickjs-blob.c"
			],
			[
				"c.js",
				"lib/lexer/c.js"
			],
			[
				"console.j",
				"lib/console.js"
			],
			[
				"inspect",
				"quickjs-inspect.c"
			],
			[
				"quickjs-le",
				"quickjs-lexer.c"
			],
			[
				"deep.c",
				"quickjs-deep.c"
			],
			[
				"prop",
				"src/property-enumeration.c"
			],
			[
				"proper",
				"include/property-enumeration.h"
			],
			[
				"test_dom",
				"tests/test_dom.js"
			],
			[
				"quickjs-socket",
				"quickjs-sockets.c"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"predicate.h",
				"include/predicate.h"
			],
			[
				"quickjs-pred",
				"quickjs-predicate.c"
			],
			[
				"test_pred",
				"tests/test_predicate.js"
			],
			[
				"utils.h",
				"include/utils.h"
			],
			[
				"utils.c",
				"src/utils.c"
			],
			[
				"char-u",
				"include/char-utils.h"
			],
			[
				"path.h",
				"include/path.h"
			],
			[
				"vecto",
				"src/vector.c"
			],
			[
				"events",
				"lib/events.js"
			],
			[
				"console",
				"lib/console.js"
			],
			[
				"extract",
				"extract-structs.js"
			],
			[
				"test_lexe",
				"tests/test_lexer.js"
			],
			[
				"test_css",
				"tests/test_css3_selectors.js"
			],
			[
				"events.j",
				"lib/events.js"
			],
			[
				"test_xml",
				"tests/test_xml.js"
			],
			[
				"qjsm",
				"src/qjsm.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 970.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 248.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
