{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"PaStream",
				"PaStreamParameters"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"PaE",
				"PaHostErrorInfo"
			],
			[
				"hostApi",
				"hostApiSpecificStreamInfo"
			],
			[
				"host",
				"hostApiType"
			],
			[
				"defaultHi",
				"defaultHighOutputLatency"
			],
			[
				"Draw",
				"DrawCircle"
			],
			[
				"exi",
				"existsSync"
			],
			[
				"text",
				"text-decoration"
			],
			[
				"crea",
				"createTextNode"
			],
			[
				"Transform",
				"TransformationList"
			],
			[
				"trans",
				"transformation"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  decorate(decorators, obj, ...args)\n  scriptName = (arg = scriptArgs[0]) =>\n() =>\n  signalName = n =>\n  checkChildExited(child)\nGetLoc(node)\nLoadAST(source)\nStartREPL(prefix = \n, suffix = '')\n  .show = arg =>\n  k =>\n  k =>\n  item =>\n(acc, keys, i) =>\nStartDebugger(args, connect, address)\nConnectDebugger(address, skipToMain = true, callback)\n  process(callback)\n  sendMessage(msg)\nLaunchDebugger(dbg, skipToMain = true)\n(...args) =>\n() =>\nDebuggerDispatcher\n  value(name)\n  v =>\nPrintStackFrame(frame)\n  f =>\nPrintStack(stack)\n(member, obj, prop) =>\n  breakpoints(...args)\n  b =>\n  stackTrace(frame)\n  frame =>\n  scopes(n)\n  waitRun()\n  variables(n, depth = 0)\n  add = item =>\n  toString()\nDebuggerDispatcher\n(port = 8777) =>\n() =>\nNewDebugger(args, skipToMain = false, address)\n  kill: () =>\nOnStopped(msg)\nURLWorker(script)\n  dataURL = s =>\n(push, stop) =>\n  postMessage: msg =>\n  main(...args)\n(a, v) =>\n(v, pv, o) =>\n(v, pv, o) =>\n  createWS(url, callbacks, listen)\n() =>\n(level, str) =>\n  config(req, res)\n  files(req, res)\n  f =>\n  onConnect(ws, req)\n  value: function sendMessage(msg)\n  onClose(ws)\n  onError(ws)\n  onRequest(req, resp)\n(match, p1, p0, p2, p3, offset) =>\n  onMessage(ws, data)\n  handleCommand(ws, data)\n  forward = (fd, name) =>\nbuf =>\n() =>\n(dbg, sock) =>\n  frame =>\n() =>\n  showSessions()\n  get connections()\n  ws =>\n  get socklist()\n  get file()\n(file, source) =>\n() =>\ns =>\n() =>\n  m =>\n  line(i, j)\n  match(re)\n  fns =>\n({ name }) =>\n  functions()\n([name, loc, params, expression, path]) =>\n  repeat(cond, fn, ...args)\n  cond = (r, i) =>\n  quit(why)",
			"settings":
			{
				"buffer_size": 1579,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					337,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1632,
								1675
							],
							[
								2024,
								2061
							],
							[
								2128,
								2133
							],
							[
								2421,
								2438
							],
							[
								2834,
								2866
							],
							[
								3029,
								3050
							],
							[
								3243,
								3273
							],
							[
								3644,
								3672
							],
							[
								3684,
								3698
							],
							[
								3957,
								3971
							],
							[
								4453,
								4457
							],
							[
								4504,
								4508
							],
							[
								4705,
								4712
							],
							[
								4739,
								4756
							],
							[
								5030,
								5077
							],
							[
								5602,
								5670
							],
							[
								6220,
								6243
							],
							[
								7400,
								7422
							],
							[
								7866,
								7913
							],
							[
								8079,
								8097
							],
							[
								8593,
								8604
							],
							[
								8928,
								8946
							],
							[
								9047,
								9064
							],
							[
								9238,
								9242
							],
							[
								9317,
								9354
							],
							[
								9514,
								9518
							],
							[
								9863,
								9895
							],
							[
								10064,
								10088
							],
							[
								10102,
								10128
							],
							[
								10439,
								10443
							],
							[
								10798,
								10821
							],
							[
								10879,
								10887
							],
							[
								11067,
								11082
							],
							[
								11446,
								11461
							],
							[
								11844,
								11873
							],
							[
								11963,
								11976
							],
							[
								12677,
								12687
							],
							[
								12830,
								12848
							],
							[
								12880,
								12898
							],
							[
								12899,
								12906
							],
							[
								12939,
								13000
							],
							[
								13267,
								13278
							],
							[
								13427,
								13456
							],
							[
								13674,
								13700
							],
							[
								13711,
								13725
							],
							[
								13942,
								13957
							],
							[
								13987,
								14006
							],
							[
								14035,
								14057
							],
							[
								14370,
								14380
							],
							[
								14588,
								14602
							],
							[
								14656,
								14670
							],
							[
								15763,
								15806
							],
							[
								16000,
								16006
							],
							[
								16019,
								16035
							],
							[
								17609,
								17645
							],
							[
								17833,
								17868
							],
							[
								18008,
								18012
							],
							[
								18139,
								18157
							],
							[
								18311,
								18349
							],
							[
								18736,
								18747
							],
							[
								18902,
								18913
							],
							[
								18973,
								18993
							],
							[
								19582,
								19617
							],
							[
								20020,
								20039
							],
							[
								20147,
								20185
							],
							[
								21137,
								21160
							],
							[
								21198,
								21205
							],
							[
								21785,
								21790
							],
							[
								23006,
								23021
							],
							[
								25033,
								25041
							],
							[
								25979,
								25985
							],
							[
								26390,
								26415
							],
							[
								26738,
								26755
							],
							[
								26799,
								26804
							],
							[
								26829,
								26843
							],
							[
								27189,
								27199
							],
							[
								27323,
								27340
							],
							[
								27372,
								27387
							],
							[
								27430,
								27444
							],
							[
								27448,
								27463
							],
							[
								27606,
								27610
							],
							[
								27687,
								27697
							],
							[
								28185,
								28194
							],
							[
								28310,
								28316
							],
							[
								28374,
								28387
							],
							[
								28602,
								28619
							],
							[
								28736,
								28778
							],
							[
								29143,
								29174
							],
							[
								29256,
								29272
							],
							[
								29455,
								29475
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"frame =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAArBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgZnJhbWUgPT4KKCkgPT4KICBzaG93U2Vzc2lvbnMoKQogIGdldCBjb25uZWN0aW9ucygpCiAgd3MgPT4KICBnZXQgc29ja2xpc3QoKQogIGdldCBmaWxlKCkKKGZpbGUsIHNvdXJjZSkgPT4KKCkgPT4KcyA9PgooKSA9PgogIG0gPT4KICBsaW5lKGksIGopCiAgbWF0Y2gocmUpCiAgZm5zID0+Cih7IG5hbWUgfSkgPT4KICBmdW5jdGlvbnMoKQooW25hbWUsIGxvYywgcGFyYW1zLCBleHByZXNzaW9uLCBwYXRoXSkgPT4KICByZXBlYXQoY29uZCwgZm4sIC4uLmFyZ3MpCiAgY29uZCA9IChyLCBpKSA9PgogIHF1aXQod2h5KQAAAAAAAAAAKwYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsGAAAgIGRlY29yYXRlKGRlY29yYXRvcnMsIG9iaiwgLi4uYXJncykKICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+CiAgc2lnbmFsTmFtZSA9IG4gPT4KICBjaGVja0NoaWxkRXhpdGVkKGNoaWxkKQpHZXRMb2Mobm9kZSkKTG9hZEFTVChzb3VyY2UpClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICAuc2hvdyA9IGFyZyA9PgogIGsgPT4KICBrID0+CiAgaXRlbSA9PgooYWNjLCBrZXlzLCBpKSA9PgpTdGFydERlYnVnZ2VyKGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MpCkNvbm5lY3REZWJ1Z2dlcihhZGRyZXNzLCBza2lwVG9NYWluID0gdHJ1ZSwgY2FsbGJhY2spCiAgcHJvY2VzcyhjYWxsYmFjaykKICBzZW5kTWVzc2FnZShtc2cpCkxhdW5jaERlYnVnZ2VyKGRiZywgc2tpcFRvTWFpbiA9IHRydWUpCiguLi5hcmdzKSA9PgooKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKICB2YWx1ZShuYW1lKQogIHYgPT4KUHJpbnRTdGFja0ZyYW1lKGZyYW1lKQogIGYgPT4KUHJpbnRTdGFjayhzdGFjaykKKG1lbWJlciwgb2JqLCBwcm9wKSA9PgogIGJyZWFrcG9pbnRzKC4uLmFyZ3MpCiAgYiA9PgogIHN0YWNrVHJhY2UoZnJhbWUpCiAgZnJhbWUgPT4KICBzY29wZXMobikKICB3YWl0UnVuKCkKICB2YXJpYWJsZXMobiwgZGVwdGggPSAwKQogIGFkZCA9IGl0ZW0gPT4KICB0b1N0cmluZygpCkRlYnVnZ2VyRGlzcGF0Y2hlcgoocG9ydCA9IDg3NzcpID0+CigpID0+Ck5ld0RlYnVnZ2VyKGFyZ3MsIHNraXBUb01haW4gPSBmYWxzZSwgYWRkcmVzcykKICBraWxsOiAoKSA9PgpPblN0b3BwZWQobXNnKQpVUkxXb3JrZXIoc2NyaXB0KQogIGRhdGFVUkwgPSBzID0+CihwdXNoLCBzdG9wKSA9PgogIHBvc3RNZXNzYWdlOiBtc2cgPT4KICBtYWluKC4uLmFyZ3MpCihhLCB2KSA9PgoodiwgcHYsIG8pID0+Cih2LCBwdiwgbykgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKQooKSA9PgoobGV2ZWwsIHN0cikgPT4KICBjb25maWcocmVxLCByZXMpCiAgZmlsZXMocmVxLCByZXMpCiAgZiA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIHZhbHVlOiBmdW5jdGlvbiBzZW5kTWVzc2FnZShtc2cpCiAgb25DbG9zZSh3cykKICBvbkVycm9yKHdzKQogIG9uUmVxdWVzdChyZXEsIHJlc3ApCihtYXRjaCwgcDEsIHAwLCBwMiwgcDMsIG9mZnNldCkgPT4KICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICBmb3J3YXJkID0gKGZkLCBuYW1lKSA9PgpidWYgPT4KKCkgPT4KKGRiZywgc29jaykgPT4KICBmcmFtZSA9PgooKSA9PgogIHNob3dTZXNzaW9ucygpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICB3cyA9PgogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAArBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwYAACAgZGVjb3JhdGUoZGVjb3JhdG9ycywgb2JqLCAuLi5hcmdzKQogIHNjcmlwdE5hbWUgPSAoYXJnID0gc2NyaXB0QXJnc1swXSkgPT4KKCkgPT4KICBzaWduYWxOYW1lID0gbiA9PgogIGNoZWNrQ2hpbGRFeGl0ZWQoY2hpbGQpCkdldExvYyhub2RlKQpMb2FkQVNUKHNvdXJjZSkKU3RhcnRSRVBMKHByZWZpeCA9IAosIHN1ZmZpeCA9ICcnKQogIC5zaG93ID0gYXJnID0+CiAgayA9PgogIGsgPT4KICBpdGVtID0+CihhY2MsIGtleXMsIGkpID0+ClN0YXJ0RGVidWdnZXIoYXJncywgY29ubmVjdCwgYWRkcmVzcykKQ29ubmVjdERlYnVnZ2VyKGFkZHJlc3MsIHNraXBUb01haW4gPSB0cnVlLCBjYWxsYmFjaykKICBwcm9jZXNzKGNhbGxiYWNrKQogIHNlbmRNZXNzYWdlKG1zZykKTGF1bmNoRGVidWdnZXIoZGJnLCBza2lwVG9NYWluID0gdHJ1ZSkKKC4uLmFyZ3MpID0+CigpID0+CkRlYnVnZ2VyRGlzcGF0Y2hlcgogIHZhbHVlKG5hbWUpCiAgdiA9PgpQcmludFN0YWNrRnJhbWUoZnJhbWUpCiAgZiA9PgpQcmludFN0YWNrKHN0YWNrKQoobWVtYmVyLCBvYmosIHByb3ApID0+CiAgYnJlYWtwb2ludHMoLi4uYXJncykKICBiID0+CiAgc3RhY2tUcmFjZShmcmFtZSkKICBmcmFtZSA9PgogIHNjb3BlcyhuKQogIHdhaXRSdW4oKQogIHZhcmlhYmxlcyhuLCBkZXB0aCA9IDApCiAgYWRkID0gaXRlbSA9PgogIHRvU3RyaW5nKCkKRGVidWdnZXJEaXNwYXRjaGVyCihwb3J0ID0gODc3NykgPT4KKCkgPT4KTmV3RGVidWdnZXIoYXJncywgc2tpcFRvTWFpbiA9IGZhbHNlLCBhZGRyZXNzKQogIGtpbGw6ICgpID0+Ck9uU3RvcHBlZChtc2cpClVSTFdvcmtlcihzY3JpcHQpCiAgZGF0YVVSTCA9IHMgPT4KKHB1c2gsIHN0b3ApID0+CiAgcG9zdE1lc3NhZ2U6IG1zZyA9PgogIG1haW4oLi4uYXJncykKKGEsIHYpID0+Cih2LCBwdiwgbykgPT4KKHYsIHB2LCBvKSA9PgogIGNyZWF0ZVdTKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pCigpID0+CihsZXZlbCwgc3RyKSA9PgogIGNvbmZpZyhyZXEsIHJlcykKICBmaWxlcyhyZXEsIHJlcykKICBmID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgdmFsdWU6IGZ1bmN0aW9uIHNlbmRNZXNzYWdlKG1zZykKICBvbkNsb3NlKHdzKQogIG9uRXJyb3Iod3MpCiAgb25SZXF1ZXN0KHJlcSwgcmVzcCkKKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBoYW5kbGVDb21tYW5kKHdzLCBkYXRhKQogIGZvcndhcmQgPSAoZmQsIG5hbWUpID0+CmJ1ZiA9PgooKSA9PgooZGJnLCBzb2NrKSA9PgogIGZyYW1lID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACsGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					338,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1632,
								1675
							],
							[
								2024,
								2061
							],
							[
								2128,
								2133
							],
							[
								2421,
								2438
							],
							[
								2834,
								2866
							],
							[
								3029,
								3050
							],
							[
								3243,
								3273
							],
							[
								3644,
								3672
							],
							[
								3684,
								3698
							],
							[
								3957,
								3971
							],
							[
								4453,
								4457
							],
							[
								4504,
								4508
							],
							[
								4705,
								4712
							],
							[
								4739,
								4756
							],
							[
								5030,
								5077
							],
							[
								5602,
								5670
							],
							[
								6220,
								6243
							],
							[
								7400,
								7422
							],
							[
								7866,
								7913
							],
							[
								8079,
								8097
							],
							[
								8593,
								8604
							],
							[
								8928,
								8946
							],
							[
								9047,
								9064
							],
							[
								9238,
								9242
							],
							[
								9317,
								9354
							],
							[
								9514,
								9518
							],
							[
								9863,
								9895
							],
							[
								10064,
								10088
							],
							[
								10102,
								10128
							],
							[
								10439,
								10443
							],
							[
								10798,
								10821
							],
							[
								10879,
								10887
							],
							[
								11067,
								11082
							],
							[
								11446,
								11461
							],
							[
								11844,
								11873
							],
							[
								11963,
								11976
							],
							[
								12677,
								12687
							],
							[
								12830,
								12848
							],
							[
								12880,
								12898
							],
							[
								12899,
								12906
							],
							[
								12939,
								13000
							],
							[
								13267,
								13278
							],
							[
								13427,
								13456
							],
							[
								13674,
								13700
							],
							[
								13711,
								13725
							],
							[
								13942,
								13957
							],
							[
								13987,
								14006
							],
							[
								14035,
								14057
							],
							[
								14370,
								14380
							],
							[
								14588,
								14602
							],
							[
								14656,
								14670
							],
							[
								15763,
								15806
							],
							[
								16000,
								16006
							],
							[
								16019,
								16035
							],
							[
								17609,
								17645
							],
							[
								17833,
								17868
							],
							[
								18008,
								18012
							],
							[
								18139,
								18157
							],
							[
								18311,
								18349
							],
							[
								18736,
								18747
							],
							[
								18902,
								18913
							],
							[
								18973,
								18993
							],
							[
								19582,
								19617
							],
							[
								20020,
								20039
							],
							[
								20147,
								20185
							],
							[
								21137,
								21160
							],
							[
								21198,
								21205
							],
							[
								21785,
								21790
							],
							[
								23006,
								23021
							],
							[
								25033,
								25041
							],
							[
								25979,
								25985
							],
							[
								26390,
								26415
							],
							[
								26738,
								26755
							],
							[
								26799,
								26804
							],
							[
								26829,
								26843
							],
							[
								27189,
								27199
							],
							[
								27323,
								27340
							],
							[
								27372,
								27387
							],
							[
								27430,
								27444
							],
							[
								27448,
								27463
							],
							[
								27606,
								27610
							],
							[
								27687,
								27697
							],
							[
								28185,
								28194
							],
							[
								28310,
								28316
							],
							[
								28374,
								28387
							],
							[
								28602,
								28619
							],
							[
								28736,
								28778
							],
							[
								29143,
								29174
							],
							[
								29256,
								29272
							],
							[
								29455,
								29475
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"frame =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgZnJhbWUgPT4KKCkgPT4KICBzaG93U2Vzc2lvbnMoKQogIGdldCBjb25uZWN0aW9ucygpCiAgd3MgPT4KICBnZXQgc29ja2xpc3QoKQogIGdldCBmaWxlKCkKKGZpbGUsIHNvdXJjZSkgPT4KKCkgPT4KcyA9PgooKSA9PgogIG0gPT4KICBsaW5lKGksIGopCiAgbWF0Y2gocmUpCiAgZm5zID0+Cih7IG5hbWUgfSkgPT4KICBmdW5jdGlvbnMoKQooW25hbWUsIGxvYywgcGFyYW1zLCBleHByZXNzaW9uLCBwYXRoXSkgPT4KICByZXBlYXQoY29uZCwgZm4sIC4uLmFyZ3MpCiAgY29uZCA9IChyLCBpKSA9PgogIHF1aXQod2h5KQAAAAAAAAAAKwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					339,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								515,
								519
							],
							[
								536,
								569
							],
							[
								1225,
								1234
							],
							[
								1490,
								1531
							],
							[
								2185,
								2194
							],
							[
								2485,
								2503
							],
							[
								2586,
								2592
							],
							[
								2627,
								2651
							],
							[
								2697,
								2714
							],
							[
								2849,
								2861
							],
							[
								4158,
								4162
							],
							[
								4315,
								4319
							],
							[
								4745,
								4759
							],
							[
								4839,
								4854
							],
							[
								4935,
								4947
							],
							[
								5025,
								5041
							],
							[
								5124,
								5139
							],
							[
								5460,
								5467
							],
							[
								5515,
								5554
							],
							[
								5639,
								5675
							],
							[
								5789,
								5793
							],
							[
								6056,
								6091
							],
							[
								6180,
								6229
							],
							[
								6475,
								6496
							],
							[
								6571,
								6589
							],
							[
								6674,
								6689
							],
							[
								6760,
								6770
							],
							[
								6791,
								6798
							],
							[
								6837,
								6901
							],
							[
								7019,
								7045
							],
							[
								7084,
								7096
							],
							[
								7213,
								7231
							],
							[
								7314,
								7332
							],
							[
								7358,
								7387
							],
							[
								7726,
								7759
							],
							[
								7830,
								7834
							],
							[
								7836,
								7840
							],
							[
								7963,
								7969
							],
							[
								7971,
								7975
							],
							[
								8075,
								8079
							],
							[
								8081,
								8085
							],
							[
								8136,
								8140
							],
							[
								8175,
								8179
							],
							[
								8570,
								8599
							],
							[
								8681,
								8686
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"e =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"async breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {}, request_seq = ++this.#seq)",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgZnJhbWUgPT4KKCkgPT4KICBzaG93U2Vzc2lvbnMoKQogIGdldCBjb25uZWN0aW9ucygpCiAgd3MgPT4KICBnZXQgc29ja2xpc3QoKQogIGdldCBmaWxlKCkKKGZpbGUsIHNvdXJjZSkgPT4KKCkgPT4KcyA9PgooKSA9PgogIG0gPT4KICBsaW5lKGksIGopCiAgbWF0Y2gocmUpCiAgZm5zID0+Cih7IG5hbWUgfSkgPT4KICBmdW5jdGlvbnMoKQooW25hbWUsIGxvYywgcGFyYW1zLCBleHByZXNzaW9uLCBwYXRoXSkgPT4KICByZXBlYXQoY29uZCwgZm4sIC4uLmFyZ3MpCiAgY29uZCA9IChyLCBpKSA9PgogIHF1aXQod2h5KQAAAAAAAAAA2QIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					340,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADZAgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIGUgPT4KICByID0+CiAgc3RlcEluKCkKICBzdGVwT3V0KCkKICBuZXh0KCkKICBjb250aW51ZSgpCiAgd2FpdFJ1bigpCiAgcGF1c2UoKQogIHN0b3BPbkV4Y2VwdGlvbihzdG9wT25FeGNlcHRpb24gPSB0cnVlKQogIGJyZWFrcG9pbnRzKHBhdGgsIGJyZWFrcG9pbnRzKQogIG4gPT4KICBldmFsdWF0ZShmcmFtZUlkLCBleHByZXNzaW9uKQogIHZhcmlhYmxlcyh2YXJpYWJsZXNSZWZlcmVuY2UsIG9wdGlvbnMgPSB7fSkKICBzY29wZXMoZnJhbWVJZCkKICBzdGFja1RyYWNlKCkKICB3YWl0RXZlbnQobmFtZSkKICByZXNvbHZlID0+CmFyZyA9PgogIHNlbmRSZXF1ZXN0KGNvbW1hbmQsIGFyZ3MgPSB7fSwgcmVxdWVzdF9zZXEgPSArK3RoaXMuI3NlcSkKKHJlc29sdmUsIHJlamVjdCkgPT4KcmVzcG9uc2UgPT4KRGVidWdnZXJEaXNwYXRjaGVyCkRlYnVnZ2VyRGlzcGF0Y2hlcgpHZXRBcmd1bWVudHMobm9kZSkKR2V0RnVuY3Rpb25OYW1lKGFzdCwgcCkKICBwID0+CiAgbiA9PgogIHB0ciA9PgogIG4gPT4KICBwID0+CiAgbiA9PgogIHMgPT4KICBzID0+CkZpbmRGdW5jdGlvbnMoYXN0KQp2ID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					341,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								515,
								519
							],
							[
								536,
								569
							],
							[
								1225,
								1234
							],
							[
								1490,
								1531
							],
							[
								2185,
								2194
							],
							[
								2485,
								2503
							],
							[
								2586,
								2592
							],
							[
								2627,
								2651
							],
							[
								2697,
								2714
							],
							[
								2849,
								2861
							],
							[
								4158,
								4162
							],
							[
								4315,
								4319
							],
							[
								4745,
								4759
							],
							[
								4839,
								4854
							],
							[
								4935,
								4947
							],
							[
								5025,
								5041
							],
							[
								5124,
								5139
							],
							[
								5460,
								5467
							],
							[
								5515,
								5554
							],
							[
								5639,
								5675
							],
							[
								5789,
								5793
							],
							[
								6056,
								6091
							],
							[
								6180,
								6229
							],
							[
								6475,
								6496
							],
							[
								6571,
								6589
							],
							[
								6674,
								6689
							],
							[
								6760,
								6770
							],
							[
								6791,
								6798
							],
							[
								6837,
								6901
							],
							[
								7019,
								7045
							],
							[
								7084,
								7096
							],
							[
								7213,
								7231
							],
							[
								7314,
								7332
							],
							[
								7358,
								7387
							],
							[
								7726,
								7759
							],
							[
								7830,
								7834
							],
							[
								7836,
								7840
							],
							[
								7963,
								7969
							],
							[
								7971,
								7975
							],
							[
								8075,
								8079
							],
							[
								8081,
								8085
							],
							[
								8136,
								8140
							],
							[
								8175,
								8179
							],
							[
								8570,
								8599
							],
							[
								8681,
								8686
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"e =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"async breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {}, request_seq = ++this.#seq)",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AwAAAAAAAAAAAAAA2QIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANkCAAAgIGMgPT4KVHJpdmlhbFRva2VuaXplcihpbnB1dCkKKG0sIGkpID0+ClRyaXZpYWxTeW50YXhIaWdobGlnaHRlcihpbnB1dCkKKG0sIGkpID0+CkRlYnVnZ2VyRGlzcGF0Y2hlcgooKSA9PgooeyBlcnJubywgbWVzc2FnZSB9KSA9PgogIGNvbnN0cnVjdG9yKGNvbm4pCiAgbXNnID0+CiAgZSA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9LCByZXF1ZXN0X3NlcSA9ICsrdGhpcy4jc2VxKQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAANkCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					342,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								515,
								519
							],
							[
								536,
								569
							],
							[
								1225,
								1234
							],
							[
								1490,
								1531
							],
							[
								2185,
								2194
							],
							[
								2485,
								2503
							],
							[
								2586,
								2592
							],
							[
								2627,
								2651
							],
							[
								2697,
								2714
							],
							[
								2849,
								2861
							],
							[
								4158,
								4162
							],
							[
								4315,
								4319
							],
							[
								4745,
								4759
							],
							[
								4839,
								4854
							],
							[
								4935,
								4947
							],
							[
								5025,
								5041
							],
							[
								5124,
								5139
							],
							[
								5460,
								5467
							],
							[
								5515,
								5554
							],
							[
								5639,
								5675
							],
							[
								5789,
								5793
							],
							[
								6061,
								6096
							],
							[
								6185,
								6234
							],
							[
								6480,
								6501
							],
							[
								6576,
								6594
							],
							[
								6679,
								6694
							],
							[
								6765,
								6775
							],
							[
								6796,
								6803
							],
							[
								6842,
								6906
							],
							[
								7024,
								7050
							],
							[
								7089,
								7101
							],
							[
								7218,
								7236
							],
							[
								7319,
								7337
							],
							[
								7363,
								7392
							],
							[
								7731,
								7764
							],
							[
								7835,
								7839
							],
							[
								7841,
								7845
							],
							[
								7968,
								7974
							],
							[
								7976,
								7980
							],
							[
								8080,
								8084
							],
							[
								8086,
								8090
							],
							[
								8141,
								8145
							],
							[
								8180,
								8184
							],
							[
								8575,
								8604
							],
							[
								8686,
								8691
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"e =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"async breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {}, request_seq = ++this.#seq)",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"CAAAAAAAAAAAAAAAAAAAAAAAAADZAgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIGUgPT4KICByID0+CiAgc3RlcEluKCkKICBzdGVwT3V0KCkKICBuZXh0KCkKICBjb250aW51ZSgpCiAgd2FpdFJ1bigpCiAgcGF1c2UoKQogIHN0b3BPbkV4Y2VwdGlvbihzdG9wT25FeGNlcHRpb24gPSB0cnVlKQogIGJyZWFrcG9pbnRzKHBhdGgsIGJyZWFrcG9pbnRzKQogIG4gPT4KICBldmFsdWF0ZShmcmFtZUlkLCBleHByZXNzaW9uKQogIHZhcmlhYmxlcyh2YXJpYWJsZXNSZWZlcmVuY2UsIG9wdGlvbnMgPSB7fSkKICBzY29wZXMoZnJhbWVJZCkKICBzdGFja1RyYWNlKCkKICB3YWl0RXZlbnQobmFtZSkKICByZXNvbHZlID0+CmFyZyA9PgogIHNlbmRSZXF1ZXN0KGNvbW1hbmQsIGFyZ3MgPSB7fSwgcmVxdWVzdF9zZXEgPSArK3RoaXMuI3NlcSkKKHJlc29sdmUsIHJlamVjdCkgPT4KcmVzcG9uc2UgPT4KRGVidWdnZXJEaXNwYXRjaGVyCkRlYnVnZ2VyRGlzcGF0Y2hlcgpHZXRBcmd1bWVudHMobm9kZSkKR2V0RnVuY3Rpb25OYW1lKGFzdCwgcCkKICBwID0+CiAgbiA9PgogIHB0ciA9PgogIG4gPT4KICBwID0+CiAgbiA9PgogIHMgPT4KICBzID0+CkZpbmRGdW5jdGlvbnMoYXN0KQp2ID0+AAAAAAAAAADZAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2QIAACAgYyA9PgpUcml2aWFsVG9rZW5pemVyKGlucHV0KQoobSwgaSkgPT4KVHJpdmlhbFN5bnRheEhpZ2hsaWdodGVyKGlucHV0KQoobSwgaSkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCigpID0+Cih7IGVycm5vLCBtZXNzYWdlIH0pID0+CiAgY29uc3RydWN0b3IoY29ubikKICBtc2cgPT4KICBlID0+CiAgciA9PgogIHN0ZXBJbigpCiAgc3RlcE91dCgpCiAgbmV4dCgpCiAgY29udGludWUoKQogIHdhaXRSdW4oKQogIHBhdXNlKCkKICBzdG9wT25FeGNlcHRpb24oc3RvcE9uRXhjZXB0aW9uID0gdHJ1ZSkKICBicmVha3BvaW50cyhwYXRoLCBicmVha3BvaW50cykKICBuID0+CiAgZXZhbHVhdGUoZnJhbWVJZCwgZXhwcmVzc2lvbikKICB2YXJpYWJsZXModmFyaWFibGVzUmVmZXJlbmNlLCBvcHRpb25zID0ge30pCiAgc2NvcGVzKGZyYW1lSWQpCiAgc3RhY2tUcmFjZSgpCiAgd2FpdEV2ZW50KG5hbWUpCiAgcmVzb2x2ZSA9PgphcmcgPT4KICBzZW5kUmVxdWVzdChjb21tYW5kLCBhcmdzID0ge30sIHJlcXVlc3Rfc2VxID0gKyt0aGlzLiNzZXEpCihyZXNvbHZlLCByZWplY3QpID0+CnJlc3BvbnNlID0+CkRlYnVnZ2VyRGlzcGF0Y2hlcgpEZWJ1Z2dlckRpc3BhdGNoZXIKR2V0QXJndW1lbnRzKG5vZGUpCkdldEZ1bmN0aW9uTmFtZShhc3QsIHApCiAgcCA9PgogIG4gPT4KICBwdHIgPT4KICBuID0+CiAgcCA9PgogIG4gPT4KICBzID0+CiAgcyA9PgpGaW5kRnVuY3Rpb25zKGFzdCkKdiA9PgAAAAAAAAAA2QIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANkCAAAgIGMgPT4KVHJpdmlhbFRva2VuaXplcihpbnB1dCkKKG0sIGkpID0+ClRyaXZpYWxTeW50YXhIaWdobGlnaHRlcihpbnB1dCkKKG0sIGkpID0+CkRlYnVnZ2VyRGlzcGF0Y2hlcgooKSA9PgooeyBlcnJubywgbWVzc2FnZSB9KSA9PgogIGNvbnN0cnVjdG9yKGNvbm4pCiAgbXNnID0+CiAgZSA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9LCByZXF1ZXN0X3NlcSA9ICsrdGhpcy4jc2VxKQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAANkCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADZAgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIGUgPT4KICByID0+CiAgc3RlcEluKCkKICBzdGVwT3V0KCkKICBuZXh0KCkKICBjb250aW51ZSgpCiAgd2FpdFJ1bigpCiAgcGF1c2UoKQogIHN0b3BPbkV4Y2VwdGlvbihzdG9wT25FeGNlcHRpb24gPSB0cnVlKQogIGJyZWFrcG9pbnRzKHBhdGgsIGJyZWFrcG9pbnRzKQogIG4gPT4KICBldmFsdWF0ZShmcmFtZUlkLCBleHByZXNzaW9uKQogIHZhcmlhYmxlcyh2YXJpYWJsZXNSZWZlcmVuY2UsIG9wdGlvbnMgPSB7fSkKICBzY29wZXMoZnJhbWVJZCkKICBzdGFja1RyYWNlKCkKICB3YWl0RXZlbnQobmFtZSkKICByZXNvbHZlID0+CmFyZyA9PgogIHNlbmRSZXF1ZXN0KGNvbW1hbmQsIGFyZ3MgPSB7fSwgcmVxdWVzdF9zZXEgPSArK3RoaXMuI3NlcSkKKHJlc29sdmUsIHJlamVjdCkgPT4KcmVzcG9uc2UgPT4KRGVidWdnZXJEaXNwYXRjaGVyCkRlYnVnZ2VyRGlzcGF0Y2hlcgpHZXRBcmd1bWVudHMobm9kZSkKR2V0RnVuY3Rpb25OYW1lKGFzdCwgcCkKICBwID0+CiAgbiA9PgogIHB0ciA9PgogIG4gPT4KICBwID0+CiAgbiA9PgogIHMgPT4KICBzID0+CkZpbmRGdW5jdGlvbnMoYXN0KQp2ID0+AAAAAAAAAADZAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					343,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								515,
								519
							],
							[
								536,
								569
							],
							[
								1225,
								1234
							],
							[
								1490,
								1531
							],
							[
								2185,
								2194
							],
							[
								2485,
								2503
							],
							[
								2586,
								2592
							],
							[
								2627,
								2651
							],
							[
								2697,
								2714
							],
							[
								2849,
								2861
							],
							[
								4158,
								4162
							],
							[
								4315,
								4319
							],
							[
								4745,
								4759
							],
							[
								4839,
								4854
							],
							[
								4935,
								4947
							],
							[
								5025,
								5041
							],
							[
								5124,
								5139
							],
							[
								5460,
								5467
							],
							[
								5515,
								5554
							],
							[
								5639,
								5675
							],
							[
								5789,
								5793
							],
							[
								6061,
								6096
							],
							[
								6185,
								6234
							],
							[
								6480,
								6501
							],
							[
								6576,
								6594
							],
							[
								6679,
								6694
							],
							[
								6765,
								6775
							],
							[
								6796,
								6803
							],
							[
								6842,
								6906
							],
							[
								7024,
								7050
							],
							[
								7089,
								7101
							],
							[
								7218,
								7236
							],
							[
								7319,
								7337
							],
							[
								7363,
								7392
							],
							[
								7731,
								7764
							],
							[
								7835,
								7839
							],
							[
								7841,
								7845
							],
							[
								7968,
								7974
							],
							[
								7976,
								7980
							],
							[
								8080,
								8084
							],
							[
								8086,
								8090
							],
							[
								8141,
								8145
							],
							[
								8180,
								8184
							],
							[
								8575,
								8604
							],
							[
								8686,
								8691
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"e =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"async breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {}, request_seq = ++this.#seq)",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAADZAgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIGUgPT4KICByID0+CiAgc3RlcEluKCkKICBzdGVwT3V0KCkKICBuZXh0KCkKICBjb250aW51ZSgpCiAgd2FpdFJ1bigpCiAgcGF1c2UoKQogIHN0b3BPbkV4Y2VwdGlvbihzdG9wT25FeGNlcHRpb24gPSB0cnVlKQogIGJyZWFrcG9pbnRzKHBhdGgsIGJyZWFrcG9pbnRzKQogIG4gPT4KICBldmFsdWF0ZShmcmFtZUlkLCBleHByZXNzaW9uKQogIHZhcmlhYmxlcyh2YXJpYWJsZXNSZWZlcmVuY2UsIG9wdGlvbnMgPSB7fSkKICBzY29wZXMoZnJhbWVJZCkKICBzdGFja1RyYWNlKCkKICB3YWl0RXZlbnQobmFtZSkKICByZXNvbHZlID0+CmFyZyA9PgogIHNlbmRSZXF1ZXN0KGNvbW1hbmQsIGFyZ3MgPSB7fSwgcmVxdWVzdF9zZXEgPSArK3RoaXMuI3NlcSkKKHJlc29sdmUsIHJlamVjdCkgPT4KcmVzcG9uc2UgPT4KRGVidWdnZXJEaXNwYXRjaGVyCkRlYnVnZ2VyRGlzcGF0Y2hlcgpHZXRBcmd1bWVudHMobm9kZSkKR2V0RnVuY3Rpb25OYW1lKGFzdCwgcCkKICBwID0+CiAgbiA9PgogIHB0ciA9PgogIG4gPT4KICBwID0+CiAgbiA9PgogIHMgPT4KICBzID0+CkZpbmRGdW5jdGlvbnMoYXN0KQp2ID0+AAAAAAAAAADZAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2QIAACAgYyA9PgpUcml2aWFsVG9rZW5pemVyKGlucHV0KQoobSwgaSkgPT4KVHJpdmlhbFN5bnRheEhpZ2hsaWdodGVyKGlucHV0KQoobSwgaSkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCigpID0+Cih7IGVycm5vLCBtZXNzYWdlIH0pID0+CiAgY29uc3RydWN0b3IoY29ubikKICBtc2cgPT4KICBlID0+CiAgciA9PgogIHN0ZXBJbigpCiAgc3RlcE91dCgpCiAgbmV4dCgpCiAgY29udGludWUoKQogIHdhaXRSdW4oKQogIHBhdXNlKCkKICBzdG9wT25FeGNlcHRpb24oc3RvcE9uRXhjZXB0aW9uID0gdHJ1ZSkKICBicmVha3BvaW50cyhwYXRoLCBicmVha3BvaW50cykKICBuID0+CiAgZXZhbHVhdGUoZnJhbWVJZCwgZXhwcmVzc2lvbikKICB2YXJpYWJsZXModmFyaWFibGVzUmVmZXJlbmNlLCBvcHRpb25zID0ge30pCiAgc2NvcGVzKGZyYW1lSWQpCiAgc3RhY2tUcmFjZSgpCiAgd2FpdEV2ZW50KG5hbWUpCiAgcmVzb2x2ZSA9PgphcmcgPT4KICBzZW5kUmVxdWVzdChjb21tYW5kLCBhcmdzID0ge30sIHJlcXVlc3Rfc2VxID0gKyt0aGlzLiNzZXEpCihyZXNvbHZlLCByZWplY3QpID0+CnJlc3BvbnNlID0+CkRlYnVnZ2VyRGlzcGF0Y2hlcgpEZWJ1Z2dlckRpc3BhdGNoZXIKR2V0QXJndW1lbnRzKG5vZGUpCkdldEZ1bmN0aW9uTmFtZShhc3QsIHApCiAgcCA9PgogIG4gPT4KICBwdHIgPT4KICBuID0+CiAgcCA9PgogIG4gPT4KICBzID0+CiAgcyA9PgpGaW5kRnVuY3Rpb25zKGFzdCkKdiA9PgAAAAAAAAAA2QIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANkCAAAgIGMgPT4KVHJpdmlhbFRva2VuaXplcihpbnB1dCkKKG0sIGkpID0+ClRyaXZpYWxTeW50YXhIaWdobGlnaHRlcihpbnB1dCkKKG0sIGkpID0+CkRlYnVnZ2VyRGlzcGF0Y2hlcgooKSA9PgooeyBlcnJubywgbWVzc2FnZSB9KSA9PgogIGNvbnN0cnVjdG9yKGNvbm4pCiAgbXNnID0+CiAgZSA9PgogIHIgPT4KICBzdGVwSW4oKQogIHN0ZXBPdXQoKQogIG5leHQoKQogIGNvbnRpbnVlKCkKICB3YWl0UnVuKCkKICBwYXVzZSgpCiAgc3RvcE9uRXhjZXB0aW9uKHN0b3BPbkV4Y2VwdGlvbiA9IHRydWUpCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpCiAgbiA9PgogIGV2YWx1YXRlKGZyYW1lSWQsIGV4cHJlc3Npb24pCiAgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KQogIHNjb3BlcyhmcmFtZUlkKQogIHN0YWNrVHJhY2UoKQogIHdhaXRFdmVudChuYW1lKQogIHJlc29sdmUgPT4KYXJnID0+CiAgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9LCByZXF1ZXN0X3NlcSA9ICsrdGhpcy4jc2VxKQoocmVzb2x2ZSwgcmVqZWN0KSA9PgpyZXNwb25zZSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKRGVidWdnZXJEaXNwYXRjaGVyCkdldEFyZ3VtZW50cyhub2RlKQpHZXRGdW5jdGlvbk5hbWUoYXN0LCBwKQogIHAgPT4KICBuID0+CiAgcHRyID0+CiAgbiA9PgogIHAgPT4KICBuID0+CiAgcyA9PgogIHMgPT4KRmluZEZ1bmN0aW9ucyhhc3QpCnYgPT4AAAAAAAAAANkCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					344,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger.js",
						"symkeys":
						[
							[
								515,
								519
							],
							[
								536,
								569
							],
							[
								1225,
								1234
							],
							[
								1490,
								1531
							],
							[
								2185,
								2194
							],
							[
								2485,
								2503
							],
							[
								2586,
								2592
							],
							[
								2627,
								2651
							],
							[
								2697,
								2714
							],
							[
								2849,
								2861
							],
							[
								4158,
								4162
							],
							[
								4315,
								4319
							],
							[
								4745,
								4759
							],
							[
								4839,
								4854
							],
							[
								4935,
								4947
							],
							[
								5025,
								5041
							],
							[
								5124,
								5139
							],
							[
								5460,
								5467
							],
							[
								5515,
								5554
							],
							[
								5639,
								5675
							],
							[
								5789,
								5793
							],
							[
								6059,
								6094
							],
							[
								6183,
								6232
							],
							[
								6478,
								6499
							],
							[
								6574,
								6592
							],
							[
								6677,
								6692
							],
							[
								6763,
								6773
							],
							[
								6794,
								6801
							],
							[
								6840,
								6904
							],
							[
								7022,
								7048
							],
							[
								7087,
								7099
							],
							[
								7216,
								7234
							],
							[
								7317,
								7335
							],
							[
								7361,
								7390
							],
							[
								7729,
								7762
							],
							[
								7833,
								7837
							],
							[
								7839,
								7843
							],
							[
								7966,
								7972
							],
							[
								7974,
								7978
							],
							[
								8078,
								8082
							],
							[
								8084,
								8088
							],
							[
								8139,
								8143
							],
							[
								8178,
								8182
							],
							[
								8573,
								8602
							],
							[
								8684,
								8689
							]
						],
						"symlist":
						[
							"c =>",
							" function TrivialTokenizer(input)",
							"(m, i) =>",
							" function TrivialSyntaxHighlighter(input)",
							"(m, i) =>",
							"DebuggerDispatcher",
							" () =>",
							" ({ errno, message }) =>",
							"constructor(conn)",
							"async msg =>",
							"e =>",
							"r =>",
							"async stepIn()",
							"async stepOut()",
							"async next()",
							"async continue()",
							"async waitRun()",
							"pause()",
							"stopOnException(stopOnException = true)",
							"async breakpoints(path, breakpoints)",
							"n =>",
							"async evaluate(frameId, expression)",
							"async variables(variablesReference, options = {})",
							"async scopes(frameId)",
							"async stackTrace()",
							"waitEvent(name)",
							"resolve =>",
							" arg =>",
							"async sendRequest(command, args = {}, request_seq = ++this.#seq)",
							" (resolve, reject) =>",
							" response =>",
							"DebuggerDispatcher",
							"DebuggerDispatcher",
							" function* GetArguments(node)",
							" function GetFunctionName(ast, p)",
							"p =>",
							"n =>",
							"ptr =>",
							"n =>",
							"p =>",
							"n =>",
							"s =>",
							"s =>",
							" function* FindFunctions(ast)",
							" v =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADZAgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIGUgPT4KICByID0+CiAgc3RlcEluKCkKICBzdGVwT3V0KCkKICBuZXh0KCkKICBjb250aW51ZSgpCiAgd2FpdFJ1bigpCiAgcGF1c2UoKQogIHN0b3BPbkV4Y2VwdGlvbihzdG9wT25FeGNlcHRpb24gPSB0cnVlKQogIGJyZWFrcG9pbnRzKHBhdGgsIGJyZWFrcG9pbnRzKQogIG4gPT4KICBldmFsdWF0ZShmcmFtZUlkLCBleHByZXNzaW9uKQogIHZhcmlhYmxlcyh2YXJpYWJsZXNSZWZlcmVuY2UsIG9wdGlvbnMgPSB7fSkKICBzY29wZXMoZnJhbWVJZCkKICBzdGFja1RyYWNlKCkKICB3YWl0RXZlbnQobmFtZSkKICByZXNvbHZlID0+CmFyZyA9PgogIHNlbmRSZXF1ZXN0KGNvbW1hbmQsIGFyZ3MgPSB7fSwgcmVxdWVzdF9zZXEgPSArK3RoaXMuI3NlcSkKKHJlc29sdmUsIHJlamVjdCkgPT4KcmVzcG9uc2UgPT4KRGVidWdnZXJEaXNwYXRjaGVyCkRlYnVnZ2VyRGlzcGF0Y2hlcgpHZXRBcmd1bWVudHMobm9kZSkKR2V0RnVuY3Rpb25OYW1lKGFzdCwgcCkKICBwID0+CiAgbiA9PgogIHB0ciA9PgogIG4gPT4KICBwID0+CiAgbiA9PgogIHMgPT4KICBzID0+CkZpbmRGdW5jdGlvbnMoYXN0KQp2ID0+AAAAAAAAAADZAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					345,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1632,
								1675
							],
							[
								2024,
								2061
							],
							[
								2128,
								2133
							],
							[
								2421,
								2438
							],
							[
								2834,
								2866
							],
							[
								3029,
								3050
							],
							[
								3243,
								3273
							],
							[
								3644,
								3672
							],
							[
								3684,
								3698
							],
							[
								3957,
								3971
							],
							[
								4453,
								4457
							],
							[
								4504,
								4508
							],
							[
								4705,
								4712
							],
							[
								4739,
								4756
							],
							[
								5030,
								5077
							],
							[
								5602,
								5670
							],
							[
								6220,
								6243
							],
							[
								7400,
								7422
							],
							[
								7866,
								7913
							],
							[
								8079,
								8097
							],
							[
								8593,
								8604
							],
							[
								8928,
								8946
							],
							[
								9047,
								9064
							],
							[
								9238,
								9242
							],
							[
								9317,
								9354
							],
							[
								9514,
								9518
							],
							[
								9863,
								9895
							],
							[
								10064,
								10088
							],
							[
								10102,
								10128
							],
							[
								10439,
								10443
							],
							[
								10798,
								10821
							],
							[
								10879,
								10887
							],
							[
								11067,
								11082
							],
							[
								11446,
								11461
							],
							[
								11844,
								11873
							],
							[
								11963,
								11976
							],
							[
								12677,
								12687
							],
							[
								12830,
								12848
							],
							[
								12880,
								12898
							],
							[
								12899,
								12906
							],
							[
								12939,
								13000
							],
							[
								13267,
								13278
							],
							[
								13427,
								13456
							],
							[
								13674,
								13700
							],
							[
								13711,
								13725
							],
							[
								13942,
								13957
							],
							[
								13987,
								14006
							],
							[
								14035,
								14057
							],
							[
								14370,
								14380
							],
							[
								14588,
								14602
							],
							[
								14656,
								14670
							],
							[
								15763,
								15806
							],
							[
								16000,
								16006
							],
							[
								16019,
								16035
							],
							[
								17609,
								17645
							],
							[
								17833,
								17868
							],
							[
								18008,
								18012
							],
							[
								18139,
								18157
							],
							[
								18311,
								18349
							],
							[
								18736,
								18747
							],
							[
								18902,
								18913
							],
							[
								18973,
								18993
							],
							[
								19582,
								19617
							],
							[
								20020,
								20039
							],
							[
								20147,
								20185
							],
							[
								21137,
								21160
							],
							[
								21198,
								21205
							],
							[
								21785,
								21790
							],
							[
								23006,
								23021
							],
							[
								25033,
								25041
							],
							[
								25979,
								25985
							],
							[
								26390,
								26415
							],
							[
								26738,
								26755
							],
							[
								26799,
								26804
							],
							[
								26829,
								26843
							],
							[
								27189,
								27199
							],
							[
								27323,
								27340
							],
							[
								27372,
								27387
							],
							[
								27430,
								27444
							],
							[
								27448,
								27463
							],
							[
								27606,
								27610
							],
							[
								27687,
								27697
							],
							[
								28185,
								28194
							],
							[
								28310,
								28316
							],
							[
								28374,
								28387
							],
							[
								28602,
								28619
							],
							[
								28736,
								28778
							],
							[
								29143,
								29174
							],
							[
								29256,
								29272
							],
							[
								29455,
								29475
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"frame =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADZAgAAICBjID0+ClRyaXZpYWxUb2tlbml6ZXIoaW5wdXQpCihtLCBpKSA9PgpUcml2aWFsU3ludGF4SGlnaGxpZ2h0ZXIoaW5wdXQpCihtLCBpKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKKCkgPT4KKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4KICBjb25zdHJ1Y3Rvcihjb25uKQogIG1zZyA9PgogIGUgPT4KICByID0+CiAgc3RlcEluKCkKICBzdGVwT3V0KCkKICBuZXh0KCkKICBjb250aW51ZSgpCiAgd2FpdFJ1bigpCiAgcGF1c2UoKQogIHN0b3BPbkV4Y2VwdGlvbihzdG9wT25FeGNlcHRpb24gPSB0cnVlKQogIGJyZWFrcG9pbnRzKHBhdGgsIGJyZWFrcG9pbnRzKQogIG4gPT4KICBldmFsdWF0ZShmcmFtZUlkLCBleHByZXNzaW9uKQogIHZhcmlhYmxlcyh2YXJpYWJsZXNSZWZlcmVuY2UsIG9wdGlvbnMgPSB7fSkKICBzY29wZXMoZnJhbWVJZCkKICBzdGFja1RyYWNlKCkKICB3YWl0RXZlbnQobmFtZSkKICByZXNvbHZlID0+CmFyZyA9PgogIHNlbmRSZXF1ZXN0KGNvbW1hbmQsIGFyZ3MgPSB7fSwgcmVxdWVzdF9zZXEgPSArK3RoaXMuI3NlcSkKKHJlc29sdmUsIHJlamVjdCkgPT4KcmVzcG9uc2UgPT4KRGVidWdnZXJEaXNwYXRjaGVyCkRlYnVnZ2VyRGlzcGF0Y2hlcgpHZXRBcmd1bWVudHMobm9kZSkKR2V0RnVuY3Rpb25OYW1lKGFzdCwgcCkKICBwID0+CiAgbiA9PgogIHB0ciA9PgogIG4gPT4KICBwID0+CiAgbiA9PgogIHMgPT4KICBzID0+CkZpbmRGdW5jdGlvbnMoYXN0KQp2ID0+AAAAAAAAAAArBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					346,
					6,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1632,
								1675
							],
							[
								2024,
								2061
							],
							[
								2128,
								2133
							],
							[
								2421,
								2438
							],
							[
								2834,
								2866
							],
							[
								3029,
								3050
							],
							[
								3243,
								3273
							],
							[
								3644,
								3672
							],
							[
								3684,
								3698
							],
							[
								3957,
								3971
							],
							[
								4453,
								4457
							],
							[
								4504,
								4508
							],
							[
								4705,
								4712
							],
							[
								4739,
								4756
							],
							[
								5030,
								5077
							],
							[
								5602,
								5670
							],
							[
								6220,
								6243
							],
							[
								7400,
								7422
							],
							[
								7866,
								7913
							],
							[
								8079,
								8097
							],
							[
								8593,
								8604
							],
							[
								8928,
								8946
							],
							[
								9047,
								9064
							],
							[
								9238,
								9242
							],
							[
								9317,
								9354
							],
							[
								9514,
								9518
							],
							[
								9863,
								9895
							],
							[
								10064,
								10088
							],
							[
								10102,
								10128
							],
							[
								10439,
								10443
							],
							[
								10800,
								10823
							],
							[
								10881,
								10889
							],
							[
								11069,
								11084
							],
							[
								11448,
								11463
							],
							[
								11846,
								11875
							],
							[
								11965,
								11978
							],
							[
								12679,
								12689
							],
							[
								12832,
								12850
							],
							[
								12882,
								12900
							],
							[
								12901,
								12908
							],
							[
								12941,
								13002
							],
							[
								13269,
								13280
							],
							[
								13429,
								13458
							],
							[
								13676,
								13702
							],
							[
								13713,
								13727
							],
							[
								13944,
								13959
							],
							[
								13989,
								14008
							],
							[
								14037,
								14059
							],
							[
								14372,
								14382
							],
							[
								14590,
								14604
							],
							[
								14658,
								14672
							],
							[
								15765,
								15808
							],
							[
								16002,
								16008
							],
							[
								16021,
								16037
							],
							[
								17611,
								17647
							],
							[
								17835,
								17870
							],
							[
								18010,
								18014
							],
							[
								18141,
								18159
							],
							[
								18313,
								18351
							],
							[
								18738,
								18749
							],
							[
								18904,
								18915
							],
							[
								18975,
								18995
							],
							[
								19584,
								19619
							],
							[
								20022,
								20041
							],
							[
								20149,
								20187
							],
							[
								21139,
								21162
							],
							[
								21200,
								21207
							],
							[
								21787,
								21792
							],
							[
								23008,
								23023
							],
							[
								25035,
								25043
							],
							[
								25981,
								25987
							],
							[
								26392,
								26417
							],
							[
								26740,
								26757
							],
							[
								26801,
								26806
							],
							[
								26831,
								26845
							],
							[
								27191,
								27201
							],
							[
								27325,
								27342
							],
							[
								27374,
								27389
							],
							[
								27432,
								27446
							],
							[
								27450,
								27465
							],
							[
								27608,
								27612
							],
							[
								27689,
								27699
							],
							[
								28187,
								28196
							],
							[
								28312,
								28318
							],
							[
								28376,
								28389
							],
							[
								28604,
								28621
							],
							[
								28738,
								28780
							],
							[
								29145,
								29176
							],
							[
								29258,
								29274
							],
							[
								29457,
								29477
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"frame =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					347,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1632,
								1675
							],
							[
								2024,
								2061
							],
							[
								2128,
								2133
							],
							[
								2421,
								2438
							],
							[
								2834,
								2866
							],
							[
								3029,
								3050
							],
							[
								3243,
								3273
							],
							[
								3644,
								3672
							],
							[
								3684,
								3698
							],
							[
								3957,
								3971
							],
							[
								4453,
								4457
							],
							[
								4504,
								4508
							],
							[
								4705,
								4712
							],
							[
								4739,
								4756
							],
							[
								5030,
								5077
							],
							[
								5602,
								5670
							],
							[
								6220,
								6243
							],
							[
								7400,
								7422
							],
							[
								7866,
								7913
							],
							[
								8079,
								8097
							],
							[
								8593,
								8604
							],
							[
								8928,
								8946
							],
							[
								9047,
								9064
							],
							[
								9238,
								9242
							],
							[
								9317,
								9354
							],
							[
								9514,
								9518
							],
							[
								9863,
								9895
							],
							[
								10064,
								10088
							],
							[
								10102,
								10128
							],
							[
								10439,
								10443
							],
							[
								10800,
								10823
							],
							[
								10881,
								10889
							],
							[
								11069,
								11084
							],
							[
								11448,
								11463
							],
							[
								11846,
								11875
							],
							[
								11965,
								11978
							],
							[
								12679,
								12689
							],
							[
								12832,
								12850
							],
							[
								12882,
								12900
							],
							[
								12901,
								12908
							],
							[
								12941,
								13002
							],
							[
								13269,
								13280
							],
							[
								13429,
								13458
							],
							[
								13676,
								13702
							],
							[
								13713,
								13727
							],
							[
								13944,
								13959
							],
							[
								13989,
								14008
							],
							[
								14037,
								14059
							],
							[
								14372,
								14382
							],
							[
								14590,
								14604
							],
							[
								14658,
								14672
							],
							[
								15765,
								15808
							],
							[
								16002,
								16008
							],
							[
								16021,
								16037
							],
							[
								17611,
								17647
							],
							[
								17835,
								17870
							],
							[
								18010,
								18014
							],
							[
								18141,
								18159
							],
							[
								18313,
								18351
							],
							[
								18738,
								18749
							],
							[
								18904,
								18915
							],
							[
								18975,
								18995
							],
							[
								19584,
								19619
							],
							[
								20022,
								20041
							],
							[
								20149,
								20187
							],
							[
								21139,
								21162
							],
							[
								21200,
								21207
							],
							[
								21787,
								21792
							],
							[
								23008,
								23023
							],
							[
								25035,
								25043
							],
							[
								25981,
								25987
							],
							[
								26392,
								26417
							],
							[
								26740,
								26757
							],
							[
								26801,
								26806
							],
							[
								26831,
								26845
							],
							[
								27191,
								27201
							],
							[
								27325,
								27342
							],
							[
								27374,
								27389
							],
							[
								27432,
								27446
							],
							[
								27450,
								27465
							],
							[
								27608,
								27612
							],
							[
								27689,
								27699
							],
							[
								28187,
								28196
							],
							[
								28312,
								28318
							],
							[
								28376,
								28389
							],
							[
								28604,
								28621
							],
							[
								28738,
								28780
							],
							[
								29145,
								29176
							],
							[
								29258,
								29274
							],
							[
								29457,
								29477
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"frame =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgZnJhbWUgPT4KKCkgPT4KICBzaG93U2Vzc2lvbnMoKQogIGdldCBjb25uZWN0aW9ucygpCiAgd3MgPT4KICBnZXQgc29ja2xpc3QoKQogIGdldCBmaWxlKCkKKGZpbGUsIHNvdXJjZSkgPT4KKCkgPT4KcyA9PgooKSA9PgogIG0gPT4KICBsaW5lKGksIGopCiAgbWF0Y2gocmUpCiAgZm5zID0+Cih7IG5hbWUgfSkgPT4KICBmdW5jdGlvbnMoKQooW25hbWUsIGxvYywgcGFyYW1zLCBleHByZXNzaW9uLCBwYXRoXSkgPT4KICByZXBlYXQoY29uZCwgZm4sIC4uLmFyZ3MpCiAgY29uZCA9IChyLCBpKSA9PgogIHF1aXQod2h5KQAAAAAAAAAAKwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					348,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1632,
								1675
							],
							[
								2024,
								2061
							],
							[
								2128,
								2133
							],
							[
								2421,
								2438
							],
							[
								2834,
								2866
							],
							[
								3029,
								3050
							],
							[
								3243,
								3273
							],
							[
								3644,
								3672
							],
							[
								3684,
								3698
							],
							[
								3957,
								3971
							],
							[
								4453,
								4457
							],
							[
								4504,
								4508
							],
							[
								4705,
								4712
							],
							[
								4739,
								4756
							],
							[
								5030,
								5077
							],
							[
								5602,
								5670
							],
							[
								6220,
								6243
							],
							[
								7400,
								7422
							],
							[
								7866,
								7913
							],
							[
								8079,
								8097
							],
							[
								8593,
								8604
							],
							[
								8928,
								8946
							],
							[
								9047,
								9064
							],
							[
								9238,
								9242
							],
							[
								9317,
								9354
							],
							[
								9514,
								9518
							],
							[
								9863,
								9895
							],
							[
								10064,
								10088
							],
							[
								10102,
								10128
							],
							[
								10439,
								10443
							],
							[
								10800,
								10823
							],
							[
								10881,
								10889
							],
							[
								11069,
								11084
							],
							[
								11448,
								11463
							],
							[
								11846,
								11875
							],
							[
								11965,
								11978
							],
							[
								12679,
								12689
							],
							[
								12832,
								12850
							],
							[
								12882,
								12900
							],
							[
								12901,
								12908
							],
							[
								12941,
								13002
							],
							[
								13269,
								13280
							],
							[
								13429,
								13458
							],
							[
								13676,
								13702
							],
							[
								13713,
								13727
							],
							[
								13944,
								13959
							],
							[
								13989,
								14008
							],
							[
								14037,
								14059
							],
							[
								14372,
								14382
							],
							[
								14590,
								14604
							],
							[
								14658,
								14672
							],
							[
								15765,
								15808
							],
							[
								16002,
								16008
							],
							[
								16021,
								16037
							],
							[
								17611,
								17647
							],
							[
								17835,
								17870
							],
							[
								18010,
								18014
							],
							[
								18141,
								18159
							],
							[
								18313,
								18351
							],
							[
								18738,
								18749
							],
							[
								18904,
								18915
							],
							[
								18975,
								18995
							],
							[
								19584,
								19619
							],
							[
								20022,
								20041
							],
							[
								20149,
								20187
							],
							[
								21139,
								21162
							],
							[
								21200,
								21207
							],
							[
								21787,
								21792
							],
							[
								23008,
								23023
							],
							[
								25035,
								25043
							],
							[
								25981,
								25987
							],
							[
								26392,
								26417
							],
							[
								26740,
								26757
							],
							[
								26801,
								26806
							],
							[
								26831,
								26845
							],
							[
								27191,
								27201
							],
							[
								27325,
								27342
							],
							[
								27374,
								27389
							],
							[
								27432,
								27446
							],
							[
								27450,
								27465
							],
							[
								27608,
								27612
							],
							[
								27689,
								27699
							],
							[
								28187,
								28196
							],
							[
								28312,
								28318
							],
							[
								28376,
								28389
							],
							[
								28604,
								28621
							],
							[
								28738,
								28780
							],
							[
								29145,
								29176
							],
							[
								29258,
								29274
							],
							[
								29457,
								29477
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"frame =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAArBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgZnJhbWUgPT4KKCkgPT4KICBzaG93U2Vzc2lvbnMoKQogIGdldCBjb25uZWN0aW9ucygpCiAgd3MgPT4KICBnZXQgc29ja2xpc3QoKQogIGdldCBmaWxlKCkKKGZpbGUsIHNvdXJjZSkgPT4KKCkgPT4KcyA9PgooKSA9PgogIG0gPT4KICBsaW5lKGksIGopCiAgbWF0Y2gocmUpCiAgZm5zID0+Cih7IG5hbWUgfSkgPT4KICBmdW5jdGlvbnMoKQooW25hbWUsIGxvYywgcGFyYW1zLCBleHByZXNzaW9uLCBwYXRoXSkgPT4KICByZXBlYXQoY29uZCwgZm4sIC4uLmFyZ3MpCiAgY29uZCA9IChyLCBpKSA9PgogIHF1aXQod2h5KQAAAAAAAAAAKwYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsGAAAgIGRlY29yYXRlKGRlY29yYXRvcnMsIG9iaiwgLi4uYXJncykKICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+CiAgc2lnbmFsTmFtZSA9IG4gPT4KICBjaGVja0NoaWxkRXhpdGVkKGNoaWxkKQpHZXRMb2Mobm9kZSkKTG9hZEFTVChzb3VyY2UpClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICAuc2hvdyA9IGFyZyA9PgogIGsgPT4KICBrID0+CiAgaXRlbSA9PgooYWNjLCBrZXlzLCBpKSA9PgpTdGFydERlYnVnZ2VyKGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MpCkNvbm5lY3REZWJ1Z2dlcihhZGRyZXNzLCBza2lwVG9NYWluID0gdHJ1ZSwgY2FsbGJhY2spCiAgcHJvY2VzcyhjYWxsYmFjaykKICBzZW5kTWVzc2FnZShtc2cpCkxhdW5jaERlYnVnZ2VyKGRiZywgc2tpcFRvTWFpbiA9IHRydWUpCiguLi5hcmdzKSA9PgooKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKICB2YWx1ZShuYW1lKQogIHYgPT4KUHJpbnRTdGFja0ZyYW1lKGZyYW1lKQogIGYgPT4KUHJpbnRTdGFjayhzdGFjaykKKG1lbWJlciwgb2JqLCBwcm9wKSA9PgogIGJyZWFrcG9pbnRzKC4uLmFyZ3MpCiAgYiA9PgogIHN0YWNrVHJhY2UoZnJhbWUpCiAgZnJhbWUgPT4KICBzY29wZXMobikKICB3YWl0UnVuKCkKICB2YXJpYWJsZXMobiwgZGVwdGggPSAwKQogIGFkZCA9IGl0ZW0gPT4KICB0b1N0cmluZygpCkRlYnVnZ2VyRGlzcGF0Y2hlcgoocG9ydCA9IDg3NzcpID0+CigpID0+Ck5ld0RlYnVnZ2VyKGFyZ3MsIHNraXBUb01haW4gPSBmYWxzZSwgYWRkcmVzcykKICBraWxsOiAoKSA9PgpPblN0b3BwZWQobXNnKQpVUkxXb3JrZXIoc2NyaXB0KQogIGRhdGFVUkwgPSBzID0+CihwdXNoLCBzdG9wKSA9PgogIHBvc3RNZXNzYWdlOiBtc2cgPT4KICBtYWluKC4uLmFyZ3MpCihhLCB2KSA9PgoodiwgcHYsIG8pID0+Cih2LCBwdiwgbykgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKQooKSA9PgoobGV2ZWwsIHN0cikgPT4KICBjb25maWcocmVxLCByZXMpCiAgZmlsZXMocmVxLCByZXMpCiAgZiA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIHZhbHVlOiBmdW5jdGlvbiBzZW5kTWVzc2FnZShtc2cpCiAgb25DbG9zZSh3cykKICBvbkVycm9yKHdzKQogIG9uUmVxdWVzdChyZXEsIHJlc3ApCihtYXRjaCwgcDEsIHAwLCBwMiwgcDMsIG9mZnNldCkgPT4KICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICBmb3J3YXJkID0gKGZkLCBuYW1lKSA9PgpidWYgPT4KKCkgPT4KKGRiZywgc29jaykgPT4KICBmcmFtZSA9PgooKSA9PgogIHNob3dTZXNzaW9ucygpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICB3cyA9PgogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAArBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					349,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1632,
								1675
							],
							[
								2024,
								2061
							],
							[
								2128,
								2133
							],
							[
								2421,
								2438
							],
							[
								2834,
								2866
							],
							[
								3029,
								3050
							],
							[
								3243,
								3273
							],
							[
								3644,
								3672
							],
							[
								3684,
								3698
							],
							[
								3957,
								3971
							],
							[
								4453,
								4457
							],
							[
								4504,
								4508
							],
							[
								4705,
								4712
							],
							[
								4739,
								4756
							],
							[
								5030,
								5077
							],
							[
								5602,
								5670
							],
							[
								6220,
								6243
							],
							[
								7400,
								7422
							],
							[
								7866,
								7913
							],
							[
								8079,
								8097
							],
							[
								8593,
								8604
							],
							[
								8928,
								8946
							],
							[
								9047,
								9064
							],
							[
								9238,
								9242
							],
							[
								9317,
								9354
							],
							[
								9514,
								9518
							],
							[
								9863,
								9895
							],
							[
								10064,
								10088
							],
							[
								10102,
								10128
							],
							[
								10439,
								10443
							],
							[
								10800,
								10823
							],
							[
								10881,
								10889
							],
							[
								11069,
								11084
							],
							[
								11448,
								11463
							],
							[
								11846,
								11875
							],
							[
								11965,
								11978
							],
							[
								12679,
								12689
							],
							[
								12832,
								12850
							],
							[
								12882,
								12900
							],
							[
								12901,
								12908
							],
							[
								12941,
								13002
							],
							[
								13269,
								13280
							],
							[
								13429,
								13458
							],
							[
								13676,
								13702
							],
							[
								13713,
								13727
							],
							[
								13944,
								13959
							],
							[
								13989,
								14008
							],
							[
								14037,
								14059
							],
							[
								14372,
								14382
							],
							[
								14590,
								14604
							],
							[
								14658,
								14672
							],
							[
								15765,
								15808
							],
							[
								16002,
								16008
							],
							[
								16021,
								16037
							],
							[
								17611,
								17647
							],
							[
								17835,
								17870
							],
							[
								18010,
								18014
							],
							[
								18141,
								18159
							],
							[
								18313,
								18351
							],
							[
								18738,
								18749
							],
							[
								18904,
								18915
							],
							[
								18975,
								18995
							],
							[
								19584,
								19619
							],
							[
								20022,
								20041
							],
							[
								20149,
								20187
							],
							[
								21139,
								21162
							],
							[
								21200,
								21207
							],
							[
								21787,
								21792
							],
							[
								23008,
								23023
							],
							[
								25035,
								25043
							],
							[
								25981,
								25987
							],
							[
								26392,
								26417
							],
							[
								26740,
								26757
							],
							[
								26801,
								26806
							],
							[
								26831,
								26845
							],
							[
								27191,
								27201
							],
							[
								27325,
								27342
							],
							[
								27374,
								27389
							],
							[
								27432,
								27446
							],
							[
								27450,
								27465
							],
							[
								27608,
								27612
							],
							[
								27689,
								27699
							],
							[
								28187,
								28196
							],
							[
								28312,
								28318
							],
							[
								28376,
								28389
							],
							[
								28604,
								28621
							],
							[
								28738,
								28780
							],
							[
								29145,
								29176
							],
							[
								29258,
								29274
							],
							[
								29457,
								29477
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"frame =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAArBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgZnJhbWUgPT4KKCkgPT4KICBzaG93U2Vzc2lvbnMoKQogIGdldCBjb25uZWN0aW9ucygpCiAgd3MgPT4KICBnZXQgc29ja2xpc3QoKQogIGdldCBmaWxlKCkKKGZpbGUsIHNvdXJjZSkgPT4KKCkgPT4KcyA9PgooKSA9PgogIG0gPT4KICBsaW5lKGksIGopCiAgbWF0Y2gocmUpCiAgZm5zID0+Cih7IG5hbWUgfSkgPT4KICBmdW5jdGlvbnMoKQooW25hbWUsIGxvYywgcGFyYW1zLCBleHByZXNzaW9uLCBwYXRoXSkgPT4KICByZXBlYXQoY29uZCwgZm4sIC4uLmFyZ3MpCiAgY29uZCA9IChyLCBpKSA9PgogIHF1aXQod2h5KQAAAAAAAAAAKwYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsGAAAgIGRlY29yYXRlKGRlY29yYXRvcnMsIG9iaiwgLi4uYXJncykKICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+CiAgc2lnbmFsTmFtZSA9IG4gPT4KICBjaGVja0NoaWxkRXhpdGVkKGNoaWxkKQpHZXRMb2Mobm9kZSkKTG9hZEFTVChzb3VyY2UpClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICAuc2hvdyA9IGFyZyA9PgogIGsgPT4KICBrID0+CiAgaXRlbSA9PgooYWNjLCBrZXlzLCBpKSA9PgpTdGFydERlYnVnZ2VyKGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MpCkNvbm5lY3REZWJ1Z2dlcihhZGRyZXNzLCBza2lwVG9NYWluID0gdHJ1ZSwgY2FsbGJhY2spCiAgcHJvY2VzcyhjYWxsYmFjaykKICBzZW5kTWVzc2FnZShtc2cpCkxhdW5jaERlYnVnZ2VyKGRiZywgc2tpcFRvTWFpbiA9IHRydWUpCiguLi5hcmdzKSA9PgooKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKICB2YWx1ZShuYW1lKQogIHYgPT4KUHJpbnRTdGFja0ZyYW1lKGZyYW1lKQogIGYgPT4KUHJpbnRTdGFjayhzdGFjaykKKG1lbWJlciwgb2JqLCBwcm9wKSA9PgogIGJyZWFrcG9pbnRzKC4uLmFyZ3MpCiAgYiA9PgogIHN0YWNrVHJhY2UoZnJhbWUpCiAgZnJhbWUgPT4KICBzY29wZXMobikKICB3YWl0UnVuKCkKICB2YXJpYWJsZXMobiwgZGVwdGggPSAwKQogIGFkZCA9IGl0ZW0gPT4KICB0b1N0cmluZygpCkRlYnVnZ2VyRGlzcGF0Y2hlcgoocG9ydCA9IDg3NzcpID0+CigpID0+Ck5ld0RlYnVnZ2VyKGFyZ3MsIHNraXBUb01haW4gPSBmYWxzZSwgYWRkcmVzcykKICBraWxsOiAoKSA9PgpPblN0b3BwZWQobXNnKQpVUkxXb3JrZXIoc2NyaXB0KQogIGRhdGFVUkwgPSBzID0+CihwdXNoLCBzdG9wKSA9PgogIHBvc3RNZXNzYWdlOiBtc2cgPT4KICBtYWluKC4uLmFyZ3MpCihhLCB2KSA9PgoodiwgcHYsIG8pID0+Cih2LCBwdiwgbykgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKQooKSA9PgoobGV2ZWwsIHN0cikgPT4KICBjb25maWcocmVxLCByZXMpCiAgZmlsZXMocmVxLCByZXMpCiAgZiA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIHZhbHVlOiBmdW5jdGlvbiBzZW5kTWVzc2FnZShtc2cpCiAgb25DbG9zZSh3cykKICBvbkVycm9yKHdzKQogIG9uUmVxdWVzdChyZXEsIHJlc3ApCihtYXRjaCwgcDEsIHAwLCBwMiwgcDMsIG9mZnNldCkgPT4KICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICBmb3J3YXJkID0gKGZkLCBuYW1lKSA9PgpidWYgPT4KKCkgPT4KKGRiZywgc29jaykgPT4KICBmcmFtZSA9PgooKSA9PgogIHNob3dTZXNzaW9ucygpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICB3cyA9PgogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAArBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKwYAACAgZGVjb3JhdGUoZGVjb3JhdG9ycywgb2JqLCAuLi5hcmdzKQogIHNjcmlwdE5hbWUgPSAoYXJnID0gc2NyaXB0QXJnc1swXSkgPT4KKCkgPT4KICBzaWduYWxOYW1lID0gbiA9PgogIGNoZWNrQ2hpbGRFeGl0ZWQoY2hpbGQpCkdldExvYyhub2RlKQpMb2FkQVNUKHNvdXJjZSkKU3RhcnRSRVBMKHByZWZpeCA9IAosIHN1ZmZpeCA9ICcnKQogIC5zaG93ID0gYXJnID0+CiAgayA9PgogIGsgPT4KICBpdGVtID0+CihhY2MsIGtleXMsIGkpID0+ClN0YXJ0RGVidWdnZXIoYXJncywgY29ubmVjdCwgYWRkcmVzcykKQ29ubmVjdERlYnVnZ2VyKGFkZHJlc3MsIHNraXBUb01haW4gPSB0cnVlLCBjYWxsYmFjaykKICBwcm9jZXNzKGNhbGxiYWNrKQogIHNlbmRNZXNzYWdlKG1zZykKTGF1bmNoRGVidWdnZXIoZGJnLCBza2lwVG9NYWluID0gdHJ1ZSkKKC4uLmFyZ3MpID0+CigpID0+CkRlYnVnZ2VyRGlzcGF0Y2hlcgogIHZhbHVlKG5hbWUpCiAgdiA9PgpQcmludFN0YWNrRnJhbWUoZnJhbWUpCiAgZiA9PgpQcmludFN0YWNrKHN0YWNrKQoobWVtYmVyLCBvYmosIHByb3ApID0+CiAgYnJlYWtwb2ludHMoLi4uYXJncykKICBiID0+CiAgc3RhY2tUcmFjZShmcmFtZSkKICBmcmFtZSA9PgogIHNjb3BlcyhuKQogIHdhaXRSdW4oKQogIHZhcmlhYmxlcyhuLCBkZXB0aCA9IDApCiAgYWRkID0gaXRlbSA9PgogIHRvU3RyaW5nKCkKRGVidWdnZXJEaXNwYXRjaGVyCihwb3J0ID0gODc3NykgPT4KKCkgPT4KTmV3RGVidWdnZXIoYXJncywgc2tpcFRvTWFpbiA9IGZhbHNlLCBhZGRyZXNzKQogIGtpbGw6ICgpID0+Ck9uU3RvcHBlZChtc2cpClVSTFdvcmtlcihzY3JpcHQpCiAgZGF0YVVSTCA9IHMgPT4KKHB1c2gsIHN0b3ApID0+CiAgcG9zdE1lc3NhZ2U6IG1zZyA9PgogIG1haW4oLi4uYXJncykKKGEsIHYpID0+Cih2LCBwdiwgbykgPT4KKHYsIHB2LCBvKSA9PgogIGNyZWF0ZVdTKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pCigpID0+CihsZXZlbCwgc3RyKSA9PgogIGNvbmZpZyhyZXEsIHJlcykKICBmaWxlcyhyZXEsIHJlcykKICBmID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgdmFsdWU6IGZ1bmN0aW9uIHNlbmRNZXNzYWdlKG1zZykKICBvbkNsb3NlKHdzKQogIG9uRXJyb3Iod3MpCiAgb25SZXF1ZXN0KHJlcSwgcmVzcCkKKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBoYW5kbGVDb21tYW5kKHdzLCBkYXRhKQogIGZvcndhcmQgPSAoZmQsIG5hbWUpID0+CmJ1ZiA9PgooKSA9PgooZGJnLCBzb2NrKSA9PgogIGZyYW1lID0+CigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIHdzID0+CiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpLCBqKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBxdWl0KHdoeSkAAAAAAAAAACsGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					350,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1632,
								1675
							],
							[
								2024,
								2061
							],
							[
								2128,
								2133
							],
							[
								2421,
								2438
							],
							[
								2834,
								2866
							],
							[
								3029,
								3050
							],
							[
								3243,
								3273
							],
							[
								3644,
								3672
							],
							[
								3684,
								3698
							],
							[
								3957,
								3971
							],
							[
								4453,
								4457
							],
							[
								4504,
								4508
							],
							[
								4705,
								4712
							],
							[
								4739,
								4756
							],
							[
								5030,
								5077
							],
							[
								5602,
								5670
							],
							[
								6220,
								6243
							],
							[
								7400,
								7422
							],
							[
								7866,
								7913
							],
							[
								8079,
								8097
							],
							[
								8593,
								8604
							],
							[
								8928,
								8946
							],
							[
								9047,
								9064
							],
							[
								9238,
								9242
							],
							[
								9317,
								9354
							],
							[
								9514,
								9518
							],
							[
								9863,
								9895
							],
							[
								10064,
								10088
							],
							[
								10102,
								10128
							],
							[
								10439,
								10443
							],
							[
								10800,
								10823
							],
							[
								10881,
								10889
							],
							[
								11069,
								11084
							],
							[
								11448,
								11463
							],
							[
								11846,
								11875
							],
							[
								11965,
								11978
							],
							[
								12679,
								12689
							],
							[
								12832,
								12850
							],
							[
								12882,
								12900
							],
							[
								12901,
								12908
							],
							[
								12941,
								13002
							],
							[
								13269,
								13280
							],
							[
								13429,
								13458
							],
							[
								13676,
								13702
							],
							[
								13713,
								13727
							],
							[
								13944,
								13959
							],
							[
								13989,
								14008
							],
							[
								14037,
								14059
							],
							[
								14372,
								14382
							],
							[
								14590,
								14604
							],
							[
								14658,
								14672
							],
							[
								15765,
								15808
							],
							[
								16002,
								16008
							],
							[
								16021,
								16037
							],
							[
								17611,
								17647
							],
							[
								17835,
								17870
							],
							[
								18010,
								18014
							],
							[
								18141,
								18159
							],
							[
								18313,
								18351
							],
							[
								18738,
								18749
							],
							[
								18904,
								18915
							],
							[
								18975,
								18995
							],
							[
								19584,
								19619
							],
							[
								20022,
								20041
							],
							[
								20149,
								20187
							],
							[
								21139,
								21162
							],
							[
								21200,
								21207
							],
							[
								21787,
								21792
							],
							[
								23008,
								23023
							],
							[
								25035,
								25043
							],
							[
								25981,
								25987
							],
							[
								26392,
								26417
							],
							[
								26740,
								26757
							],
							[
								26801,
								26806
							],
							[
								26831,
								26845
							],
							[
								27191,
								27201
							],
							[
								27325,
								27342
							],
							[
								27374,
								27389
							],
							[
								27432,
								27446
							],
							[
								27450,
								27465
							],
							[
								27608,
								27612
							],
							[
								27689,
								27699
							],
							[
								28187,
								28196
							],
							[
								28312,
								28318
							],
							[
								28376,
								28389
							],
							[
								28604,
								28621
							],
							[
								28738,
								28780
							],
							[
								29145,
								29176
							],
							[
								29258,
								29274
							],
							[
								29457,
								29477
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"frame =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAArBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgZnJhbWUgPT4KKCkgPT4KICBzaG93U2Vzc2lvbnMoKQogIGdldCBjb25uZWN0aW9ucygpCiAgd3MgPT4KICBnZXQgc29ja2xpc3QoKQogIGdldCBmaWxlKCkKKGZpbGUsIHNvdXJjZSkgPT4KKCkgPT4KcyA9PgooKSA9PgogIG0gPT4KICBsaW5lKGksIGopCiAgbWF0Y2gocmUpCiAgZm5zID0+Cih7IG5hbWUgfSkgPT4KICBmdW5jdGlvbnMoKQooW25hbWUsIGxvYywgcGFyYW1zLCBleHByZXNzaW9uLCBwYXRoXSkgPT4KICByZXBlYXQoY29uZCwgZm4sIC4uLmFyZ3MpCiAgY29uZCA9IChyLCBpKSA9PgogIHF1aXQod2h5KQAAAAAAAAAAKwYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsGAAAgIGRlY29yYXRlKGRlY29yYXRvcnMsIG9iaiwgLi4uYXJncykKICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+CiAgc2lnbmFsTmFtZSA9IG4gPT4KICBjaGVja0NoaWxkRXhpdGVkKGNoaWxkKQpHZXRMb2Mobm9kZSkKTG9hZEFTVChzb3VyY2UpClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICAuc2hvdyA9IGFyZyA9PgogIGsgPT4KICBrID0+CiAgaXRlbSA9PgooYWNjLCBrZXlzLCBpKSA9PgpTdGFydERlYnVnZ2VyKGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MpCkNvbm5lY3REZWJ1Z2dlcihhZGRyZXNzLCBza2lwVG9NYWluID0gdHJ1ZSwgY2FsbGJhY2spCiAgcHJvY2VzcyhjYWxsYmFjaykKICBzZW5kTWVzc2FnZShtc2cpCkxhdW5jaERlYnVnZ2VyKGRiZywgc2tpcFRvTWFpbiA9IHRydWUpCiguLi5hcmdzKSA9PgooKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKICB2YWx1ZShuYW1lKQogIHYgPT4KUHJpbnRTdGFja0ZyYW1lKGZyYW1lKQogIGYgPT4KUHJpbnRTdGFjayhzdGFjaykKKG1lbWJlciwgb2JqLCBwcm9wKSA9PgogIGJyZWFrcG9pbnRzKC4uLmFyZ3MpCiAgYiA9PgogIHN0YWNrVHJhY2UoZnJhbWUpCiAgZnJhbWUgPT4KICBzY29wZXMobikKICB3YWl0UnVuKCkKICB2YXJpYWJsZXMobiwgZGVwdGggPSAwKQogIGFkZCA9IGl0ZW0gPT4KICB0b1N0cmluZygpCkRlYnVnZ2VyRGlzcGF0Y2hlcgoocG9ydCA9IDg3NzcpID0+CigpID0+Ck5ld0RlYnVnZ2VyKGFyZ3MsIHNraXBUb01haW4gPSBmYWxzZSwgYWRkcmVzcykKICBraWxsOiAoKSA9PgpPblN0b3BwZWQobXNnKQpVUkxXb3JrZXIoc2NyaXB0KQogIGRhdGFVUkwgPSBzID0+CihwdXNoLCBzdG9wKSA9PgogIHBvc3RNZXNzYWdlOiBtc2cgPT4KICBtYWluKC4uLmFyZ3MpCihhLCB2KSA9PgoodiwgcHYsIG8pID0+Cih2LCBwdiwgbykgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKQooKSA9PgoobGV2ZWwsIHN0cikgPT4KICBjb25maWcocmVxLCByZXMpCiAgZmlsZXMocmVxLCByZXMpCiAgZiA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIHZhbHVlOiBmdW5jdGlvbiBzZW5kTWVzc2FnZShtc2cpCiAgb25DbG9zZSh3cykKICBvbkVycm9yKHdzKQogIG9uUmVxdWVzdChyZXEsIHJlc3ApCihtYXRjaCwgcDEsIHAwLCBwMiwgcDMsIG9mZnNldCkgPT4KICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICBmb3J3YXJkID0gKGZkLCBuYW1lKSA9PgpidWYgPT4KKCkgPT4KKGRiZywgc29jaykgPT4KICBmcmFtZSA9PgooKSA9PgogIHNob3dTZXNzaW9ucygpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICB3cyA9PgogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAArBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgZnJhbWUgPT4KKCkgPT4KICBzaG93U2Vzc2lvbnMoKQogIGdldCBjb25uZWN0aW9ucygpCiAgd3MgPT4KICBnZXQgc29ja2xpc3QoKQogIGdldCBmaWxlKCkKKGZpbGUsIHNvdXJjZSkgPT4KKCkgPT4KcyA9PgooKSA9PgogIG0gPT4KICBsaW5lKGksIGopCiAgbWF0Y2gocmUpCiAgZm5zID0+Cih7IG5hbWUgfSkgPT4KICBmdW5jdGlvbnMoKQooW25hbWUsIGxvYywgcGFyYW1zLCBleHByZXNzaW9uLCBwYXRoXSkgPT4KICByZXBlYXQoY29uZCwgZm4sIC4uLmFyZ3MpCiAgY29uZCA9IChyLCBpKSA9PgogIHF1aXQod2h5KQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1632,
								1675
							],
							[
								2024,
								2061
							],
							[
								2128,
								2133
							],
							[
								2421,
								2438
							],
							[
								2834,
								2866
							],
							[
								3029,
								3050
							],
							[
								3243,
								3273
							],
							[
								3644,
								3672
							],
							[
								3684,
								3698
							],
							[
								3957,
								3971
							],
							[
								4453,
								4457
							],
							[
								4504,
								4508
							],
							[
								4705,
								4712
							],
							[
								4739,
								4756
							],
							[
								5030,
								5077
							],
							[
								5602,
								5670
							],
							[
								6220,
								6243
							],
							[
								7400,
								7422
							],
							[
								7866,
								7913
							],
							[
								8079,
								8097
							],
							[
								8593,
								8604
							],
							[
								8928,
								8946
							],
							[
								9047,
								9064
							],
							[
								9238,
								9242
							],
							[
								9317,
								9354
							],
							[
								9514,
								9518
							],
							[
								9863,
								9895
							],
							[
								10064,
								10088
							],
							[
								10102,
								10128
							],
							[
								10439,
								10443
							],
							[
								10800,
								10823
							],
							[
								10881,
								10889
							],
							[
								11069,
								11084
							],
							[
								11448,
								11463
							],
							[
								11846,
								11875
							],
							[
								11965,
								11978
							],
							[
								12679,
								12689
							],
							[
								12832,
								12850
							],
							[
								12882,
								12900
							],
							[
								12901,
								12908
							],
							[
								12941,
								13002
							],
							[
								13269,
								13280
							],
							[
								13429,
								13458
							],
							[
								13676,
								13702
							],
							[
								13713,
								13727
							],
							[
								13944,
								13959
							],
							[
								13989,
								14008
							],
							[
								14037,
								14059
							],
							[
								14372,
								14382
							],
							[
								14590,
								14604
							],
							[
								14658,
								14672
							],
							[
								15765,
								15808
							],
							[
								16002,
								16008
							],
							[
								16021,
								16037
							],
							[
								17611,
								17647
							],
							[
								17835,
								17870
							],
							[
								18010,
								18014
							],
							[
								18141,
								18159
							],
							[
								18313,
								18351
							],
							[
								18738,
								18749
							],
							[
								18904,
								18915
							],
							[
								18975,
								18995
							],
							[
								19584,
								19619
							],
							[
								20022,
								20041
							],
							[
								20149,
								20187
							],
							[
								21139,
								21162
							],
							[
								21200,
								21207
							],
							[
								21787,
								21792
							],
							[
								23008,
								23023
							],
							[
								25035,
								25043
							],
							[
								25981,
								25987
							],
							[
								26392,
								26417
							],
							[
								26740,
								26757
							],
							[
								26801,
								26806
							],
							[
								26831,
								26845
							],
							[
								27191,
								27201
							],
							[
								27325,
								27342
							],
							[
								27374,
								27389
							],
							[
								27432,
								27446
							],
							[
								27450,
								27465
							],
							[
								27608,
								27612
							],
							[
								27689,
								27699
							],
							[
								28187,
								28196
							],
							[
								28312,
								28318
							],
							[
								28376,
								28389
							],
							[
								28604,
								28621
							],
							[
								28738,
								28780
							],
							[
								29145,
								29176
							],
							[
								29258,
								29274
							],
							[
								29457,
								29477
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"frame =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAKwYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1632,
								1675
							],
							[
								2024,
								2061
							],
							[
								2128,
								2133
							],
							[
								2421,
								2438
							],
							[
								2834,
								2866
							],
							[
								3029,
								3050
							],
							[
								3243,
								3273
							],
							[
								3644,
								3672
							],
							[
								3684,
								3698
							],
							[
								3957,
								3971
							],
							[
								4453,
								4457
							],
							[
								4504,
								4508
							],
							[
								4705,
								4712
							],
							[
								4739,
								4756
							],
							[
								5030,
								5077
							],
							[
								5602,
								5670
							],
							[
								6220,
								6243
							],
							[
								7396,
								7418
							],
							[
								7862,
								7909
							],
							[
								8075,
								8093
							],
							[
								8589,
								8600
							],
							[
								8924,
								8942
							],
							[
								9043,
								9060
							],
							[
								9234,
								9238
							],
							[
								9313,
								9350
							],
							[
								9510,
								9514
							],
							[
								9859,
								9891
							],
							[
								10060,
								10084
							],
							[
								10098,
								10124
							],
							[
								10435,
								10439
							],
							[
								10796,
								10819
							],
							[
								10877,
								10885
							],
							[
								11065,
								11080
							],
							[
								11444,
								11459
							],
							[
								11842,
								11871
							],
							[
								11961,
								11974
							],
							[
								12675,
								12685
							],
							[
								12828,
								12846
							],
							[
								12878,
								12896
							],
							[
								12897,
								12904
							],
							[
								12937,
								12998
							],
							[
								13265,
								13276
							],
							[
								13425,
								13454
							],
							[
								13672,
								13698
							],
							[
								13709,
								13723
							],
							[
								13940,
								13955
							],
							[
								13985,
								14004
							],
							[
								14033,
								14055
							],
							[
								14368,
								14378
							],
							[
								14586,
								14600
							],
							[
								14654,
								14668
							],
							[
								15761,
								15804
							],
							[
								15998,
								16004
							],
							[
								16017,
								16033
							],
							[
								17607,
								17643
							],
							[
								17831,
								17866
							],
							[
								18006,
								18010
							],
							[
								18137,
								18155
							],
							[
								18309,
								18347
							],
							[
								18734,
								18745
							],
							[
								18900,
								18911
							],
							[
								18971,
								18991
							],
							[
								19580,
								19615
							],
							[
								20018,
								20037
							],
							[
								20145,
								20183
							],
							[
								21135,
								21158
							],
							[
								21196,
								21203
							],
							[
								21783,
								21788
							],
							[
								23004,
								23019
							],
							[
								25031,
								25039
							],
							[
								25977,
								25983
							],
							[
								26388,
								26413
							],
							[
								26736,
								26753
							],
							[
								26797,
								26802
							],
							[
								26827,
								26841
							],
							[
								27187,
								27197
							],
							[
								27321,
								27338
							],
							[
								27370,
								27385
							],
							[
								27428,
								27442
							],
							[
								27446,
								27461
							],
							[
								27604,
								27608
							],
							[
								27685,
								27695
							],
							[
								28183,
								28192
							],
							[
								28308,
								28314
							],
							[
								28372,
								28385
							],
							[
								28600,
								28617
							],
							[
								28734,
								28776
							],
							[
								29141,
								29172
							],
							[
								29254,
								29270
							],
							[
								29453,
								29473
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"frame =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAArBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgZnJhbWUgPT4KKCkgPT4KICBzaG93U2Vzc2lvbnMoKQogIGdldCBjb25uZWN0aW9ucygpCiAgd3MgPT4KICBnZXQgc29ja2xpc3QoKQogIGdldCBmaWxlKCkKKGZpbGUsIHNvdXJjZSkgPT4KKCkgPT4KcyA9PgooKSA9PgogIG0gPT4KICBsaW5lKGksIGopCiAgbWF0Y2gocmUpCiAgZm5zID0+Cih7IG5hbWUgfSkgPT4KICBmdW5jdGlvbnMoKQooW25hbWUsIGxvYywgcGFyYW1zLCBleHByZXNzaW9uLCBwYXRoXSkgPT4KICByZXBlYXQoY29uZCwgZm4sIC4uLmFyZ3MpCiAgY29uZCA9IChyLCBpKSA9PgogIHF1aXQod2h5KQAAAAAAAAAAKwYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsGAAAgIGRlY29yYXRlKGRlY29yYXRvcnMsIG9iaiwgLi4uYXJncykKICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+CiAgc2lnbmFsTmFtZSA9IG4gPT4KICBjaGVja0NoaWxkRXhpdGVkKGNoaWxkKQpHZXRMb2Mobm9kZSkKTG9hZEFTVChzb3VyY2UpClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKICAuc2hvdyA9IGFyZyA9PgogIGsgPT4KICBrID0+CiAgaXRlbSA9PgooYWNjLCBrZXlzLCBpKSA9PgpTdGFydERlYnVnZ2VyKGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MpCkNvbm5lY3REZWJ1Z2dlcihhZGRyZXNzLCBza2lwVG9NYWluID0gdHJ1ZSwgY2FsbGJhY2spCiAgcHJvY2VzcyhjYWxsYmFjaykKICBzZW5kTWVzc2FnZShtc2cpCkxhdW5jaERlYnVnZ2VyKGRiZywgc2tpcFRvTWFpbiA9IHRydWUpCiguLi5hcmdzKSA9PgooKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKICB2YWx1ZShuYW1lKQogIHYgPT4KUHJpbnRTdGFja0ZyYW1lKGZyYW1lKQogIGYgPT4KUHJpbnRTdGFjayhzdGFjaykKKG1lbWJlciwgb2JqLCBwcm9wKSA9PgogIGJyZWFrcG9pbnRzKC4uLmFyZ3MpCiAgYiA9PgogIHN0YWNrVHJhY2UoZnJhbWUpCiAgZnJhbWUgPT4KICBzY29wZXMobikKICB3YWl0UnVuKCkKICB2YXJpYWJsZXMobiwgZGVwdGggPSAwKQogIGFkZCA9IGl0ZW0gPT4KICB0b1N0cmluZygpCkRlYnVnZ2VyRGlzcGF0Y2hlcgoocG9ydCA9IDg3NzcpID0+CigpID0+Ck5ld0RlYnVnZ2VyKGFyZ3MsIHNraXBUb01haW4gPSBmYWxzZSwgYWRkcmVzcykKICBraWxsOiAoKSA9PgpPblN0b3BwZWQobXNnKQpVUkxXb3JrZXIoc2NyaXB0KQogIGRhdGFVUkwgPSBzID0+CihwdXNoLCBzdG9wKSA9PgogIHBvc3RNZXNzYWdlOiBtc2cgPT4KICBtYWluKC4uLmFyZ3MpCihhLCB2KSA9PgoodiwgcHYsIG8pID0+Cih2LCBwdiwgbykgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKQooKSA9PgoobGV2ZWwsIHN0cikgPT4KICBjb25maWcocmVxLCByZXMpCiAgZmlsZXMocmVxLCByZXMpCiAgZiA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIHZhbHVlOiBmdW5jdGlvbiBzZW5kTWVzc2FnZShtc2cpCiAgb25DbG9zZSh3cykKICBvbkVycm9yKHdzKQogIG9uUmVxdWVzdChyZXEsIHJlc3ApCihtYXRjaCwgcDEsIHAwLCBwMiwgcDMsIG9mZnNldCkgPT4KICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICBmb3J3YXJkID0gKGZkLCBuYW1lKSA9PgpidWYgPT4KKCkgPT4KKGRiZywgc29jaykgPT4KICBmcmFtZSA9PgooKSA9PgogIHNob3dTZXNzaW9ucygpCiAgZ2V0IGNvbm5lY3Rpb25zKCkKICB3cyA9PgogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSwgaikKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgcXVpdCh3aHkpAAAAAAAAAAArBgAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1632,
								1675
							],
							[
								2024,
								2061
							],
							[
								2128,
								2133
							],
							[
								2421,
								2438
							],
							[
								2834,
								2866
							],
							[
								3029,
								3050
							],
							[
								3243,
								3273
							],
							[
								3644,
								3672
							],
							[
								3684,
								3698
							],
							[
								3957,
								3971
							],
							[
								4453,
								4457
							],
							[
								4504,
								4508
							],
							[
								4705,
								4712
							],
							[
								4739,
								4756
							],
							[
								5030,
								5077
							],
							[
								5602,
								5670
							],
							[
								6220,
								6243
							],
							[
								7390,
								7412
							],
							[
								7856,
								7903
							],
							[
								8069,
								8087
							],
							[
								8583,
								8594
							],
							[
								8918,
								8936
							],
							[
								9037,
								9054
							],
							[
								9228,
								9232
							],
							[
								9307,
								9344
							],
							[
								9504,
								9508
							],
							[
								9853,
								9885
							],
							[
								10054,
								10078
							],
							[
								10092,
								10118
							],
							[
								10429,
								10433
							],
							[
								10790,
								10813
							],
							[
								10871,
								10879
							],
							[
								11059,
								11074
							],
							[
								11438,
								11453
							],
							[
								11836,
								11865
							],
							[
								11955,
								11968
							],
							[
								12669,
								12679
							],
							[
								12822,
								12840
							],
							[
								12872,
								12890
							],
							[
								12891,
								12898
							],
							[
								12931,
								12992
							],
							[
								13259,
								13270
							],
							[
								13419,
								13448
							],
							[
								13666,
								13692
							],
							[
								13703,
								13717
							],
							[
								13934,
								13949
							],
							[
								13979,
								13998
							],
							[
								14027,
								14049
							],
							[
								14362,
								14372
							],
							[
								14580,
								14594
							],
							[
								14648,
								14662
							],
							[
								15755,
								15798
							],
							[
								15992,
								15998
							],
							[
								16011,
								16027
							],
							[
								17601,
								17637
							],
							[
								17825,
								17860
							],
							[
								18000,
								18004
							],
							[
								18131,
								18149
							],
							[
								18303,
								18341
							],
							[
								18728,
								18739
							],
							[
								18894,
								18905
							],
							[
								18965,
								18985
							],
							[
								19574,
								19609
							],
							[
								20012,
								20031
							],
							[
								20139,
								20177
							],
							[
								21129,
								21152
							],
							[
								21190,
								21197
							],
							[
								21777,
								21782
							],
							[
								22998,
								23013
							],
							[
								25025,
								25033
							],
							[
								25971,
								25977
							],
							[
								26382,
								26407
							],
							[
								26730,
								26747
							],
							[
								26791,
								26796
							],
							[
								26821,
								26835
							],
							[
								27181,
								27191
							],
							[
								27315,
								27332
							],
							[
								27364,
								27379
							],
							[
								27422,
								27436
							],
							[
								27440,
								27455
							],
							[
								27598,
								27602
							],
							[
								27679,
								27689
							],
							[
								28177,
								28186
							],
							[
								28302,
								28308
							],
							[
								28366,
								28379
							],
							[
								28594,
								28611
							],
							[
								28728,
								28770
							],
							[
								29135,
								29166
							],
							[
								29248,
								29264
							],
							[
								29447,
								29467
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"frame =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgZnJhbWUgPT4KKCkgPT4KICBzaG93U2Vzc2lvbnMoKQogIGdldCBjb25uZWN0aW9ucygpCiAgd3MgPT4KICBnZXQgc29ja2xpc3QoKQogIGdldCBmaWxlKCkKKGZpbGUsIHNvdXJjZSkgPT4KKCkgPT4KcyA9PgooKSA9PgogIG0gPT4KICBsaW5lKGksIGopCiAgbWF0Y2gocmUpCiAgZm5zID0+Cih7IG5hbWUgfSkgPT4KICBmdW5jdGlvbnMoKQooW25hbWUsIGxvYywgcGFyYW1zLCBleHByZXNzaW9uLCBwYXRoXSkgPT4KICByZXBlYXQoY29uZCwgZm4sIC4uLmFyZ3MpCiAgY29uZCA9IChyLCBpKSA9PgogIHF1aXQod2h5KQAAAAAAAAAAKwYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgZnJhbWUgPT4KKCkgPT4KICBzaG93U2Vzc2lvbnMoKQogIGdldCBjb25uZWN0aW9ucygpCiAgd3MgPT4KICBnZXQgc29ja2xpc3QoKQogIGdldCBmaWxlKCkKKGZpbGUsIHNvdXJjZSkgPT4KKCkgPT4KcyA9PgooKSA9PgogIG0gPT4KICBsaW5lKGksIGopCiAgbWF0Y2gocmUpCiAgZm5zID0+Cih7IG5hbWUgfSkgPT4KICBmdW5jdGlvbnMoKQooW25hbWUsIGxvYywgcGFyYW1zLCBleHByZXNzaW9uLCBwYXRoXSkgPT4KICByZXBlYXQoY29uZCwgZm4sIC4uLmFyZ3MpCiAgY29uZCA9IChyLCBpKSA9PgogIHF1aXQod2h5KQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1632,
								1675
							],
							[
								2024,
								2061
							],
							[
								2128,
								2133
							],
							[
								2421,
								2438
							],
							[
								2834,
								2866
							],
							[
								3029,
								3050
							],
							[
								3243,
								3273
							],
							[
								3644,
								3672
							],
							[
								3684,
								3698
							],
							[
								3957,
								3971
							],
							[
								4453,
								4457
							],
							[
								4504,
								4508
							],
							[
								4705,
								4712
							],
							[
								4739,
								4756
							],
							[
								5030,
								5077
							],
							[
								5602,
								5670
							],
							[
								6220,
								6243
							],
							[
								7390,
								7412
							],
							[
								7856,
								7903
							],
							[
								8069,
								8087
							],
							[
								8583,
								8594
							],
							[
								8918,
								8936
							],
							[
								9037,
								9054
							],
							[
								9228,
								9232
							],
							[
								9307,
								9344
							],
							[
								9504,
								9508
							],
							[
								9853,
								9885
							],
							[
								10054,
								10078
							],
							[
								10092,
								10118
							],
							[
								10429,
								10433
							],
							[
								10790,
								10813
							],
							[
								10871,
								10879
							],
							[
								11059,
								11074
							],
							[
								11438,
								11453
							],
							[
								11836,
								11865
							],
							[
								11955,
								11968
							],
							[
								12669,
								12679
							],
							[
								12822,
								12840
							],
							[
								12872,
								12890
							],
							[
								12891,
								12898
							],
							[
								12931,
								12992
							],
							[
								13259,
								13270
							],
							[
								13419,
								13448
							],
							[
								13666,
								13692
							],
							[
								13703,
								13717
							],
							[
								13934,
								13949
							],
							[
								13979,
								13998
							],
							[
								14027,
								14049
							],
							[
								14362,
								14372
							],
							[
								14580,
								14594
							],
							[
								14648,
								14662
							],
							[
								15755,
								15798
							],
							[
								15992,
								15998
							],
							[
								16011,
								16027
							],
							[
								17601,
								17637
							],
							[
								17825,
								17860
							],
							[
								18000,
								18004
							],
							[
								18131,
								18149
							],
							[
								18303,
								18341
							],
							[
								18728,
								18739
							],
							[
								18894,
								18905
							],
							[
								18965,
								18985
							],
							[
								19574,
								19609
							],
							[
								20012,
								20031
							],
							[
								20139,
								20177
							],
							[
								21129,
								21152
							],
							[
								21190,
								21197
							],
							[
								21777,
								21782
							],
							[
								22998,
								23013
							],
							[
								25025,
								25033
							],
							[
								25971,
								25977
							],
							[
								26382,
								26407
							],
							[
								26730,
								26747
							],
							[
								26791,
								26796
							],
							[
								26821,
								26835
							],
							[
								27181,
								27191
							],
							[
								27315,
								27332
							],
							[
								27364,
								27379
							],
							[
								27422,
								27436
							],
							[
								27440,
								27455
							],
							[
								27598,
								27602
							],
							[
								27679,
								27689
							],
							[
								28177,
								28186
							],
							[
								28302,
								28308
							],
							[
								28366,
								28379
							],
							[
								28594,
								28611
							],
							[
								28728,
								28770
							],
							[
								29135,
								29166
							],
							[
								29248,
								29264
							],
							[
								29447,
								29467
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"frame =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAKwYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArBgAAICBkZWNvcmF0ZShkZWNvcmF0b3JzLCBvYmosIC4uLmFyZ3MpCiAgc2NyaXB0TmFtZSA9IChhcmcgPSBzY3JpcHRBcmdzWzBdKSA9PgooKSA9PgogIHNpZ25hbE5hbWUgPSBuID0+CiAgY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkKR2V0TG9jKG5vZGUpCkxvYWRBU1Qoc291cmNlKQpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2UobXNnKQpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooLi4uYXJncykgPT4KKCkgPT4KRGVidWdnZXJEaXNwYXRjaGVyCiAgdmFsdWUobmFtZSkKICB2ID0+ClByaW50U3RhY2tGcmFtZShmcmFtZSkKICBmID0+ClByaW50U3RhY2soc3RhY2spCihtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICBicmVha3BvaW50cyguLi5hcmdzKQogIGIgPT4KICBzdGFja1RyYWNlKGZyYW1lKQogIGZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKVVJMV29ya2VyKHNjcmlwdCkKICBkYXRhVVJMID0gcyA9PgoocHVzaCwgc3RvcCkgPT4KICBwb3N0TWVzc2FnZTogbXNnID0+CiAgbWFpbiguLi5hcmdzKQooYSwgdikgPT4KKHYsIHB2LCBvKSA9PgoodiwgcHYsIG8pID0+CiAgY3JlYXRlV1ModXJsLCBjYWxsYmFja3MsIGxpc3RlbikKKCkgPT4KKGxldmVsLCBzdHIpID0+CiAgY29uZmlnKHJlcSwgcmVzKQogIGZpbGVzKHJlcSwgcmVzKQogIGYgPT4KICBvbkNvbm5lY3Qod3MsIHJlcSkKICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobXNnKQogIG9uQ2xvc2Uod3MpCiAgb25FcnJvcih3cykKICBvblJlcXVlc3QocmVxLCByZXNwKQoobWF0Y2gsIHAxLCBwMCwgcDIsIHAzLCBvZmZzZXQpID0+CiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpCiAgZm9yd2FyZCA9IChmZCwgbmFtZSkgPT4KYnVmID0+CigpID0+CihkYmcsIHNvY2spID0+CiAgZnJhbWUgPT4KKCkgPT4KICBzaG93U2Vzc2lvbnMoKQogIGdldCBjb25uZWN0aW9ucygpCiAgd3MgPT4KICBnZXQgc29ja2xpc3QoKQogIGdldCBmaWxlKCkKKGZpbGUsIHNvdXJjZSkgPT4KKCkgPT4KcyA9PgooKSA9PgogIG0gPT4KICBsaW5lKGksIGopCiAgbWF0Y2gocmUpCiAgZm5zID0+Cih7IG5hbWUgfSkgPT4KICBmdW5jdGlvbnMoKQooW25hbWUsIGxvYywgcGFyYW1zLCBleHByZXNzaW9uLCBwYXRoXSkgPT4KICByZXBlYXQoY29uZCwgZm4sIC4uLmFyZ3MpCiAgY29uZCA9IChyLCBpKSA9PgogIHF1aXQod2h5KQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					8,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1632,
								1675
							],
							[
								2024,
								2061
							],
							[
								2128,
								2133
							],
							[
								2421,
								2438
							],
							[
								2834,
								2866
							],
							[
								3029,
								3050
							],
							[
								3243,
								3273
							],
							[
								3644,
								3672
							],
							[
								3684,
								3698
							],
							[
								3957,
								3971
							],
							[
								4453,
								4457
							],
							[
								4504,
								4508
							],
							[
								4705,
								4712
							],
							[
								4739,
								4756
							],
							[
								5030,
								5077
							],
							[
								5602,
								5670
							],
							[
								6220,
								6243
							],
							[
								7390,
								7412
							],
							[
								7856,
								7903
							],
							[
								8069,
								8087
							],
							[
								8583,
								8594
							],
							[
								8918,
								8936
							],
							[
								9037,
								9054
							],
							[
								9228,
								9232
							],
							[
								9307,
								9344
							],
							[
								9504,
								9508
							],
							[
								9853,
								9885
							],
							[
								10054,
								10078
							],
							[
								10092,
								10118
							],
							[
								10429,
								10433
							],
							[
								10790,
								10813
							],
							[
								10871,
								10879
							],
							[
								11059,
								11074
							],
							[
								11438,
								11453
							],
							[
								11836,
								11865
							],
							[
								11955,
								11968
							],
							[
								12669,
								12679
							],
							[
								12822,
								12840
							],
							[
								12872,
								12890
							],
							[
								12891,
								12898
							],
							[
								12931,
								12992
							],
							[
								13259,
								13270
							],
							[
								13419,
								13448
							],
							[
								13666,
								13692
							],
							[
								13703,
								13717
							],
							[
								13934,
								13949
							],
							[
								13979,
								13998
							],
							[
								14027,
								14049
							],
							[
								14362,
								14372
							],
							[
								14580,
								14594
							],
							[
								14648,
								14662
							],
							[
								15755,
								15798
							],
							[
								15992,
								15998
							],
							[
								16011,
								16027
							],
							[
								17601,
								17637
							],
							[
								17825,
								17860
							],
							[
								18000,
								18004
							],
							[
								18131,
								18149
							],
							[
								18303,
								18341
							],
							[
								18728,
								18739
							],
							[
								18894,
								18905
							],
							[
								18965,
								18985
							],
							[
								19574,
								19609
							],
							[
								20012,
								20031
							],
							[
								20139,
								20177
							],
							[
								21129,
								21152
							],
							[
								21190,
								21197
							],
							[
								21777,
								21782
							],
							[
								22998,
								23013
							],
							[
								25025,
								25033
							],
							[
								25971,
								25977
							],
							[
								26382,
								26407
							],
							[
								26730,
								26747
							],
							[
								26791,
								26796
							],
							[
								26821,
								26835
							],
							[
								27181,
								27191
							],
							[
								27315,
								27332
							],
							[
								27364,
								27379
							],
							[
								27422,
								27436
							],
							[
								27440,
								27455
							],
							[
								27598,
								27602
							],
							[
								27679,
								27689
							],
							[
								28177,
								28186
							],
							[
								28302,
								28308
							],
							[
								28366,
								28379
							],
							[
								28594,
								28611
							],
							[
								28728,
								28770
							],
							[
								29135,
								29166
							],
							[
								29248,
								29264
							],
							[
								29447,
								29467
							]
						],
						"symlist":
						[
							"function decorate(decorators, obj, ...args)",
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(child)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"function StartREPL(prefix = ",
							", suffix = '')",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							"async function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"async sendMessage(msg)",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async (...args) =>",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							"frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"async function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function URLWorker(script)",
							"dataURL = s =>",
							"(push, stop) =>",
							"postMessage: msg =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: async function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							"async function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"frame =>",
							" () =>",
							" function showSessions()",
							"get connections()",
							"ws =>",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i, j)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAKwYAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "debugger-server.js",
			"settings":
			{
				"buffer_size": 29794,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					448,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALQpAAAAAAAAtSkAAAAAAAAAAAAAtSkAAAAAAAC9KQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC0KQAAAAAAALQpAAAAAAAA////////738"
				],
				[
					459,
					1,
					"insert",
					{
						"characters": "let"
					},
					"BQAAABopAAAAAAAAGykAAAAAAAAAAAAAGykAAAAAAAAbKQAAAAAAAAYAAAByZXR1cm6wKQAAAAAAALApAAAAAAAACAAAACAgICAgICAgGykAAAAAAAAcKQAAAAAAAAAAAAAcKQAAAAAAAB0pAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgKQAAAAAAABopAAAAAAAAAAAAAAAAUkA"
				],
				[
					460,
					1,
					"insert",
					{
						"characters": " ret="
					},
					"BQAAAB0pAAAAAAAAHikAAAAAAAAAAAAAHikAAAAAAAAfKQAAAAAAAAAAAAAfKQAAAAAAACApAAAAAAAAAAAAACApAAAAAAAAISkAAAAAAAAAAAAAISkAAAAAAAAiKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdKQAAAAAAAB0pAAAAAAAAAAAAAAAA8L8"
				],
				[
					462,
					1,
					"insert",
					{
						"characters": "\n\nreturn"
					},
					"CwAAALYpAAAAAAAAtykAAAAAAAAAAAAAtykAAAAAAAC/KQAAAAAAAAAAAAC/KQAAAAAAAMApAAAAAAAAAAAAAMApAAAAAAAAyCkAAAAAAAAAAAAAtykAAAAAAAC3KQAAAAAAAAgAAAAgICAgICAgIMApAAAAAAAAwSkAAAAAAAAAAAAAwSkAAAAAAADCKQAAAAAAAAAAAADCKQAAAAAAAMMpAAAAAAAAAAAAAMMpAAAAAAAAxCkAAAAAAAAAAAAAxCkAAAAAAADFKQAAAAAAAAAAAADFKQAAAAAAAMYpAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2KQAAAAAAALYpAAAAAAAA////////738"
				],
				[
					463,
					1,
					"insert",
					{
						"characters": " ret;"
					},
					"BQAAAMYpAAAAAAAAxykAAAAAAAAAAAAAxykAAAAAAADIKQAAAAAAAAAAAADIKQAAAAAAAMkpAAAAAAAAAAAAAMkpAAAAAAAAyikAAAAAAAAAAAAAyikAAAAAAADLKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGKQAAAAAAAMYpAAAAAAAAAAAAAAAA8L8"
				],
				[
					465,
					1,
					"insert",
					{
						"characters": "\nconsole.log"
					},
					"DAAAALcpAAAAAAAAuCkAAAAAAAAAAAAAuCkAAAAAAAC5KQAAAAAAAAAAAAC5KQAAAAAAALopAAAAAAAAAAAAALopAAAAAAAAuykAAAAAAAAAAAAAuykAAAAAAAC8KQAAAAAAAAAAAAC8KQAAAAAAAL0pAAAAAAAAAAAAAL0pAAAAAAAAvikAAAAAAAAAAAAAvikAAAAAAAC/KQAAAAAAAAAAAAC/KQAAAAAAAMApAAAAAAAAAAAAAMApAAAAAAAAwSkAAAAAAAAAAAAAwSkAAAAAAADCKQAAAAAAAAAAAADCKQAAAAAAAMMpAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3KQAAAAAAALcpAAAAAAAAAAAAAABgZUA"
				],
				[
					466,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMMpAAAAAAAAxSkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDKQAAAAAAAMMpAAAAAAAAAAAAAAAA8L8"
				],
				[
					467,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAMQpAAAAAAAAxikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEKQAAAAAAAMQpAAAAAAAAAAAAAAAA8L8"
				],
				[
					468,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAMUpAAAAAAAAxikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFKQAAAAAAAMUpAAAAAAAAAAAAAAAA8L8"
				],
				[
					469,
					1,
					"left_delete",
					null,
					"AQAAAMUpAAAAAAAAxSkAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGKQAAAAAAAMYpAAAAAAAAAAAAAAAA8L8"
				],
				[
					470,
					1,
					"insert",
					{
						"characters": "Stack:"
					},
					"BgAAAMUpAAAAAAAAxikAAAAAAAAAAAAAxikAAAAAAADHKQAAAAAAAAAAAADHKQAAAAAAAMgpAAAAAAAAAAAAAMgpAAAAAAAAySkAAAAAAAAAAAAAySkAAAAAAADKKQAAAAAAAAAAAADKKQAAAAAAAMspAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFKQAAAAAAAMUpAAAAAAAAAAAAAAAA8L8"
				],
				[
					471,
					6,
					"left_delete",
					null,
					"BgAAAMopAAAAAAAAyikAAAAAAAABAAAAOskpAAAAAAAAySkAAAAAAAABAAAAa8gpAAAAAAAAyCkAAAAAAAABAAAAY8cpAAAAAAAAxykAAAAAAAABAAAAYcYpAAAAAAAAxikAAAAAAAABAAAAdMUpAAAAAAAAxSkAAAAAAAABAAAAUw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLKQAAAAAAAMspAAAAAAAAAAAAAAAA8L8"
				],
				[
					472,
					1,
					"insert",
					{
						"characters": "stackTrace"
					},
					"CgAAAMUpAAAAAAAAxikAAAAAAAAAAAAAxikAAAAAAADHKQAAAAAAAAAAAADHKQAAAAAAAMgpAAAAAAAAAAAAAMgpAAAAAAAAySkAAAAAAAAAAAAAySkAAAAAAADKKQAAAAAAAAAAAADKKQAAAAAAAMspAAAAAAAAAAAAAMspAAAAAAAAzCkAAAAAAAAAAAAAzCkAAAAAAADNKQAAAAAAAAAAAADNKQAAAAAAAM4pAAAAAAAAAAAAAM4pAAAAAAAAzykAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFKQAAAAAAAMUpAAAAAAAAAAAAAAAA8L8"
				],
				[
					473,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAM8pAAAAAAAA0CkAAAAAAAAAAAAA0CkAAAAAAADRKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPKQAAAAAAAM8pAAAAAAAAAAAAAAAA8L8"
				],
				[
					475,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAANIpAAAAAAAA0ykAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSKQAAAAAAANIpAAAAAAAAAAAAAAAA8L8"
				],
				[
					476,
					1,
					"left_delete",
					null,
					"AQAAANIpAAAAAAAA0ikAAAAAAAABAAAAbQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTKQAAAAAAANMpAAAAAAAAAAAAAAAA8L8"
				],
				[
					477,
					1,
					"insert",
					{
						"characters": ",ret"
					},
					"BAAAANIpAAAAAAAA0ykAAAAAAAAAAAAA0ykAAAAAAADUKQAAAAAAAAAAAADUKQAAAAAAANUpAAAAAAAAAAAAANUpAAAAAAAA1ikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSKQAAAAAAANIpAAAAAAAAAAAAAAAA8L8"
				],
				[
					479,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANcpAAAAAAAA2CkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXKQAAAAAAANcpAAAAAAAAAAAAAAAA8L8"
				],
				[
					483,
					1,
					"left_delete",
					null,
					"AQAAALYpAAAAAAAAtikAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3KQAAAAAAALcpAAAAAAAAAAAAAAAAckA"
				],
				[
					496,
					6,
					"left_delete",
					null,
					"BgAAAKsoAAAAAAAAqygAAAAAAAABAAAAfakoAAAAAAAAqSgAAAAAAAACAAAAICCnKAAAAAAAAKcoAAAAAAAAAgAAACAgpSgAAAAAAAClKAAAAAAAAAIAAAAgIKMoAAAAAAAAoygAAAAAAAACAAAAICCiKAAAAAAAAKIoAAAAAAAAAQAAAAo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsKAAAAAAAAKwoAAAAAAAAAAAAAAAA8L8"
				],
				[
					498,
					2,
					"left_delete",
					null,
					"AgAAAEgoAAAAAAAASCgAAAAAAAABAAAAe0coAAAAAAAARygAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJKAAAAAAAAEkoAAAAAAAAAAAAAADAiEA"
				],
				[
					500,
					1,
					"left_delete",
					null,
					"AQAAAB8oAAAAAAAAHygAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgKAAAAAAAACAoAAAAAAAAAAAAAABgdUA"
				],
				[
					503,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAB8oAAAAAAAAICgAAAAAAAAAAAAAICgAAAAAAAAoKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfKAAAAAAAAB8oAAAAAAAAAAAAAACIhEA"
				],
				[
					508,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADILwAAAAAAAMgvAAAAAAAAAAAAAAAAUkA"
				],
				[
					527,
					1,
					"insert",
					{
						"characters": "ket"
					},
					"BAAAAKAoAAAAAAAAoSgAAAAAAAAAAAAAoSgAAAAAAAChKAAAAAAAAAYAAAByZXR1cm6hKAAAAAAAAKIoAAAAAAAAAAAAAKIoAAAAAAAAoygAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgKAAAAAAAAKYoAAAAAAAAAAAAAAAA8L8"
				],
				[
					528,
					3,
					"left_delete",
					null,
					"AwAAAKIoAAAAAAAAoigAAAAAAAABAAAAdKEoAAAAAAAAoSgAAAAAAAABAAAAZaAoAAAAAAAAoCgAAAAAAAABAAAAaw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjKAAAAAAAAKMoAAAAAAAAAAAAAAAA8L8"
				],
				[
					529,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAKAoAAAAAAAAoSgAAAAAAAAAAAAAoSgAAAAAAACiKAAAAAAAAAAAAACiKAAAAAAAAKMoAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgKAAAAAAAAKAoAAAAAAAAAAAAAAAA8L8"
				],
				[
					530,
					1,
					"insert",
					{
						"characters": " ret="
					},
					"BQAAAKMoAAAAAAAApCgAAAAAAAAAAAAApCgAAAAAAAClKAAAAAAAAAAAAAClKAAAAAAAAKYoAAAAAAAAAAAAAKYoAAAAAAAApygAAAAAAAAAAAAApygAAAAAAACoKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACjKAAAAAAAAKMoAAAAAAAAAAAAAAAA8L8"
				],
				[
					532,
					1,
					"insert",
					{
						"characters": "\n\nreturn"
					},
					"CwAAANQoAAAAAAAA1SgAAAAAAAAAAAAA1SgAAAAAAADdKAAAAAAAAAAAAADdKAAAAAAAAN4oAAAAAAAAAAAAAN4oAAAAAAAA5igAAAAAAAAAAAAA1SgAAAAAAADVKAAAAAAAAAgAAAAgICAgICAgIN4oAAAAAAAA3ygAAAAAAAAAAAAA3ygAAAAAAADgKAAAAAAAAAAAAADgKAAAAAAAAOEoAAAAAAAAAAAAAOEoAAAAAAAA4igAAAAAAAAAAAAA4igAAAAAAADjKAAAAAAAAAAAAADjKAAAAAAAAOQoAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUKAAAAAAAANQoAAAAAAAA////////738"
				],
				[
					533,
					1,
					"insert",
					{
						"characters": " ret;"
					},
					"BQAAAOQoAAAAAAAA5SgAAAAAAAAAAAAA5SgAAAAAAADmKAAAAAAAAAAAAADmKAAAAAAAAOcoAAAAAAAAAAAAAOcoAAAAAAAA6CgAAAAAAAAAAAAA6CgAAAAAAADpKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkKAAAAAAAAOQoAAAAAAAAAAAAAAAA8L8"
				],
				[
					545,
					1,
					"paste",
					null,
					"AQAAANUoAAAAAAAA/ygAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVKAAAAAAAANUoAAAAAAAAAAAAAAAA8L8"
				],
				[
					554,
					1,
					"insert",
					{
						"characters": "breajk"
					},
					"BwAAAOooAAAAAAAA6ygAAAAAAAAAAAAA6ygAAAAAAADrKAAAAAAAAAoAAABzdGFja1RyYWNl6ygAAAAAAADsKAAAAAAAAAAAAADsKAAAAAAAAO0oAAAAAAAAAAAAAO0oAAAAAAAA7igAAAAAAAAAAAAA7igAAAAAAADvKAAAAAAAAAAAAADvKAAAAAAAAPAoAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqKAAAAAAAAPQoAAAAAAAAAAAAAAAA8L8"
				],
				[
					555,
					2,
					"left_delete",
					null,
					"AgAAAO8oAAAAAAAA7ygAAAAAAAABAAAAa+4oAAAAAAAA7igAAAAAAAABAAAAag",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwKAAAAAAAAPAoAAAAAAAAAAAAAAAA8L8"
				],
				[
					556,
					1,
					"insert",
					{
						"characters": "kpoints"
					},
					"BwAAAO4oAAAAAAAA7ygAAAAAAAAAAAAA7ygAAAAAAADwKAAAAAAAAAAAAADwKAAAAAAAAPEoAAAAAAAAAAAAAPEoAAAAAAAA8igAAAAAAAAAAAAA8igAAAAAAADzKAAAAAAAAAAAAADzKAAAAAAAAPQoAAAAAAAAAAAAAPQoAAAAAAAA9SgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuKAAAAAAAAO4oAAAAAAAAAAAAAAAA8L8"
				],
				[
					624,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAP8oAAAAAAAAACkAAAAAAAAAAAAAACkAAAAAAAAIKQAAAAAAAAAAAAAIKQAAAAAAAAkpAAAAAAAAAAAAAAkpAAAAAAAAESkAAAAAAAAAAAAAACkAAAAAAAAAKQAAAAAAAAgAAAAgICAgICAgIAkpAAAAAAAACikAAAAAAAAAAAAACikAAAAAAAALKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/KAAAAAAAAP8oAAAAAAAAAAAAAAAA8L8"
				],
				[
					625,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAspAAAAAAAADSkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALKQAAAAAAAAspAAAAAAAAAAAAAAAA8L8"
				],
				[
					626,
					1,
					"insert",
					{
						"characters": "ret.path"
					},
					"CAAAAAwpAAAAAAAADSkAAAAAAAAAAAAADSkAAAAAAAAOKQAAAAAAAAAAAAAOKQAAAAAAAA8pAAAAAAAAAAAAAA8pAAAAAAAAECkAAAAAAAAAAAAAECkAAAAAAAARKQAAAAAAAAAAAAARKQAAAAAAABIpAAAAAAAAAAAAABIpAAAAAAAAEykAAAAAAAAAAAAAEykAAAAAAAAUKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMKQAAAAAAAAwpAAAAAAAAAAAAAAAA8L8"
				],
				[
					628,
					1,
					"insert",
					{
						"characters": "\npr"
					},
					"BgAAABUpAAAAAAAAFikAAAAAAAAAAAAAFikAAAAAAAAeKQAAAAAAAAAAAAAWKQAAAAAAABYpAAAAAAAACAAAACAgICAgICAgFikAAAAAAAAgKQAAAAAAAAAAAAAgKQAAAAAAACEpAAAAAAAAAAAAACEpAAAAAAAAIikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVKQAAAAAAABUpAAAAAAAAAAAAAAAA8L8"
				],
				[
					629,
					2,
					"left_delete",
					null,
					"AgAAACEpAAAAAAAAISkAAAAAAAABAAAAciApAAAAAAAAICkAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiKQAAAAAAACIpAAAAAAAAAAAAAAAA8L8"
				],
				[
					630,
					1,
					"insert",
					{
						"characters": "ret.path=relative"
					},
					"EQAAACApAAAAAAAAISkAAAAAAAAAAAAAISkAAAAAAAAiKQAAAAAAAAAAAAAiKQAAAAAAACMpAAAAAAAAAAAAACMpAAAAAAAAJCkAAAAAAAAAAAAAJCkAAAAAAAAlKQAAAAAAAAAAAAAlKQAAAAAAACYpAAAAAAAAAAAAACYpAAAAAAAAJykAAAAAAAAAAAAAJykAAAAAAAAoKQAAAAAAAAAAAAAoKQAAAAAAACkpAAAAAAAAAAAAACkpAAAAAAAAKikAAAAAAAAAAAAAKikAAAAAAAArKQAAAAAAAAAAAAArKQAAAAAAACwpAAAAAAAAAAAAACwpAAAAAAAALSkAAAAAAAAAAAAALSkAAAAAAAAuKQAAAAAAAAAAAAAuKQAAAAAAAC8pAAAAAAAAAAAAAC8pAAAAAAAAMCkAAAAAAAAAAAAAMCkAAAAAAAAxKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgKQAAAAAAACApAAAAAAAAAAAAAAAA8L8"
				],
				[
					631,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADEpAAAAAAAAMykAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxKQAAAAAAADEpAAAAAAAAAAAAAAAA8L8"
				],
				[
					632,
					1,
					"insert",
					{
						"characters": "ret.path"
					},
					"CAAAADIpAAAAAAAAMykAAAAAAAAAAAAAMykAAAAAAAA0KQAAAAAAAAAAAAA0KQAAAAAAADUpAAAAAAAAAAAAADUpAAAAAAAANikAAAAAAAAAAAAANikAAAAAAAA3KQAAAAAAAAAAAAA3KQAAAAAAADgpAAAAAAAAAAAAADgpAAAAAAAAOSkAAAAAAAAAAAAAOSkAAAAAAAA6KQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyKQAAAAAAADIpAAAAAAAAAAAAAAAA8L8"
				],
				[
					634,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADspAAAAAAAAPCkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7KQAAAAAAADspAAAAAAAAAAAAAAAA8L8"
				],
				[
					641,
					1,
					"cut",
					null,
					"AQAAAAEpAAAAAAAAASkAAAAAAAA9AAAAICAgICAgICBpZihyZXQucGF0aCkKICAgICAgICAgIHJldC5wYXRoPXJlbGF0aXZlKHJldC5wYXRoKTsKCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABKQAAAAAAAD4pAAAAAAAAAAAAAAAAAAA"
				],
				[
					643,
					1,
					"paste",
					null,
					"AQAAANUoAAAAAAAAEikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVKAAAAAAAANUoAAAAAAAAAAAAAAAAAAA"
				],
				[
					644,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABIpAAAAAAAAEykAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASKQAAAAAAABIpAAAAAAAAAAAAAAAA8L8"
				],
				[
					645,
					2,
					"left_delete",
					null,
					"AgAAABIpAAAAAAAAEikAAAAAAAABAAAAChEpAAAAAAAAESkAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATKQAAAAAAABMpAAAAAAAAAAAAAAAA8L8"
				],
				[
					693,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANUoAAAAAAAA1igAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVKAAAAAAAANUoAAAAAAAAAAAAAAAAAAA"
				],
				[
					732,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAABEpAAAAAAAAEikAAAAAAAAAAAAAEikAAAAAAAAcKQAAAAAAAAAAAAASKQAAAAAAABIpAAAAAAAACgAAACAgICAgICAgICASKQAAAAAAABopAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARKQAAAAAAABEpAAAAAAAAAAAAAAAA8L8"
				],
				[
					753,
					1,
					"cut",
					null,
					"AQAAANUoAAAAAAAA1SgAAAAAAAA9AAAACiAgICAgICAgaWYocmV0LnBhdGgpCiAgICAgICAgICByZXQucGF0aD1yZWxhdGl2ZShyZXQucGF0aCk7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVKAAAAAAAABIpAAAAAAAAAAAAAAAAAAA"
				],
				[
					754,
					2,
					"paste",
					null,
					"AgAAANUoAAAAAAAAEikAAAAAAAAAAAAAEikAAAAAAABPKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVKAAAAAAAANUoAAAAAAAAAAAAAAAA8L8"
				],
				[
					759,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AwAAACIpAAAAAAAAIykAAAAAAAAAAAAAIykAAAAAAAAjKQAAAAAAAAQAAABwYXRoTCkAAAAAAABMKQAAAAAAAAgAAAAgICAgICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiKQAAAAAAACYpAAAAAAAAAAAAAAAA8L8"
				],
				[
					760,
					2,
					"left_delete",
					null,
					"AgAAACIpAAAAAAAAIikAAAAAAAABAAAAYiEpAAAAAAAAISkAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjKQAAAAAAACMpAAAAAAAAAAAAAAAA8L8"
				],
				[
					761,
					1,
					"insert",
					{
						"characters": "?b"
					},
					"AgAAACEpAAAAAAAAIikAAAAAAAAAAAAAIikAAAAAAAAjKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhKQAAAAAAACEpAAAAAAAAAAAAAAAA8L8"
				],
				[
					762,
					1,
					"left_delete",
					null,
					"AQAAACIpAAAAAAAAIikAAAAAAAABAAAAYg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjKQAAAAAAACMpAAAAAAAAAAAAAAAA8L8"
				],
				[
					763,
					1,
					"insert",
					{
						"characters": ".breakpoinst?.path"
					},
					"EgAAACIpAAAAAAAAIykAAAAAAAAAAAAAIykAAAAAAAAkKQAAAAAAAAAAAAAkKQAAAAAAACUpAAAAAAAAAAAAACUpAAAAAAAAJikAAAAAAAAAAAAAJikAAAAAAAAnKQAAAAAAAAAAAAAnKQAAAAAAACgpAAAAAAAAAAAAACgpAAAAAAAAKSkAAAAAAAAAAAAAKSkAAAAAAAAqKQAAAAAAAAAAAAAqKQAAAAAAACspAAAAAAAAAAAAACspAAAAAAAALCkAAAAAAAAAAAAALCkAAAAAAAAtKQAAAAAAAAAAAAAtKQAAAAAAAC4pAAAAAAAAAAAAAC4pAAAAAAAALykAAAAAAAAAAAAALykAAAAAAAAwKQAAAAAAAAAAAAAwKQAAAAAAADEpAAAAAAAAAAAAADEpAAAAAAAAMikAAAAAAAAAAAAAMikAAAAAAAAzKQAAAAAAAAAAAAAzKQAAAAAAADQpAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiKQAAAAAAACIpAAAAAAAAAAAAAAAA8L8"
				],
				[
					765,
					1,
					"left_delete",
					null,
					"AQAAACwpAAAAAAAALCkAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtKQAAAAAAAC0pAAAAAAAAAAAAAAAA8L8"
				],
				[
					767,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAC0pAAAAAAAALikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtKQAAAAAAAC0pAAAAAAAAAAAAAAAA8L8"
				],
				[
					777,
					1,
					"paste",
					null,
					"AQAAAEQpAAAAAAAATykAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEKQAAAAAAAEQpAAAAAAAAAAAAAAAA8L8"
				],
				[
					778,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAE8pAAAAAAAAUCkAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPKQAAAAAAAE8pAAAAAAAAAAAAAAAA8L8"
				],
				[
					784,
					1,
					"paste",
					null,
					"AQAAAGIpAAAAAAAAbikAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABiKQAAAAAAAGIpAAAAAAAAAAAAAAAA8L8"
				],
				[
					809,
					1,
					"delete_blank_lines",
					{
						"surplus": false
					},
					"AQAAANUnAAAAAAAAmikAAAAAAADMAQAACiAgICAgICAgaWYodHlwZXMuaXNQcm9taXNlKGJyZWFrcG9pbnRzKSkgYnJlYWtwb2ludHMgPSBhd2FpdCBicmVha3BvaW50czsKCiAgICAgICAgaWYoQXJyYXkuaXNBcnJheShicmVha3BvaW50cykpIGJyZWFrcG9pbnRzID0gYnJlYWtwb2ludHMubWFwKGIgPT4gZmlsdGVyS2V5cyhiLCBbJ25hbWUnLCAnbGluZScsICdjb2x1bW4nXSkpOwoKICAgICAgICBsZXQgcmV0PSBhd2FpdCBtZW1iZXIuY2FsbCh0aGlzLCBmaWxlLCBicmVha3BvaW50cyk7CgogICAgICAgIGlmKHJldC5wYXRoKQogICAgICAgICAgcmV0LnBhdGg9cmVsYXRpdmUocmV0LnBhdGgpOwoKICAgICAgICBpZihyZXQ/LmJyZWFrcG9pbnRzPy5wYXRoKQogICAgICAgICAgcmV0LmJyZWFrcG9pbnRzLnBhdGg9cmVsYXRpdmUocmV0LmJyZWFrcG9pbnRzLnBhdGgpOwoKICAgICAgICBjb25zb2xlLmxvZygnYnJlYWtwb2ludHMgPScsIHJldCk7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVJwAAAAAAAKEpAAAAAAAAAAAAAAAA8L8"
				],
				[
					810,
					1,
					"delete_blank_lines",
					{
						"surplus": true
					},
					"AQAAANUnAAAAAAAAmikAAAAAAADFAQAAICAgICAgICBpZih0eXBlcy5pc1Byb21pc2UoYnJlYWtwb2ludHMpKSBicmVha3BvaW50cyA9IGF3YWl0IGJyZWFrcG9pbnRzOwogICAgICAgIGlmKEFycmF5LmlzQXJyYXkoYnJlYWtwb2ludHMpKSBicmVha3BvaW50cyA9IGJyZWFrcG9pbnRzLm1hcChiID0+IGZpbHRlcktleXMoYiwgWyduYW1lJywgJ2xpbmUnLCAnY29sdW1uJ10pKTsKICAgICAgICBsZXQgcmV0PSBhd2FpdCBtZW1iZXIuY2FsbCh0aGlzLCBmaWxlLCBicmVha3BvaW50cyk7CiAgICAgICAgaWYocmV0LnBhdGgpCiAgICAgICAgICByZXQucGF0aD1yZWxhdGl2ZShyZXQucGF0aCk7CiAgICAgICAgaWYocmV0Py5icmVha3BvaW50cz8ucGF0aCkKICAgICAgICAgIHJldC5icmVha3BvaW50cy5wYXRoPXJlbGF0aXZlKHJldC5icmVha3BvaW50cy5wYXRoKTsKICAgICAgICBjb25zb2xlLmxvZygnYnJlYWtwb2ludHMgPScsIHJldCk7",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVJwAAAAAAAJopAAAAAAAAAAAAAAAA8L8"
				],
				[
					820,
					1,
					"delete_blank_lines",
					{
						"surplus": true
					},
					"AQAAAPIsAAAAAAAApS0AAAAAAAC0AAAACiAgICAgICAgcmVwbC5wcmludFN0YXR1cygoYXdhaXQgUHJpbnRTdGFja0ZyYW1lKHN0YWNrWzBdKSkuam9pbignICcpICsgJ1xuJyk7CgogICAgICAgIGNvbnN0IHsgZmlsZW5hbWUsIGxpbmUgfSA9IHN0YWNrWzBdOwoKICAgICAgICBkZWZpbmUoZ2xvYmFsVGhpcywgeyBmaWxlOiBmaWxlbmFtZSwgbGluZSB9KTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyLAAAAAAAAKYtAAAAAAAAAAAAAAAA8L8"
				],
				[
					825,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtLwAAAAAAAK0vAAAAAAAAAAAAAAAA8L8"
				],
				[
					844,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALMaAAAAAAAAtBoAAAAAAAAAAAAAtBoAAAAAAAC+GgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzGgAAAAAAALMaAAAAAAAAAAAAAAAA8L8"
				],
				[
					859,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BgAAAAYbAAAAAAAABxsAAAAAAAAAAAAABxsAAAAAAAARGwAAAAAAAAAAAAC0GgAAAAAAALQaAAAAAAAACgAAACAgICAgICAgICAHGwAAAAAAAAgbAAAAAAAAAAAAAAgbAAAAAAAAEhsAAAAAAAAAAAAA/RoAAAAAAAD9GgAAAAAAAAoAAAAgICAgICAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGGwAAAAAAAAYbAAAAAAAAAAAAAABAdEA"
				],
				[
					860,
					1,
					"paste",
					null,
					"AQAAAAgbAAAAAAAAURsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIGwAAAAAAAAgbAAAAAAAAAAAAAAAA8L8"
				],
				[
					865,
					1,
					"insert",
					{
						"characters": "D"
					},
					"AgAAADEbAAAAAAAAMhsAAAAAAAAAAAAAMhsAAAAAAAAyGwAAAAAAAAgAAABEZWJ1Z2dlcg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxGwAAAAAAADkbAAAAAAAAAAAAAAAA8L8"
				],
				[
					866,
					1,
					"left_delete",
					null,
					"AQAAADEbAAAAAAAAMRsAAAAAAAABAAAARA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyGwAAAAAAADIbAAAAAAAAAAAAAAAA8L8"
				],
				[
					867,
					1,
					"insert",
					{
						"characters": "process"
					},
					"BwAAADEbAAAAAAAAMhsAAAAAAAAAAAAAMhsAAAAAAAAzGwAAAAAAAAAAAAAzGwAAAAAAADQbAAAAAAAAAAAAADQbAAAAAAAANRsAAAAAAAAAAAAANRsAAAAAAAA2GwAAAAAAAAAAAAA2GwAAAAAAADcbAAAAAAAAAAAAADcbAAAAAAAAOBsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxGwAAAAAAADEbAAAAAAAAAAAAAAAA8L8"
				],
				[
					868,
					7,
					"left_delete",
					null,
					"BwAAADcbAAAAAAAANxsAAAAAAAABAAAAczYbAAAAAAAANhsAAAAAAAABAAAAczUbAAAAAAAANRsAAAAAAAABAAAAZTQbAAAAAAAANBsAAAAAAAABAAAAYzMbAAAAAAAAMxsAAAAAAAABAAAAbzIbAAAAAAAAMhsAAAAAAAABAAAAcjEbAAAAAAAAMRsAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4GwAAAAAAADgbAAAAAAAAAAAAAAAA8L8"
				],
				[
					869,
					1,
					"right_delete",
					null,
					"AQAAADEbAAAAAAAAMRsAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxGwAAAAAAADEbAAAAAAAAAAAAAAAA8L8"
				],
				[
					872,
					1,
					"insert",
					{
						"characters": " read:"
					},
					"BgAAADobAAAAAAAAOxsAAAAAAAAAAAAAOxsAAAAAAAA8GwAAAAAAAAAAAAA8GwAAAAAAAD0bAAAAAAAAAAAAAD0bAAAAAAAAPhsAAAAAAAAAAAAAPhsAAAAAAAA/GwAAAAAAAAAAAAA/GwAAAAAAAEAbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6GwAAAAAAADobAAAAAAAAAAAAAAAA8L8"
				],
				[
					873,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEAbAAAAAAAAQRsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAGwAAAAAAAEAbAAAAAAAAAAAAAAAA8L8"
				],
				[
					874,
					1,
					"left_delete",
					null,
					"AQAAAEAbAAAAAAAAQBsAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBGwAAAAAAAEEbAAAAAAAAAAAAAAAA8L8"
				],
				[
					878,
					1,
					"insert",
					{
						"characters": "obj"
					},
					"BAAAAEIbAAAAAAAAQxsAAAAAAAAAAAAAQxsAAAAAAABDGwAAAAAAAAkAAAAgY2FsbGJhY2tDGwAAAAAAAEQbAAAAAAAAAAAAAEQbAAAAAAAARRsAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCGwAAAAAAAEsbAAAAAAAAAAAAAAAA8L8"
				],
				[
					887,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAACMbAAAAAAAAJRsAAAAAAAAAAAAADhsAAAAAAAAQGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOGwAAAAAAACMbAAAAAAAAAAAAAAAA8L8"
				],
				[
					910,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANwpAAAAAAAA3SkAAAAAAAAAAAAA3SkAAAAAAADlKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcKQAAAAAAANwpAAAAAAAAAAAAAAAA8L8"
				],
				[
					912,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAALopAAAAAAAAuykAAAAAAAAAAAAAuykAAAAAAADDKQAAAAAAAAAAAADmKQAAAAAAAOYpAAAAAAAACAAAACAgICAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6KQAAAAAAALopAAAAAAAAAAAAAAAAUkA"
				],
				[
					914,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACwpAAAAAAAALSkAAAAAAAAAAAAALSkAAAAAAAA1KQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsKQAAAAAAACwpAAAAAAAAAAAAAAAAUkA"
				],
				[
					916,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAO4oAAAAAAAA7ygAAAAAAAAAAAAA7ygAAAAAAAD3KAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuKAAAAAAAAO4oAAAAAAAAAAAAAAAAUkA"
				],
				[
					924,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAC4oAAAAAAAALygAAAAAAAAAAAAALygAAAAAAAA3KAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuKAAAAAAAAC4oAAAAAAAAAAAAAAAAUkA"
				],
				[
					933,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAA8oAAAAAAAAECgAAAAAAAAAAAAAECgAAAAAAAAYKAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPKAAAAAAAAA8oAAAAAAAAAAAAAAAAUkA"
				],
				[
					958,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAOYpAAAAAAAA5ykAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmKQAAAAAAAOYpAAAAAAAAAAAAAAAA8L8"
				],
				[
					959,
					1,
					"left_delete",
					null,
					"AQAAAOYpAAAAAAAA5ikAAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADnKQAAAAAAAOcpAAAAAAAAAAAAAAAA8L8"
				],
				[
					960,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAOYpAAAAAAAA5ykAAAAAAAAAAAAA5ykAAAAAAADoKQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmKQAAAAAAAOYpAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					2,
					"right_delete",
					null,
					"AgAAAA4bAAAAAAAADhsAAAAAAAABAAAALw4bAAAAAAAADhsAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAADhsAAAAAAAAOGwAAAAAAAAAAAAAAAGJA"
				],
				[
					20,
					2,
					"right_delete",
					null,
					"AgAAACMbAAAAAAAAIxsAAAAAAAABAAAAKiMbAAAAAAAAIxsAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAIxsAAAAAAAAjGwAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					3,
					"left_delete",
					null,
					"AwAAAAwbAAAAAAAADBsAAAAAAAACAAAAICAKGwAAAAAAAAobAAAAAAAAAgAAACAgCBsAAAAAAAAIGwAAAAAAAAIAAAAgIA",
					"AQAAAAAAAAABAAAADhsAAAAAAAAOGwAAAAAAAAAAAAAAAGJA"
				]
			]
		},
		{
			"file": "test-alea.js",
			"settings":
			{
				"buffer_size": 443,
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs/qjs-modules/quickjs-sockets.c",
			"settings":
			{
				"buffer_size": 65964,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					141,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAFJ2AAAAAAAAU3YAAAAAAAAAAAAAU3YAAAAAAABVdgAAAAAAAAAAAABVdgAAAAAAAFZ2AAAAAAAAAAAAAFZ2AAAAAAAAWHYAAAAAAAAAAAAAU3YAAAAAAABTdgAAAAAAAAIAAAAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFJ2AAAAAAAAUnYAAAAAAAD////////vfw"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "87"
					},
					"BAAAAFx5AAAAAAAAXXkAAAAAAAAAAAAAXXkAAAAAAABdeQAAAAAAAAEAAAA3VHYAAAAAAABUdgAAAAAAAAIAAAAgIFt5AAAAAAAAXHkAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFx5AAAAAAAAXXkAAAAAAAAAAAAAAADwvw"
				],
				[
					194,
					1,
					"left_delete",
					null,
					"AQAAAFt5AAAAAAAAW3kAAAAAAAABAAAANw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFx5AAAAAAAAXHkAAAAAAAAAAAAAAADwvw"
				],
				[
					210,
					1,
					"cut",
					null,
					"AQAAAJt7AAAAAAAAm3sAAAAAAAAgAAAAICBkYXRhWzFdID0gcmVzb2x2aW5nX2Z1bmNzWzBdOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJt7AAAAAAAAu3sAAAAAAAAAAAAAAADwvw"
				],
				[
					211,
					2,
					"paste",
					null,
					"AgAAAJt7AAAAAAAAu3sAAAAAAAAAAAAAu3sAAAAAAADbewAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJt7AAAAAAAAm3sAAAAAAAAAAAAAAADwvw"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AgAAAMJ7AAAAAAAAw3sAAAAAAAAAAAAAw3sAAAAAAADDewAAAAAAAAEAAAAx",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMJ7AAAAAAAAw3sAAAAAAAAAAAAAAADwvw"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AgAAANd7AAAAAAAA2HsAAAAAAAAAAAAA2HsAAAAAAADYewAAAAAAAAEAAAAw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANd7AAAAAAAA2HsAAAAAAAAAAAAAAADwvw"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AgAAAOJ7AAAAAAAA43sAAAAAAAAAAAAA43sAAAAAAADjewAAAAAAAAEAAAAy",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOJ7AAAAAAAA43sAAAAAAAAAAAAAAADwvw"
				],
				[
					231,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AgAAAAF8AAAAAAAAAnwAAAAAAAAAAAAAAnwAAAAAAAACfAAAAAAAAAEAAAAz",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAF8AAAAAAAAAnwAAAAAAAAAAAAAAADwvw"
				],
				[
					242,
					1,
					"insert",
					{
						"characters": "4"
					},
					"AgAAADV2AAAAAAAANnYAAAAAAAAAAAAANnYAAAAAAAA2dgAAAAAAAAEAAAAz",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADV2AAAAAAAANnYAAAAAAAAAAAAAAADwvw"
				],
				[
					251,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AgAAANZ2AAAAAAAA13YAAAAAAAAAAAAA13YAAAAAAADXdgAAAAAAAAEAAAAy",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANZ2AAAAAAAA13YAAAAAAAAAAAAAAADwvw"
				],
				[
					288,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAh4AAAAAAAACXgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAh4AAAAAAAACHgAAAAAAAAAAAAAAADwvw"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": "JS_IsException"
					},
					"DgAAAAh4AAAAAAAACXgAAAAAAAAAAAAACXgAAAAAAAAKeAAAAAAAAAAAAAAKeAAAAAAAAAt4AAAAAAAAAAAAAAt4AAAAAAAADHgAAAAAAAAAAAAADHgAAAAAAAANeAAAAAAAAAAAAAANeAAAAAAAAA54AAAAAAAAAAAAAA54AAAAAAAAD3gAAAAAAAAAAAAAD3gAAAAAAAAQeAAAAAAAAAAAAAAQeAAAAAAAABF4AAAAAAAAAAAAABF4AAAAAAAAEngAAAAAAAAAAAAAEngAAAAAAAATeAAAAAAAAAAAAAATeAAAAAAAABR4AAAAAAAAAAAAABR4AAAAAAAAFXgAAAAAAAAAAAAAFXgAAAAAAAAWeAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAh4AAAAAAAACHgAAAAAAAAAAAAAAADwvw"
				],
				[
					291,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABZ4AAAAAAAAGHgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABZ4AAAAAAAAFngAAAAAAAAAAAAAAADwvw"
				],
				[
					292,
					1,
					"insert",
					{
						"characters": "value"
					},
					"BQAAABd4AAAAAAAAGHgAAAAAAAAAAAAAGHgAAAAAAAAZeAAAAAAAAAAAAAAZeAAAAAAAABp4AAAAAAAAAAAAABp4AAAAAAAAG3gAAAAAAAAAAAAAG3gAAAAAAAAceAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABd4AAAAAAAAF3gAAAAAAAAAAAAAAADwvw"
				],
				[
					294,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAB14AAAAAAAAHngAAAAAAAAAAAAAHngAAAAAAAAfeAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB14AAAAAAAAHXgAAAAAAAAAAAAAAADwvw"
				],
				[
					295,
					1,
					"insert",
					{
						"characters": " data"
					},
					"BQAAAB94AAAAAAAAIHgAAAAAAAAAAAAAIHgAAAAAAAAheAAAAAAAAAAAAAAheAAAAAAAACJ4AAAAAAAAAAAAACJ4AAAAAAAAI3gAAAAAAAAAAAAAI3gAAAAAAAAkeAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB94AAAAAAAAH3gAAAAAAAAAAAAAAADwvw"
				],
				[
					296,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAACR4AAAAAAAAJngAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACR4AAAAAAAAJHgAAAAAAAAAAAAAAADwvw"
				],
				[
					297,
					1,
					"insert",
					{
						"characters": "@"
					},
					"AQAAACV4AAAAAAAAJngAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACV4AAAAAAAAJXgAAAAAAAAAAAAAAADwvw"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACd4AAAAAAAAKHgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACd4AAAAAAAAJ3gAAAAAAAAAAAAAAADwvw"
				],
				[
					300,
					3,
					"left_delete",
					null,
					"AwAAACd4AAAAAAAAJ3gAAAAAAAABAAAAICZ4AAAAAAAAJngAAAAAAAABAAAAXSV4AAAAAAAAJXgAAAAAAAABAAAAQA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACh4AAAAAAAAKHgAAAAAAAAAAAAAAADwvw"
				],
				[
					301,
					1,
					"insert",
					{
						"characters": "2]"
					},
					"AgAAACV4AAAAAAAAJngAAAAAAAAAAAAAJngAAAAAAAAneAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACV4AAAAAAAAJXgAAAAAAAAAAAAAAADwvw"
				],
				[
					302,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAACd4AAAAAAAAKHgAAAAAAAAAAAAAKHgAAAAAAAApeAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACd4AAAAAAAAJ3gAAAAAAAAAAAAAAADwvw"
				],
				[
					316,
					2,
					"left_delete",
					null,
					"AgAAAFN2AAAAAAAAU3YAAAAAAAABAAAAClJ2AAAAAAAAUnYAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFR2AAAAAAAAVHYAAAAAAAAAAAAAAAAAAA"
				],
				[
					434,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAAAADwvw"
				],
				[
					435,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPd3AAAAAAAA93cAAAAAAAAAAAAAAADwvw"
				],
				[
					454,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAAAADwvw"
				],
				[
					455,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPd3AAAAAAAA93cAAAAAAAAAAAAAAADwvw"
				],
				[
					465,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAx4AAAAAAAADHgAAAAAAAAAAAAAAADwvw"
				],
				[
					466,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPd3AAAAAAAA93cAAAAAAAAAAAAAAADwvw"
				],
				[
					473,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAAAADwvw"
				],
				[
					474,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPd3AAAAAAAA93cAAAAAAAAAAAAAAADwvw"
				],
				[
					488,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAAAADwvw"
				],
				[
					489,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPd3AAAAAAAA93cAAAAAAAAAAAAAAADwvw"
				],
				[
					510,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAAAADwvw"
				],
				[
					511,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPd3AAAAAAAA93cAAAAAAAAAAAAAAADwvw"
				],
				[
					518,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAAAADwvw"
				],
				[
					519,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPd3AAAAAAAA93cAAAAAAAAAAAAAAADwvw"
				],
				[
					530,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAAAADwvw"
				],
				[
					531,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPd3AAAAAAAA93cAAAAAAAAAAAAAAADwvw"
				],
				[
					557,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAPZ3AAAAAAAA93cAAAAAAAAAAAAA93cAAAAAAAD4dwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPZ3AAAAAAAA9ncAAAAAAAAAAAAAAADwvw"
				],
				[
					559,
					1,
					"insert",
					{
						"characters": "iu"
					},
					"AgAAAPd3AAAAAAAA+HcAAAAAAAAAAAAA+HcAAAAAAAD5dwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPd3AAAAAAAA93cAAAAAAAAAAAAAAAAAAA"
				],
				[
					560,
					1,
					"left_delete",
					null,
					"AQAAAPh3AAAAAAAA+HcAAAAAAAABAAAAdQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPl3AAAAAAAA+XcAAAAAAAAAAAAAAADwvw"
				],
				[
					561,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAPh3AAAAAAAA+XcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPh3AAAAAAAA+HcAAAAAAAAAAAAAAADwvw"
				],
				[
					562,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPl3AAAAAAAA+3cAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPl3AAAAAAAA+XcAAAAAAAAAAAAAAADwvw"
				],
				[
					563,
					1,
					"insert",
					{
						"characters": "JS_Is"
					},
					"BQAAAPp3AAAAAAAA+3cAAAAAAAAAAAAA+3cAAAAAAAD8dwAAAAAAAAAAAAD8dwAAAAAAAP13AAAAAAAAAAAAAP13AAAAAAAA/ncAAAAAAAAAAAAA/ncAAAAAAAD/dwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPp3AAAAAAAA+ncAAAAAAAAAAAAAAADwvw"
				],
				[
					564,
					1,
					"insert_completion",
					{
						"completion": "JS_IsException",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "JS_IsException"
					},
					"AgAAAPp3AAAAAAAA+ncAAAAAAAAFAAAASlNfSXP6dwAAAAAAAAh4AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP93AAAAAAAA/3cAAAAAAAAAAAAAAADwvw"
				],
				[
					565,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAh4AAAAAAAACngAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAh4AAAAAAAACHgAAAAAAAAAAAAAAADwvw"
				],
				[
					566,
					1,
					"insert",
					{
						"characters": "vlae"
					},
					"BAAAAAl4AAAAAAAACngAAAAAAAAAAAAACngAAAAAAAALeAAAAAAAAAAAAAALeAAAAAAAAAx4AAAAAAAAAAAAAAx4AAAAAAAADXgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAl4AAAAAAAACXgAAAAAAAAAAAAAAADwvw"
				],
				[
					567,
					3,
					"left_delete",
					null,
					"AwAAAAx4AAAAAAAADHgAAAAAAAABAAAAZQt4AAAAAAAAC3gAAAAAAAABAAAAYQp4AAAAAAAACngAAAAAAAABAAAAbA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA14AAAAAAAADXgAAAAAAAAAAAAAAADwvw"
				],
				[
					568,
					1,
					"insert",
					{
						"characters": "alue"
					},
					"BAAAAAp4AAAAAAAAC3gAAAAAAAAAAAAAC3gAAAAAAAAMeAAAAAAAAAAAAAAMeAAAAAAAAA14AAAAAAAAAAAAAA14AAAAAAAADngAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAp4AAAAAAAACngAAAAAAAAAAAAAAADwvw"
				],
				[
					570,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABB4AAAAAAAAEXgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABB4AAAAAAAAEHgAAAAAAAAAAAAAAADwvw"
				],
				[
					571,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABF4AAAAAAAAE3gAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABF4AAAAAAAAEXgAAAAAAAAAAAAAAADwvw"
				],
				[
					572,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAABJ4AAAAAAAAE3gAAAAAAAAAAAAAE3gAAAAAAAAUeAAAAAAAAAAAAAATeAAAAAAAABV4AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABJ4AAAAAAAAEngAAAAAAAAAAAAAAADwvw"
				],
				[
					573,
					1,
					"insert",
					{
						"characters": "JS_GetEx"
					},
					"CAAAABV4AAAAAAAAFngAAAAAAAAAAAAAFngAAAAAAAAXeAAAAAAAAAAAAAAXeAAAAAAAABh4AAAAAAAAAAAAABh4AAAAAAAAGXgAAAAAAAAAAAAAGXgAAAAAAAAaeAAAAAAAAAAAAAAaeAAAAAAAABt4AAAAAAAAAAAAABt4AAAAAAAAHHgAAAAAAAAAAAAAHHgAAAAAAAAdeAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABV4AAAAAAAAFXgAAAAAAAAAAAAAAADwvw"
				],
				[
					578,
					1,
					"paste",
					null,
					"AgAAABV4AAAAAAAAJHgAAAAAAAAAAAAAJHgAAAAAAAAkeAAAAAAAAAgAAABKU19HZXRFeA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABV4AAAAAAAAHXgAAAAAAAAAAAAAAADwvw"
				],
				[
					579,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACR4AAAAAAAAJngAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACR4AAAAAAAAJHgAAAAAAAAAAAAAAADwvw"
				],
				[
					581,
					1,
					"left_delete",
					null,
					"AQAAACV4AAAAAAAAJXgAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACZ4AAAAAAAAJngAAAAAAAAAAAAAAADwvw"
				],
				[
					582,
					1,
					"insert",
					{
						"characters": "ctx);"
					},
					"BQAAACV4AAAAAAAAJngAAAAAAAAAAAAAJngAAAAAAAAneAAAAAAAAAAAAAAneAAAAAAAACh4AAAAAAAAAAAAACh4AAAAAAAAKXgAAAAAAAAAAAAAKXgAAAAAAAAqeAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACV4AAAAAAAAJXgAAAAAAAAAAAAAAADwvw"
				],
				[
					584,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABV4AAAAAAAAFngAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABV4AAAAAAAAFXgAAAAAAAAAAAAAAAAyQA"
				],
				[
					588,
					1,
					"insert",
					{
						"characters": "value="
					},
					"BgAAABV4AAAAAAAAFngAAAAAAAAAAAAAFngAAAAAAAAXeAAAAAAAAAAAAAAXeAAAAAAAABh4AAAAAAAAAAAAABh4AAAAAAAAGXgAAAAAAAAAAAAAGXgAAAAAAAAaeAAAAAAAAAAAAAAaeAAAAAAAABt4AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABV4AAAAAAAAFXgAAAAAAAAAAAAAAADwvw"
				],
				[
					616,
					1,
					"insert",
					{
						"characters": "={0,-1}"
					},
					"BwAAADSLAAAAAAAANYsAAAAAAAAAAAAANYsAAAAAAAA2iwAAAAAAAAAAAAA2iwAAAAAAADeLAAAAAAAAAAAAADeLAAAAAAAAOIsAAAAAAAAAAAAAOIsAAAAAAAA5iwAAAAAAAAAAAAA5iwAAAAAAADqLAAAAAAAAAAAAADqLAAAAAAAAO4sAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADSLAAAAAAAANIsAAAAAAAAAAAAAAADwvw"
				],
				[
					676,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAF2zAAAAAAAAXrMAAAAAAAAAAAAAXrMAAAAAAABfswAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF2zAAAAAAAAXbMAAAAAAAAAAAAAAABCQA"
				],
				[
					679,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJKzAAAAAAAAk7MAAAAAAAAAAAAAk7MAAAAAAACUswAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJKzAAAAAAAAkrMAAAAAAAAAAAAAAADwvw"
				],
				[
					684,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAF2rAAAAAAAAXqsAAAAAAAAAAAAAXqsAAAAAAABfqwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF2rAAAAAAAAXasAAAAAAAAAAAAAAADwvw"
				],
				[
					688,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJKrAAAAAAAAk6sAAAAAAAAAAAAAk6sAAAAAAACUqwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJKrAAAAAAAAkqsAAAAAAAAAAAAAAADwvw"
				],
				[
					913,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAAAAAAAAAAAAAgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					914,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAACAAAAICA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAADwvw"
				],
				[
					964,
					1,
					"insert",
					{
						"characters": "\n\nuif"
					},
					"CAAAAImKAAAAAAAAiooAAAAAAAAAAAAAiooAAAAAAACQigAAAAAAAAAAAACQigAAAAAAAJGKAAAAAAAAAAAAAJGKAAAAAAAAl4oAAAAAAAAAAAAAiooAAAAAAACKigAAAAAAAAYAAAAgICAgICCRigAAAAAAAJKKAAAAAAAAAAAAAJKKAAAAAAAAk4oAAAAAAAAAAAAAk4oAAAAAAACUigAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAImKAAAAAAAAiYoAAAAAAAAAAAAAAADwvw"
				],
				[
					965,
					3,
					"left_delete",
					null,
					"AwAAAJOKAAAAAAAAk4oAAAAAAAABAAAAZpKKAAAAAAAAkooAAAAAAAABAAAAaZGKAAAAAAAAkYoAAAAAAAABAAAAdQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJSKAAAAAAAAlIoAAAAAAAAAAAAAAADwvw"
				],
				[
					966,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAJGKAAAAAAAAkooAAAAAAAAAAAAAkooAAAAAAACTigAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJGKAAAAAAAAkYoAAAAAAAAAAAAAAADwvw"
				],
				[
					967,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJOKAAAAAAAAlYoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJOKAAAAAAAAk4oAAAAAAAAAAAAAAADwvw"
				],
				[
					968,
					1,
					"insert",
					{
						"characters": "JS_IsNumberr"
					},
					"DAAAAJSKAAAAAAAAlYoAAAAAAAAAAAAAlYoAAAAAAACWigAAAAAAAAAAAACWigAAAAAAAJeKAAAAAAAAAAAAAJeKAAAAAAAAmIoAAAAAAAAAAAAAmIoAAAAAAACZigAAAAAAAAAAAACZigAAAAAAAJqKAAAAAAAAAAAAAJqKAAAAAAAAm4oAAAAAAAAAAAAAm4oAAAAAAACcigAAAAAAAAAAAACcigAAAAAAAJ2KAAAAAAAAAAAAAJ2KAAAAAAAAnooAAAAAAAAAAAAAnooAAAAAAACfigAAAAAAAAAAAACfigAAAAAAAKCKAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJSKAAAAAAAAlIoAAAAAAAAAAAAAAADwvw"
				],
				[
					969,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKCKAAAAAAAAoooAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKCKAAAAAAAAoIoAAAAAAAAAAAAAAADwvw"
				],
				[
					970,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAKCKAAAAAAAAoIoAAAAAAAABAAAAKKCKAAAAAAAAoIoAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKGKAAAAAAAAoYoAAAAAAAAAAAAAAADwvw"
				],
				[
					971,
					1,
					"left_delete",
					null,
					"AQAAAJ+KAAAAAAAAn4oAAAAAAAABAAAAcg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKCKAAAAAAAAoIoAAAAAAAAAAAAAAADwvw"
				],
				[
					972,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJ+KAAAAAAAAoYoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ+KAAAAAAAAn4oAAAAAAAAAAAAAAADwvw"
				],
				[
					973,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAKCKAAAAAAAAoYoAAAAAAAAAAAAAoYoAAAAAAACiigAAAAAAAAAAAACiigAAAAAAAKOKAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKCKAAAAAAAAoIoAAAAAAAAAAAAAAADwvw"
				],
				[
					975,
					1,
					"left_delete",
					null,
					"AQAAAKSKAAAAAAAApIoAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKWKAAAAAAAApYoAAAAAAAAAAAAAAADwvw"
				],
				[
					976,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAKSKAAAAAAAApYoAAAAAAAAAAAAApYoAAAAAAACmigAAAAAAAAAAAACmigAAAAAAAKeKAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKSKAAAAAAAApIoAAAAAAAAAAAAAAADwvw"
				],
				[
					977,
					1,
					"insert",
					{
						"characters": " JS_ToInt32"
					},
					"CwAAAKeKAAAAAAAAqIoAAAAAAAAAAAAAqIoAAAAAAACpigAAAAAAAAAAAACpigAAAAAAAKqKAAAAAAAAAAAAAKqKAAAAAAAAq4oAAAAAAAAAAAAAq4oAAAAAAACsigAAAAAAAAAAAACsigAAAAAAAK2KAAAAAAAAAAAAAK2KAAAAAAAArooAAAAAAAAAAAAArooAAAAAAACvigAAAAAAAAAAAACvigAAAAAAALCKAAAAAAAAAAAAALCKAAAAAAAAsYoAAAAAAAAAAAAAsYoAAAAAAACyigAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKeKAAAAAAAAp4oAAAAAAAAAAAAAAADwvw"
				],
				[
					978,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALKKAAAAAAAAtIoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALKKAAAAAAAAsooAAAAAAAAAAAAAAADwvw"
				],
				[
					979,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAALOKAAAAAAAAtIoAAAAAAAAAAAAAtIoAAAAAAAC1igAAAAAAAAAAAAC1igAAAAAAALaKAAAAAAAAAAAAALaKAAAAAAAAt4oAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALOKAAAAAAAAs4oAAAAAAAAAAAAAAADwvw"
				],
				[
					980,
					1,
					"insert",
					{
						"characters": " ret"
					},
					"BAAAALeKAAAAAAAAuIoAAAAAAAAAAAAAuIoAAAAAAAC5igAAAAAAAAAAAAC5igAAAAAAALqKAAAAAAAAAAAAALqKAAAAAAAAu4oAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALeKAAAAAAAAt4oAAAAAAAAAAAAAAADwvw"
				],
				[
					982,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAALyKAAAAAAAAvYoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALyKAAAAAAAAvIoAAAAAAAAAAAAAAADwvw"
				],
				[
					983,
					5,
					"left_delete",
					null,
					"BQAAALyKAAAAAAAAvIoAAAAAAAABAAAAKbuKAAAAAAAAu4oAAAAAAAABAAAAKbqKAAAAAAAAuooAAAAAAAABAAAAdLmKAAAAAAAAuYoAAAAAAAABAAAAZbiKAAAAAAAAuIoAAAAAAAABAAAAcg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL2KAAAAAAAAvYoAAAAAAAAAAAAAAADwvw"
				],
				[
					985,
					1,
					"insert",
					{
						"characters": "\nn"
					},
					"AgAAAIqKAAAAAAAAi4oAAAAAAAAAAAAAi4oAAAAAAACMigAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIqKAAAAAAAAiooAAAAAAAAAAAAAAFB5QA"
				],
				[
					986,
					1,
					"left_delete",
					null,
					"AQAAAIuKAAAAAAAAi4oAAAAAAAABAAAAbg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIyKAAAAAAAAjIoAAAAAAAAAAAAAAADwvw"
				],
				[
					987,
					1,
					"insert",
					{
						"characters": "int32_t"
					},
					"BwAAAIuKAAAAAAAAjIoAAAAAAAAAAAAAjIoAAAAAAACNigAAAAAAAAAAAACNigAAAAAAAI6KAAAAAAAAAAAAAI6KAAAAAAAAj4oAAAAAAAAAAAAAj4oAAAAAAACQigAAAAAAAAAAAACQigAAAAAAAJGKAAAAAAAAAAAAAJGKAAAAAAAAkooAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIuKAAAAAAAAi4oAAAAAAAAAAAAAAADwvw"
				],
				[
					988,
					1,
					"insert",
					{
						"characters": " res"
					},
					"BAAAAJKKAAAAAAAAk4oAAAAAAAAAAAAAk4oAAAAAAACUigAAAAAAAAAAAACUigAAAAAAAJWKAAAAAAAAAAAAAJWKAAAAAAAAlooAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJKKAAAAAAAAkooAAAAAAAAAAAAAAADwvw"
				],
				[
					989,
					1,
					"left_delete",
					null,
					"AQAAAJWKAAAAAAAAlYoAAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJaKAAAAAAAAlooAAAAAAAAAAAAAAADwvw"
				],
				[
					990,
					1,
					"insert",
					{
						"characters": "sult;"
					},
					"BQAAAJWKAAAAAAAAlooAAAAAAAAAAAAAlooAAAAAAACXigAAAAAAAAAAAACXigAAAAAAAJiKAAAAAAAAAAAAAJiKAAAAAAAAmYoAAAAAAAAAAAAAmYoAAAAAAACaigAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJWKAAAAAAAAlYoAAAAAAAAAAAAAAADwvw"
				],
				[
					991,
					1,
					"left_delete",
					null,
					"AQAAAJmKAAAAAAAAmYoAAAAAAAABAAAAOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJqKAAAAAAAAmooAAAAAAAAAAAAAAADwvw"
				],
				[
					992,
					1,
					"insert",
					{
						"characters": "=-1;"
					},
					"BAAAAJmKAAAAAAAAmooAAAAAAAAAAAAAmooAAAAAAACbigAAAAAAAAAAAACbigAAAAAAAJyKAAAAAAAAAAAAAJyKAAAAAAAAnYoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJmKAAAAAAAAmYoAAAAAAAAAAAAAAADwvw"
				],
				[
					993,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJ2KAAAAAAAAnooAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ2KAAAAAAAAnYoAAAAAAAAAAAAAAADwvw"
				],
				[
					997,
					1,
					"insert",
					{
						"characters": "&result,"
					},
					"CAAAAMuKAAAAAAAAzIoAAAAAAAAAAAAAzIoAAAAAAADNigAAAAAAAAAAAADNigAAAAAAAM6KAAAAAAAAAAAAAM6KAAAAAAAAz4oAAAAAAAAAAAAAz4oAAAAAAADQigAAAAAAAAAAAADQigAAAAAAANGKAAAAAAAAAAAAANGKAAAAAAAA0ooAAAAAAAAAAAAA0ooAAAAAAADTigAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMuKAAAAAAAAy4oAAAAAAAAAAAAAAADwvw"
				],
				[
					998,
					1,
					"insert",
					{
						"characters": " are"
					},
					"BAAAANOKAAAAAAAA1IoAAAAAAAAAAAAA1IoAAAAAAADVigAAAAAAAAAAAADVigAAAAAAANaKAAAAAAAAAAAAANaKAAAAAAAA14oAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANOKAAAAAAAA04oAAAAAAAAAAAAAAADwvw"
				],
				[
					999,
					3,
					"left_delete",
					null,
					"AwAAANaKAAAAAAAA1ooAAAAAAAABAAAAZdWKAAAAAAAA1YoAAAAAAAABAAAActSKAAAAAAAA1IoAAAAAAAABAAAAYQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANeKAAAAAAAA14oAAAAAAAAAAAAAAADwvw"
				],
				[
					1000,
					1,
					"insert",
					{
						"characters": "ret))"
					},
					"BQAAANSKAAAAAAAA1YoAAAAAAAAAAAAA1YoAAAAAAADWigAAAAAAAAAAAADWigAAAAAAANeKAAAAAAAAAAAAANeKAAAAAAAA2IoAAAAAAAAAAAAA2IoAAAAAAADZigAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANSKAAAAAAAA1IoAAAAAAAAAAAAAAADwvw"
				],
				[
					1001,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANmKAAAAAAAA2ooAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANmKAAAAAAAA2YoAAAAAAAAAAAAAAADwvw"
				],
				[
					1002,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANqKAAAAAAAA3IoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANqKAAAAAAAA2ooAAAAAAAAAAAAAAADwvw"
				],
				[
					1003,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAANuKAAAAAAAA3IoAAAAAAAAAAAAA3IoAAAAAAADiigAAAAAAAAAAAADiigAAAAAAAOOKAAAAAAAAAAAAAOOKAAAAAAAA6YoAAAAAAAAAAAAA3IoAAAAAAADcigAAAAAAAAYAAAAgICAgICDcigAAAAAAAOSKAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANuKAAAAAAAA24oAAAAAAAAAAAAAAADwvw"
				],
				[
					1008,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAOSKAAAAAAAA5YoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOSKAAAAAAAA5IoAAAAAAAAAAAAAAADwvw"
				],
				[
					1009,
					1,
					"left_delete",
					null,
					"AQAAAOSKAAAAAAAA5IoAAAAAAAABAAAAaQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOWKAAAAAAAA5YoAAAAAAAAAAAAAAADwvw"
				],
				[
					1015,
					1,
					"cut",
					null,
					"AQAAALyKAAAAAAAAvIoAAAAAAAAcAAAASlNfVG9JbnQzMihjdHgsJnJlc3VsdCwgcmV0KQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALyKAAAAAAAA2IoAAAAAAAAAAAAAAADwvw"
				],
				[
					1016,
					4,
					"left_delete",
					null,
					"BQAAALuKAAAAAAAAu4oAAAAAAAABAAAAIL+KAAAAAAAAv4oAAAAAAAAIAAAAICAgICAgICC6igAAAAAAALqKAAAAAAAAAQAAACa5igAAAAAAALmKAAAAAAAAAQAAACa4igAAAAAAALiKAAAAAAAAAQAAACA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALyKAAAAAAAAvIoAAAAAAAAAAAAAAADwvw"
				],
				[
					1018,
					1,
					"paste",
					null,
					"AQAAALyKAAAAAAAA2IoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALyKAAAAAAAAvIoAAAAAAAAAAAAAACBsQA"
				],
				[
					1022,
					1,
					"cut",
					null,
					"AQAAAIuKAAAAAAAAi4oAAAAAAAATAAAAaW50MzJfdCByZXN1bHQ9LTE7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIuKAAAAAAAAnooAAAAAAAAAAAAAAAAAAA"
				],
				[
					1024,
					1,
					"paste",
					null,
					"AQAAAKmKAAAAAAAAvIoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKmKAAAAAAAAqYoAAAAAAAAAAAAAAAAAAA"
				],
				[
					1029,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANiKAAAAAAAA2YoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANiKAAAAAAAA2IoAAAAAAAD////////vfw"
				],
				[
					1030,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BAAAANmKAAAAAAAA2ooAAAAAAAAAAAAA2ooAAAAAAADbigAAAAAAAAAAAADbigAAAAAAANyKAAAAAAAAAAAAANyKAAAAAAAA3YoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANmKAAAAAAAA2YoAAAAAAAAAAAAAAADwvw"
				],
				[
					1031,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAN2KAAAAAAAA34oAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN2KAAAAAAAA3YoAAAAAAAAAAAAAAADwvw"
				],
				[
					1032,
					1,
					"insert",
					{
						"characters": "result==0"
					},
					"CQAAAN6KAAAAAAAA34oAAAAAAAAAAAAA34oAAAAAAADgigAAAAAAAAAAAADgigAAAAAAAOGKAAAAAAAAAAAAAOGKAAAAAAAA4ooAAAAAAAAAAAAA4ooAAAAAAADjigAAAAAAAAAAAADjigAAAAAAAOSKAAAAAAAAAAAAAOSKAAAAAAAA5YoAAAAAAAAAAAAA5YoAAAAAAADmigAAAAAAAAAAAADmigAAAAAAAOeKAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN6KAAAAAAAA3ooAAAAAAAAAAAAAAADwvw"
				],
				[
					1034,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOiKAAAAAAAA6YoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOiKAAAAAAAA6IoAAAAAAAAAAAAAAADwvw"
				],
				[
					1037,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOmKAAAAAAAA6ooAAAAAAAAAAAAA6ooAAAAAAADsigAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOmKAAAAAAAA6YoAAAAAAAAAAAAAAADwvw"
				],
				[
					1038,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOyKAAAAAAAA7YoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOyKAAAAAAAA7IoAAAAAAAAAAAAAAADwvw"
				],
				[
					1059,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAIuKAAAAAAAAjIoAAAAAAAAAAAAAjIoAAAAAAACMigAAAAAAAGsAAAAKICAgICAgaWYoSlNfSXNOdW1iZXIocmV0KSkgewppbnQzMl90IHJlc3VsdD0tMTsKSlNfVG9JbnQzMihjdHgsJnJlc3VsdCwgcmV0KTsKCmlmKHJlc3VsdD09MCkgCiAgIAogICAgICB9IA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIuKAAAAAAAA9ooAAAAAAAAAAAAAAADwvw"
				],
				[
					1076,
					1,
					"left_delete",
					null,
					"AQAAAIuKAAAAAAAAi4oAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIyKAAAAAAAAjIoAAAAAAAAAAAAAAECNQA"
				],
				[
					1081,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAIuKAAAAAAAAjIoAAAAAAAAAAAAAjIoAAAAAAACNigAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIuKAAAAAAAAi4oAAAAAAAAAAAAAAADwvw"
				],
				[
					1082,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAI2KAAAAAAAAj4oAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI2KAAAAAAAAjYoAAAAAAAAAAAAAAADwvw"
				],
				[
					1083,
					1,
					"insert",
					{
						"characters": "JS_IsNumber"
					},
					"CwAAAI6KAAAAAAAAj4oAAAAAAAAAAAAAj4oAAAAAAACQigAAAAAAAAAAAACQigAAAAAAAJGKAAAAAAAAAAAAAJGKAAAAAAAAkooAAAAAAAAAAAAAkooAAAAAAACTigAAAAAAAAAAAACTigAAAAAAAJSKAAAAAAAAAAAAAJSKAAAAAAAAlYoAAAAAAAAAAAAAlYoAAAAAAACWigAAAAAAAAAAAACWigAAAAAAAJeKAAAAAAAAAAAAAJeKAAAAAAAAmIoAAAAAAAAAAAAAmIoAAAAAAACZigAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI6KAAAAAAAAjooAAAAAAAAAAAAAAADwvw"
				],
				[
					1084,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJmKAAAAAAAAm4oAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJmKAAAAAAAAmYoAAAAAAAAAAAAAAADwvw"
				],
				[
					1085,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAJqKAAAAAAAAm4oAAAAAAAAAAAAAm4oAAAAAAACcigAAAAAAAAAAAACcigAAAAAAAJ2KAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJqKAAAAAAAAmooAAAAAAAAAAAAAAADwvw"
				],
				[
					1087,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJ+KAAAAAAAAoIoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ+KAAAAAAAAn4oAAAAAAAAAAAAAAADwvw"
				],
				[
					1088,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKCKAAAAAAAAoooAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKCKAAAAAAAAoIoAAAAAAAAAAAAAAADwvw"
				],
				[
					1089,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAKGKAAAAAAAAoooAAAAAAAAAAAAAoooAAAAAAACjigAAAAAAAAAAAACiigAAAAAAAKSKAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKGKAAAAAAAAoYoAAAAAAAAAAAAAAADwvw"
				],
				[
					1144,
					1,
					"left_delete",
					null,
					"AgAAAHqrAAAAAAAAeqsAAAAAAAABAAAAL6KKAAAAAAAAoooAAAAAAAACAAAAICA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHurAAAAAAAAe6sAAAAAAAAAAAAAAADwvw"
				],
				[
					1145,
					1,
					"right_delete",
					null,
					"AQAAAHirAAAAAAAAeKsAAAAAAAABAAAALw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHirAAAAAAAAeKsAAAAAAAAAAAAAAADwvw"
				],
				[
					1148,
					1,
					"left_delete",
					null,
					"AQAAAKurAAAAAAAAq6sAAAAAAAABAAAALw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKyrAAAAAAAArKsAAAAAAAAAAAAAAADwvw"
				],
				[
					1149,
					1,
					"right_delete",
					null,
					"AQAAAKurAAAAAAAAq6sAAAAAAAABAAAALw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKurAAAAAAAAq6sAAAAAAAAAAAAAAADwvw"
				],
				[
					1152,
					3,
					"right_delete",
					null,
					"AwAAAHezAAAAAAAAd7MAAAAAAAABAAAAIHezAAAAAAAAd7MAAAAAAAABAAAAL3ezAAAAAAAAd7MAAAAAAAABAAAALw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHezAAAAAAAAd7MAAAAAAAAAAAAAAADwvw"
				],
				[
					1155,
					2,
					"left_delete",
					null,
					"AgAAAKuzAAAAAAAAq7MAAAAAAAABAAAAL6qzAAAAAAAAqrMAAAAAAAABAAAALw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKyzAAAAAAAArLMAAAAAAAAAAAAAAADwvw"
				],
				[
					1171,
					1,
					"insert",
					{
						"characters": "s->sysno"
					},
					"CQAAAI6KAAAAAAAAj4oAAAAAAAAAAAAAj4oAAAAAAACPigAAAAAAABAAAABKU19Jc051bWJlcihyZXQpj4oAAAAAAACQigAAAAAAAAAAAACQigAAAAAAAJGKAAAAAAAAAAAAAJGKAAAAAAAAkooAAAAAAAAAAAAAkooAAAAAAACTigAAAAAAAAAAAACTigAAAAAAAJSKAAAAAAAAAAAAAJSKAAAAAAAAlYoAAAAAAAAAAAAAlYoAAAAAAACWigAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI6KAAAAAAAAnooAAAAAAAAAAAAAAADwvw"
				],
				[
					1172,
					5,
					"left_delete",
					null,
					"BQAAAJWKAAAAAAAAlYoAAAAAAAABAAAAb5SKAAAAAAAAlIoAAAAAAAABAAAAbpOKAAAAAAAAk4oAAAAAAAABAAAAc5KKAAAAAAAAkooAAAAAAAABAAAAeZGKAAAAAAAAkYoAAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJaKAAAAAAAAlooAAAAAAAAAAAAAAADwvw"
				],
				[
					1173,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAJGKAAAAAAAAkooAAAAAAAAAAAAAkooAAAAAAACTigAAAAAAAAAAAACTigAAAAAAAJSKAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJGKAAAAAAAAkYoAAAAAAAAAAAAAAADwvw"
				],
				[
					1174,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAJSKAAAAAAAAlYoAAAAAAAAAAAAAlYoAAAAAAACWigAAAAAAAAAAAACWigAAAAAAAJeKAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJSKAAAAAAAAlIoAAAAAAAAAAAAAAADwvw"
				],
				[
					1175,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAJeKAAAAAAAAmIoAAAAAAAAAAAAAmIoAAAAAAACZigAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJeKAAAAAAAAl4oAAAAAAAAAAAAAAADwvw"
				],
				[
					1180,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJ2KAAAAAAAAnooAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ2KAAAAAAAAnYoAAAAAAAD////////vfw"
				],
				[
					1181,
					1,
					"left_delete",
					null,
					"AQAAAJ2KAAAAAAAAnYoAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ6KAAAAAAAAnooAAAAAAAAAAAAAAADwvw"
				],
				[
					1186,
					1,
					"paste",
					null,
					"AQAAAI+KAAAAAAAAmYoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI+KAAAAAAAAj4oAAAAAAAAAAAAAAADwvw"
				],
				[
					1189,
					1,
					"left_delete",
					null,
					"AQAAAI6KAAAAAAAAjooAAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI+KAAAAAAAAj4oAAAAAAAAAAAAAAADwvw"
				],
				[
					1192,
					1,
					"insert",
					{
						"characters": "(*s)"
					},
					"BAAAAJiKAAAAAAAAmYoAAAAAAAAAAAAAmYoAAAAAAACaigAAAAAAAAAAAACaigAAAAAAAJuKAAAAAAAAAAAAAJuKAAAAAAAAnIoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJiKAAAAAAAAmIoAAAAAAAAAAAAAAADwvw"
				],
				[
					1195,
					1,
					"right_delete",
					null,
					"AQAAAJyKAAAAAAAAnIoAAAAAAAAKAAAALT5yZXQgPT0gMA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJyKAAAAAAAApooAAAAAAAAAAAAAAADwvw"
				],
				[
					1215,
					2,
					"left_delete",
					null,
					"AgAAAIqKAAAAAAAAiooAAAAAAAAYAAAACmlmKHNvY2tldF9lb2YoKnMpKSB7Cgp9iYoAAAAAAACJigAAAAAAAAEAAAAK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIqKAAAAAAAAoooAAAAAAAAAAAAAAADwvw"
				],
				[
					1220,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAImKAAAAAAAAiYoAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "debugger.js",
			"settings":
			{
				"buffer_size": 9022,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					90,
					1,
					"insert",
					{
						"characters": ".cath"
					},
					"BQAAACITAAAAAAAAIxMAAAAAAAAAAAAAIxMAAAAAAAAkEwAAAAAAAAAAAAAkEwAAAAAAACUTAAAAAAAAAAAAACUTAAAAAAAAJhMAAAAAAAAAAAAAJhMAAAAAAAAnEwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACITAAAAAAAAIhMAAAAAAAAAAAAAAADwvw"
				],
				[
					91,
					1,
					"left_delete",
					null,
					"AQAAACYTAAAAAAAAJhMAAAAAAAABAAAAaA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcTAAAAAAAAJxMAAAAAAAAAAAAAAADwvw"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "ch"
					},
					"AgAAACYTAAAAAAAAJxMAAAAAAAAAAAAAJxMAAAAAAAAoEwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYTAAAAAAAAJhMAAAAAAAAAAAAAAADwvw"
				],
				[
					93,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACgTAAAAAAAAKhMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgTAAAAAAAAKBMAAAAAAAAAAAAAAADwvw"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAACkTAAAAAAAAKhMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkTAAAAAAAAKRMAAAAAAAAAAAAAAADwvw"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAACoTAAAAAAAAKxMAAAAAAAAAAAAAKxMAAAAAAAAsEwAAAAAAAAAAAAAsEwAAAAAAAC0TAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoTAAAAAAAAKhMAAAAAAAAAAAAAAADwvw"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " console.lo"
					},
					"CwAAAC0TAAAAAAAALhMAAAAAAAAAAAAALhMAAAAAAAAvEwAAAAAAAAAAAAAvEwAAAAAAADATAAAAAAAAAAAAADATAAAAAAAAMRMAAAAAAAAAAAAAMRMAAAAAAAAyEwAAAAAAAAAAAAAyEwAAAAAAADMTAAAAAAAAAAAAADMTAAAAAAAANBMAAAAAAAAAAAAANBMAAAAAAAA1EwAAAAAAAAAAAAA1EwAAAAAAADYTAAAAAAAAAAAAADYTAAAAAAAANxMAAAAAAAAAAAAANxMAAAAAAAA4EwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0TAAAAAAAALRMAAAAAAAAAAAAAAADwvw"
				],
				[
					97,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADgTAAAAAAAAOhMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgTAAAAAAAAOBMAAAAAAAAAAAAAAADwvw"
				],
				[
					98,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAADgTAAAAAAAAOBMAAAAAAAABAAAAKDgTAAAAAAAAOBMAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkTAAAAAAAAORMAAAAAAAAAAAAAAADwvw"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAADgTAAAAAAAAORMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgTAAAAAAAAOBMAAAAAAAAAAAAAAADwvw"
				],
				[
					100,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADkTAAAAAAAAOxMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkTAAAAAAAAORMAAAAAAAAAAAAAAADwvw"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "proces"
					},
					"BgAAADoTAAAAAAAAOxMAAAAAAAAAAAAAOxMAAAAAAAA8EwAAAAAAAAAAAAA8EwAAAAAAAD0TAAAAAAAAAAAAAD0TAAAAAAAAPhMAAAAAAAAAAAAAPhMAAAAAAAA/EwAAAAAAAAAAAAA/EwAAAAAAAEATAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoTAAAAAAAAOhMAAAAAAAAAAAAAAADwvw"
				],
				[
					102,
					6,
					"left_delete",
					null,
					"BgAAAD8TAAAAAAAAPxMAAAAAAAABAAAAcz4TAAAAAAAAPhMAAAAAAAABAAAAZT0TAAAAAAAAPRMAAAAAAAABAAAAYzwTAAAAAAAAPBMAAAAAAAABAAAAbzsTAAAAAAAAOxMAAAAAAAABAAAAcjoTAAAAAAAAOhMAAAAAAAABAAAAcA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEATAAAAAAAAQBMAAAAAAAAAAAAAAADwvw"
				],
				[
					103,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAADoTAAAAAAAAPBMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoTAAAAAAAAOhMAAAAAAAAAAAAAAADwvw"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAADsTAAAAAAAAPBMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsTAAAAAAAAOxMAAAAAAAAAAAAAAADwvw"
				],
				[
					105,
					1,
					"left_delete",
					null,
					"AQAAADsTAAAAAAAAOxMAAAAAAAABAAAAcg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwTAAAAAAAAPBMAAAAAAAAAAAAAAADwvw"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "process()"
					},
					"CQAAADsTAAAAAAAAPBMAAAAAAAAAAAAAPBMAAAAAAAA9EwAAAAAAAAAAAAA9EwAAAAAAAD4TAAAAAAAAAAAAAD4TAAAAAAAAPxMAAAAAAAAAAAAAPxMAAAAAAABAEwAAAAAAAAAAAABAEwAAAAAAAEETAAAAAAAAAAAAAEETAAAAAAAAQhMAAAAAAAAAAAAAQhMAAAAAAABDEwAAAAAAAAAAAABDEwAAAAAAAEQTAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsTAAAAAAAAOxMAAAAAAAAAAAAAAADwvw"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": " exc"
					},
					"BAAAAEQTAAAAAAAARRMAAAAAAAAAAAAARRMAAAAAAABGEwAAAAAAAAAAAABGEwAAAAAAAEcTAAAAAAAAAAAAAEcTAAAAAAAASBMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQTAAAAAAAARBMAAAAAAAAAAAAAAADwvw"
				],
				[
					108,
					1,
					"left_delete",
					null,
					"AQAAAEcTAAAAAAAARxMAAAAAAAABAAAAYw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEgTAAAAAAAASBMAAAAAAAAAAAAAAADwvw"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "ception:"
					},
					"CAAAAEcTAAAAAAAASBMAAAAAAAAAAAAASBMAAAAAAABJEwAAAAAAAAAAAABJEwAAAAAAAEoTAAAAAAAAAAAAAEoTAAAAAAAASxMAAAAAAAAAAAAASxMAAAAAAABMEwAAAAAAAAAAAABMEwAAAAAAAE0TAAAAAAAAAAAAAE0TAAAAAAAAThMAAAAAAAAAAAAAThMAAAAAAABPEwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcTAAAAAAAARxMAAAAAAAAAAAAAAADwvw"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFATAAAAAAAAURMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFATAAAAAAAAUBMAAAAAAAAAAAAAAADwvw"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAFETAAAAAAAAUhMAAAAAAAAAAAAAUhMAAAAAAABTEwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFETAAAAAAAAURMAAAAAAAAAAAAAAADwvw"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFYTAAAAAAAAVxMAAAAAAAAAAAAAVxMAAAAAAABdEwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYTAAAAAAAAVhMAAAAAAAD////////vfw"
				],
				[
					150,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMNAAAAAAAAIw0AAAAAAAAAAAAAAAAAAA"
				],
				[
					168,
					10,
					"right_delete",
					null,
					"CgAAAHUOAAAAAAAAdQ4AAAAAAAABAAAACnUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHUOAAAAAAAAdQ4AAAAAAAAAAAAAAADwvw"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAHUOAAAAAAAAdg4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHUOAAAAAAAAdQ4AAAAAAAAAAAAAAADwvw"
				],
				[
					210,
					1,
					"cut",
					null,
					"AQAAAJodAAAAAAAAmh0AAAAAAAAZAAAAcmVxdWVzdF9zZXEgPSArK3RoaXMuI3NlcQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJodAAAAAAAAsx0AAAAAAAAAAAAAAADwvw"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIwdAAAAAAAAjR0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIwdAAAAAAAAjB0AAAAAAAAAAAAAAADwvw"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI0dAAAAAAAAjh0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0dAAAAAAAAjR0AAAAAAAAAAAAAAADwvw"
				],
				[
					215,
					1,
					"paste",
					null,
					"AQAAAI4dAAAAAAAApx0AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4dAAAAAAAAjh0AAAAAAAAAAAAAAADwvw"
				],
				[
					222,
					1,
					"right_delete",
					null,
					"AQAAAKsdAAAAAAAAqx0AAAAAAAAMAAAAICAgIGNvbnN0IDsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsdAAAAAAAAtx0AAAAAAAAAAAAAAAAAAA"
				],
				[
					223,
					1,
					"left_delete",
					null,
					"AQAAAKodAAAAAAAAqh0AAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKsdAAAAAAAAqx0AAAAAAAAAAAAAAADwvw"
				],
				[
					228,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKodAAAAAAAAqh0AAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPoPAAAAAAAA+w8AAAAAAAAAAAAA+w8AAAAAAAAJEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6DwAAAAAAAPoPAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAMISAAAAAAAAwxIAAAAAAAAAAAAAwxIAAAAAAADPEgAAAAAAAAAAAAD7DwAAAAAAAPsPAAAAAAAADgAAACAgICAgICAgICAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCEgAAAAAAAMISAAAAAAAAAAAAAAAA8L8"
				],
				[
					85,
					1,
					"",
					null,
					"AQAAAFMNAAAAAAAAXA0AAAAAAAAKAAAAI3Jlc3BvbnNlcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTDQAAAAAAAF0NAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					1,
					"",
					null,
					"AQAAAHYPAAAAAAAAfw8AAAAAAAAKAAAAI3Jlc3BvbnNlcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB2DwAAAAAAAIAPAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					1,
					"",
					null,
					"AQAAAFweAAAAAAAAZR4AAAAAAAAKAAAAI3Jlc3BvbnNlcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcHgAAAAAAAGYeAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"",
					null,
					"AQAAAJkeAAAAAAAAoh4AAAAAAAAKAAAAI3Jlc3BvbnNlcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZHgAAAAAAAKMeAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAIAAAAyHgAAAAAAADIeAAAAAAAAAAAAAAAA8L8KIAAAAAAAAAogAAAAAAAAAAAAAAAA8L8"
				],
				[
					120,
					1,
					"right_delete",
					null,
					"AQAAAHQOAAAAAAAAdA4AAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0DgAAAAAAAHQOAAAAAAAAAAAAAAAA8L8"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJ4PAAAAAAAAnw8AAAAAAAAAAAAAnw8AAAAAAACtDwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeDwAAAAAAAJ4PAAAAAAAA////////738"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "delete"
					},
					"BgAAAK0PAAAAAAAArg8AAAAAAAAAAAAArg8AAAAAAACvDwAAAAAAAAAAAACvDwAAAAAAALAPAAAAAAAAAAAAALAPAAAAAAAAsQ8AAAAAAAAAAAAAsQ8AAAAAAACyDwAAAAAAAAAAAACyDwAAAAAAALMPAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtDwAAAAAAAK0PAAAAAAAAAAAAAAAA8L8"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": " this.resposes"
					},
					"DgAAALMPAAAAAAAAtA8AAAAAAAAAAAAAtA8AAAAAAAC1DwAAAAAAAAAAAAC1DwAAAAAAALYPAAAAAAAAAAAAALYPAAAAAAAAtw8AAAAAAAAAAAAAtw8AAAAAAAC4DwAAAAAAAAAAAAC4DwAAAAAAALkPAAAAAAAAAAAAALkPAAAAAAAAug8AAAAAAAAAAAAAug8AAAAAAAC7DwAAAAAAAAAAAAC7DwAAAAAAALwPAAAAAAAAAAAAALwPAAAAAAAAvQ8AAAAAAAAAAAAAvQ8AAAAAAAC+DwAAAAAAAAAAAAC+DwAAAAAAAL8PAAAAAAAAAAAAAL8PAAAAAAAAwA8AAAAAAAAAAAAAwA8AAAAAAADBDwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzDwAAAAAAALMPAAAAAAAAAAAAAAAA8L8"
				],
				[
					139,
					3,
					"left_delete",
					null,
					"AwAAAMAPAAAAAAAAwA8AAAAAAAABAAAAc78PAAAAAAAAvw8AAAAAAAABAAAAZb4PAAAAAAAAvg8AAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADBDwAAAAAAAMEPAAAAAAAAAAAAAAAA8L8"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "nses"
					},
					"BAAAAL4PAAAAAAAAvw8AAAAAAAAAAAAAvw8AAAAAAADADwAAAAAAAAAAAADADwAAAAAAAMEPAAAAAAAAAAAAAMEPAAAAAAAAwg8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC+DwAAAAAAAL4PAAAAAAAAAAAAAAAA8L8"
				],
				[
					141,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAMIPAAAAAAAAxA8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCDwAAAAAAAMIPAAAAAAAAAAAAAAAA8L8"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "request_sedq"
					},
					"DAAAAMMPAAAAAAAAxA8AAAAAAAAAAAAAxA8AAAAAAADFDwAAAAAAAAAAAADFDwAAAAAAAMYPAAAAAAAAAAAAAMYPAAAAAAAAxw8AAAAAAAAAAAAAxw8AAAAAAADIDwAAAAAAAAAAAADIDwAAAAAAAMkPAAAAAAAAAAAAAMkPAAAAAAAAyg8AAAAAAAAAAAAAyg8AAAAAAADLDwAAAAAAAAAAAADLDwAAAAAAAMwPAAAAAAAAAAAAAMwPAAAAAAAAzQ8AAAAAAAAAAAAAzQ8AAAAAAADODwAAAAAAAAAAAADODwAAAAAAAM8PAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADDDwAAAAAAAMMPAAAAAAAAAAAAAAAA8L8"
				],
				[
					143,
					2,
					"left_delete",
					null,
					"AgAAAM4PAAAAAAAAzg8AAAAAAAABAAAAcc0PAAAAAAAAzQ8AAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPDwAAAAAAAM8PAAAAAAAAAAAAAAAA8L8"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": "q"
					},
					"AQAAAM0PAAAAAAAAzg8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNDwAAAAAAAM0PAAAAAAAAAAAAAAAA8L8"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAM8PAAAAAAAA0A8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPDwAAAAAAAM8PAAAAAAAAAAAAAAAA8L8"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANAPAAAAAAAA0Q8AAAAAAAAAAAAA0Q8AAAAAAADfDwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQDwAAAAAAANAPAAAAAAAAAAAAAAAA8L8"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAK0PAAAAAAAArg8AAAAAAAAAAAAArg8AAAAAAAC8DwAAAAAAAAAAAADgDwAAAAAAAOAPAAAAAAAADgAAACAgICAgICAgICAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtDwAAAAAAAK0PAAAAAAAAAAAAAACAX0A"
				],
				[
					166,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAlLQAAaW1wb3J0ICogYXMgZGVlcCBmcm9tICcuL2xpYi9kZWVwLmpzJzsKaW1wb3J0IHsgYW5zaVN0eWxlcywgZGVmaW5lLCBlcnJvciwgaXNGdW5jdGlvbiB9IGZyb20gJy4vbGliL21pc2MuanMnOwppbXBvcnQgeyBQb2ludGVyIH0gZnJvbSAnLi9saWIvcG9pbnRlci5qcyc7CgpnbG9iYWxUaGlzLnByb2Nlc3MgPz89IHsgZW52OiB7fSB9OwoKdmFyIHdvcmtlcjsKdmFyIGNvdW50ZXI7CmxldCBzb2NrZXRzID0gKGdsb2JhbFRoaXMuc29ja2V0cyA/Pz0gbmV3IFNldCgpKTsKbGV0IGxpc3RlbmVycyA9IChnbG9iYWxUaGlzLmxpc3RlbmVycyA9IHt9KTsKCmNvbnN0IHsgcmVkQnJpZ2h0LCBncmVlbkJyaWdodCwgY3lhbkJyaWdodCwgeWVsbG93QnJpZ2h0LCBtYWdlbnRhQnJpZ2h0IH0gPSBhbnNpU3R5bGVzOwoKY29uc3Qgc3ludGF4UGFsZXR0ZSA9IFt7IG9wZW46ICdceDFiWzBtJyB9LCByZWRCcmlnaHQsIGdyZWVuQnJpZ2h0LCB5ZWxsb3dCcmlnaHQsIGN5YW5CcmlnaHQsIG1hZ2VudGFCcmlnaHRdLm1hcChjID0+IGMub3Blbik7CgpleHBvcnQgZnVuY3Rpb24gVHJpdmlhbFRva2VuaXplcihpbnB1dCkgewogIGNvbnN0IHJlID0KICAgIC8oXG58XHR8ICl8KFxiKD86YXJndW1lbnRzfGFzfGFzeW5jfGF3YWl0fGJyZWFrfGNhc2V8Y2F0Y2h8Y2xhc3N8Y29uc3R8Y29uc3RydWN0b3J8Y29udGludWV8ZGVidWdnZXJ8ZGVmYXVsdHxkZWxldGV8ZG98ZWxzZXxlbnVtfGV2YWx8ZXhwb3J0fGV4dGVuZHN8ZmFsc2V8ZmluYWxseXxmb3J8ZnJvbXxmdW5jdGlvbnxnZXR8aWRlbnRpZmllcnxpZnxpbXBsZW1lbnRzfGltcG9ydHxpbnxpbnN0YW5jZW9mfGludGVyZmFjZXxsZXR8bWV0YXxuZXd8bnVsbHxudW1iZXJ8b2Z8cGFja2FnZXxwcml2YXRlfHByb3RlY3RlZHxwdWJsaWN8cmV0dXJufHNldHxzdGF0aWN8c3RyaW5nfHN1cGVyfHN3aXRjaHx0YXJnZXR8dGhpc3x0aHJvd3x0cnVlfHRyeXx0eXBlb2Z8dmFyfHZvaWR8d2hpbGV8d2l0aHx5aWVsZClcYil8KFwvXCooPzpbXipdXC98W15cL10pKlwqXC98XC9cL1teXG5dKlxuKXwoW0EtWmEtel9dW0EtWmEtel8wLTldKil8KCIoPzpcXCJ8W14iXG5dKSoifCcoPzpcXCd8W14nXG5dKSonfFteXHNBLVphLXpfJyJdKS9nOwogIGxldCBtYXRjaCwKICAgIHByZXYsCiAgICByZXQgPSBbXTsKCiAgd2hpbGUoKG1hdGNoID0gcmUuZXhlYyhpbnB1dCkpKSB7CiAgICBsZXQgdG9rZW5UeXBlID0gbWF0Y2guZmluZEluZGV4KChtLCBpKSA9PiBpID4gMCAmJiBtICE9PSB1bmRlZmluZWQpOwogICAgY29uc3QgeyBpbmRleCB9ID0gbWF0Y2g7CiAgICBsZXQgc3RyID0gbWF0Y2hbdG9rZW5UeXBlXSA/PyBtYXRjaFswXTsKCiAgICByZXQucHVzaChbW3VuZGVmaW5lZCwgJ3doaXRlc3BhY2UnLCAna2V5d29yZCcsICdjb21tZW50JywgJ2lkZW50aWZpZXInLCAnc3RyaW5nJ11bdG9rZW5UeXBlXSwgc3RyXSk7CiAgICBwcmV2ID0gdG9rZW5UeXBlOwogIH0KICByZXR1cm4gcmV0Owp9CgpleHBvcnQgZnVuY3Rpb24gVHJpdmlhbFN5bnRheEhpZ2hsaWdodGVyKGlucHV0KSB7CiAgY29uc3QgcmUgPQogICAgLyhcbnxcdHwgKXwoXGIoPzphcmd1bWVudHN8YXN8YXN5bmN8YXdhaXR8YnJlYWt8Y2FzZXxjYXRjaHxjbGFzc3xjb25zdHxjb25zdHJ1Y3Rvcnxjb250aW51ZXxkZWJ1Z2dlcnxkZWZhdWx0fGRlbGV0ZXxkb3xlbHNlfGVudW18ZXZhbHxleHBvcnR8ZXh0ZW5kc3xmYWxzZXxmaW5hbGx5fGZvcnxmcm9tfGZ1bmN0aW9ufGdldHxpZGVudGlmaWVyfGlmfGltcGxlbWVudHN8aW1wb3J0fGlufGluc3RhbmNlb2Z8aW50ZXJmYWNlfGxldHxtZXRhfG5ld3xudWxsfG51bWJlcnxvZnxwYWNrYWdlfHByaXZhdGV8cHJvdGVjdGVkfHB1YmxpY3xyZXR1cm58c2V0fHN0YXRpY3xzdHJpbmd8c3VwZXJ8c3dpdGNofHRhcmdldHx0aGlzfHRocm93fHRydWV8dHJ5fHR5cGVvZnx2YXJ8dm9pZHx3aGlsZXx3aXRofHlpZWxkKVxiKXwoXC9cKig/OlteKl1cL3xbXlwvXSkqXCpcL3xcL1wvW15cbl0qXG4pfChbQS1aYS16X11bQS1aYS16XzAtOV0qKXwoIig/OlxcInxbXiJcbl0pKiJ8Jyg/OlxcJ3xbXidcbl0pKid8W15cc0EtWmEtel8nIl0pL2c7CiAgbGV0IG1hdGNoLAogICAgcHJldiwKICAgIHMgPSAnJzsKCiAgd2hpbGUoKG1hdGNoID0gcmUuZXhlYyhpbnB1dCkpKSB7CiAgICBsZXQgdG9rZW5UeXBlID0gbWF0Y2guZmluZEluZGV4KChtLCBpKSA9PiBpID4gMCAmJiBtICE9PSB1bmRlZmluZWQpOwogICAgY29uc3QgeyBpbmRleCB9ID0gbWF0Y2g7CiAgICBsZXQgc3RyID0gbWF0Y2hbdG9rZW5UeXBlXSA/PyBtYXRjaFswXTsKCiAgICBpZih0b2tlblR5cGUgPT0gMSB8fCB0b2tlblR5cGUgIT0gcHJldikgaWYgKHN5bnRheFBhbGV0dGVbdG9rZW5UeXBlIC0gMV0pIHN0ciA9IHN5bnRheFBhbGV0dGVbdG9rZW5UeXBlIC0gMV0gKyBzdHI7CgogICAgcyArPSBzdHI7CiAgICBwcmV2ID0gdG9rZW5UeXBlOwogIH0KICByZXR1cm4gczsKfQoKLypleHBvcnQgZnVuY3Rpb24gRUNNQVNjcmlwdFN5bnRheEhpZ2hsaWdodGVyKGlucHV0LCBmaWxlbmFtZSkgewogIGNvbnN0IGxleGVyID0gbmV3IEVDTUFTY3JpcHRMZXhlcihpbnB1dCwgZmlsZW5hbWUpOwogIGxldCBwcmV2ID0gMCwKICAgIHMgPSAnJzsKICBjb25zdW1lU3luYyhsZXhlci52YWx1ZXMoKSwgKHsgaWQsIHR5cGUsIGxleGVtZSB9KSA9PiB7CiAgICBsZXQgY29sb3IgPSB7CiAgICAgIHNoZWJhbmc6IDMyLAogICAgICBjb21tZW50OiAzMiwKICAgICAgcmVnZXhwTGl0ZXJhbDogMzUsCiAgICAgIHRlbXBsYXRlTGl0ZXJhbDogMzUsCiAgICAgIHRlbXBsYXRlTGl0ZXJhbEhlYWQ6IDM1LAogICAgICB0ZW1wbGF0ZUxpdGVyYWxQYXJ0OiAzNSwKICAgICAgdGVtcGxhdGVMaXRlcmFsVGFpbDogMzUsCiAgICAgIHB1bmN0dWF0b3I6IDM2LAogICAgICBudW1lcmljTGl0ZXJhbDogMzYsCiAgICAgIHN0cmluZ0xpdGVyYWw6IDM2LAogICAgICBib29sZWFuTGl0ZXJhbDogMzEsCiAgICAgIG51bGxMaXRlcmFsOiAzNSwKICAgICAga2V5d29yZDogMzEsCiAgICAgIGlkZW50aWZpZXI6IDMzLAogICAgICBwcml2YXRlSWRlbnRpZmllcjogMzMsCiAgICAgIHdoaXRlc3BhY2U6IGZhbHNlCiAgICB9W3R5cGVdOwoKICAgIGlmKGxleGVtZS5pbmRleE9mKCdcbicpICE9IC0xKSBjb2xvciA9IDA7CgogICAgaWYoY29sb3IgIT09IGZhbHNlKSB7CiAgICAgIGlmKHByZXYgIT0gY29sb3IpIGxleGVtZSA9ICdceDFiWycgKyAoY29sb3IgPyAnMTsnIDogJycpICsgY29sb3IgKyAnbScgKyBsZXhlbWU7CiAgICAgIHByZXYgPSBjb2xvcjsKICAgIH0KCiAgICBzICs9IGxleGVtZTsKICB9KTsKCiAgaWYocHJldikgcyArPSAnXHgxYlswbSc7CiAgcmV0dXJuIHM7Cn0KKi8KZXhwb3J0IGNsYXNzIERlYnVnZ2VyRGlzcGF0Y2hlciB7CiAgI3NlcSA9IDA7CiAgcmVzcG9uc2VzID0ge307CiAgI2NhbGxiYWNrID0gbnVsbDsKICAjcHJvbWlzZSA9IG51bGw7CiAgb25jbG9zZSA9ICgpID0+IGNvbnNvbGUubG9nKCdDTE9TRUQnKTsKICBvbmVycm9yID0gKHsgZXJybm8sIG1lc3NhZ2UgfSkgPT4gY29uc29sZS5sb2coJ0VSUk9SJywgeyBlcnJubywgbWVzc2FnZSB9KTsKCiAgY29uc3RydWN0b3IoY29ubikgewogICAgY29uc29sZS5sb2coJ0RlYnVnZ2VyRGlzcGF0Y2hlcicsIHsgY29ubiB9KTsKCiAgICBsZXQgcmV0OwoKICAgIHRyeSB7CiAgICAgIGxldCB2ID0gY29ubiAgICAgICAgLnByb2Nlc3MoYXN5bmMgbXNnID0+IHsKICAgICAgICAgIGlmKHByb2Nlc3MuZW52LkRFQlVHKSBjb25zb2xlLmxvZygnXHgxYlszODs1OzIyMG1SRUNFSVZFXHgxYlswbScsIG1zZyk7CgogICAgICAgICAgY29uc3QgeyB0eXBlLCBldmVudCwgcmVxdWVzdF9zZXEsIGJvZHkgfSA9IG1zZzsKCiAgICAgICAgICBzd2l0Y2ggKHR5cGUpIHsKICAgICAgICAgICAgY2FzZSAncmVzcG9uc2UnOgogICAgICAgICAgICAgIGxldCBmbiA9IHRoaXMucmVzcG9uc2VzW3JlcXVlc3Rfc2VxXSA/PyB0aGlzLiNjYWxsYmFjazsKICAgICAgICAgICAgICAKICAgICAgICAgICAgICBkZWxldGUgdGhpcy5yZXNwb25zZXNbcmVxdWVzdF9zZXFdOwoKICAgICAgICAgICAgICBpZih0eXBlb2YgZm4gPT0gJ2Z1bmN0aW9uJykgYXdhaXQgZm4uY2FsbCh0aGlzLCBtc2cpOwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAnZXZlbnQnOgogICAgICAgICAgICAgIGNvbnN0IHByb3AgPSAnb24nICsgZXZlbnQudHlwZS5zbGljZSgwLCBldmVudC50eXBlLmluZGV4T2YoJ0V2ZW50JykpLnRvTG93ZXJDYXNlKCk7CgogICAgICAgICAgICAgIGZvcihsZXQgcmVjZWl2ZXIgb2YgW3RoaXMsIGNvbm5dKSB7CiAgICAgICAgICAgICAgICBpZighcmVjZWl2ZXJbcHJvcF0pIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgaWYocmVjZWl2ZXJbcHJvcF0pIHsKICAgICAgICAgICAgICAgICAgY29uc3QgY2FsbGJhY2sgPSByZWNlaXZlcltwcm9wXTsKICAgICAgICAgICAgICAgICAgaWYocHJvY2Vzcy5lbnYuREVCVUcpIGNvbnNvbGUubG9nKCdceDFiWzM4OzU7NTZtRVZFTlRceDFiWzBtICAnLCB7IHByb3AsIGV2ZW50IH0pOwogICAgICAgICAgICAgICAgICAvL2lmKChhd2FpdCBjYWxsYmFjay5jYWxsKHJlY2VpdmVyLCBldmVudCkpID09PSBmYWxzZSkgaWYocmVjZWl2ZXJbcHJvcF0gPT09IGNhbGxiYWNrKSBkZWxldGUgcmVjZWl2ZXJbcHJvcF07CiAgICAgICAgICAgICAgICAgIGNhbGxiYWNrLmNhbGwocmVjZWl2ZXIsIGV2ZW50KTsKICAgICAgICAgICAgICAgICAgZGVsZXRlIHJlY2VpdmVyW3Byb3BdOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygnRGVidWdnZXJEaXNwYXRjaGVyJywgeyBtc2cgfSk7CiAgICAgICAgICAgICAgaWYoY29ubi5vbm1lc3NhZ2UpIGF3YWl0IGNvbm4ub25tZXNzYWdlKG1zZyk7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goZSA9PiBjb25zb2xlLmxvZygncHJvY2VzcygpIGV4Y2VwdGlvbjonLCBlKSk7CgogICAgICBjb25zb2xlLmxvZygncHJvY2VzcyhoYW5kbGVyKSByZXR1cm5lZDonLCB2KTsKCiAgICAgIGlzRnVuY3Rpb24odi50aGVuKSAmJiB2LnRoZW4ociA9PiAocmV0ID0gcikpOwogICAgfSBjYXRjaChlcnIpIHsKICAgICAgY29uc29sZS5sb2coJ3Byb2Nlc3MoaGFuZGxlcikgdGhyZXc6JywgZXJyLm1lc3NhZ2UgKyAnXG4nICsgZXJyLnN0YWNrKTsKICAgICAgcmV0ID0gLTE7CiAgICB9IGZpbmFsbHkgewogICAgICBpZihyZXQgPT0gMCkgaXNGdW5jdGlvbih0aGlzLm9uY2xvc2UpICYmIHRoaXMub25jbG9zZSgpOwogICAgICBpZihyZXQgPCAwKSBpc0Z1bmN0aW9uKHRoaXMub25lcnJvcikgJiYgdGhpcy5vbmVycm9yKGVycm9yKCkpOwogICAgICBjb25zb2xlLmxvZygncHJvY2VzcyhoYW5kbGVyKSBmdW5jdGlvbiByZXR1cm5lZDonLCByZXQpOwogICAgfQoKICAgIGRlZmluZSh0aGlzLCB7IHNlbmRNZXNzYWdlOiBjb25uLnNlbmRNZXNzYWdlIH0pOwogIH0KCiAgYXN5bmMgc3RlcEluKCkgewogICAgYXdhaXQgdGhpcy5zZW5kUmVxdWVzdCgnc3RlcEluJyk7CiAgICByZXR1cm4gYXdhaXQgdGhpcy53YWl0UnVuKCk7CiAgfQogIGFzeW5jIHN0ZXBPdXQoKSB7CiAgICBhd2FpdCB0aGlzLnNlbmRSZXF1ZXN0KCdzdGVwT3V0Jyk7CiAgICByZXR1cm4gYXdhaXQgdGhpcy53YWl0UnVuKCk7CiAgfQogIGFzeW5jIG5leHQoKSB7CiAgICBhd2FpdCB0aGlzLnNlbmRSZXF1ZXN0KCduZXh0Jyk7CiAgICByZXR1cm4gYXdhaXQgdGhpcy53YWl0UnVuKCk7CiAgfQogIGFzeW5jIGNvbnRpbnVlKCkgewogICAgYXdhaXQgdGhpcy5zZW5kUmVxdWVzdCgnY29udGludWUnKTsKICAgIHJldHVybiBhd2FpdCB0aGlzLndhaXRSdW4oKTsKICB9CgogIGFzeW5jIHdhaXRSdW4oKSB7CiAgICBwcm9jZXNzLmVudi5ERUJVRyAmJiBjb25zb2xlLmxvZygnXHgxYlszODs1OzExOG1SVU5OSU5HXHgxYlswbSAgJyk7CiAgICB0aGlzLnJ1bm5pbmcgPSB0cnVlOwogICAgY29uc3QgZXZlbnQgPSBhd2FpdCB3YWl0RXZlbnQoJ3N0b3BwZWQnKTsKICAgIHByb2Nlc3MuZW52LkRFQlVHICYmIGNvbnNvbGUubG9nKCdceDFiWzM4OzU7MTI0bVNUT1BQRURceDFiWzBtICAnKTsKICAgIHRoaXMucnVubmluZyA9IGZhbHNlOwogICAgY29uc3QgdHJhY2UgPSBhd2FpdCB0aGlzLnN0YWNrVHJhY2UoKTsKICAgIHJldHVybiBbZXZlbnQsIHRyYWNlXTsKICB9CgogIHBhdXNlKCkgewogICAgcmV0dXJuIHRoaXMuc2VuZFJlcXVlc3QoJ3BhdXNlJyk7CiAgfQoKICBzdG9wT25FeGNlcHRpb24oc3RvcE9uRXhjZXB0aW9uID0gdHJ1ZSkgewogICAgcmV0dXJuIHRoaXMuc2VuZE1lc3NhZ2UoeyB0eXBlOiAnc3RvcE9uRXhjZXB0aW9uJywgc3RvcE9uRXhjZXB0aW9uIH0pOwogIH0KCiAgYnJlYWtwb2ludHMocGF0aCwgYnJlYWtwb2ludHMpIHsKICAgIGlmKEFycmF5LmlzQXJyYXkoYnJlYWtwb2ludHMpKSB7CiAgICAgIGlmKHR5cGVvZiBicmVha3BvaW50c1swXSA9PSAnbnVtYmVyJykgYnJlYWtwb2ludHMgPSBicmVha3BvaW50cy5tYXAobiA9PiAoeyBsaW5lOiBuIH0pKTsKICAgIH0KICAgIGNvbnN0IG1zZyA9IGJyZWFrcG9pbnRzID8geyB0eXBlOiAnYnJlYWtwb2ludHMnLCBicmVha3BvaW50czogeyBwYXRoLCBicmVha3BvaW50cyB9IH0gOiB7IHR5cGU6ICdicmVha3BvaW50cycsIHBhdGggfTsKICAgIHRoaXMuc2VuZE1lc3NhZ2UobXNnKTsKICAgIHJldHVybiBtc2c7CiAgfQoKICBhc3luYyBldmFsdWF0ZShmcmFtZUlkLCBleHByZXNzaW9uKSB7CiAgICByZXR1cm4gKGF3YWl0IHRoaXMuc2VuZFJlcXVlc3QoJ2V2YWx1YXRlJywgeyBmcmFtZUlkLCBleHByZXNzaW9uIH0pKS5ib2R5OwogIH0KCiAgYXN5bmMgdmFyaWFibGVzKHZhcmlhYmxlc1JlZmVyZW5jZSwgb3B0aW9ucyA9IHt9KSB7CiAgICBpZihBcnJheS5pc0FycmF5KHZhcmlhYmxlc1JlZmVyZW5jZSkpIHsKICAgICAgY29uc3QgW2ZyYW1lLCBzY29wZV0gPSB2YXJpYWJsZXNSZWZlcmVuY2U7CiAgICAgIHZhcmlhYmxlc1JlZmVyZW5jZSA9IGZyYW1lICogNCArIHNjb3BlOwogICAgfQogICAgcmV0dXJuIChhd2FpdCB0aGlzLnNlbmRSZXF1ZXN0KCd2YXJpYWJsZXMnLCB7IHZhcmlhYmxlc1JlZmVyZW5jZSwgLi4ub3B0aW9ucyB9KSkuYm9keTsKICB9CgogIGFzeW5jIHNjb3BlcyhmcmFtZUlkKSB7CiAgICByZXR1cm4gKGF3YWl0IHRoaXMuc2VuZFJlcXVlc3QoJ3Njb3BlcycsIHsgZnJhbWVJZCB9KSkuYm9keTsKICB9CgogIGFzeW5jIHN0YWNrVHJhY2UoKSB7CiAgICBsZXQgeyBib2R5IH0gPSBhd2FpdCB0aGlzLnNlbmRSZXF1ZXN0KCdzdGFja1RyYWNlJyk7CgogICAgcmV0dXJuIGJvZHk7CiAgfQoKICB3YWl0RXZlbnQobmFtZSkgewogICAgY29uc3QgcHJvcCA9ICdvbicgKyBuYW1lLnRvTG93ZXJDYXNlKCk7CgogICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gewogICAgICB0aGlzW3Byb3BdID0gYXJnID0+IChyZXNvbHZlKGFyZyksIGZhbHNlKTsKICAgIH0pOwogIH0KCiAgYXN5bmMgc2VuZFJlcXVlc3QoY29tbWFuZCwgYXJncyA9IHt9LCByZXF1ZXN0X3NlcSA9ICsrdGhpcy4jc2VxKSB7CiAgICBhd2FpdCB0aGlzLnNlbmRNZXNzYWdlKHsgdHlwZTogJ3JlcXVlc3QnLCByZXF1ZXN0OiB7IHJlcXVlc3Rfc2VxLCBjb21tYW5kLCBhcmdzIH0gfSk7CgogICAgcmV0dXJuIG5ldyBQcm9taXNlKAogICAgICAocmVzb2x2ZSwgcmVqZWN0KSA9PgogICAgICAgICh0aGlzLnJlc3BvbnNlc1tyZXF1ZXN0X3NlcV0gPSByZXNwb25zZSA9PiB7CiAgICAgICAgICBkZWxldGUgdGhpcy5yZXNwb25zZXNbcmVxdWVzdF9zZXFdOwogICAgICAgICAgcmVzb2x2ZShyZXNwb25zZSk7CiAgICAgICAgfSkKICAgICk7CiAgfQp9CgpPYmplY3QuYXNzaWduKERlYnVnZ2VyRGlzcGF0Y2hlci5wcm90b3R5cGUsIHsgW1N5bWJvbC50b1N0cmluZ1RhZ106ICdEZWJ1Z2dlckRpc3BhdGNoZXInIH0pOwpPYmplY3Quc2V0UHJvdG90eXBlT2YoRGVidWdnZXJEaXNwYXRjaGVyLnByb3RvdHlwZSwgbnVsbCk7CgovKmZ1bmN0aW9uIFRlc3RXb3JrZXIoKSB7CiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoewogICAgY29sb3JzOiB0cnVlLAogICAgY29tcGFjdDogMSwKICAgIHByZWZpeDogJ1x4MWJbMzg7NTsyMjBtUEFSRU5UXHgxYlswbScKICB9KTsKICB3b3JrZXIgPSBuZXcgV29ya2VyKCcuL3dzLXdvcmtlci5qcycpOwogIGNvdW50ZXIgPSAwOwogIHdvcmtlci5vbm1lc3NhZ2UgPSBXb3JrZXJNZXNzYWdlOwogIHNldFJlYWRIYW5kbGVyKDAsICgpID0+IHsKICAgIGxldCBsaW5lID0gcHJvY2Vzcy5zdGRpbi5nZXRsaW5lKCk7CiAgICB3b3JrZXIucG9zdE1lc3NhZ2UoeyBsaW5lIH0pOwogIH0pOwp9CgpsZXQgc29jaywgY29ubmVjdGlvbjsKZnVuY3Rpb24gV29ya2VyTWVzc2FnZShlKSB7CiAgdmFyIGV2ID0gZS5kYXRhOwogIGNvbnN0IHsgbWVzc2FnZSwgaWQgfSA9IGV2OwogIHN3aXRjaCAoZXYudHlwZSkgewogICAgY2FzZSAnbWVzc2FnZSc6IHsKICAgICAgc3dpdGNoIChtZXNzYWdlLnR5cGUpIHsKICAgICAgICBjYXNlICdzdGFydCc6IHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdTVEFSVCcsIG1lc3NhZ2Uuc3RhcnQpOwogICAgICAgICAgY29uc3QgeyBhcmdzLCBjb25uZWN0LCBhZGRyZXNzIH0gPSBtZXNzYWdlLnN0YXJ0OwogICAgICAgICAgbGV0IGNoaWxkID0gU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKTsKICAgICAgICAgIHNsZWVwKDEwMDApOwogICAgICAgICAgc29jayA9IENvbm5lY3REZWJ1Z2dlcihhZGRyZXNzKTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgICBkZWZhdWx0OiB7CiAgICAgICAgICBjb25zb2xlLmxvZygnRnJvbSBXT1JLRVInLCBldik7CiAgICAgICAgICBjb25uZWN0aW9uLnNlbmRNZXNzYWdlKG1lc3NhZ2UpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSAnbnVtJzogewogICAgICBhc3NlcnQoZXYubnVtLCBjb3VudGVyKTsKICAgICAgY291bnRlcisrOwogICAgICBpZihjb3VudGVyID09IDEwKSB7CiAgICAgICAgbGV0IHNhYiA9IG5ldyBTaGFyZWRBcnJheUJ1ZmZlcigxMCk7CiAgICAgICAgbGV0IGJ1ZiA9IG5ldyBVaW50OEFycmF5KHNhYik7CiAgICAgICAgd29ya2VyLnBvc3RNZXNzYWdlKHsgdHlwZTogJ3NhYicsIGJ1ZjogYnVmIH0pOwogICAgICAgIGNvdW50ZXIgPSAwOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSAnc2FiX2RvbmUnOiB7CiAgICAgIGxldCBidWYgPSBldi5idWY7CiAgICAgIGFzc2VydChidWZbMl0sIDEwKTsKICAgICAgd29ya2VyLnBvc3RNZXNzYWdlKHsgdHlwZTogJ2Fib3J0JyB9KTsKICAgICAgYnJlYWs7CiAgICB9CiAgICBjYXNlICdkb25lJzogewogICAgICBicmVhazsKICAgIH0KICB9Cn0KCmZ1bmN0aW9uIHNlbmQoaWQsIGJvZHkpIHsKICB3b3JrZXIucG9zdE1lc3NhZ2UoeyB0eXBlOiAnc2VuZCcsIGlkLCBib2R5IH0pOwp9Ki8KCmV4cG9ydCBmdW5jdGlvbiogR2V0QXJndW1lbnRzKG5vZGUpIHsKICBmb3IobGV0IHBhcmFtIG9mIG5vZGUucGFyYW1zKSB7CiAgICBsZXQgbmFtZSA9ICcnOwoKICAgIGlmKHBhcmFtLnR5cGUgPT0gJ0Fzc2lnbm1lbnRQYXR0ZXJuJykgcGFyYW0gPSBwYXJhbS5sZWZ0OwoKICAgIGlmKHBhcmFtLnR5cGUgPT0gJ1Jlc3RFbGVtZW50JykgewogICAgICBuYW1lICs9ICcuLi4nOwogICAgICBwYXJhbSA9IHBhcmFtLmFyZ3VtZW50OwogICAgfQoKICAgIGlmKHBhcmFtLnR5cGUgPT0gJ0lkZW50aWZpZXInKSBuYW1lICs9IHBhcmFtLm5hbWU7CgogICAgaWYobmFtZSAhPT0gJycpIHlpZWxkIG5hbWU7CiAgICBlbHNlIHlpZWxkIHBhcmFtOwogIH0KfQoKZXhwb3J0IGZ1bmN0aW9uIEdldEZ1bmN0aW9uTmFtZShhc3QsIHApIHsKICB0cnkgewogICAgbGV0IHB0ciA9IG5ldyBQb2ludGVyKHApOwogICAgbGV0IGggPSBwdHIuaGllcigpLmZpbHRlcihwID0+IChuID0+ICFBcnJheS5pc0FycmF5KG4pKShkZWVwLmdldChhc3QsIHApKSk7CiAgICAvLyBjb25zb2xlLmxvZygnaCcsaCk7CiAgICAvLwogICAgbGV0IHN0YXJ0ID0gMSArIGguc2xpY2UoMCwgLTEpLmZpbmRMYXN0SW5kZXgocHRyID0+IChuID0+IC9GdW5jLy50ZXN0KG4udHlwZSkpKGRlZXAuZ2V0KGFzdCwgcHRyKSkpOwogICAgaCA9IGguc2xpY2Uoc3RhcnQpOwoKICAgIC8vCiAgICByZXR1cm4gaAogICAgICAubWFwKHAgPT4gKG4gPT4gbi5pZCA/PyBuLmtleSA/PyBuKShkZWVwLmdldChhc3QsIHApKSkKICAgICAgLm1hcChzID0+IChzICYmIHMubmFtZSkgfHwgcykKICAgICAgLmZpbHRlcihzID0+IHR5cGVvZiBzID09ICdzdHJpbmcnKQogICAgICAuam9pbignLicpOwogIH0gY2F0Y2goZSkge30KICBsZXQgbmFtZTsKICB0cnkgewogICAgaWYocC5sYXN0ID09ICd2YWx1ZScpIG5hbWUgPSBkZWVwLmdldChhc3QsIHAuc2xpY2UoMCwgLTEpLmNvbmNhdChbJ2tleScsICduYW1lJ10pKTsKICB9IGNhdGNoKGUpIHt9CiAgbGV0IHBhcmVudCA9IGRlZXAuZ2V0KGFzdCwgcC5zbGljZSgwLCAtMSkpOwoKICBpZihwYXJlbnQudHlwZSA9PSAnUHJvcGVydHknKSB7CiAgICBpZihwYXJlbnQua2V5LnR5cGUgPT0gJ0xpdGVyYWwnKSB7CiAgICAgIG5hbWUgPz89IHBhcmVudC5rZXkudmFsdWU7CiAgICB9CiAgfQogIG5hbWUgPz89IHYuaWQ/Lm5hbWU7CiAgcmV0dXJuIG5hbWU7Cn0KCmV4cG9ydCBmdW5jdGlvbiogRmluZEZ1bmN0aW9ucyhhc3QpIHsKICBGaW5kRnVuY3Rpb25zLnBhdGhzID8/PSBuZXcgV2Vha01hcCgpOwoKICBmb3IobGV0IFt2LCBwXSBvZiBkZWVwLml0ZXJhdGUoYXN0LCB2ID0+IC9eKEFycm93fClGdW5jLy50ZXN0KHYudHlwZSkpKSB7CiAgICBsZXQgbmFtZSA9IEdldEZ1bmN0aW9uTmFtZShhc3QsIHApOwogICAgbGV0IHBhcmVudCA9IGRlZXAuZ2V0KGFzdCwgcC5zbGljZSgwLCAtMSkpOwoKICAgIC8qICAgIHRyeSB7CiAgICAgIGlmKHAubGFzdCA9PSAndmFsdWUnKSBuYW1lID0gZGVlcC5nZXQoYXN0LCBwLnNsaWNlKDAsIC0xKS5jb25jYXQoWydrZXknLCAnbmFtZSddKSk7CiAgICB9IGNhdGNoKGUpIHt9CgogICAgaWYocGFyZW50LnR5cGUgPT0gJ1Byb3BlcnR5JykgewogICAgICBpZihwYXJlbnQua2V5LnR5cGUgPT0gJ0xpdGVyYWwnKSB7CiAgICAgICAgbmFtZSA/Pz0gcGFyZW50LmtleS52YWx1ZTsKICAgICAgfQogICAgfSovCgogICAgaWYodi5hc3luYykgbmFtZSA9ICdhc3luYyAnICsgbmFtZTsKCiAgICBpZih2LmxvYy5zdGFydCkgewogICAgICBsZXQgeyBsaW5lLCBjb2x1bW4gfSA9IHYubG9jLnN0YXJ0OwogICAgICArK2NvbHVtbjsKCiAgICAgIC8qaWYobmFtZSkqLyB5aWVsZCBbbmFtZSwgeyBsaW5lLCBjb2x1bW4gfSwgWy4uLkdldEFyZ3VtZW50cyh2KV0sIHYuZXhwcmVzc2lvbiwgcF07CiAgICB9CiAgfQp9CgAAAAAAAAAAGC0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgDwAAAAAAAOAPAAAAAAAAAAAAAAAAAAA"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAKYJAAAAAAAApwkAAAAAAAAAAAAApwkAAAAAAACnCQAAAAAAAHwDAAAKCi8qZXhwb3J0IGZ1bmN0aW9uIEVDTUFTY3JpcHRTeW50YXhIaWdobGlnaHRlcihpbnB1dCwgZmlsZW5hbWUpIHsKICBjb25zdCBsZXhlciA9IG5ldyBFQ01BU2NyaXB0TGV4ZXIoaW5wdXQsIGZpbGVuYW1lKTsKICBsZXQgcHJldiA9IDAsCiAgICBzID0gJyc7CiAgY29uc3VtZVN5bmMobGV4ZXIudmFsdWVzKCksICh7IGlkLCB0eXBlLCBsZXhlbWUgfSkgPT4gewogICAgbGV0IGNvbG9yID0gewogICAgICBzaGViYW5nOiAzMiwKICAgICAgY29tbWVudDogMzIsCiAgICAgIHJlZ2V4cExpdGVyYWw6IDM1LAogICAgICB0ZW1wbGF0ZUxpdGVyYWw6IDM1LAogICAgICB0ZW1wbGF0ZUxpdGVyYWxIZWFkOiAzNSwKICAgICAgdGVtcGxhdGVMaXRlcmFsUGFydDogMzUsCiAgICAgIHRlbXBsYXRlTGl0ZXJhbFRhaWw6IDM1LAogICAgICBwdW5jdHVhdG9yOiAzNiwKICAgICAgbnVtZXJpY0xpdGVyYWw6IDM2LAogICAgICBzdHJpbmdMaXRlcmFsOiAzNiwKICAgICAgYm9vbGVhbkxpdGVyYWw6IDMxLAogICAgICBudWxsTGl0ZXJhbDogMzUsCiAgICAgIGtleXdvcmQ6IDMxLAogICAgICBpZGVudGlmaWVyOiAzMywKICAgICAgcHJpdmF0ZUlkZW50aWZpZXI6IDMzLAogICAgICB3aGl0ZXNwYWNlOiBmYWxzZQogICAgfVt0eXBlXTsKCiAgICBpZihsZXhlbWUuaW5kZXhPZignXG4nKSAhPSAtMSkgY29sb3IgPSAwOwoKICAgIGlmKGNvbG9yICE9PSBmYWxzZSkgewogICAgICBpZihwcmV2ICE9IGNvbG9yKSBsZXhlbWUgPSAnXHgxYlsnICsgKGNvbG9yID8gJzE7JyA6ICcnKSArIGNvbG9yICsgJ20nICsgbGV4ZW1lOwogICAgICBwcmV2ID0gY29sb3I7CiAgICB9CgogICAgcyArPSBsZXhlbWU7CiAgfSk7CgogIGlmKHByZXYpIHMgKz0gJ1x4MWJbMG0nOwogIHJldHVybiBzOwp9Ciov",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmCQAAAAAAACINAAAAAAAAAAAAAAAA8L8"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAKcJAAAAAAAAqAkAAAAAAAAAAAAAqAkAAAAAAACpCQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnCQAAAAAAAKcJAAAAAAAAAAAAAAAA8L8"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAC4cAAAAAAAALxwAAAAAAAAAAAAALxwAAAAAAAAvHAAAAAAAAOAFAAAKLypmdW5jdGlvbiBUZXN0V29ya2VyKCkgewogIGdsb2JhbFRoaXMuY29uc29sZSA9IG5ldyBDb25zb2xlKHsKICAgIGNvbG9yczogdHJ1ZSwKICAgIGNvbXBhY3Q6IDEsCiAgICBwcmVmaXg6ICdceDFiWzM4OzU7MjIwbVBBUkVOVFx4MWJbMG0nCiAgfSk7CiAgd29ya2VyID0gbmV3IFdvcmtlcignLi93cy13b3JrZXIuanMnKTsKICBjb3VudGVyID0gMDsKICB3b3JrZXIub25tZXNzYWdlID0gV29ya2VyTWVzc2FnZTsKICBzZXRSZWFkSGFuZGxlcigwLCAoKSA9PiB7CiAgICBsZXQgbGluZSA9IHByb2Nlc3Muc3RkaW4uZ2V0bGluZSgpOwogICAgd29ya2VyLnBvc3RNZXNzYWdlKHsgbGluZSB9KTsKICB9KTsKfQoKbGV0IHNvY2ssIGNvbm5lY3Rpb247CmZ1bmN0aW9uIFdvcmtlck1lc3NhZ2UoZSkgewogIHZhciBldiA9IGUuZGF0YTsKICBjb25zdCB7IG1lc3NhZ2UsIGlkIH0gPSBldjsKICBzd2l0Y2ggKGV2LnR5cGUpIHsKICAgIGNhc2UgJ21lc3NhZ2UnOiB7CiAgICAgIHN3aXRjaCAobWVzc2FnZS50eXBlKSB7CiAgICAgICAgY2FzZSAnc3RhcnQnOiB7CiAgICAgICAgICBjb25zb2xlLmxvZygnU1RBUlQnLCBtZXNzYWdlLnN0YXJ0KTsKICAgICAgICAgIGNvbnN0IHsgYXJncywgY29ubmVjdCwgYWRkcmVzcyB9ID0gbWVzc2FnZS5zdGFydDsKICAgICAgICAgIGxldCBjaGlsZCA9IFN0YXJ0RGVidWdnZXIoYXJncywgY29ubmVjdCwgYWRkcmVzcyk7CiAgICAgICAgICBzbGVlcCgxMDAwKTsKICAgICAgICAgIHNvY2sgPSBDb25uZWN0RGVidWdnZXIoYWRkcmVzcyk7CiAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgICAgZGVmYXVsdDogewogICAgICAgICAgY29uc29sZS5sb2coJ0Zyb20gV09SS0VSJywgZXYpOwogICAgICAgICAgY29ubmVjdGlvbi5zZW5kTWVzc2FnZShtZXNzYWdlKTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgJ251bSc6IHsKICAgICAgYXNzZXJ0KGV2Lm51bSwgY291bnRlcik7CiAgICAgIGNvdW50ZXIrKzsKICAgICAgaWYoY291bnRlciA9PSAxMCkgewogICAgICAgIGxldCBzYWIgPSBuZXcgU2hhcmVkQXJyYXlCdWZmZXIoMTApOwogICAgICAgIGxldCBidWYgPSBuZXcgVWludDhBcnJheShzYWIpOwogICAgICAgIHdvcmtlci5wb3N0TWVzc2FnZSh7IHR5cGU6ICdzYWInLCBidWY6IGJ1ZiB9KTsKICAgICAgICBjb3VudGVyID0gMDsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgJ3NhYl9kb25lJzogewogICAgICBsZXQgYnVmID0gZXYuYnVmOwogICAgICBhc3NlcnQoYnVmWzJdLCAxMCk7CiAgICAgIHdvcmtlci5wb3N0TWVzc2FnZSh7IHR5cGU6ICdhYm9ydCcgfSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSAnZG9uZSc6IHsKICAgICAgYnJlYWs7CiAgICB9CiAgfQp9CgpmdW5jdGlvbiBzZW5kKGlkLCBib2R5KSB7CiAgd29ya2VyLnBvc3RNZXNzYWdlKHsgdHlwZTogJ3NlbmQnLCBpZCwgYm9keSB9KTsKfSov",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuHAAAAAAAAA4iAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAOEhAAAAAAAA4iEAAAAAAAAAAAAA4iEAAAAAAADiIQAAAAAAAP0AAAAKICAgIC8qICAgIHRyeSB7CiAgICAgIGlmKHAubGFzdCA9PSAndmFsdWUnKSBuYW1lID0gZGVlcC5nZXQoYXN0LCBwLnNsaWNlKDAsIC0xKS5jb25jYXQoWydrZXknLCAnbmFtZSddKSk7CiAgICB9IGNhdGNoKGUpIHt9CgogICAgaWYocGFyZW50LnR5cGUgPT0gJ1Byb3BlcnR5JykgewogICAgICBpZihwYXJlbnQua2V5LnR5cGUgPT0gJ0xpdGVyYWwnKSB7CiAgICAgICAgbmFtZSA/Pz0gcGFyZW50LmtleS52YWx1ZTsKICAgICAgfQogICAgfSov",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhIQAAAAAAAN4iAAAAAAAAAAAAAAAA8L8"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAF0iAAAAAAAAXiIAAAAAAAAAAAAAXiIAAAAAAABeIgAAAAAAABMAAAAKICAgICAgLyppZihuYW1lKSov",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwIgAAAAAAAF0iAAAAAAAAAAAAAAAA8L8"
				],
				[
					194,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeIgAAAAAAAF4iAAAAAAAAAAAAAAAA8L8"
				],
				[
					196,
					1,
					"paste",
					null,
					"AQAAAJ0KAAAAAAAAswoAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdCgAAAAAAAJ0KAAAAAAAAAAAAAAAA8L8"
				],
				[
					200,
					1,
					"paste",
					null,
					"AQAAAG0QAAAAAAAAgxAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtEAAAAAAAAG0QAAAAAAAAAAAAAAAA8L8"
				],
				[
					205,
					1,
					"paste",
					null,
					"AQAAAPYRAAAAAAAADBIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2EQAAAAAAAPYRAAAAAAAAAAAAAAAA8L8"
				],
				[
					214,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMEgAAAAAAAEwSAAAAAAAAAAAAAAAA8L8"
				],
				[
					268,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAADEXAAAAAAAAMhcAAAAAAAAAAAAAMhcAAAAAAAA2FwAAAAAAAAAAAAA2FwAAAAAAADcXAAAAAAAAAAAAADcXAAAAAAAAOxcAAAAAAAAAAAAAMhcAAAAAAAAyFwAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxFwAAAAAAADEXAAAAAAAAAAAAAAAAQkA"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": "console.log"
					},
					"CwAAADEXAAAAAAAAMhcAAAAAAAAAAAAAMhcAAAAAAAAzFwAAAAAAAAAAAAAzFwAAAAAAADQXAAAAAAAAAAAAADQXAAAAAAAANRcAAAAAAAAAAAAANRcAAAAAAAA2FwAAAAAAAAAAAAA2FwAAAAAAADcXAAAAAAAAAAAAADcXAAAAAAAAOBcAAAAAAAAAAAAAOBcAAAAAAAA5FwAAAAAAAAAAAAA5FwAAAAAAADoXAAAAAAAAAAAAADoXAAAAAAAAOxcAAAAAAAAAAAAAOxcAAAAAAAA8FwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxFwAAAAAAADEXAAAAAAAAAAAAAAAAQkA"
				],
				[
					271,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADwXAAAAAAAAPhcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8FwAAAAAAADwXAAAAAAAAAAAAAAAA8L8"
				],
				[
					272,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAD0XAAAAAAAAPxcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9FwAAAAAAAD0XAAAAAAAAAAAAAAAA8L8"
				],
				[
					273,
					1,
					"insert",
					{
						"characters": "breakpoints"
					},
					"CwAAAD4XAAAAAAAAPxcAAAAAAAAAAAAAPxcAAAAAAABAFwAAAAAAAAAAAABAFwAAAAAAAEEXAAAAAAAAAAAAAEEXAAAAAAAAQhcAAAAAAAAAAAAAQhcAAAAAAABDFwAAAAAAAAAAAABDFwAAAAAAAEQXAAAAAAAAAAAAAEQXAAAAAAAARRcAAAAAAAAAAAAARRcAAAAAAABGFwAAAAAAAAAAAABGFwAAAAAAAEcXAAAAAAAAAAAAAEcXAAAAAAAASBcAAAAAAAAAAAAASBcAAAAAAABJFwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+FwAAAAAAAD4XAAAAAAAAAAAAAAAA8L8"
				],
				[
					274,
					1,
					"insert",
					{
						"characters": "(1)"
					},
					"AwAAAEkXAAAAAAAAShcAAAAAAAAAAAAAShcAAAAAAABLFwAAAAAAAAAAAABLFwAAAAAAAEwXAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJFwAAAAAAAEkXAAAAAAAAAAAAAAAA8L8"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAE0XAAAAAAAAThcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABNFwAAAAAAAE0XAAAAAAAAAAAAAAAA8L8"
				],
				[
					277,
					1,
					"insert",
					{
						"characters": " b"
					},
					"AgAAAE4XAAAAAAAATxcAAAAAAAAAAAAATxcAAAAAAABQFwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABOFwAAAAAAAE4XAAAAAAAAAAAAAAAA8L8"
				],
				[
					278,
					1,
					"left_delete",
					null,
					"AQAAAE8XAAAAAAAATxcAAAAAAAABAAAAYg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQFwAAAAAAAFAXAAAAAAAAAAAAAAAA8L8"
				],
				[
					279,
					1,
					"insert",
					{
						"characters": "msg"
					},
					"AwAAAE8XAAAAAAAAUBcAAAAAAAAAAAAAUBcAAAAAAABRFwAAAAAAAAAAAABRFwAAAAAAAFIXAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPFwAAAAAAAE8XAAAAAAAAAAAAAAAA8L8"
				],
				[
					281,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFMXAAAAAAAAVBcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTFwAAAAAAAFMXAAAAAAAAAAAAAAAA8L8"
				],
				[
					287,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAFcXAAAAAAAAWBcAAAAAAAAAAAAAWBcAAAAAAABZFwAAAAAAAAAAAABZFwAAAAAAAFoXAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXFwAAAAAAAFcXAAAAAAAAAAAAAAAA8L8"
				],
				[
					288,
					1,
					"insert",
					{
						"characters": " ret="
					},
					"BQAAAFoXAAAAAAAAWxcAAAAAAAAAAAAAWxcAAAAAAABcFwAAAAAAAAAAAABcFwAAAAAAAF0XAAAAAAAAAAAAAF0XAAAAAAAAXhcAAAAAAAAAAAAAXhcAAAAAAABfFwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaFwAAAAAAAFoXAAAAAAAAAAAAAAAA8L8"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHgXAAAAAAAAeRcAAAAAAAAAAAAAeRcAAAAAAAB6FwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4FwAAAAAAAHgXAAAAAAAA////////738"
				],
				[
					293,
					1,
					"cut",
					null,
					"AQAAAC4XAAAAAAAALhcAAAAAAAAnAAAAICAgY29uc29sZS5sb2coJ2JyZWFrcG9pbnRzKDEpJywgbXNnKTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuFwAAAAAAAFUXAAAAAAAAAAAAAAAAIkA"
				],
				[
					294,
					1,
					"paste",
					null,
					"AQAAAC4XAAAAAAAAVRcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuFwAAAAAAAC4XAAAAAAAAAAAAAAAA8L8"
				],
				[
					296,
					1,
					"paste",
					null,
					"AQAAAHkXAAAAAAAAoBcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5FwAAAAAAAHkXAAAAAAAAAAAAAAAAAAA"
				],
				[
					301,
					1,
					"insert_snippet",
					{
						"contents": "{${0:$SELECTION}}"
					},
					"AwAAAJoXAAAAAAAAmhcAAAAAAAADAAAAbXNnmhcAAAAAAACfFwAAAAAAAAAAAACiFwAAAAAAAKIXAAAAAAAAAQAAACA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaFwAAAAAAAJ0XAAAAAAAAAAAAAAAA8L8"
				],
				[
					302,
					1,
					"insert",
					{
						"characters": "msg,ret"
					},
					"CAAAAJsXAAAAAAAAnBcAAAAAAAAAAAAAnBcAAAAAAACcFwAAAAAAAAMAAABtc2ecFwAAAAAAAJ0XAAAAAAAAAAAAAJ0XAAAAAAAAnhcAAAAAAAAAAAAAnhcAAAAAAACfFwAAAAAAAAAAAACfFwAAAAAAAKAXAAAAAAAAAAAAAKAXAAAAAAAAoRcAAAAAAAAAAAAAoRcAAAAAAACiFwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbFwAAAAAAAJ4XAAAAAAAAAAAAAAAA8L8"
				],
				[
					307,
					1,
					"cut",
					null,
					"AQAAADEXAAAAAAAAMRcAAAAAAAAkAAAAY29uc29sZS5sb2coJ2JyZWFrcG9pbnRzKDEpJywgbXNnKTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAxFwAAAAAAAFUXAAAAAAAAAAAAAAAAQkA"
				],
				[
					315,
					1,
					"insert",
					{
						"characters": "await"
					},
					"BQAAAD0XAAAAAAAAPhcAAAAAAAAAAAAAPhcAAAAAAAA/FwAAAAAAAAAAAAA/FwAAAAAAAEAXAAAAAAAAAAAAAEAXAAAAAAAAQRcAAAAAAAAAAAAAQRcAAAAAAABCFwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9FwAAAAAAAD0XAAAAAAAAAAAAAAAA8L8"
				],
				[
					316,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEIXAAAAAAAAQxcAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCFwAAAAAAAEIXAAAAAAAAAAAAAAAA8L8"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": "async"
					},
					"BQAAAAcWAAAAAAAACBYAAAAAAAAAAAAACBYAAAAAAAAJFgAAAAAAAAAAAAAJFgAAAAAAAAoWAAAAAAAAAAAAAAoWAAAAAAAACxYAAAAAAAAAAAAACxYAAAAAAAAMFgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHFgAAAAAAAAcWAAAAAAAAAAAAAAAAMkA"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAwWAAAAAAAADRYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMFgAAAAAAAAwWAAAAAAAAAAAAAAAA8L8"
				],
				[
					337,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGGQAAAAAAAEYZAAAAAAAAAAAAAAAA8L8"
				],
				[
					368,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAF4XAAAAAAAAXxcAAAAAAAAAAAAAXxcAAAAAAABjFwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeFwAAAAAAAF4XAAAAAAAAAAAAAAAA8L8"
				],
				[
					416,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AwAAAGgXAAAAAAAAaRcAAAAAAAAAAAAAXxcAAAAAAABfFwAAAAAAAAQAAAAgICAgZRcAAAAAAABmFwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoFwAAAAAAAGgXAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "debugger-client.js",
			"settings":
			{
				"buffer_size": 10822,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					34,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAAOQSAAAAAAAA5RIAAAAAAAAAAAAA5RIAAAAAAADnEgAAAAAAAAAAAADnEgAAAAAAAOgSAAAAAAAAAAAAAOgSAAAAAAAA6RIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkEgAAAAAAAOQSAAAAAAAAAAAAAACQckA"
				],
				[
					35,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOkSAAAAAAAA6xIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpEgAAAAAAAOkSAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "!address"
					},
					"CAAAAOoSAAAAAAAA6xIAAAAAAAAAAAAA6xIAAAAAAADsEgAAAAAAAAAAAADsEgAAAAAAAO0SAAAAAAAAAAAAAO0SAAAAAAAA7hIAAAAAAAAAAAAA7hIAAAAAAADvEgAAAAAAAAAAAADvEgAAAAAAAPASAAAAAAAAAAAAAPASAAAAAAAA8RIAAAAAAAAAAAAA8RIAAAAAAADyEgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqEgAAAAAAAOoSAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPMSAAAAAAAA9BIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzEgAAAAAAAPMSAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPQSAAAAAAAA9hIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD0EgAAAAAAAPQSAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAPUSAAAAAAAA9hIAAAAAAAAAAAAA9hIAAAAAAAD4EgAAAAAAAAAAAAD4EgAAAAAAAPkSAAAAAAAAAAAAAPkSAAAAAAAA+xIAAAAAAAAAAAAA9hIAAAAAAAD2EgAAAAAAAAIAAAAgIPYSAAAAAAAA+hIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1EgAAAAAAAPUSAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "globalThis.addr"
					},
					"DwAAAPoSAAAAAAAA+xIAAAAAAAAAAAAA+xIAAAAAAAD8EgAAAAAAAAAAAAD8EgAAAAAAAP0SAAAAAAAAAAAAAP0SAAAAAAAA/hIAAAAAAAAAAAAA/hIAAAAAAAD/EgAAAAAAAAAAAAD/EgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAARMAAAAAAAAAAAAAARMAAAAAAAACEwAAAAAAAAAAAAACEwAAAAAAAAMTAAAAAAAAAAAAAAMTAAAAAAAABBMAAAAAAAAAAAAABBMAAAAAAAAFEwAAAAAAAAAAAAAFEwAAAAAAAAYTAAAAAAAAAAAAAAYTAAAAAAAABxMAAAAAAAAAAAAABxMAAAAAAAAIEwAAAAAAAAAAAAAIEwAAAAAAAAkTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6EgAAAAAAAPoSAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "ess=address="
					},
					"DAAAAAkTAAAAAAAAChMAAAAAAAAAAAAAChMAAAAAAAALEwAAAAAAAAAAAAALEwAAAAAAAAwTAAAAAAAAAAAAAAwTAAAAAAAADRMAAAAAAAAAAAAADRMAAAAAAAAOEwAAAAAAAAAAAAAOEwAAAAAAAA8TAAAAAAAAAAAAAA8TAAAAAAAAEBMAAAAAAAAAAAAAEBMAAAAAAAAREwAAAAAAAAAAAAAREwAAAAAAABITAAAAAAAAAAAAABITAAAAAAAAExMAAAAAAAAAAAAAExMAAAAAAAAUEwAAAAAAAAAAAAAUEwAAAAAAABUTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJEwAAAAAAAAkTAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"",
					null,
					"AQAAABUTAAAAAAAAOBMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVEwAAAAAAABUTAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADgTAAAAAAAAOhMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4EwAAAAAAADgTAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					2,
					"left_delete",
					null,
					"AgAAADkTAAAAAAAAORMAAAAAAAABAAAAKTgTAAAAAAAAOBMAAAAAAAABAAAAKA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6EwAAAAAAADoTAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAADgTAAAAAAAAORMAAAAAAAAAAAAAORMAAAAAAAA6EwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4EwAAAAAAADgTAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAABUTAAAAAAAAFhMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVEwAAAAAAABUTAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"left_delete",
					null,
					"AQAAABUTAAAAAAAAFRMAAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWEwAAAAAAABYTAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAABUTAAAAAAAAFhMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVEwAAAAAAABUTAAAAAAAAAAAAAAAA8L8"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "'127.0.0.1:"
					},
					"CwAAABUTAAAAAAAAFhMAAAAAAAAAAAAAFhMAAAAAAAAXEwAAAAAAAAAAAAAXEwAAAAAAABgTAAAAAAAAAAAAABgTAAAAAAAAGRMAAAAAAAAAAAAAGRMAAAAAAAAaEwAAAAAAAAAAAAAaEwAAAAAAABsTAAAAAAAAAAAAABsTAAAAAAAAHBMAAAAAAAAAAAAAHBMAAAAAAAAdEwAAAAAAAAAAAAAdEwAAAAAAAB4TAAAAAAAAAAAAAB4TAAAAAAAAHxMAAAAAAAAAAAAAHxMAAAAAAAAgEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVEwAAAAAAABUTAAAAAAAAAAAAAAAA8L8"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "'°+"
					},
					"AwAAACATAAAAAAAAIRMAAAAAAAAAAAAAIRMAAAAAAAAiEwAAAAAAAAAAAAAiEwAAAAAAACMTAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgEwAAAAAAACATAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					2,
					"left_delete",
					null,
					"AgAAACITAAAAAAAAIhMAAAAAAAABAAAAKyETAAAAAAAAIRMAAAAAAAACAAAAwrA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjEwAAAAAAACMTAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAACETAAAAAAAAIhMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhEwAAAAAAACETAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEwTAAAAAAAATRMAAAAAAAAAAAAATRMAAAAAAABPEwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABMEwAAAAAAAEwTAAAAAAAA////////738"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AwAAAJ0TAAAAAAAAnhMAAAAAAAAAAAAATRMAAAAAAABNEwAAAAAAAAIAAAAgIJwTAAAAAAAAnRMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdEwAAAAAAAJ0TAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": " globalThis.addr"
					},
					"EAAAAJ0TAAAAAAAAnhMAAAAAAAAAAAAAnhMAAAAAAACfEwAAAAAAAAAAAACfEwAAAAAAAKATAAAAAAAAAAAAAKATAAAAAAAAoRMAAAAAAAAAAAAAoRMAAAAAAACiEwAAAAAAAAAAAACiEwAAAAAAAKMTAAAAAAAAAAAAAKMTAAAAAAAApBMAAAAAAAAAAAAApBMAAAAAAAClEwAAAAAAAAAAAAClEwAAAAAAAKYTAAAAAAAAAAAAAKYTAAAAAAAApxMAAAAAAAAAAAAApxMAAAAAAACoEwAAAAAAAAAAAACoEwAAAAAAAKkTAAAAAAAAAAAAAKkTAAAAAAAAqhMAAAAAAAAAAAAAqhMAAAAAAACrEwAAAAAAAAAAAACrEwAAAAAAAKwTAAAAAAAAAAAAAKwTAAAAAAAArRMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdEwAAAAAAAJ0TAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "ess"
					},
					"AwAAAK0TAAAAAAAArhMAAAAAAAAAAAAArhMAAAAAAACvEwAAAAAAAAAAAACvEwAAAAAAALATAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtEwAAAAAAAK0TAAAAAAAAAAAAAAAA8L8"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAL0lAAAAAAAAviUAAAAAAAAAAAAAviUAAAAAAADGJQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9JQAAAAAAAL0lAAAAAAAAAAAAAAAA8L8"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAIYlAAAAAAAAhyUAAAAAAAAAAAAAhyUAAAAAAACPJQAAAAAAAAAAAADHJQAAAAAAAMclAAAAAAAACAAAACAgICAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGJQAAAAAAAIYlAAAAAAAAAAAAAAAAUkA"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANgkAAAAAAAA2SQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYJAAAAAAAANgkAAAAAAAAAAAAAAAA8L8"
				],
				[
					172,
					5,
					"left_delete",
					null,
					"BQAAANgkAAAAAAAA2CQAAAAAAAABAAAACtckAAAAAAAA1yQAAAAAAAABAAAAL9YkAAAAAAAA1iQAAAAAAAABAAAAKtUkAAAAAAAA1SQAAAAAAAABAAAACtQkAAAAAAAA1CQAAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZJAAAAAAAANkkAAAAAAAAAAAAAAAA8L8"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": ";*/"
					},
					"AwAAANQkAAAAAAAA1SQAAAAAAAAAAAAA1SQAAAAAAADWJAAAAAAAAAAAAADWJAAAAAAAANckAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUJAAAAAAAANQkAAAAAAAAAAAAAAAA8L8"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAANckAAAAAAAA2CQAAAAAAAAAAAAA2CQAAAAAAADaJAAAAAAAAAAAAADaJAAAAAAAANskAAAAAAAAAAAAANskAAAAAAAA3SQAAAAAAAAAAAAA2CQAAAAAAADYJAAAAAAAAAIAAAAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXJAAAAAAAANckAAAAAAAAAAAAAAAA8L8"
				],
				[
					281,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEQeAAAAAAAARR4AAAAAAAAAAAAA2iQAAAAAAADaJAAAAAAAAAIAAAAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEHgAAAAAAAEQeAAAAAAAAAAAAAAAA8L8"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": "\n\nresponses"
					},
					"DgAAAPYlAAAAAAAA9yUAAAAAAAAAAAAA9yUAAAAAAAD5JQAAAAAAAAAAAAD5JQAAAAAAAPolAAAAAAAAAAAAAPolAAAAAAAA/CUAAAAAAAAAAAAA9yUAAAAAAAD3JQAAAAAAAAIAAAAgIPolAAAAAAAA+yUAAAAAAAAAAAAA+yUAAAAAAAD8JQAAAAAAAAAAAAD8JQAAAAAAAP0lAAAAAAAAAAAAAP0lAAAAAAAA/iUAAAAAAAAAAAAA/iUAAAAAAAD/JQAAAAAAAAAAAAD/JQAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAASYAAAAAAAAAAAAAASYAAAAAAAACJgAAAAAAAAAAAAACJgAAAAAAAAMmAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2JQAAAAAAAPYlAAAAAAAAAAAAAAAA8L8"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": "glöo"
					},
					"BQAAAPolAAAAAAAA+yUAAAAAAAAAAAAA+yUAAAAAAAD7JQAAAAAAAAkAAAByZXNwb25zZXP7JQAAAAAAAPwlAAAAAAAAAAAAAPwlAAAAAAAA/SUAAAAAAAAAAAAA/SUAAAAAAAD+JQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADJgAAAAAAAPolAAAAAAAAAAAAAAAAMkA"
				],
				[
					306,
					4,
					"left_delete",
					null,
					"BAAAAP0lAAAAAAAA/SUAAAAAAAABAAAAb/wlAAAAAAAA/CUAAAAAAAACAAAAw7b7JQAAAAAAAPslAAAAAAAAAQAAAGz6JQAAAAAAAPolAAAAAAAAAQAAAGc",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+JQAAAAAAAP4lAAAAAAAAAAAAAAAA8L8"
				],
				[
					307,
					1,
					"insert",
					{
						"characters": "responses=dispatch"
					},
					"EgAAAPolAAAAAAAA+yUAAAAAAAAAAAAA+yUAAAAAAAD8JQAAAAAAAAAAAAD8JQAAAAAAAP0lAAAAAAAAAAAAAP0lAAAAAAAA/iUAAAAAAAAAAAAA/iUAAAAAAAD/JQAAAAAAAAAAAAD/JQAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAASYAAAAAAAAAAAAAASYAAAAAAAACJgAAAAAAAAAAAAACJgAAAAAAAAMmAAAAAAAAAAAAAAMmAAAAAAAABCYAAAAAAAAAAAAABCYAAAAAAAAFJgAAAAAAAAAAAAAFJgAAAAAAAAYmAAAAAAAAAAAAAAYmAAAAAAAAByYAAAAAAAAAAAAAByYAAAAAAAAIJgAAAAAAAAAAAAAIJgAAAAAAAAkmAAAAAAAAAAAAAAkmAAAAAAAACiYAAAAAAAAAAAAACiYAAAAAAAALJgAAAAAAAAAAAAALJgAAAAAAAAwmAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6JQAAAAAAAPolAAAAAAAAAAAAAAAA8L8"
				],
				[
					308,
					1,
					"insert",
					{
						"characters": ".responses;"
					},
					"CwAAAAwmAAAAAAAADSYAAAAAAAAAAAAADSYAAAAAAAAOJgAAAAAAAAAAAAAOJgAAAAAAAA8mAAAAAAAAAAAAAA8mAAAAAAAAECYAAAAAAAAAAAAAECYAAAAAAAARJgAAAAAAAAAAAAARJgAAAAAAABImAAAAAAAAAAAAABImAAAAAAAAEyYAAAAAAAAAAAAAEyYAAAAAAAAUJgAAAAAAAAAAAAAUJgAAAAAAABUmAAAAAAAAAAAAABUmAAAAAAAAFiYAAAAAAAAAAAAAFiYAAAAAAAAXJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMJgAAAAAAAAwmAAAAAAAAAAAAAAAA8L8"
				],
				[
					311,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABcmAAAAAAAAGCYAAAAAAAAAAAAAGCYAAAAAAAAaJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXJgAAAAAAABcmAAAAAAAAAAAAAAAA8L8"
				],
				[
					316,
					2,
					"left_delete",
					null,
					"AgAAABgmAAAAAAAAGCYAAAAAAAACAAAAICAXJgAAAAAAABcmAAAAAAAAAQAAAAo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAaJgAAAAAAABomAAAAAAAAAAAAAAAA8L8"
				],
				[
					388,
					1,
					"cut",
					null,
					"AQAAAK8bAAAAAAAArxsAAAAAAAAKAAAAcmVzcG9uc2VzLA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACvGwAAAAAAALkbAAAAAAAAAAAAAAAA8L8"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": "globalThis.responses"
					},
					"FAAAAPolAAAAAAAA+yUAAAAAAAAAAAAA+yUAAAAAAAD8JQAAAAAAAAAAAAD8JQAAAAAAAP0lAAAAAAAAAAAAAP0lAAAAAAAA/iUAAAAAAAAAAAAA/iUAAAAAAAD/JQAAAAAAAAAAAAD/JQAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAASYAAAAAAAAAAAAAASYAAAAAAAACJgAAAAAAAAAAAAACJgAAAAAAAAMmAAAAAAAAAAAAAAMmAAAAAAAABCYAAAAAAAAAAAAABCYAAAAAAAAFJgAAAAAAAAAAAAAFJgAAAAAAAAYmAAAAAAAAAAAAAAYmAAAAAAAAByYAAAAAAAAAAAAAByYAAAAAAAAIJgAAAAAAAAAAAAAIJgAAAAAAAAkmAAAAAAAAAAAAAAkmAAAAAAAACiYAAAAAAAAAAAAACiYAAAAAAAALJgAAAAAAAAAAAAALJgAAAAAAAAwmAAAAAAAAAAAAAAwmAAAAAAAADSYAAAAAAAAAAAAADSYAAAAAAAAOJgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6JQAAAAAAAPolAAAAAAAAAAAAAAAA8L8"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAA4mAAAAAAAADyYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOJgAAAAAAAA4mAAAAAAAAAAAAAAAA8L8"
				],
				[
					401,
					1,
					"insert",
					{
						"characters": "36"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					402,
					2,
					"left_delete",
					null,
					"AgAAAAEAAAAAAAAAAQAAAAAAAAABAAAANgAAAAAAAAAAAAAAAAAAAAABAAAAMw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					492,
					1,
					"cut",
					null,
					"AQAAAGgGAAAAAAAAaAYAAAAAAAAUAAAARWxlbWVudC5maW5kKCdtYWluJyk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoBgAAAAAAAHwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					493,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAGgGAAAAAAAAaQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABoBgAAAAAAAGgGAAAAAAAAAAAAAAAA8L8"
				],
				[
					495,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAEkGAAAAAAAASgYAAAAAAAAAAAAASgYAAAAAAABMBgAAAAAAAAAAAABMBgAAAAAAAE0GAAAAAAAAAAAAAE0GAAAAAAAATgYAAAAAAAAAAAAATgYAAAAAAABPBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJBgAAAAAAAEkGAAAAAAAAAAAAAABwcUA"
				],
				[
					496,
					1,
					"insert",
					{
						"characters": " e;"
					},
					"AwAAAE8GAAAAAAAAUAYAAAAAAAAAAAAAUAYAAAAAAABRBgAAAAAAAAAAAABRBgAAAAAAAFIGAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABPBgAAAAAAAE8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					497,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAFIGAAAAAAAAUwYAAAAAAAAAAAAAUwYAAAAAAABVBgAAAAAAAAAAAABVBgAAAAAAAFYGAAAAAAAAAAAAAFYGAAAAAAAAWAYAAAAAAAAAAAAAUwYAAAAAAABTBgAAAAAAAAIAAAAgIFYGAAAAAAAAVwYAAAAAAAAAAAAAVwYAAAAAAABYBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSBgAAAAAAAFIGAAAAAAAAAAAAAAAA8L8"
				],
				[
					498,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFgGAAAAAAAAWgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABYBgAAAAAAAFgGAAAAAAAAAAAAAAAA8L8"
				],
				[
					499,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAFkGAAAAAAAAWgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZBgAAAAAAAFkGAAAAAAAAAAAAAAAA8L8"
				],
				[
					500,
					1,
					"left_delete",
					null,
					"AQAAAFkGAAAAAAAAWQYAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaBgAAAAAAAFoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					501,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFkGAAAAAAAAWwYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZBgAAAAAAAFkGAAAAAAAAAAAAAAAA8L8"
				],
				[
					502,
					1,
					"insert",
					{
						"characters": "e="
					},
					"AgAAAFoGAAAAAAAAWwYAAAAAAAAAAAAAWwYAAAAAAABcBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaBgAAAAAAAFoGAAAAAAAAAAAAAAAA8L8"
				],
				[
					503,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFwGAAAAAAAAXQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABcBgAAAAAAAFwGAAAAAAAAAAAAAAAA8L8"
				],
				[
					504,
					1,
					"paste",
					null,
					"AQAAAF0GAAAAAAAAcQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdBgAAAAAAAF0GAAAAAAAAAAAAAAAA8L8"
				],
				[
					506,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHMGAAAAAAAAdAYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzBgAAAAAAAHMGAAAAAAAAAAAAAAAA8L8"
				],
				[
					507,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAHQGAAAAAAAAdgYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0BgAAAAAAAHQGAAAAAAAAAAAAAAAA8L8"
				],
				[
					508,
					1,
					"right_delete",
					null,
					"AQAAAHUGAAAAAAAAdQYAAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1BgAAAAAAAHUGAAAAAAAAAAAAAAAA8L8"
				],
				[
					511,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAACwHAAAAAAAALQcAAAAAAAAAAAAALQcAAAAAAAAvBwAAAAAAAAAAAAAvBwAAAAAAADAHAAAAAAAAAAAAAC0HAAAAAAAALQcAAAAAAAACAAAAICAtBwAAAAAAAC0HAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsBwAAAAAAACwHAAAAAAAA////////738"
				],
				[
					515,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTBgAAAAAAANMGAAAAAAAAAAAAAAAAIkA"
				],
				[
					590,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAIkPAAAAAAAAig8AAAAAAAAAAAAAig8AAAAAAACMDwAAAAAAAAAAAACMDwAAAAAAAI0PAAAAAAAAAAAAAI0PAAAAAAAAjw8AAAAAAAAAAAAAig8AAAAAAACKDwAAAAAAAAIAAAAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJDwAAAAAAAIkPAAAAAAAAAAAAAAAA8L8"
				],
				[
					605,
					2,
					"left_delete",
					null,
					"AgAAAIsPAAAAAAAAiw8AAAAAAAACAAAAICCKDwAAAAAAAIoPAAAAAAAAAQAAAAo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNDwAAAAAAAI0PAAAAAAAAAAAAAAAA8L8"
				],
				[
					613,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANEPAAAAAAAA0g8AAAAAAAAAAAAA0g8AAAAAAADUDwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRDwAAAAAAANEPAAAAAAAAAAAAAAAAMkA"
				],
				[
					667,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxEgAAAAAAAHESAAAAAAAAAAAAAAAA8L8"
				],
				[
					723,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABcgAAAAAAAAGCAAAAAAAAAAAAAAGCAAAAAAAAAYIAAAAAAAAOYEAAAKICAvKiAoYXN5bmMgZnVuY3Rpb24gUmVhZFNvY2tldCgpIHsKICAgIGZvciBhd2FpdChsZXQgbXNnIG9mIHdzKSB7CiAgICAgIGxldCBkYXRhOwogICAgICB0cnkgewogICAgICAgIGRhdGEgPSBKU09OLnBhcnNlKG1zZy5kYXRhKTsKICAgICAgfSBjYXRjaChlKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1dTIEVSUk9SIHBhcnNpbmcnLCBtc2cuZGF0YSk7CiAgICAgIH0KICAgICAgZ2xvYmFsVGhpcy5yZXNwb25zZSA9IGRhdGE7CiAgICAgIGlmKGRhdGEpIHsKICAgICAgICBjb25zb2xlLmxvZygnd3MgcmVjZWl2ZWQgJywgZGF0YSk7CiAgICAgICAgY29uc3QgeyByZXNwb25zZSwgcmVxdWVzdF9zZXEgfSA9IGRhdGE7CiAgICAgICAgaWYocmVzcG9uc2UpIHsKICAgICAgICAgIGNvbnN0IHsgY29tbWFuZCB9ID0gcmVzcG9uc2U7CiAgICAgICAgICBpZihbJ3N0YXJ0JywgJ2Nvbm5lY3QnXS5pbmRleE9mKGNvbW1hbmQpID49IDApIHsKICAgICAgICAgICAgY3dkID0gcmVzcG9uc2UuY3dkOwogICAgICAgICAgICBjb25zb2xlLmxvZygnY29tbWFuZDonLCBjb21tYW5kKTsKICAgICAgICAgICAgY29uc29sZS5sb2coJ3Jlc3BvbnNlOicsIHJlc3BvbnNlKTsKICAgICAgICAgICAgaWYocmVzcG9uc2UuYXJnc1swXSkgewogICAgICAgICAgICAgIGN1cnJlbnRTb3VyY2UocmVzcG9uc2UuYXJnc1swXSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgVXBkYXRlUG9zaXRpb24oKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBSZW5kZXJVSSgpOwogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgIH0KICAgICAgICAgIGlmKGNvbW1hbmQgPT0gJ3N0YXJ0JykgewogICAgICAgICAgICBjd2QgPSByZXNwb25zZS5jd2Q7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzdGFydCcsIHJlc3BvbnNlKTsKICAgICAgICAgICAgUmVuZGVyVUkocmVzcG9uc2UuYXJnc1swXSk7CiAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZihyZXNwb25zZXNbcmVxdWVzdF9zZXFdKSByZXNwb25zZXNbcmVxdWVzdF9zZXFdKGRhdGEpOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnNvbGUubG9nKCdXUycsIHdzKTsKICAgICAgfQogICAgICBpZihbJ2VuZCcsICdlcnJvciddLmluZGV4T2YoZGF0YS50eXBlKSA+PSAwKSB7CiAgICAgICAgZG9jdW1lbnQuYm9keS5pbm5lckhUTUwgPSAnJzsKICAgICAgICBjb250aW51ZTsKICAgICAgfQogICAgfQogIH0pKCk7Ki8",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXIAAAAAAAAP0kAAAAAAAAAAAAAAAA8L8"
				],
				[
					731,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPUhAAAAAAAA9iEAAAAAAAAAAAAA9iEAAAAAAAD2IQAAAAAAAMMAAAAKICAvKiBpZih1cmwuc2VhcmNoUGFyYW1zLmhhcygncG9ydCcpKSBhd2FpdCBDb25uZWN0KCk7CiAgZWxzZSBhd2FpdCBTdGFydChbdXJsLnNlYXJjaFBhcmFtcy5nZXQoJ3NjcmlwdCcpID8/ICdxdWlja2pzL3Fqcy1tb2R1bGVzL3Rlc3RzL3Rlc3RfZG9tLmpzJ10pOyAvLyAndGVzdC12aWRlby5qcycsICduaWdodHdhdGNoLm1wNCddKTsKKi8",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC4IgAAAAAAAPUhAAAAAAAAAAAAAAAA8L8"
				],
				[
					732,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPYhAAAAAAAA9yEAAAAAAAAAAAAA9yEAAAAAAAD5IQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2IQAAAAAAAPYhAAAAAAAAAAAAAAAA8L8"
				],
				[
					735,
					1,
					"left_delete",
					null,
					"AgAAAHEjAAAAAAAAcSMAAAAAAABLAAAACiAgLy8gZG9SZW5kZXIoY3VycmVudFNvdXJjZSk7CgogIC8vd2luZG93LmxvY2F0aW9uLmhhc2ggPSBgI2xpbmUtJHtsaW5lfWA79yEAAAAAAAD3IQAAAAAAAAIAAAAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8IwAAAAAAAHEjAAAAAAAAAAAAAAAA8L8"
				],
				[
					738,
					2,
					"left_delete",
					null,
					"AgAAAMQlAAAAAAAAxCUAAAAAAADjAAAACi8qCiAgewogICAgInR5cGUiOiAiYnJlYWtwb2ludHMiLAogICAgImJyZWFrcG9pbnRzIjogewogICAgICAicGF0aCI6ICJsaWIvZWNtYXNjcmlwdC9wYXJzZXIyLmpzIiwKICAgICAgImJyZWFrcG9pbnRzIjogWyB7ICJsaW5lIjogNDcwLCAiY29sdW1uIjogMCB9LCB7ICJsaW5lIjogMjE1MSwgImNvbHVtbiI6IDAgfSwgeyAibGluZSI6IDI0MDEsICJjb2x1bW4iOiAwIH0gXQogICAgfQogIH0KKi/DJQAAAAAAAMMlAAAAAAAAAQAAAAo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEJQAAAAAAAKcmAAAAAAAAAAAAAAAA8L8"
				],
				[
					741,
					1,
					"left_delete",
					null,
					"AQAAALAmAAAAAAAAsCYAAAAAAAD+AAAACi8qY29uc3QgQnV0dG9uID0gKHtpbWFnZX0pID0+IHsKY29uc3QgcmVmID0gdXNlQ2xpY2soZSA9PiB7CiAgY29uc29sZS5sb2coJ2NsaWNrISEhIScpOwp9KTsKIHJldHVybiAgaCgnYnV0dG9uJywgeyByZWYsIGNsYXNzOiAnYnV0dG9uJyB9LCBoKCdpbWcnLCB7IHNyYzogaW1hZ2UgfSkpOwp9Ki8KLypjb25zdCBCdXR0b25CYXI9ICAoe2NoaWxkcmVufSkgPT4gCmgoJ2RpdicsIHtjbGFzczogJ2J1dHRvbi1iYXInIH0sIGNoaWxkcmVuKTsqLwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwJgAAAAAAAK4nAAAAAAAAAAAAAAAA8L8"
				],
				[
					744,
					1,
					"left_delete",
					null,
					"AQAAAOEmAAAAAAAA4SYAAAAAAAA+AAAACiAgLyogaWYoY3VycmVudFNvdXJjZSgpICE9IGZpbGUpIAogICAgY3VycmVudFNvdXJjZShmaWxlKTsqLwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfJwAAAAAAAOEmAAAAAAAAAAAAAAAA8L8"
				],
				[
					756,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJKQAAAAAAAAkpAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "test-video.js",
			"settings":
			{
				"buffer_size": 26264,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"right",
				"Browse Mode: Outline (Right)"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				":q",
				"Coffee: Quick Run Bar"
			],
			[
				"clang",
				"Clang Format: Format Selection"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"mode",
				"HTML: Encode Special Characters"
			],
			[
				"insert",
				"Snippet: Insert livereload.js script"
			],
			[
				":w",
				":w - Save"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"OUTLIN",
				"Browse Mode: Outline (Right)"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 142.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv",
		"/home/roman/Projects/plot-cv/ol-layerswitcher"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/debugger.html",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/debuggerprotocol.js",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGLFW.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildCURL.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-sound/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugin-standalone/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/js/rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/brotli/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibreSSL.cmake",
		"/home/roman/Projects/plot-cv/test-nanovg.js",
		"/home/roman/Projects/plot-cv/debugger-client.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/js/debugger-client.js",
		"/home/roman/Projects/plot-cv/debugger.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/test-alea.js",
		"/home/roman/Projects/plot-cv/test-repeater.js",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/inst/x86_64-linux-debug/usr/local/bin/wscli.js",
		"/home/roman/Projects/plot-cv/quickjs.c",
		"/home/roman/Projects/plot-cv/repredator/pre8.png",
		"/home/roman/Projects/plot-cv/repredator/pre7.png",
		"/home/roman/Projects/plot-cv/repredator/pre2.png",
		"/home/roman/Projects/plot-cv/repredator/pre1.png",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/portaudio2.js",
		"/usr/include/portaudio.h",
		"/home/roman/Projects/plot-cv/portaudio.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/os-helpers.js",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/usr/include/portmidi.h",
		"/home/roman/Projects/plot-cv/portmidi.js",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/list.html",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/out.tmp",
		"/home/roman/Projects/plot-cv/webakeit.js",
		"/home/roman/Projects/plot-cv/webakeit-telegram.js",
		"/home/roman/Downloads/Telegram Desktop/ChatExport_2024-04-09/messages.html",
		"/home/roman/Projects/plot-cv/static/css/webakeit.css",
		"/home/roman/Projects/plot-cv/webakeit.tmp",
		"/home/roman/Projects/plot-cv/webakeit.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/xml-shell.js",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/xml-shell.es",
		"/home/roman/Projects/plot-cv/lib/geom/splines.js",
		"/home/roman/Projects/plot-cv/fire.html",
		"/home/roman/Projects/plot-cv/numbers2.c",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/lib/geom/pointList.js",
		"/home/roman/Projects/plot-cv/draw.js",
		"/home/roman/Projects/plot-cv/lib/autoStore.js",
		"/home/roman/Projects/plot-cv/lib/async/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/fire.js",
		"/home/roman/Projects/plot-cv/upload-server.js",
		"/home/roman/Projects/plot-cv/lib/geom/point.js",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/components.js",
		"/home/roman/Projects/plot-cv/draw.html",
		"/home/roman/Projects/plot-cv/static/css/draw.css",
		"/home/roman/Projects/plot-cv/webSocket.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/point.js",
		"/home/roman/Projects/plot-cv/draw-utils.js",
		"/home/roman/Projects/plot-cv/lib/fd-graph.js",
		"/home/roman/Projects/plot-cv/svg-box.js",
		"/home/roman/Projects/plot-cv/numbers.c",
		"/home/roman/Projects/plot-cv/hex.c",
		"/home/roman/Projects/plot-cv/upload-worker.js",
		"/home/roman/Projects/plot-cv/mailcow-db.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/ssl-client.js",
		"/home/roman/Projects/plot-cv/promise-worker.js",
		"/home/roman/Projects/plot-cv/upload.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mysql.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/lib/geom/graph.js",
		"/home/roman/Projects/plot-cv/lib/eagle/node.js",
		"/home/roman/Projects/plot-cv/lib/eagle/element.js",
		"/home/roman/Projects/plot-cv/workertest.js",
		"/home/roman/Projects/plot-cv/test-worker.js",
		"/home/roman/Projects/plot-cv/static/css/upload.css",
		"/home/roman/Projects/plot-cv/upload.html",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/map.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/directory.js",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Projects/plot-cv/cv-shell.js",
		"/home/roman/Projects/plot-cv/directory.html",
		"/home/roman/Projects/plot-cv/coil.html",
		"/home/roman/Projects/plot-cv/filelist.html",
		"/home/roman/Projects/plot-cv/noise.js",
		"/home/roman/Projects/plot-cv/pinkNoise.js",
		"/home/roman/Projects/plot-cv/noise.html",
		"/home/roman/Projects/plot-cv/landing.html",
		"/home/roman/Projects/plot-cv/404.html",
		"/home/roman/Projects/plot-cv/index.html",
		"/home/roman/Projects/plot-cv/style.css",
		"/home/roman/Projects/plot-cv/lib/lscache.js",
		"/home/roman/Projects/plot-cv/example.html",
		"/home/roman/Projects/plot-cv/clock.html",
		"/home/roman/Projects/plot-cv/eagle2svg.js",
		"/home/roman/Projects/plot-cv/Pink-Noise-Generator-Thomas-Henry.brd",
		"/home/roman/Projects/plot-cv/lib/eagle/schematicRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/grid.js",
		"/home/roman/Projects/plot-cv/lib/eagle/renderUtils.js",
		"/home/roman/Projects/plot-cv/lib/geom/transformation.js",
		"/home/roman/Projects/plot-cv/lib/eagle/nodeList.js",
		"/home/roman/Projects/plot-cv/lib/eagle/ref.js",
		"/home/roman/Projects/plot-cv/lib/eagle/project.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/polygon.js",
		"/home/roman/Projects/plot-cv/lib/geom/polygon.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/symbol.js",
		"/home/roman/Projects/plot-cv/lib/eagle/boardRenderer.js"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 107.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.js,*.c,*.h,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv,*.jsx,*.c,*.h,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv,*.js,*.c,*.h,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv,*.jsx,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv,*.js",
			"/home/roman/Projects/plot-cv/lib/eagle,*.js",
			"/home/roman/Projects/plot-cv/lib,*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"process.. read",
			"breakpoints",
			"main",
			"absolute",
			"stackTrace\\(",
			"stackTrace",
			"'StartDe",
			"'StartDebu",
			"'process\\(",
			"'process",
			"'Debugger proc",
			"'DebuggerDis",
			"'LaunchDe",
			"'ConnectDebug",
			"after call",
			"lineno",
			"send to debugger",
			"SendReq",
			"'breakpoint",
			"Next",
			"'path'",
			"class Deb",
			"responses",
			"\\bmain\\b",
			"main",
			"Element.find",
			"Element",
			"responses",
			"globalThis.responses",
			"globalThis.response",
			"globalThis.responses",
			"responses",
			"#responses",
			"DebuggerDispa",
			"responses",
			"SendRequest",
			"StepIn",
			"class Debugger",
			"process",
			"process\\(",
			"Start\\(",
			"Start",
			"ConnectDebugger",
			"StartDebugger",
			"'start'",
			"dbg",
			"ws.sendMessa",
			"DebuggerDis",
			"SendRequest",
			"dispatch =",
			"default:",
			"StepIn",
			"Dispatcher",
			"'onMessage",
			"DebuggerDispatcher",
			"LaunchDebugger",
			"ConnectDebu",
			"StartDebugger",
			"'start'",
			"AsyncSocket",
			"AsyncSocket;",
			"AsyncSocket",
			"_RECV:",
			"SendRequest",
			"Continue",
			"_SEND:",
			"sendMessage",
			"NewDebugger",
			"dbg =",
			"globalThis.dbg ",
			"NewDebugger",
			"DebuggerDis",
			"recv\\(",
			"recv",
			"RECEIVE",
			"ConnectDebugger.call",
			"ConnectDebugger",
			"connect\\(",
			"throw new",
			"ConnectDebugger",
			"NewDebugger",
			"DebuggerDispatch",
			"process.handler",
			"process\\(",
			"process",
			"LaunchDebugger",
			"ConnectDebugger",
			"NewDebugger",
			"\\bprocess\\b",
			"process\\(",
			"js_asyncsocket_resolve",
			"METHOD_CONNECT",
			"_CONNECT:",
			"_ptr",
			"js_object",
			"METHOD_SEND",
			"SEND:",
			"resolving_funcs",
			"js_asyncsocket_method",
			"js_asyncsocket_resolve",
			"js_socket_error",
			"JS_SOCKETCALL",
			"_SEND:",
			"js_socket_method",
			"JS_SOCKETCALL\\b",
			"JS_SOCKETCALL",
			"SEND:",
			"sendMessage",
			"stepIn",
			"\\bstepIn\\b",
			"stepIn",
			"ConnectDebugger",
			"process\\(",
			"NewDebugger",
			"process\\(",
			"process\\b",
			"\\bprocess\\b",
			"ConnectDebugger",
			"StartDebugger",
			"Initiate",
			"\\bStart\\b",
			"ws2dbg",
			"'connect'",
			"ws2dbg",
			"'start'",
			"\\bStart\\b",
			"Start\\b",
			"Compact"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"responses",
			"import",
			"",
			"{ArrayBuffer}   buffer",
			"{ArrayBuffer}      buffer",
			"{Object|null}   outputDriverInfo",
			"{ArrayBuffer}   stream",
			", ",
			"m",
			"{ ",
			"export const ",
			"nameKey",
			", GetStream(stream)",
			"GetStream",
			"DereferenceStream",
			"export ",
			"export class ",
			"export class",
			"}\\n\n  get ",
			"); /**",
			"",
			"export const \\1 = ",
			"export function ",
			"&auml;",
			"&uuml;",
			"&ouml;",
			"\\1",
			"let",
			"this",
			"ret",
			"factor",
			"GetCirclePosition",
			"index",
			"dist",
			"}\\n\\n\\1",
			"}\\n\\1",
			"Log",
			"format_base",
			"\\1u",
			"format",
			"GREEN",
			"c",
			"output",
			"TYPE_MASK",
			" + (obj?.cacheBucket ?? '') + ",
			"\\1//\\2",
			"opts",
			"}\\n\\n",
			"}\\n\\n\\1",
			"",
			"\n      t = 'l';"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1579,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/debugger-server.js",
							"function_name_status_row": 11,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									1632,
									1675
								],
								[
									2024,
									2061
								],
								[
									2128,
									2133
								],
								[
									2421,
									2438
								],
								[
									2834,
									2866
								],
								[
									3029,
									3050
								],
								[
									3243,
									3273
								],
								[
									3644,
									3672
								],
								[
									3684,
									3698
								],
								[
									3957,
									3971
								],
								[
									4453,
									4457
								],
								[
									4504,
									4508
								],
								[
									4705,
									4712
								],
								[
									4739,
									4756
								],
								[
									5030,
									5077
								],
								[
									5602,
									5670
								],
								[
									6220,
									6243
								],
								[
									7390,
									7412
								],
								[
									7856,
									7903
								],
								[
									8069,
									8087
								],
								[
									8583,
									8594
								],
								[
									8918,
									8936
								],
								[
									9037,
									9054
								],
								[
									9228,
									9232
								],
								[
									9307,
									9344
								],
								[
									9504,
									9508
								],
								[
									9853,
									9885
								],
								[
									10054,
									10078
								],
								[
									10092,
									10118
								],
								[
									10429,
									10433
								],
								[
									10790,
									10813
								],
								[
									10871,
									10879
								],
								[
									11059,
									11074
								],
								[
									11438,
									11453
								],
								[
									11836,
									11865
								],
								[
									11955,
									11968
								],
								[
									12669,
									12679
								],
								[
									12822,
									12840
								],
								[
									12872,
									12890
								],
								[
									12891,
									12898
								],
								[
									12931,
									12992
								],
								[
									13259,
									13270
								],
								[
									13419,
									13448
								],
								[
									13666,
									13692
								],
								[
									13703,
									13717
								],
								[
									13934,
									13949
								],
								[
									13979,
									13998
								],
								[
									14027,
									14049
								],
								[
									14362,
									14372
								],
								[
									14580,
									14594
								],
								[
									14648,
									14662
								],
								[
									15755,
									15798
								],
								[
									15992,
									15998
								],
								[
									16011,
									16027
								],
								[
									17601,
									17637
								],
								[
									17825,
									17860
								],
								[
									18000,
									18004
								],
								[
									18131,
									18149
								],
								[
									18303,
									18341
								],
								[
									18728,
									18739
								],
								[
									18894,
									18905
								],
								[
									18965,
									18985
								],
								[
									19574,
									19609
								],
								[
									20012,
									20031
								],
								[
									20139,
									20177
								],
								[
									21129,
									21152
								],
								[
									21190,
									21197
								],
								[
									21777,
									21782
								],
								[
									22998,
									23013
								],
								[
									25025,
									25033
								],
								[
									25971,
									25977
								],
								[
									26382,
									26407
								],
								[
									26730,
									26747
								],
								[
									26791,
									26796
								],
								[
									26821,
									26835
								],
								[
									27181,
									27191
								],
								[
									27315,
									27332
								],
								[
									27364,
									27379
								],
								[
									27422,
									27436
								],
								[
									27440,
									27455
								],
								[
									27598,
									27602
								],
								[
									27679,
									27689
								],
								[
									28177,
									28186
								],
								[
									28302,
									28308
								],
								[
									28366,
									28379
								],
								[
									28594,
									28611
								],
								[
									28728,
									28770
								],
								[
									29135,
									29166
								],
								[
									29248,
									29264
								],
								[
									29447,
									29467
								]
							],
							"symlist":
							[
								"  decorate(decorators, obj, ...args)",
								"  scriptName = (arg = scriptArgs[0]) =>",
								"() =>",
								"  signalName = n =>",
								"  checkChildExited(child)",
								"GetLoc(node)",
								"LoadAST(source)",
								"StartREPL(prefix = ",
								", suffix = '')",
								"  .show = arg =>",
								"  k =>",
								"  k =>",
								"  item =>",
								"(acc, keys, i) =>",
								"StartDebugger(args, connect, address)",
								"ConnectDebugger(address, skipToMain = true, callback)",
								"  process(callback)",
								"  sendMessage(msg)",
								"LaunchDebugger(dbg, skipToMain = true)",
								"(...args) =>",
								"() =>",
								"DebuggerDispatcher",
								"  value(name)",
								"  v =>",
								"PrintStackFrame(frame)",
								"  f =>",
								"PrintStack(stack)",
								"(member, obj, prop) =>",
								"  breakpoints(...args)",
								"  b =>",
								"  stackTrace(frame)",
								"  frame =>",
								"  scopes(n)",
								"  waitRun()",
								"  variables(n, depth = 0)",
								"  add = item =>",
								"  toString()",
								"DebuggerDispatcher",
								"(port = 8777) =>",
								"() =>",
								"NewDebugger(args, skipToMain = false, address)",
								"  kill: () =>",
								"OnStopped(msg)",
								"URLWorker(script)",
								"  dataURL = s =>",
								"(push, stop) =>",
								"  postMessage: msg =>",
								"  main(...args)",
								"(a, v) =>",
								"(v, pv, o) =>",
								"(v, pv, o) =>",
								"  createWS(url, callbacks, listen)",
								"() =>",
								"(level, str) =>",
								"  config(req, res)",
								"  files(req, res)",
								"  f =>",
								"  onConnect(ws, req)",
								"  value: function sendMessage(msg)",
								"  onClose(ws)",
								"  onError(ws)",
								"  onRequest(req, resp)",
								"(match, p1, p0, p2, p3, offset) =>",
								"  onMessage(ws, data)",
								"  handleCommand(ws, data)",
								"  forward = (fd, name) =>",
								"buf =>",
								"() =>",
								"(dbg, sock) =>",
								"  frame =>",
								"() =>",
								"  showSessions()",
								"  get connections()",
								"  ws =>",
								"  get socklist()",
								"  get file()",
								"(file, source) =>",
								"() =>",
								"s =>",
								"() =>",
								"  m =>",
								"  line(i, j)",
								"  match(re)",
								"  fns =>",
								"({ name }) =>",
								"  functions()",
								"([name, loc, params, expression, path]) =>",
								"  repeat(cond, fn, ...args)",
								"  cond = (r, i) =>",
								"  quit(why)"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740388123.79,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "debugger-server.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29794,
						"regions":
						{
						},
						"selection":
						[
							[
								6920,
								6920
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 235,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740414509.38,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3638.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "test-alea.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 443,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740388758.38,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "quickjs/qjs-modules/quickjs-sockets.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 65964,
						"regions":
						{
						},
						"selection":
						[
							[
								32293,
								32293
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1324,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740388265.78,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 24827.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "debugger.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9022,
						"regions":
						{
							"col_5F00D7FF":
							{
								"flags": 16,
								"regions":
								[
									[
										3635,
										3648
									]
								],
								"scope": "col_5F00D7FF"
							},
							"col_5F00D7FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_5F00D7FF_circle.png",
								"regions":
								[
									[
										3582,
										3582
									]
								],
								"scope": "col_gutter"
							},
							"col_87FF00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										5180,
										5194
									]
								],
								"scope": "col_87FF00FF"
							},
							"col_87FF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_87FF00FF_circle.png",
								"regions":
								[
									[
										5142,
										5142
									]
								],
								"scope": "col_gutter"
							},
							"col_AF0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										5323,
										5337
									]
								],
								"scope": "col_AF0000FF"
							},
							"col_AF0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_AF0000FF_circle.png",
								"regions":
								[
									[
										5285,
										5285
									]
								],
								"scope": "col_gutter"
							},
							"col_FFD700FF":
							{
								"flags": 16,
								"regions":
								[
									[
										2909,
										2923
									]
								],
								"scope": "col_FFD700FF"
							},
							"col_FFD700FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFD700FF_circle.png",
								"regions":
								[
									[
										2864,
										2864
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								5990,
								5990
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 163,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740389109.68,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2329.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "debugger-client.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10822,
						"regions":
						{
						},
						"selection":
						[
							[
								10505,
								10505
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 384,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740388769.41,
							"tabs_extra_last_activated_sheet_index": 5,
							"tabs_extra_moving":
							[
								3,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6562.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "test-video.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26264,
						"regions":
						{
						},
						"selection":
						[
							[
								5485,
								5489
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 134,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740388757.58,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1921.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 300.0
	},
	"output.Debugger Console":
	{
		"height": 300.0
	},
	"output.exec":
	{
		"height": 138.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"test-vide",
				"test-video.js"
			],
			[
				"test-alea",
				"test-alea.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"debugger.ht",
				"debugger.html"
			],
			[
				"debugger.js",
				"debugger.js"
			],
			[
				"utils.h",
				"quickjs/qjs-modules/include/utils.h"
			],
			[
				"quickjs-socket",
				"quickjs/qjs-modules/quickjs-sockets.c"
			],
			[
				"debugger-clie",
				"debugger-client.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"rpc.js",
				"quickjs/qjs-net/js/rpc.js"
			],
			[
				"test-nanovg",
				"test-nanovg.js"
			],
			[
				"repeater",
				"lib/repeater/repeater.js"
			],
			[
				"repeater.js",
				"lib/repeater/repeater.js"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/src/qjsm.c"
			],
			[
				"quickjs.c",
				"quickjs.c"
			],
			[
				"test-repea",
				"test-repeater.js"
			],
			[
				"debugger.htm",
				"debugger.html"
			],
			[
				"debugger",
				"debuggerprotocol.js"
			],
			[
				"portmidi",
				"/usr/include/portmidi.h"
			],
			[
				"portmidi.js",
				"portmidi.js"
			],
			[
				"portmidi.h",
				"/usr/include/portmidi.h"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"ast-she",
				"ast-shell.js"
			],
			[
				"-helpers",
				"os-helpers.js"
			],
			[
				"io-helper",
				"io-helpers.js"
			],
			[
				"portaudio.h",
				"/usr/include/portaudio.h"
			],
			[
				"portaudio",
				"portaudio.js"
			],
			[
				"quickjs.h",
				"quickjs/quickjs.h"
			],
			[
				"quickjs-misc",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"portaudio.js",
				"portaudio.js"
			],
			[
				"portaudio2.js",
				"portaudio2.js"
			],
			[
				"list.ht",
				"list.html"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"webka",
				"webakeit-telegram.js"
			],
			[
				"xml-she",
				"quickjs/qjs-modules/xml-shell.js"
			],
			[
				".html",
				"fire.html"
			],
			[
				"numbers2",
				"numbers2.c"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"main",
				"main.js"
			],
			[
				"splines",
				"lib/geom/splines.js"
			],
			[
				"pointList",
				"lib/geom/pointList.js"
			],
			[
				"draw.js",
				"draw.js"
			],
			[
				"fire.js",
				"fire.js"
			],
			[
				"upload-ser",
				"upload-server.js"
			],
			[
				"compon",
				"components.js"
			],
			[
				"ointlist",
				"lib/geom/pointList.js"
			],
			[
				"events.js",
				"lib/async/events.js"
			],
			[
				"point.js",
				"lib/geom/point.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"draw.css",
				"static/css/draw.css"
			],
			[
				"upload-server",
				"upload-server.js"
			],
			[
				"websocket",
				"webSocket.js"
			],
			[
				"draw.html",
				"draw.html"
			],
			[
				"autoStore",
				"lib/autoStore.js"
			],
			[
				"resolve-im",
				"quickjs/qjs-modules/resolve-imports.js"
			],
			[
				"svg-box",
				"svg-box.js"
			],
			[
				"fd-graph",
				"lib/fd-graph.js"
			],
			[
				"draw-u",
				"draw-utils.js"
			],
			[
				"draw-util",
				"draw-utils.js"
			],
			[
				"test-nano",
				"test-nanovg.js"
			],
			[
				"fd-gra",
				"lib/fd-graph.js"
			],
			[
				"graph.js",
				"lib/geom/graph.js"
			],
			[
				"eagle-shell",
				"eagle-shell.js"
			],
			[
				"node.js",
				"lib/eagle/node.js"
			],
			[
				"eleme",
				"lib/eagle/element.js"
			],
			[
				"quickjs-mysql.c",
				"quickjs/qjs-modules/quickjs-mysql.c"
			],
			[
				"mailcow-db",
				"mailcow-db.js"
			],
			[
				"wscli.js",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"upload.js",
				"upload.js"
			],
			[
				"workertest",
				"workertest.js"
			],
			[
				"promise-wor",
				"promise-worker.js"
			],
			[
				"test-work",
				"test-worker.js"
			],
			[
				"upload.css",
				"static/css/upload.css"
			],
			[
				"upload.html",
				"upload.html"
			],
			[
				"draw-ut",
				"draw-utils.js"
			],
			[
				"test-nan",
				"test-nanovg.js"
			],
			[
				"cv-shell",
				"cv-shell.js"
			],
			[
				"test-open",
				"test-opencv.js"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"noise.js",
				"noise.js"
			],
			[
				"noise",
				"noise.html"
			],
			[
				"dire",
				"directory.html"
			],
			[
				"upload",
				"upload.html"
			],
			[
				"map.ht",
				"map.html"
			],
			[
				"landing",
				"landing.html"
			],
			[
				"fire",
				"fire.html"
			],
			[
				"filelist",
				"filelist.html"
			],
			[
				"coil",
				"coil.html"
			],
			[
				"util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"inde",
				"index.html"
			],
			[
				"404.ht",
				"404.html"
			],
			[
				"lscac",
				"lib/lscache.js"
			],
			[
				"style.css",
				"style.css"
			],
			[
				"direcot",
				"directory.html"
			],
			[
				"direc",
				"directory.html"
			],
			[
				"smd.js",
				"lib/eagle/components/smd.js"
			],
			[
				"smd.jy",
				"quickjs/qjs-modules/3rdparty/denodrivers-postgres/docs/.nojekyll"
			],
			[
				"via.js",
				"lib/eagle/components/via.js"
			],
			[
				"hole.js",
				"lib/eagle/components/hole.js"
			],
			[
				"eagle2sv",
				"eagle2svg.js"
			],
			[
				"svgRe",
				"lib/eagle/svgRenderer.js"
			],
			[
				"boardre",
				"lib/eagle/boardRenderer.js"
			],
			[
				"polygon",
				"lib/eagle/components/polygon.js"
			],
			[
				"polygon.js",
				"lib/geom/polygon.js"
			],
			[
				"symbol",
				"lib/eagle/components/symbol.js"
			],
			[
				"wire.js",
				"lib/eagle/components/wire.js"
			],
			[
				"components/sym",
				"lib/eagle/components/symbol.js"
			],
			[
				"eagle/ele",
				"lib/eagle/element.js"
			],
			[
				"github-user",
				"github-userscript.js"
			],
			[
				"line.js",
				"lib/geom/line.js"
			],
			[
				"rect.",
				"lib/geom/rect.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"minnet-clie",
				"quickjs/qjs-net/src/minnet-client.c"
			],
			[
				"callbaCK.C",
				"quickjs/qjs-net/lib/callback.c"
			],
			[
				"internal",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/src/utils.c"
			],
			[
				"eagle2",
				"eagle2gerber.js"
			],
			[
				"pcb-con",
				"pcb-conversion.js"
			],
			[
				"test_free",
				"qjs-opencv/tests/test_freetype.js"
			],
			[
				"param.js",
				"param.js"
			],
			[
				"make",
				"make-bitmap.js"
			],
			[
				"test_png",
				"qjs-opencv/tests/test_png.js"
			],
			[
				"stream/utils",
				"lib/stream/utils.js"
			],
			[
				"svg-cr",
				"svg-crop-pad.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 230.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
