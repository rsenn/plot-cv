{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Res",
				"ResizeHandler"
			],
			[
				"COLOR",
				"COLOR_BGR2Lab"
			],
			[
				"JS_SetP",
				"JS_SetPropertyFunctionList"
			],
			[
				"inspe",
				"inspectOptions"
			],
			[
				"Sin",
				"SingleLineComment"
			],
			[
				"use",
				"useAsyncIterator_1"
			],
			[
				"high",
				"highlight"
			],
			[
				"hig",
				"highlight"
			],
			[
				"useDe",
				"useDebouncedCallback"
			],
			[
				"preac",
				"preactComponent"
			],
			[
				"modul",
				"module_loader_func"
			],
			[
				"mod",
				"module_loader_func"
			],
			[
				"jsm_mo",
				"jsm_module_record"
			],
			[
				"jsm_mod",
				"jsm_module_record"
			],
			[
				"jsm_com",
				"jsm_compiled_modules"
			],
			[
				"QUICKJS_IN",
				"QUICKJS_INCLUDE_DIR"
			],
			[
				"QUICKJS_SOU",
				"QUICKJS_SOURCES_ROOT"
			],
			[
				"getMem",
				"getMemberNames"
			],
			[
				"Po",
				"PortableFileSystem"
			],
			[
				"JS_EVAL",
				"JS_EVAL_TYPE_MODULE"
			],
			[
				"CPACK",
				"CPACK_PACKAGE_VERSION_MAJOR"
			],
			[
				"CPACK_PACK",
				"CPACK_PACKAGE_VERSION"
			],
			[
				"align_",
				"align_value_attr"
			],
			[
				"histo",
				"historySearch"
			],
			[
				"mouse",
				"mousetrackingDisable"
			],
			[
				"library",
				"libraryNames"
			],
			[
				"setMax",
				"setMaxListeners"
			],
			[
				"cons",
				"constructor"
			],
			[
				"Portable",
				"PortableFileSystem"
			],
			[
				"Get",
				"GetRange"
			],
			[
				"Minn",
				"MinnetHttpRequest"
			],
			[
				"Des",
				"DeserializeEntries"
			],
			[
				"define",
				"defineProperties(...)"
			],
			[
				"Deseria",
				"DeserializeEntries"
			],
			[
				"De",
				"DeserializeEntries"
			],
			[
				"Eve",
				"EventEmitter"
			],
			[
				"PATH_",
				"PATH_FNM_NOMATCH"
			],
			[
				"PATH_FNM_NO",
				"PATH_FNM_NOESCAPE"
			],
			[
				"asyn",
				"asyncIterator"
			],
			[
				"RPC",
				"RPCClientConnection"
			],
			[
				"Const",
				"Constants"
			],
			[
				"Impo",
				"ImportSpecifier"
			],
			[
				"Export",
				"ExportNamedDeclaration"
			],
			[
				"Imm",
				"ImmutableTranslation"
			],
			[
				"elem",
				"elementTransform"
			],
			[
				"getOwn",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"minn",
				"minnet_ws_class_id"
			],
			[
				"JS_Get",
				"JS_GetOpaque"
			],
			[
				"getOw",
				"getOwnPropertySymbols(...)"
			],
			[
				"Minnet",
				"MinnetWebsocket"
			],
			[
				"Message",
				"MessageTransceiver"
			],
			[
				"corr",
				"CorrelateSchematicAndBoard"
			],
			[
				"Sys",
				"SyscallError"
			],
			[
				"getProp",
				"getPropertyDescriptors"
			],
			[
				"getO",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"get",
				"getOwnPropertyDescriptors(...)"
			],
			[
				"toArra",
				"toArrayBuffer"
			],
			[
				"codePo",
				"codePointAt"
			],
			[
				"print",
				"print_status"
			],
			[
				"tty",
				"ttySetRaw"
			],
			[
				"variable",
				"variablesReference"
			],
			[
				"variables",
				"variablesReference"
			],
			[
				"JSIn",
				"JSInputArray"
			],
			[
				"keypoin",
				"keypoint_proto"
			],
			[
				"lws_call",
				"lws_callback_http_dummy"
			],
			[
				"utf",
				"utf8_first_code_mask"
			],
			[
				"from",
				"fromCodePoint"
			],
			[
				"length",
				"history_length"
			],
			[
				"Array",
				"ArrayBufferToString"
			],
			[
				"JSMo",
				"JSModuleLoaderFunc"
			],
			[
				"JS",
				"JSVideoWriterData"
			],
			[
				"D",
				"DebuggerProtocol"
			],
			[
				"Debu",
				"DebuggerProtocol"
			],
			[
				"descripto",
				"descriptor_channels"
			],
			[
				"descript",
				"descriptorExtractor"
			],
			[
				"pattern",
				"patternScale"
			],
			[
				"n",
				"nOctaves"
			],
			[
				"nO",
				"nOctaves"
			],
			[
				"quali",
				"quality_level"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"Feat",
				"Feature2D"
			],
			[
				"PROP_DESCRIPTOR_",
				"PROP_DESCRIPTOR_TYPE"
			],
			[
				"js_feat",
				"js_feature2d_data"
			],
			[
				"js_key",
				"js_keypoint_export"
			],
			[
				"x",
				"xfeatures2d"
			],
			[
				"JSInput",
				"JSInputOutputArray"
			],
			[
				"JS_NewArray",
				"JS_NewArrayBufferCopy"
			],
			[
				"Rota",
				"RotatedRect"
			],
			[
				"js_rotated",
				"js_rotated_rect_new"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"getOwnP",
				"getOwnPropertyNames"
			],
			[
				"PROP_Y",
				"PROP_YINTERCEPT"
			],
			[
				"PROP_X",
				"PROP_XINTERCEPT"
			],
			[
				"RE",
				"RETURN_PATH"
			],
			[
				"insp",
				"inspectSymbol"
			],
			[
				"getOwnProp",
				"getOwnPropertyNames"
			],
			[
				"contour",
				"contour_proto"
			],
			[
				"dst",
				"dst_pts"
			],
			[
				"CXX_",
				"CXX_STANDARD_VALUE"
			],
			[
				"process",
				"processor_or_index"
			],
			[
				"proces",
				"processor_or_index"
			],
			[
				"w",
				"width"
			],
			[
				"FUNC_TO",
				"FUNC_TOARRAY"
			],
			[
				"JSInpu",
				"JSInputOutputArray"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"typed",
				"typedarray_ctor"
			],
			[
				"JS_GetP",
				"JS_GetPropertyStr"
			],
			[
				"depe",
				"dependent_scope_decl_ref_expr"
			],
			[
				"com",
				"compound_stmt"
			],
			[
				"CXXConstruc",
				"CXXConstructorDecl"
			],
			[
				"refere",
				"referencedDecl"
			],
			[
				"Acc",
				"AccessSpecDecl"
			],
			[
				"value",
				"valueCategory"
			],
			[
				"ini",
				"initializers"
			],
			[
				"res",
				"RestElement"
			],
			[
				"arg",
				"argc"
			],
			[
				"instru",
				"instrument"
			],
			[
				"defaul",
				"defaultExport"
			],
			[
				"getBy",
				"getByIdOrName"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  wrap(parser, name)\n  (str, pos) =>\n  geda_netlist(...args)\n  value(...args)\n  values(...args)\n  components(...args)\n  nets(...args)\n  component(...args)\n  net(...args)\nDELIM(...args)\nTEXT(...args)\nLBRACK(...args)\nRBRACK(...args)\nLPAREN(...args)\nRPAREN(...args)\nLINE_COMMENT(...args)\nNL(...args)",
			"settings":
			{
				"buffer_size": 296,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					11,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/preact.js",
						"symkeys":
						[
							[
								189,
								216
							],
							[
								288,
								313
							],
							[
								413,
								447
							],
							[
								1219,
								1264
							],
							[
								2022,
								2075
							],
							[
								2406,
								2426
							],
							[
								2460,
								2484
							],
							[
								2519,
								2566
							],
							[
								2632,
								2666
							],
							[
								2720,
								2777
							],
							[
								3198,
								3250
							],
							[
								3381,
								3390
							],
							[
								3421,
								3462
							],
							[
								3854,
								3889
							],
							[
								4484,
								4523
							],
							[
								5024,
								5049
							],
							[
								5279,
								5297
							],
							[
								5393,
								5408
							],
							[
								5496,
								5508
							],
							[
								5597,
								5772
							],
							[
								9185,
								9221
							],
							[
								9355,
								9371
							],
							[
								9471,
								9571
							],
							[
								10302,
								10361
							],
							[
								10820,
								10856
							],
							[
								11112,
								11167
							],
							[
								13213,
								13235
							],
							[
								13314,
								13343
							],
							[
								13421,
								13474
							],
							[
								13975,
								14114
							],
							[
								14957,
								14964
							],
							[
								17102,
								17113
							],
							[
								19156,
								19194
							],
							[
								19277,
								19289
							],
							[
								19371,
								19384
							],
							[
								19478,
								19595
							],
							[
								22201,
								22237
							],
							[
								22396,
								22444
							],
							[
								23199,
								23239
							],
							[
								23316,
								23362
							],
							[
								24140,
								24174
							],
							[
								24220,
								24265
							],
							[
								24875,
								24922
							],
							[
								25018,
								25047
							],
							[
								25104,
								25130
							],
							[
								25248,
								25277
							],
							[
								25326,
								25367
							],
							[
								25494,
								25512
							],
							[
								25595,
								25629
							],
							[
								26278,
								26300
							],
							[
								26394,
								26416
							],
							[
								26689,
								26714
							],
							[
								26928,
								26963
							],
							[
								26985,
								27005
							],
							[
								27106,
								27119
							],
							[
								27220,
								27232
							],
							[
								27440,
								27466
							],
							[
								27678,
								27712
							],
							[
								28056,
								28087
							],
							[
								28163,
								28211
							],
							[
								28418,
								28440
							],
							[
								28745,
								28779
							],
							[
								28979,
								29019
							],
							[
								29215,
								29244
							],
							[
								29284,
								29295
							],
							[
								29349,
								29402
							],
							[
								29444,
								29458
							],
							[
								29692,
								29723
							],
							[
								29911,
								29947
							],
							[
								29987,
								29998
							],
							[
								30037,
								30065
							],
							[
								30362,
								30402
							],
							[
								30507,
								30536
							],
							[
								30698,
								30732
							],
							[
								30852,
								30866
							],
							[
								30913,
								30946
							],
							[
								30977,
								30997
							],
							[
								31365,
								31398
							],
							[
								31407,
								31429
							],
							[
								31671,
								31706
							],
							[
								31892,
								31920
							],
							[
								32044,
								32071
							],
							[
								32159,
								32197
							],
							[
								32285,
								32306
							],
							[
								32361,
								32392
							],
							[
								32909,
								32937
							],
							[
								32948,
								32967
							],
							[
								33967,
								34005
							],
							[
								34830,
								34855
							],
							[
								35017,
								35034
							],
							[
								38729,
								38756
							]
						],
						"symlist":
						[
							"function assign(obj, props)",
							"function removeNode(node)",
							"function _catchError(error, vnode)",
							"function createElement(type, props, children)",
							"function createVNode(type, props, key, ref, original)",
							"function createRef()",
							"function Fragment(props)",
							"isValidElement = function isValidElement(vnode)",
							"function Component(props, context)",
							"Component.prototype.setState = function(update, callback)",
							"Component.prototype.forceUpdate = function(callback)",
							"Component",
							"function getDomSibling(vnode, childIndex)",
							"function renderComponent(component)",
							"function updateParentDomPointers(vnode)",
							"function enqueueRender(c)",
							"function process()",
							"function (a, b)",
							"function (c)",
							"function diffChildren( parentDom, renderResult, newParentVNode, oldParentVNode, globalContext, isSvg, excessDomChildren, commitQueue, oldDom, isHydrating )",
							"function toChildArray(children, out)",
							"function (child)",
							"function placeChild(parentDom, childVNode, oldVNode, oldChildren, excessDomChildren, newDom, oldDom)",
							"function diffProps(dom, newProps, oldProps, isSvg, hydrate)",
							"function setStyle(style, key, value)",
							"function setProperty(dom, name, value, oldValue, isSvg)",
							"function eventProxy(e)",
							"function eventProxyCapture(e)",
							"function reorderChildren(newVNode, oldDom, parentDom)",
							"function diff( parentDom, newVNode, oldVNode, globalContext, isSvg, excessDomChildren, commitQueue, oldDom, isHydrating )",
							"newType",
							"function ()",
							"function commitRoot(commitQueue, root)",
							"function (c)",
							"function (cb)",
							"function diffElementNodes(dom, newVNode, oldVNode, globalContext, isSvg, excessDomChildren, commitQueue, isHydrating)",
							"function applyRef(ref, value, vnode)",
							"function unmount(vnode, parentVNode, skipRemove)",
							"function doRender(props, state, context)",
							"function render(vnode, parentDom, replaceNode)",
							"function hydrate(vnode, parentDom)",
							"function cloneElement(vnode, props, children)",
							"function createContext(defaultValue, contextId)",
							"Consumer(props, contextValue)",
							"Provider(props, subs, ctx)",
							".getChildContext = function()",
							".shouldComponentUpdate = function(_props)",
							".sub = function(c)",
							".componentWillUnmount = function()",
							".__b = function(vnode)",
							".__r = function(vnode)",
							".diffed = function(vnode)",
							".__c = function(vnode, commitQueue)",
							"function (component)",
							"function (cb)",
							"function (c)",
							".unmount = function(vnode)",
							"function getHookState(index, type)",
							"function useState(initialState)",
							"function useReducer(reducer, initialState, init)",
							" function(action)",
							"function useEffect(callback, args)",
							"function useLayoutEffect(callback, args)",
							"function useRef(initialValue)",
							"function ()",
							"function useImperativeHandle(ref, createHandle, args)",
							" function()",
							"function useMemo(factory, args)",
							"function useCallback(callback, args)",
							"function ()",
							"function useContext(context)",
							"function useDebugValue(value, formatter)",
							"function useErrorBoundary(cb)",
							".componentDidCatch = function(err)",
							" function()",
							"function flushAfterPaintEffects()",
							"function (component)",
							"function afterNextFrame(callback)",
							"done = function done()",
							"function afterPaint(newQueueLength)",
							"function invokeCleanup(hook)",
							"function invokeEffect(hook)",
							"function argsChanged(oldArgs, newArgs)",
							"function (arg, index)",
							"function invokeOrReturn(arg, f)",
							"treeify = (built, fields) =>",
							"_treeify = built =>",
							"evaluate = (h, built, fields, args) =>",
							"build = function(statics)",
							"commit = field =>",
							"regular = function(statics)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADRFQAAKCkgPT4KICByZXMgPT4KKCkgPT4KICByID0+CiAgciA9PgogIGVudHJpZXMoKQpHZXRQcm9qZWN0ID0gYXJnID0+CiAgcCA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIHVzZVNsb3QgPSAoYXJyLCBpKSA9PgooKSA9PgogIHYgPT4KICB0cmtsR2V0U2V0ID0gKGdldCwgc2V0KSA9PiB2YWx1ZSA9PgpNb3VzZUV2ZW50cyA9IGggPT4KKCkgPT4KKHBhcmVudCwgZGVsZWdhdGUpID0+CiAgYXBwZW5kX3RvKGVsZW0sIHApCkRyYXdTVkcoLi4uYXJncykKICBhcHBlbmRfdG8oZWxlbSwgcCkKICBhZGp1c3RWaWV3Qm94KGUpCiAgY2FsY1ZpZXdCb3goYm94KQogIHNldFZpZXdCb3goc3ZnT3duZXIsIGJveCkKRWxlbWVudFRvWE1MID0gKGUsIHByZWRpY2F0ZSkgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICByZWFkRmlsZShmaWxlbmFtZSkKICB3cml0ZUZpbGUoZmlsZW5hbWUsIGRhdGEsIG92ZXJ3cml0ZSA9IHRydWUpCiAgZXhpc3RzKGZpbGVuYW1lKQogIHJlYWxwYXRoKGZpbGVuYW1lKQpMb2FkRmlsZShmaWxlKQpTYXZlRmlsZShmaWxlbmFtZSwgZGF0YSwgY29udGVudFR5cGUpCiAgcyA9PgooKSA9PgpTYXZlU1ZHKGZpbGVuYW1lLCBsYXllcnMgPSBbMSwgMTYsIDIwLCAyMSwgMjIsIDIzLCAyNSwgMjcsIDQ3LCA0OCwgNTFdKQogIHByZWRpY2F0ZSA9IGVsZW1lbnQgPT4KTG9hZFNWRyhmaWxlbmFtZSkKTG9hZEltYWdlKGZpbGVuYW1lKQooKSA9PgpSZW5kZXJDb21wb25lbnQoY29tcG9uZW50KQpNb2RpZnlDb2xvcnMgPSBmbiA9PiBlID0+CkZpbmRMYXllciA9IG5hbWVfb3JfaWQgPT4KICBuID0+CiAgbCA9PgooaWQgPSAnI2dlb20nKSA9PgoocHJvcHMgPSB7fSkgPT4KICBtYXhaSW5kZXggPSAoKSA9PgogIGUgPT4KICB6ID0+CiAgeiA9PgooKSA9PgogIHJhbmRvbUNvbG9yID0gKCkgPT4KRHJhd0FyYyhzdGFydCwgZW5kLCBhbmdsZSkKICBwcm9wcyA9PgogIHAgPT4KICBhID0+CiAgbSA9PgogIGhleCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgooeyB4LCB5IH0pID0+CiAgYSA9PgooeyB4LCB5IH0sIGkpID0+CiAgZSA9PgoobCwgaSkgPT4KKHAsIGkpID0+CihwLCBpKSA9PgogIGFkZCA9IChsZXZlbCwgaXRlbSkgPT4KUmVjdXJzZUJpbmFyeU5vZGUobm9kZSwgcGFyZW50ID0gbnVsbCwgZGVwdGggPSAwKQoobm9kZXMsIGksIGxldmVsKSA9PgogIGZ4ID0gaiA9Pgoobm9kZSwgaikgPT4KICBpdGVtID0+CkRyYXdOb2RlKHgsIHksIG5vZGUpCkRyYXdFZGdlKGl0ZW0sIHBhcmVudCkKR2V0UGF0aHMocXVlcnksIHBhcmVudCA9IHByb2plY3Quc3ZnRWxlbWVudCkKICAoYSwgZSkgPT4KUGF0aFRvUG9seWxpbmVzKHBhdGgsIHN0ZXAgPSAwLjAxKQogIHAgPT4KICBwb2x5ID0+CiAgcG9seSA9PgogIChwLCBkLCBzZXQsIHN0b3ApID0+ClBhdGhUb1BvbHlsaW5lKHBhdGgsIHN0ZXAgPSAwLjAxKQogIChwLCBkLCBzZXQsIHN0b3ApID0+ClBhdGhzVG9Qb2x5bGluZXMocGF0aHMsIHN0ZXAgPSAwLjAxKQpPdXRzZXRQYXRoKHBhdGgsIG9mZnNldCwgbWl0ZXJMaW1pdCA9IDIsIGFyY1RvbGVyYW5jZSA9IDAuMDEpCiAgLnRvUG9seWxpbmVzID0gZnVuY3Rpb24oKQogIHAgPT4KKHsgWCwgWSB9KSA9PgpPdXRzZXRQYXRocyhwYXRocywgb2Zmc2V0LCBtaXRlckxpbWl0ID0gMiwgYXJjVG9sZXJhbmNlID0gMC4yNSkKKGEsIHApID0+CkNsaXBQYXRoKHBhdGgsIGNsaXAsIG1vZGUgPSBDbGlwcGVyTGliLkNsaXBUeXBlLmN0VW5pb24pCiAgYWRkID0gKHAsIGNsaXAgPSBmYWxzZSkgPT4KICAudG9Qb2x5bGluZXMgPSBmdW5jdGlvbigpCiAgcCA9PgooeyBYLCBZIH0pID0+CiAgc2F2ZUl0ZW1TdGF0ZXMoaXRlbUxpc3QsIGdldCA9IGl0ZW0gPT4gVXRpbC5pcy4KKGl0ZW0uCikpCiAgaXRlbSA9PgogIHJlc3RvcmVJdGVtU3RhdGVzKCBpdGVtU3RhdGVzLCAvKnByZXR0aWVyLWlnbm9yZSAqLyBzZXQgPSAoaXRlbSwgdmFsdWUpID0+IGl0ZW0uCih2YWx1ZSA/ICd5ZXMnIDogJ25vJykgKQpFYWdsZU1hcHMocHJvamVjdCkKICB0cmFuc2Zvcm1QYXRoID0gcCA9PgogIGUgPT4KICBkb20yZWFnbGUgPSBub2RlID0+CiAgZWFnbGUyZG9tID0gZWxlbSA9PgogIHBhdGgyZG9tID0gcCA9Pgooa2V5LCB2YWx1ZSkgPT4KKGtleSwgdmFsdWUpID0+ClBhY2thZ2VOYW1lcyhkb2MgPSBwcm9qZWN0LmRvYykKICBlID0+CihbZSwgYl0pID0+CihbZSwgdywgaCwgbSwgdl0pID0+Cih7IGluZGV4LCAuLi5tYXRjaCB9KSA9PgogICh7IHMsIHYsIGluZGV4ZXMgfSwgbWF0Y2gsIGkpID0+CihbdG9rZW4sIGluZGV4XSkgPT4KKFt0b2tlbiwgaW5kZXhdKSA9PgpOZXh0RG9jdW1lbnQobiA9IDEpCiAgKGlkeCwgaSkgPT4KICAoaWR4LCBpKSA9PgpMb2FkRG9jdW1lbnQocHJvamVjdCwgcGFyZW50RWxlbSkKICBlcnIgPT4KKCkgPT4KICBlbnQgPT4KKCkgPT4KICBlbnQgPT4KICByZW5hbWVQYWNrYWdlcygpCiAgYSA9PgogIHZhbHVlID0+CiAgbGF5ZXIgPT4KKCkgPT4KICBsYXllciA9PgooKSA9PgogIGZuID0gZnVuY3Rpb24odikKKCkgPT4KICAubWFrZUdyb3VwID0gZnVuY3Rpb24oeyB0cmFuc2Zvcm0sIC4uLnByb3BzIH0gPSB7fSkKICBpZCA9PgooKSA9PgogIHh4KCkKICAoKSA9PgoodHJhbnNmb3JtKQogICh0YWcsIGF0dHIsIGNoaWxkcmVuID0gW10pID0+CiAgdmFsdWUgPT4KKCkgPT4KUmVjdApDaG9vc2VEb2N1bWVudChwcm9qZWN0LCBpKQpHZW5lcmF0ZVZvcm9ub2kgPSAoKSA9PgpSZWN0CiAgcCA9PgogIGUgPT4KKHsgbFNpdGUsIHJTaXRlLCAuLi5lZGdlIH0pID0+CiAgZSA9PgooeyBsU2l0ZSwgclNpdGUsIC4uLmVkZ2UgfSkgPT4KICBlID0+Cih7IHZhLCB2YiwgLi4uZWRnZSB9KSA9PgogIHYgPT4KICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KICBsID0+CiAgdCA9PgogIGwgPT4KICB0ID0+CiAgcCA9PgogIChhY2MsIHsgc2l0ZSwgaGFsZmVkZ2VzIH0pID0+Cih7IHNpdGUgfSkgPT4KUGFja2FnZUNoaWxkcmVuKGVsZW1lbnQsIGxheWVyKQooYywgaSkgPT4KKFtpLCBwXSkgPT4KKFtpLCBlXSkgPT4KRWxlbWVudENoaWxkcmVuKGxheWVyID0gJ3RQbGFjZScsIHJmbiA9IGVudCA9PiAKKGVudCkpCihbbmFtZSwgZWxlbWVudF0pID0+CkVsZW1lbnRHZW9tZXRyaWVzKGxheWVyID0gJ3RQbGFjZScsIHJmbiA9IGVudCA9PiAKKGVudCkpCiAgZW50ID0+CihbbmFtZSwgY2hpbGRyZW5dKSA9PgooW2ksIGVdKSA9PgooW25hbWUsIGxpbmVzXSkgPT4KICBwdHMgPT4KKFtuYW1lLCBsaW5lcywgcG9seWdvbnNdKSA9PgpOZXdQYXRoKHBhdGgpCk1ha2VGaXRBY3Rpb24gPSBpbmRleCA9PgogIGV2ZW50ID0+Clpvb21GYWN0b3IodmFsID0gY29uZmlnLgopClpvb21Mb2coZmFjdG9yKQpBZGp1c3Rab29tKGwgPSBjb25maWcuCikKQ3JlYXRlR3JibFNvY2tldCA9IChwb3J0ID0gJ3RudDEnKSA9PgpIYW5kbGVNZXNzYWdlKG1zZykKICBwb2ludFN0ciA9PgogIHNvY2tldEZuID0gKCkgPT4KICAuc2VuZCA9ICguLi5hcmdzKSA9PgpBdXRob3JpemF0aW9uRGlhbG9nID0gKHsgb25BdXRoLCAuLi5wcm9wcyB9KSA9PgogIG9uU3VibWl0OiAoKSA9PgogIG9uSW5wdXQ6IGUgPT4KICBvbklucHV0OiBlID0+CiAgb25DbGljazogZSA9PgogIGFyZyA9PgogIC5vbmxvYWQgPSAoKSA9PgogIHJlc3BvbnNlID0+CiAgZSA9PgogIHYgPT4KVGVzdEFyYzogKCkgPT4KKCkgPT4KKHB1c2gsIHN0b3ApID0+CigpID0+CihwdXNoLCBzdG9wKSA9PgogIHRhcmdldCA9PgogIChrZXksIG1vZGlmaWVycyA9IDApID0+CiAgLmZvY3VzU2VhcmNoID0gc3RhdGUgPT4KICBjaGlsZHJlbjogKCkgPT4KICBnZW9tZXRyaWVzOiAoKSA9PgogIHZhbHVlID0+CigpID0+CiAgdGVzdENvbXBvbmVudCA9IHByb3BzID0+CkZpbGUob2JqLCBpKQpGaWxlCkZpbGUucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKQooYSwgYikgPT4KKG9iaiwgaSkgPT4KKGFjYywgZmlsZSkgPT4KICBpID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdXBkYXRlSWZDaGFuZ2VkID0gKHRya2wsIG5ld1ZhbHVlLCBjYWxsYmFjaykgPT4KICAoZWxlbSwgaSkgPT4KICBjaGFuZ2VJbnB1dCA9IGUgPT4KICBwID0+CiAgYXJnID0+CkNvbnN1bWVyID0gcHJvcHMgPT4KKCkKICBsb2codHlwZSwgdGltZSwgbXNnKQpMb2dnZXIgPSBwcm9wcyA9PgooKQooW3R5cGUsIGQsIHQsIG1dLCBpKSA9PgpEdW1wZXIgPSBwcm9wcyA9PgogIHZhbHVlID0+Cihbaywgdl0sIGkpID0+CkNvbW1hbmRlciA9ICh7IG9uQ29tbWFuZCwgLi4ucHJvcHMgfSkgPT4KICBoYW5kbGVyID0gZSA9PgogIHRvZ2dsZSA9IHRya2wgPT4KTGF5ZXIgPSAoeyB0aXRsZSwgbmFtZSwgbGFiZWwsIGksIGNvbG9yLCBlbGVtZW50LCBjbGFzc05hbWUsIC4uLnByb3BzIH0pID0+CiAgc2V0VmlzaWJsZSA9IHZhbHVlID0+CiAgZSA9PgogIGUgPT4KICBsID0+CiAgbCA9PgogIChpdGVtLCB2YWx1ZSkgPT4KICBpdGVtID0+CiAgbCA9PgooW2wsIHN0YXRlXSkgPT4KICBlID0+CiAgb25Nb3VzZU1vdmU6IGUgPT4KICBvbk1vdXNlVXA6IGUgPT4KRG9jdW1lbnRMaXN0CiAgY29uc3RydWN0b3IoKQoocHVzaCwgc3RvcCkgPT4KICBhZGQobmFtZSwgY29tcG9uZW50KQogIGFkZEVudHJ5KFtuYW1lLCBjb21wb25lbnRdKQogIHJlbW92ZShuYW1lKQogIHVwZGF0ZSgpCiAgZm46IGUgPT4KICBmbjogKCkgPT4KICBvcGVuID0+CiAgcHJvcHMgPT4KICBwcm9wcyA9PgogIGUgPT4KICBpID0+CiAgaSA9PgooeyBjb29yZCB9KSA9PgogIHNpZGUgPT4KICBjcmVhdGU6IChwcm9qZWN0LCBwcm9wcyA9IHt9KSA9PgogIGEgPT4KICBlID0+CiAgZSA9PgogIG5hbWUgPT4KICBlID0+CiAgbWFrZUxheWVyTmFtZShuYW1lLCBzaWRlKQogIGZuOiAoKSA9PgogIG9uQ2hhbmdlKGV2ZW50KQogIHByb3BzID0+CiAgcHJvcHMgPT4KICBwcm9wcyA9PgooZSwgcCwgaSkgPT4KICBtYWtlU29ydENvbXBhcmU6IGtleSA9PgogIGZ1bmN0aW9uKGEsIGIpCiAgZnVuY3Rpb24oYSwgYikKICBvbkNvbW1hbmQ6IGNtZFN0ciA9PgogIGhhbmRsZUNoYW5nZTogZSA9PgogIGV2ZW50ID0+CiAgZSA9PgpNb3ZlRXZlbnQoZXZlbnQsIHByZXZFdmVudCkKV2Fsa1VwKGUpCiAgZSA9PgogIHogPT4KICBwID0+CiAgZSA9PgogIGUgPT4KICBlID0+CiAgdiA9PgogIGwgPT4KICBlID0+CiAgKCkgPT4KICAoZSwgZGVwdGgpID0+CiAgY2xhc3NlcyA9PgogIGUgPT4KICBlID0+CiAgKGEsIGIpID0+CiAgKGEsIGIpID0+Ck5vZGUKICBlID0+CiAgKHAsIGQsIHNldCwgc3RvcCkgPT4KICBlID0+CiAgZSA9PgpUb3VjaEV2ZW50KGV2ZW50KQogIGUgPT4KKHAsIGkpID0+CihhLCBiKSA9PgogIHNpemUgPT4KICBib3JkZXIgPT4KICByID0+CiAgbW9kKG4sIG0pCigpID0+CiAgKHBvcywgbGFzdCwgZmlyc3QpID0+CiAgY2FuY2VsKCkKICAub25jb250ZXh0bWVudSA9IGZ1bmN0aW9uKGUpCiAgLnByb2Nlc3NFdmVudHMgPSBmdW5jdGlvbiBldmVudExvb3AoKQogIGV2ZW50ID0+CiAgZSA9PgogIG9uUnVudGltZUluaXRpYWxpemVkOiAoKSA9PgogIHByaW50OiB0eHQgPT4AAAAAAAAAAMsKAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/main.js",
						"symkeys":
						[
							[
								8625,
								8630
							],
							[
								8812,
								8818
							],
							[
								8876,
								8881
							],
							[
								8934,
								8938
							],
							[
								9012,
								9016
							],
							[
								9038,
								9047
							],
							[
								9706,
								9725
							],
							[
								9846,
								9850
							],
							[
								10230,
								10254
							],
							[
								10295,
								10316
							],
							[
								10318,
								10323
							],
							[
								10331,
								10336
							],
							[
								10358,
								10393
							],
							[
								10507,
								10525
							],
							[
								10607,
								10612
							],
							[
								10804,
								10825
							],
							[
								10958,
								10976
							],
							[
								11655,
								11680
							],
							[
								11726,
								11744
							],
							[
								12720,
								12747
							],
							[
								13108,
								13133
							],
							[
								13492,
								13526
							],
							[
								14042,
								14074
							],
							[
								14249,
								14259
							],
							[
								14392,
								14402
							],
							[
								14525,
								14535
							],
							[
								14706,
								14730
							],
							[
								14789,
								14838
							],
							[
								15079,
								15101
							],
							[
								15108,
								15132
							],
							[
								15140,
								15169
							],
							[
								15754,
								15806
							],
							[
								16259,
								16263
							],
							[
								16290,
								16295
							],
							[
								16730,
								16816
							],
							[
								17014,
								17036
							],
							[
								17549,
								17581
							],
							[
								17909,
								17943
							],
							[
								18058,
								18063
							],
							[
								18088,
								18124
							],
							[
								18337,
								18362
							],
							[
								18553,
								18578
							],
							[
								18633,
								18637
							],
							[
								18692,
								18696
							],
							[
								19143,
								19160
							],
							[
								19354,
								19369
							],
							[
								19492,
								19509
							],
							[
								19561,
								19565
							],
							[
								19610,
								19614
							],
							[
								19645,
								19649
							],
							[
								19692,
								19697
							],
							[
								19784,
								19803
							],
							[
								20018,
								20053
							],
							[
								20091,
								20099
							],
							[
								20168,
								20172
							],
							[
								20735,
								20739
							],
							[
								20798,
								20802
							],
							[
								21388,
								21394
							],
							[
								21569,
								21573
							],
							[
								21594,
								21598
							],
							[
								21633,
								21637
							],
							[
								21902,
								21915
							],
							[
								22043,
								22047
							],
							[
								22248,
								22264
							],
							[
								22530,
								22535
							],
							[
								22648,
								22657
							],
							[
								22729,
								22738
							],
							[
								22815,
								22824
							],
							[
								23464,
								23486
							],
							[
								23663,
								23723
							],
							[
								23972,
								23992
							],
							[
								24003,
								24012
							],
							[
								24067,
								24079
							],
							[
								24125,
								24136
							],
							[
								24225,
								24256
							],
							[
								24578,
								24611
							],
							[
								25690,
								25743
							],
							[
								25794,
								25807
							],
							[
								25889,
								25932
							],
							[
								26011,
								26015
							],
							[
								26144,
								26151
							],
							[
								26178,
								26185
							],
							[
								26263,
								26284
							],
							[
								26580,
								26622
							],
							[
								26745,
								26766
							],
							[
								27026,
								27071
							],
							[
								27264,
								27334
							],
							[
								27783,
								27808
							],
							[
								27831,
								27835
							],
							[
								27855,
								27868
							],
							[
								27984,
								28056
							],
							[
								28365,
								28374
							],
							[
								28806,
								28871
							],
							[
								28958,
								28984
							],
							[
								29230,
								29255
							],
							[
								29278,
								29282
							],
							[
								29302,
								29315
							],
							[
								29369,
								29425
							],
							[
								29427,
								29433
							],
							[
								29442,
								29444
							],
							[
								29469,
								29476
							],
							[
								29500,
								29594
							],
							[
								29601,
								29625
							],
							[
								29688,
								29715
							],
							[
								29724,
								29744
							],
							[
								29879,
								29883
							],
							[
								30070,
								30089
							],
							[
								30173,
								30192
							],
							[
								30289,
								30304
							],
							[
								31198,
								31213
							],
							[
								31313,
								31328
							],
							[
								32009,
								32050
							],
							[
								32255,
								32259
							],
							[
								32289,
								32300
							],
							[
								32383,
								32403
							],
							[
								32666,
								32690
							],
							[
								32748,
								32788
							],
							[
								33160,
								33179
							],
							[
								33230,
								33249
							],
							[
								34111,
								34139
							],
							[
								34358,
								34370
							],
							[
								34407,
								34419
							],
							[
								34930,
								34978
							],
							[
								35203,
								35209
							],
							[
								35359,
								35364
							],
							[
								35390,
								35397
							],
							[
								35460,
								35465
							],
							[
								35497,
								35504
							],
							[
								36140,
								36156
							],
							[
								36279,
								36283
							],
							[
								36791,
								36799
							],
							[
								37242,
								37250
							],
							[
								37303,
								37308
							],
							[
								37349,
								37357
							],
							[
								37497,
								37502
							],
							[
								37589,
								37605
							],
							[
								39281,
								39286
							],
							[
								39919,
								39970
							],
							[
								40394,
								40399
							],
							[
								40418,
								40423
							],
							[
								40731,
								40748
							],
							[
								40924,
								40930
							],
							[
								41078,
								41098
							],
							[
								41175,
								41205
							],
							[
								41381,
								41389
							],
							[
								41493,
								41504
							],
							[
								41620,
								41624
							],
							[
								42361,
								42402
							],
							[
								43025,
								43048
							],
							[
								43637,
								43641
							],
							[
								43785,
								43789
							],
							[
								44301,
								44305
							],
							[
								44320,
								44350
							],
							[
								44403,
								44407
							],
							[
								44426,
								44456
							],
							[
								44515,
								44519
							],
							[
								44543,
								44567
							],
							[
								44632,
								44636
							],
							[
								44676,
								44700
							],
							[
								44817,
								44821
							],
							[
								44860,
								44864
							],
							[
								44939,
								44943
							],
							[
								44982,
								44986
							],
							[
								45084,
								45088
							],
							[
								45446,
								45481
							],
							[
								45592,
								45605
							],
							[
								46046,
								46086
							],
							[
								46137,
								46146
							],
							[
								46167,
								46178
							],
							[
								46270,
								46281
							],
							[
								46327,
								46383
							],
							[
								46390,
								46396
							],
							[
								46478,
								46498
							],
							[
								46545,
								46603
							],
							[
								46610,
								46616
							],
							[
								46659,
								46666
							],
							[
								46683,
								46704
							],
							[
								46766,
								46777
							],
							[
								47007,
								47025
							],
							[
								47065,
								47071
							],
							[
								47104,
								47132
							],
							[
								47170,
								47192
							],
							[
								47277,
								47301
							],
							[
								47302,
								47316
							],
							[
								48438,
								48471
							],
							[
								48480,
								48481
							],
							[
								48533,
								48557
							],
							[
								48598,
								48629
							],
							[
								48638,
								48639
							],
							[
								48883,
								48926
							],
							[
								49245,
								49272
							],
							[
								49566,
								49585
							],
							[
								49798,
								49814
							],
							[
								50138,
								50158
							],
							[
								51053,
								51100
							],
							[
								51483,
								51498
							],
							[
								51715,
								51728
							],
							[
								52005,
								52018
							],
							[
								52224,
								52237
							],
							[
								52461,
								52467
							],
							[
								52517,
								52538
							],
							[
								56273,
								56284
							],
							[
								57120,
								57124
							],
							[
								57573,
								57578
							],
							[
								57732,
								57746
							],
							[
								57775,
								57780
							],
							[
								57908,
								57929
							],
							[
								57987,
								57992
							],
							[
								58100,
								58121
							],
							[
								58346,
								58359
							],
							[
								58360,
								58387
							],
							[
								58528,
								58551
							],
							[
								58833,
								58848
							],
							[
								58873,
								58890
							],
							[
								58957,
								58965
							],
							[
								59038,
								59043
							],
							[
								59149,
								59173
							],
							[
								59820,
								59847
							],
							[
								59943,
								59947
							],
							[
								60312,
								60348
							],
							[
								60453,
								60462
							],
							[
								60497,
								60508
							],
							[
								60569,
								60583
							],
							[
								61168,
								61172
							],
							[
								61857,
								61865
							],
							[
								61981,
								61989
							],
							[
								62109,
								62117
							],
							[
								62232,
								62240
							],
							[
								62297,
								62305
							],
							[
								62777,
								62785
							],
							[
								62970,
								63017
							],
							[
								63163,
								63176
							],
							[
								63339,
								63357
							],
							[
								63525,
								63529
							],
							[
								63601,
								63608
							],
							[
								63856,
								63875
							],
							[
								63907,
								63925
							],
							[
								64451,
								64471
							],
							[
								64796,
								64813
							],
							[
								65021,
								65039
							],
							[
								65316,
								65339
							],
							[
								65790,
								65807
							],
							[
								65899,
								65907
							],
							[
								66126,
								66140
							],
							[
								66323,
								66363
							],
							[
								66428,
								66442
							],
							[
								67017,
								67033
							],
							[
								67071,
								67146
							],
							[
								67397,
								67418
							],
							[
								67527,
								67531
							],
							[
								68010,
								68024
							],
							[
								68328,
								68332
							],
							[
								68404,
								68408
							],
							[
								68690,
								68707
							],
							[
								68875,
								68883
							],
							[
								69081,
								69085
							],
							[
								69181,
								69196
							],
							[
								69442,
								69446
							],
							[
								69653,
								69670
							],
							[
								69762,
								69777
							],
							[
								70575,
								70587
							],
							[
								70594,
								70607
							],
							[
								70645,
								70660
							],
							[
								70764,
								70784
							],
							[
								70964,
								70991
							],
							[
								71045,
								71057
							],
							[
								71175,
								71183
							],
							[
								71632,
								71640
							],
							[
								72462,
								72471
							],
							[
								72706,
								72713
							],
							[
								72812,
								72832
							],
							[
								73019,
								73039
							],
							[
								73405,
								73415
							],
							[
								74218,
								74222
							],
							[
								74318,
								74322
							],
							[
								74357,
								74371
							],
							[
								74628,
								74635
							],
							[
								77025,
								77057
							],
							[
								77566,
								77570
							],
							[
								77835,
								77839
							],
							[
								77907,
								77911
							],
							[
								77995,
								78002
							],
							[
								78081,
								78085
							],
							[
								79159,
								79205
							],
							[
								79672,
								79681
							],
							[
								80753,
								80768
							],
							[
								80947,
								80961
							],
							[
								81090,
								81104
							],
							[
								81253,
								81267
							],
							[
								82255,
								82273
							],
							[
								82471,
								82494
							],
							[
								82536,
								82551
							],
							[
								82907,
								82922
							],
							[
								83335,
								83355
							],
							[
								83837,
								83855
							],
							[
								84571,
								84580
							],
							[
								84623,
								84627
							],
							[
								84839,
								84877
							],
							[
								85052,
								85075
							],
							[
								85219,
								85224
							],
							[
								85263,
								85273
							],
							[
								85437,
								85441
							],
							[
								85588,
								85592
							],
							[
								85631,
								85636
							],
							[
								86041,
								86045
							],
							[
								86084,
								86098
							],
							[
								86102,
								86116
							],
							[
								86123,
								86127
							],
							[
								86148,
								86163
							],
							[
								86219,
								86244
							],
							[
								86376,
								86387
							],
							[
								86437,
								86442
							],
							[
								86502,
								86507
							],
							[
								86962,
								86972
							],
							[
								87086,
								87103
							],
							[
								87116,
								87120
							],
							[
								87310,
								87314
							],
							[
								87482,
								87503
							],
							[
								88649,
								88653
							],
							[
								88759,
								88763
							],
							[
								89057,
								89085
							],
							[
								89536,
								89540
							],
							[
								89996,
								90005
							],
							[
								90137,
								90146
							],
							[
								90250,
								90258
							],
							[
								90764,
								90773
							],
							[
								90922,
								90926
							],
							[
								90991,
								91017
							],
							[
								91662,
								91667
							],
							[
								91974,
								92005
							],
							[
								93042,
								93063
							],
							[
								93268,
								93296
							],
							[
								93663,
								93706
							],
							[
								95036,
								95045
							],
							[
								95925,
								95929
							],
							[
								96669,
								96696
							],
							[
								96819,
								96832
							]
						],
						"symlist":
						[
							"() =>",
							"res =>",
							"() =>",
							"r =>",
							"r =>",
							"entries()",
							"GetProject = arg =>",
							"p =>",
							"add = (arr, ...items) =>",
							"useSlot = (arr, i) =>",
							"() =>",
							" v =>",
							"trklGetSet = (get, set) => value =>",
							"MouseEvents = h =>",
							"() =>",
							"(parent, delegate) =>",
							"append_to(elem, p)",
							"function DrawSVG(...args)",
							"append_to(elem, p)",
							" function adjustViewBox(e)",
							"function calcViewBox(box)",
							"function setViewBox(svgOwner, box)",
							"ElementToXML = (e, predicate) =>",
							" (v, k) =>",
							" (v, k) =>",
							" (v, k) =>",
							"async readFile(filename)",
							"async writeFile(filename, data, overwrite = true)",
							"async exists(filename)",
							"async realpath(filename)",
							"async function LoadFile(file)",
							"async function SaveFile(filename, data, contentType)",
							"s =>",
							"() =>",
							"async function SaveSVG(filename, layers = [1, 16, 20, 21, 22, 23, 25, 27, 47, 48, 51])",
							"predicate = element =>",
							"async function LoadSVG(filename)",
							"async function LoadImage(filename)",
							"() =>",
							" function RenderComponent(component)",
							"ModifyColors = fn => e =>",
							"FindLayer = name_or_id =>",
							"n =>",
							"l =>",
							"(id = '#geom') =>",
							"(props = {}) =>",
							"maxZIndex = () =>",
							"e =>",
							"z =>",
							"z =>",
							"() =>",
							"randomColor = () =>",
							"function DrawArc(start, end, angle)",
							"props =>",
							"p =>",
							"a =>",
							"m =>",
							"hex =>",
							"p =>",
							"p =>",
							"p =>",
							"({ x, y }) =>",
							"a =>",
							"({ x, y }, i) =>",
							" e =>",
							"(l, i) =>",
							"(p, i) =>",
							"(p, i) =>",
							"add = (level, item) =>",
							" function RecurseBinaryNode(node, parent = null, depth = 0)",
							"(nodes, i, level) =>",
							"fx = j =>",
							"(node, j) =>",
							" item =>",
							" function DrawNode(x, y, node)",
							" function DrawEdge(item, parent)",
							"function GetPaths(query, parent = project.svgElement)",
							" (a, e) =>",
							"function PathToPolylines(path, step = 0.01)",
							"p =>",
							"poly =>",
							"poly =>",
							" (p, d, set, stop) =>",
							"function PathToPolyline(path, step = 0.01)",
							" (p, d, set, stop) =>",
							"function PathsToPolylines(paths, step = 0.01)",
							"function OutsetPath(path, offset, miterLimit = 2, arcTolerance = 0.01)",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function OutsetPaths(paths, offset, miterLimit = 2, arcTolerance = 0.25)",
							"(a, p) =>",
							"function ClipPath(path, clip, mode = ClipperLib.ClipType.ctUnion)",
							"add = (p, clip = false) =>",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function saveItemStates(itemList, get = item => Util.is.",
							"(item.",
							"))",
							"item =>",
							"function restoreItemStates( itemStates, /* prettier-ignore */ set = (item, value) => item.",
							"(value ? 'yes' : 'no') )",
							"function EagleMaps(project)",
							"transformPath = p =>",
							"e =>",
							"dom2eagle = node =>",
							"eagle2dom = elem =>",
							"path2dom = p =>",
							"(key, value) =>",
							"(key, value) =>",
							"function* PackageNames(doc = project.doc)",
							"e =>",
							"([e, b]) =>",
							"([e, w, h, m, v]) =>",
							"({ index, ...match }) =>",
							" ({ s, v, indexes }, match, i) =>",
							"([token, index]) =>",
							"([token, index]) =>",
							"function NextDocument(n = 1)",
							" (idx, i) =>",
							" (idx, i) =>",
							"async function LoadDocument(project, parentElem)",
							"err =>",
							"() =>",
							" ent =>",
							"() =>",
							" ent =>",
							"renamePackages()",
							"a =>",
							"value =>",
							"layer =>",
							"() =>",
							"layer =>",
							"() =>",
							"fn = function(v)",
							"() =>",
							".makeGroup = function({ transform, ...props } = {})",
							"id =>",
							"() =>",
							" function xx()",
							" () =>",
							"function (transform)",
							" (tag, attr, children = []) =>",
							"value =>",
							"async () =>",
							"Rect",
							"async function ChooseDocument(project, i)",
							"GenerateVoronoi = () =>",
							"Rect",
							"p =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ va, vb, ...edge }) =>",
							"v =>",
							"add = (arr, ...items) =>",
							"l =>",
							"t =>",
							"l =>",
							"t =>",
							"p =>",
							" (acc, { site, halfedges }) =>",
							"({ site }) =>",
							"function PackageChildren(element, layer)",
							"(c, i) =>",
							"([i, p]) =>",
							"([i, e]) =>",
							"function ElementChildren(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							"([name, element]) =>",
							"function ElementGeometries(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							" ent =>",
							"([name, children]) =>",
							"([i, e]) =>",
							"([name, lines]) =>",
							"pts =>",
							"([name, lines, polygons]) =>",
							"function NewPath(path)",
							"MakeFitAction = index =>",
							"async event =>",
							"function ZoomFactor(val = config.",
							")",
							"function ZoomLog(factor)",
							"function AdjustZoom(l = config.",
							")",
							"CreateGrblSocket = async (port = 'tnt1') =>",
							"function HandleMessage(msg)",
							" pointStr =>",
							"socketFn = () =>",
							".send = (...args) =>",
							"AuthorizationDialog = ({ onAuth, ...props }) =>",
							"onSubmit: () =>",
							"onInput: e =>",
							"onInput: e =>",
							"onClick: e =>",
							"arg =>",
							".onload = async () =>",
							"response =>",
							"e =>",
							" v =>",
							"TestArc: () =>",
							"() =>",
							"async (push, stop) =>",
							"() =>",
							"async (push, stop) =>",
							" target =>",
							" (key, modifiers = 0) =>",
							".focusSearch = state =>",
							"children: () =>",
							"geometries: () =>",
							"value =>",
							"() =>",
							"testComponent = props =>",
							" function File(obj, i)",
							"File",
							"File.prototype.toString = function()",
							"(a, b) =>",
							"(obj, i) =>",
							"(acc, file) =>",
							"i =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"updateIfChanged = (trkl, newValue, callback) =>",
							" (elem, i) =>",
							"changeInput = e =>",
							"p =>",
							" arg =>",
							"Consumer = props =>",
							"async function* ()",
							"log(type, time, msg)",
							"Logger = props =>",
							"async function* ()",
							"([type, d, t, m], i) =>",
							"Dumper = props =>",
							"value =>",
							"([k, v], i) =>",
							"Commander = ({ onCommand, ...props }) =>",
							"handler = e =>",
							"toggle = trkl =>",
							"Layer = ({ title, name, label, i, color, element, className, ...props }) =>",
							"setVisible = value =>",
							"e =>",
							" e =>",
							"l =>",
							"l =>",
							" (item, value) =>",
							" item =>",
							"l =>",
							"([l, state]) =>",
							"e =>",
							"onMouseMove: e =>",
							"onMouseUp: e =>",
							"DocumentList",
							"constructor()",
							"(push, stop) =>",
							"add(name, component)",
							"addEntry([name, component])",
							"remove(name)",
							"update()",
							"fn: e =>",
							"fn: () =>",
							"open =>",
							" props =>",
							" props =>",
							"async e =>",
							"i =>",
							"i =>",
							"({ coord }) =>",
							"side =>",
							"create: (project, props = {}) =>",
							"a =>",
							"e =>",
							"e =>",
							"name =>",
							"e =>",
							" function makeLayerName(name, side)",
							"fn: () =>",
							"onChange(event)",
							" props =>",
							" props =>",
							" props =>",
							"async (e, p, i) =>",
							"makeSortCompare: key =>",
							" function(a, b)",
							" function(a, b)",
							"onCommand: cmdStr =>",
							"handleChange: e =>",
							" event =>",
							"e =>",
							" function MoveEvent(event, prevEvent)",
							" function* WalkUp(e)",
							" e =>",
							" z =>",
							"p =>",
							"e =>",
							" e =>",
							"e =>",
							" v =>",
							" l =>",
							"e =>",
							" () =>",
							" (e, depth) =>",
							" classes =>",
							" e =>",
							" e =>",
							" (a, b) =>",
							" (a, b) =>",
							"Node",
							"e =>",
							" (p, d, set, stop) =>",
							"e =>",
							"e =>",
							" function TouchEvent(event)",
							"e =>",
							"(p, i) =>",
							"(a, b) =>",
							" size =>",
							"border =>",
							"r =>",
							" function mod(n, m)",
							"() =>",
							" (pos, last, first) =>",
							" function cancel()",
							".oncontextmenu = function(e)",
							".processEvents = async function eventLoop()",
							" event =>",
							"e =>",
							"onRuntimeInitialized: () =>",
							"print: txt =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADLCgAAICBhc3NpZ24ob2JqLCBwcm9wcykKICByZW1vdmVOb2RlKG5vZGUpCiAgX2NhdGNoRXJyb3IoZXJyb3IsIHZub2RlKQogIGNyZWF0ZUVsZW1lbnQodHlwZSwgcHJvcHMsIGNoaWxkcmVuKQogIGNyZWF0ZVZOb2RlKHR5cGUsIHByb3BzLCBrZXksIHJlZiwgb3JpZ2luYWwpCiAgY3JlYXRlUmVmKCkKRnJhZ21lbnQocHJvcHMpCiAgaXNWYWxpZEVsZW1lbnQgPSBmdW5jdGlvbiBpc1ZhbGlkRWxlbWVudCh2bm9kZSkKQ29tcG9uZW50KHByb3BzLCBjb250ZXh0KQpDb21wb25lbnQucHJvdG90eXBlLnNldFN0YXRlID0gZnVuY3Rpb24odXBkYXRlLCBjYWxsYmFjaykKQ29tcG9uZW50LnByb3RvdHlwZS5mb3JjZVVwZGF0ZSA9IGZ1bmN0aW9uKGNhbGxiYWNrKQpDb21wb25lbnQKICBnZXREb21TaWJsaW5nKHZub2RlLCBjaGlsZEluZGV4KQogIHJlbmRlckNvbXBvbmVudChjb21wb25lbnQpCiAgdXBkYXRlUGFyZW50RG9tUG9pbnRlcnModm5vZGUpCiAgZW5xdWV1ZVJlbmRlcihjKQogIHByb2Nlc3MoKQooYSwgYikKKGMpCiAgZGlmZkNoaWxkcmVuKCBwYXJlbnREb20sIHJlbmRlclJlc3VsdCwgbmV3UGFyZW50Vk5vZGUsIG9sZFBhcmVudFZOb2RlLCBnbG9iYWxDb250ZXh0LCBpc1N2ZywgZXhjZXNzRG9tQ2hpbGRyZW4sIGNvbW1pdFF1ZXVlLCBvbGREb20sIGlzSHlkcmF0aW5nICkKICB0b0NoaWxkQXJyYXkoY2hpbGRyZW4sIG91dCkKKGNoaWxkKQogIHBsYWNlQ2hpbGQocGFyZW50RG9tLCBjaGlsZFZOb2RlLCBvbGRWTm9kZSwgb2xkQ2hpbGRyZW4sIGV4Y2Vzc0RvbUNoaWxkcmVuLCBuZXdEb20sIG9sZERvbSkKICBkaWZmUHJvcHMoZG9tLCBuZXdQcm9wcywgb2xkUHJvcHMsIGlzU3ZnLCBoeWRyYXRlKQogIHNldFN0eWxlKHN0eWxlLCBrZXksIHZhbHVlKQogIHNldFByb3BlcnR5KGRvbSwgbmFtZSwgdmFsdWUsIG9sZFZhbHVlLCBpc1N2ZykKICBldmVudFByb3h5KGUpCiAgZXZlbnRQcm94eUNhcHR1cmUoZSkKICByZW9yZGVyQ2hpbGRyZW4obmV3Vk5vZGUsIG9sZERvbSwgcGFyZW50RG9tKQogIGRpZmYoIHBhcmVudERvbSwgbmV3Vk5vZGUsIG9sZFZOb2RlLCBnbG9iYWxDb250ZXh0LCBpc1N2ZywgZXhjZXNzRG9tQ2hpbGRyZW4sIGNvbW1pdFF1ZXVlLCBvbGREb20sIGlzSHlkcmF0aW5nICkKICBuZXdUeXBlCigpCiAgY29tbWl0Um9vdChjb21taXRRdWV1ZSwgcm9vdCkKKGMpCihjYikKICBkaWZmRWxlbWVudE5vZGVzKGRvbSwgbmV3Vk5vZGUsIG9sZFZOb2RlLCBnbG9iYWxDb250ZXh0LCBpc1N2ZywgZXhjZXNzRG9tQ2hpbGRyZW4sIGNvbW1pdFF1ZXVlLCBpc0h5ZHJhdGluZykKICBhcHBseVJlZihyZWYsIHZhbHVlLCB2bm9kZSkKICB1bm1vdW50KHZub2RlLCBwYXJlbnRWTm9kZSwgc2tpcFJlbW92ZSkKICBkb1JlbmRlcihwcm9wcywgc3RhdGUsIGNvbnRleHQpCiAgcmVuZGVyKHZub2RlLCBwYXJlbnREb20sIHJlcGxhY2VOb2RlKQogIGh5ZHJhdGUodm5vZGUsIHBhcmVudERvbSkKICBjbG9uZUVsZW1lbnQodm5vZGUsIHByb3BzLCBjaGlsZHJlbikKICBjcmVhdGVDb250ZXh0KGRlZmF1bHRWYWx1ZSwgY29udGV4dElkKQpDb25zdW1lcihwcm9wcywgY29udGV4dFZhbHVlKQpQcm92aWRlcihwcm9wcywgc3VicywgY3R4KQogIC5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbigpCiAgLnNob3VsZENvbXBvbmVudFVwZGF0ZSA9IGZ1bmN0aW9uKF9wcm9wcykKICAuc3ViID0gZnVuY3Rpb24oYykKICAuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbigpCiAgLl9fYiA9IGZ1bmN0aW9uKHZub2RlKQogIC5fX3IgPSBmdW5jdGlvbih2bm9kZSkKICAuZGlmZmVkID0gZnVuY3Rpb24odm5vZGUpCiAgLl9fYyA9IGZ1bmN0aW9uKHZub2RlLCBjb21taXRRdWV1ZSkKKGNvbXBvbmVudCkKKGNiKQooYykKICAudW5tb3VudCA9IGZ1bmN0aW9uKHZub2RlKQogIGdldEhvb2tTdGF0ZShpbmRleCwgdHlwZSkKICB1c2VTdGF0ZShpbml0aWFsU3RhdGUpCiAgdXNlUmVkdWNlcihyZWR1Y2VyLCBpbml0aWFsU3RhdGUsIGluaXQpCiAgZnVuY3Rpb24oYWN0aW9uKQogIHVzZUVmZmVjdChjYWxsYmFjaywgYXJncykKICB1c2VMYXlvdXRFZmZlY3QoY2FsbGJhY2ssIGFyZ3MpCiAgdXNlUmVmKGluaXRpYWxWYWx1ZSkKKCkKICB1c2VJbXBlcmF0aXZlSGFuZGxlKHJlZiwgY3JlYXRlSGFuZGxlLCBhcmdzKQogIGZ1bmN0aW9uKCkKICB1c2VNZW1vKGZhY3RvcnksIGFyZ3MpCiAgdXNlQ2FsbGJhY2soY2FsbGJhY2ssIGFyZ3MpCigpCiAgdXNlQ29udGV4dChjb250ZXh0KQogIHVzZURlYnVnVmFsdWUodmFsdWUsIGZvcm1hdHRlcikKICB1c2VFcnJvckJvdW5kYXJ5KGNiKQogIC5jb21wb25lbnREaWRDYXRjaCA9IGZ1bmN0aW9uKGVycikKICBmdW5jdGlvbigpCiAgZmx1c2hBZnRlclBhaW50RWZmZWN0cygpCihjb21wb25lbnQpCiAgYWZ0ZXJOZXh0RnJhbWUoY2FsbGJhY2spCiAgZG9uZSA9IGZ1bmN0aW9uIGRvbmUoKQogIGFmdGVyUGFpbnQobmV3UXVldWVMZW5ndGgpCiAgaW52b2tlQ2xlYW51cChob29rKQogIGludm9rZUVmZmVjdChob29rKQogIGFyZ3NDaGFuZ2VkKG9sZEFyZ3MsIG5ld0FyZ3MpCihhcmcsIGluZGV4KQogIGludm9rZU9yUmV0dXJuKGFyZywgZikKICB0cmVlaWZ5ID0gKGJ1aWx0LCBmaWVsZHMpID0+CiAgX3RyZWVpZnkgPSBidWlsdCA9PgogIGV2YWx1YXRlID0gKGgsIGJ1aWx0LCBmaWVsZHMsIGFyZ3MpID0+CiAgYnVpbGQgPSBmdW5jdGlvbihzdGF0aWNzKQogIGNvbW1pdCA9IGZpZWxkID0+CiAgcmVndWxhciA9IGZ1bmN0aW9uKHN0YXRpY3MpAAAAAAAAAADRFQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					13,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/ws-worker.js",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADRFQAAKCkgPT4KICByZXMgPT4KKCkgPT4KICByID0+CiAgciA9PgogIGVudHJpZXMoKQpHZXRQcm9qZWN0ID0gYXJnID0+CiAgcCA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIHVzZVNsb3QgPSAoYXJyLCBpKSA9PgooKSA9PgogIHYgPT4KICB0cmtsR2V0U2V0ID0gKGdldCwgc2V0KSA9PiB2YWx1ZSA9PgpNb3VzZUV2ZW50cyA9IGggPT4KKCkgPT4KKHBhcmVudCwgZGVsZWdhdGUpID0+CiAgYXBwZW5kX3RvKGVsZW0sIHApCkRyYXdTVkcoLi4uYXJncykKICBhcHBlbmRfdG8oZWxlbSwgcCkKICBhZGp1c3RWaWV3Qm94KGUpCiAgY2FsY1ZpZXdCb3goYm94KQogIHNldFZpZXdCb3goc3ZnT3duZXIsIGJveCkKRWxlbWVudFRvWE1MID0gKGUsIHByZWRpY2F0ZSkgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICByZWFkRmlsZShmaWxlbmFtZSkKICB3cml0ZUZpbGUoZmlsZW5hbWUsIGRhdGEsIG92ZXJ3cml0ZSA9IHRydWUpCiAgZXhpc3RzKGZpbGVuYW1lKQogIHJlYWxwYXRoKGZpbGVuYW1lKQpMb2FkRmlsZShmaWxlKQpTYXZlRmlsZShmaWxlbmFtZSwgZGF0YSwgY29udGVudFR5cGUpCiAgcyA9PgooKSA9PgpTYXZlU1ZHKGZpbGVuYW1lLCBsYXllcnMgPSBbMSwgMTYsIDIwLCAyMSwgMjIsIDIzLCAyNSwgMjcsIDQ3LCA0OCwgNTFdKQogIHByZWRpY2F0ZSA9IGVsZW1lbnQgPT4KTG9hZFNWRyhmaWxlbmFtZSkKTG9hZEltYWdlKGZpbGVuYW1lKQooKSA9PgpSZW5kZXJDb21wb25lbnQoY29tcG9uZW50KQpNb2RpZnlDb2xvcnMgPSBmbiA9PiBlID0+CkZpbmRMYXllciA9IG5hbWVfb3JfaWQgPT4KICBuID0+CiAgbCA9PgooaWQgPSAnI2dlb20nKSA9PgoocHJvcHMgPSB7fSkgPT4KICBtYXhaSW5kZXggPSAoKSA9PgogIGUgPT4KICB6ID0+CiAgeiA9PgooKSA9PgogIHJhbmRvbUNvbG9yID0gKCkgPT4KRHJhd0FyYyhzdGFydCwgZW5kLCBhbmdsZSkKICBwcm9wcyA9PgogIHAgPT4KICBhID0+CiAgbSA9PgogIGhleCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgooeyB4LCB5IH0pID0+CiAgYSA9PgooeyB4LCB5IH0sIGkpID0+CiAgZSA9PgoobCwgaSkgPT4KKHAsIGkpID0+CihwLCBpKSA9PgogIGFkZCA9IChsZXZlbCwgaXRlbSkgPT4KUmVjdXJzZUJpbmFyeU5vZGUobm9kZSwgcGFyZW50ID0gbnVsbCwgZGVwdGggPSAwKQoobm9kZXMsIGksIGxldmVsKSA9PgogIGZ4ID0gaiA9Pgoobm9kZSwgaikgPT4KICBpdGVtID0+CkRyYXdOb2RlKHgsIHksIG5vZGUpCkRyYXdFZGdlKGl0ZW0sIHBhcmVudCkKR2V0UGF0aHMocXVlcnksIHBhcmVudCA9IHByb2plY3Quc3ZnRWxlbWVudCkKICAoYSwgZSkgPT4KUGF0aFRvUG9seWxpbmVzKHBhdGgsIHN0ZXAgPSAwLjAxKQogIHAgPT4KICBwb2x5ID0+CiAgcG9seSA9PgogIChwLCBkLCBzZXQsIHN0b3ApID0+ClBhdGhUb1BvbHlsaW5lKHBhdGgsIHN0ZXAgPSAwLjAxKQogIChwLCBkLCBzZXQsIHN0b3ApID0+ClBhdGhzVG9Qb2x5bGluZXMocGF0aHMsIHN0ZXAgPSAwLjAxKQpPdXRzZXRQYXRoKHBhdGgsIG9mZnNldCwgbWl0ZXJMaW1pdCA9IDIsIGFyY1RvbGVyYW5jZSA9IDAuMDEpCiAgLnRvUG9seWxpbmVzID0gZnVuY3Rpb24oKQogIHAgPT4KKHsgWCwgWSB9KSA9PgpPdXRzZXRQYXRocyhwYXRocywgb2Zmc2V0LCBtaXRlckxpbWl0ID0gMiwgYXJjVG9sZXJhbmNlID0gMC4yNSkKKGEsIHApID0+CkNsaXBQYXRoKHBhdGgsIGNsaXAsIG1vZGUgPSBDbGlwcGVyTGliLkNsaXBUeXBlLmN0VW5pb24pCiAgYWRkID0gKHAsIGNsaXAgPSBmYWxzZSkgPT4KICAudG9Qb2x5bGluZXMgPSBmdW5jdGlvbigpCiAgcCA9PgooeyBYLCBZIH0pID0+CiAgc2F2ZUl0ZW1TdGF0ZXMoaXRlbUxpc3QsIGdldCA9IGl0ZW0gPT4gVXRpbC5pcy4KKGl0ZW0uCikpCiAgaXRlbSA9PgogIHJlc3RvcmVJdGVtU3RhdGVzKCBpdGVtU3RhdGVzLCAvKnByZXR0aWVyLWlnbm9yZSAqLyBzZXQgPSAoaXRlbSwgdmFsdWUpID0+IGl0ZW0uCih2YWx1ZSA/ICd5ZXMnIDogJ25vJykgKQpFYWdsZU1hcHMocHJvamVjdCkKICB0cmFuc2Zvcm1QYXRoID0gcCA9PgogIGUgPT4KICBkb20yZWFnbGUgPSBub2RlID0+CiAgZWFnbGUyZG9tID0gZWxlbSA9PgogIHBhdGgyZG9tID0gcCA9Pgooa2V5LCB2YWx1ZSkgPT4KKGtleSwgdmFsdWUpID0+ClBhY2thZ2VOYW1lcyhkb2MgPSBwcm9qZWN0LmRvYykKICBlID0+CihbZSwgYl0pID0+CihbZSwgdywgaCwgbSwgdl0pID0+Cih7IGluZGV4LCAuLi5tYXRjaCB9KSA9PgogICh7IHMsIHYsIGluZGV4ZXMgfSwgbWF0Y2gsIGkpID0+CihbdG9rZW4sIGluZGV4XSkgPT4KKFt0b2tlbiwgaW5kZXhdKSA9PgpOZXh0RG9jdW1lbnQobiA9IDEpCiAgKGlkeCwgaSkgPT4KICAoaWR4LCBpKSA9PgpMb2FkRG9jdW1lbnQocHJvamVjdCwgcGFyZW50RWxlbSkKICBlcnIgPT4KKCkgPT4KICBlbnQgPT4KKCkgPT4KICBlbnQgPT4KICByZW5hbWVQYWNrYWdlcygpCiAgYSA9PgogIHZhbHVlID0+CiAgbGF5ZXIgPT4KKCkgPT4KICBsYXllciA9PgooKSA9PgogIGZuID0gZnVuY3Rpb24odikKKCkgPT4KICAubWFrZUdyb3VwID0gZnVuY3Rpb24oeyB0cmFuc2Zvcm0sIC4uLnByb3BzIH0gPSB7fSkKICBpZCA9PgooKSA9PgogIHh4KCkKICAoKSA9PgoodHJhbnNmb3JtKQogICh0YWcsIGF0dHIsIGNoaWxkcmVuID0gW10pID0+CiAgdmFsdWUgPT4KKCkgPT4KUmVjdApDaG9vc2VEb2N1bWVudChwcm9qZWN0LCBpKQpHZW5lcmF0ZVZvcm9ub2kgPSAoKSA9PgpSZWN0CiAgcCA9PgogIGUgPT4KKHsgbFNpdGUsIHJTaXRlLCAuLi5lZGdlIH0pID0+CiAgZSA9PgooeyBsU2l0ZSwgclNpdGUsIC4uLmVkZ2UgfSkgPT4KICBlID0+Cih7IHZhLCB2YiwgLi4uZWRnZSB9KSA9PgogIHYgPT4KICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KICBsID0+CiAgdCA9PgogIGwgPT4KICB0ID0+CiAgcCA9PgogIChhY2MsIHsgc2l0ZSwgaGFsZmVkZ2VzIH0pID0+Cih7IHNpdGUgfSkgPT4KUGFja2FnZUNoaWxkcmVuKGVsZW1lbnQsIGxheWVyKQooYywgaSkgPT4KKFtpLCBwXSkgPT4KKFtpLCBlXSkgPT4KRWxlbWVudENoaWxkcmVuKGxheWVyID0gJ3RQbGFjZScsIHJmbiA9IGVudCA9PiAKKGVudCkpCihbbmFtZSwgZWxlbWVudF0pID0+CkVsZW1lbnRHZW9tZXRyaWVzKGxheWVyID0gJ3RQbGFjZScsIHJmbiA9IGVudCA9PiAKKGVudCkpCiAgZW50ID0+CihbbmFtZSwgY2hpbGRyZW5dKSA9PgooW2ksIGVdKSA9PgooW25hbWUsIGxpbmVzXSkgPT4KICBwdHMgPT4KKFtuYW1lLCBsaW5lcywgcG9seWdvbnNdKSA9PgpOZXdQYXRoKHBhdGgpCk1ha2VGaXRBY3Rpb24gPSBpbmRleCA9PgogIGV2ZW50ID0+Clpvb21GYWN0b3IodmFsID0gY29uZmlnLgopClpvb21Mb2coZmFjdG9yKQpBZGp1c3Rab29tKGwgPSBjb25maWcuCikKQ3JlYXRlR3JibFNvY2tldCA9IChwb3J0ID0gJ3RudDEnKSA9PgpIYW5kbGVNZXNzYWdlKG1zZykKICBwb2ludFN0ciA9PgogIHNvY2tldEZuID0gKCkgPT4KICAuc2VuZCA9ICguLi5hcmdzKSA9PgpBdXRob3JpemF0aW9uRGlhbG9nID0gKHsgb25BdXRoLCAuLi5wcm9wcyB9KSA9PgogIG9uU3VibWl0OiAoKSA9PgogIG9uSW5wdXQ6IGUgPT4KICBvbklucHV0OiBlID0+CiAgb25DbGljazogZSA9PgogIGFyZyA9PgogIC5vbmxvYWQgPSAoKSA9PgogIHJlc3BvbnNlID0+CiAgZSA9PgogIHYgPT4KVGVzdEFyYzogKCkgPT4KKCkgPT4KKHB1c2gsIHN0b3ApID0+CigpID0+CihwdXNoLCBzdG9wKSA9PgogIHRhcmdldCA9PgogIChrZXksIG1vZGlmaWVycyA9IDApID0+CiAgLmZvY3VzU2VhcmNoID0gc3RhdGUgPT4KICBjaGlsZHJlbjogKCkgPT4KICBnZW9tZXRyaWVzOiAoKSA9PgogIHZhbHVlID0+CigpID0+CiAgdGVzdENvbXBvbmVudCA9IHByb3BzID0+CkZpbGUob2JqLCBpKQpGaWxlCkZpbGUucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKQooYSwgYikgPT4KKG9iaiwgaSkgPT4KKGFjYywgZmlsZSkgPT4KICBpID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdXBkYXRlSWZDaGFuZ2VkID0gKHRya2wsIG5ld1ZhbHVlLCBjYWxsYmFjaykgPT4KICAoZWxlbSwgaSkgPT4KICBjaGFuZ2VJbnB1dCA9IGUgPT4KICBwID0+CiAgYXJnID0+CkNvbnN1bWVyID0gcHJvcHMgPT4KKCkKICBsb2codHlwZSwgdGltZSwgbXNnKQpMb2dnZXIgPSBwcm9wcyA9PgooKQooW3R5cGUsIGQsIHQsIG1dLCBpKSA9PgpEdW1wZXIgPSBwcm9wcyA9PgogIHZhbHVlID0+Cihbaywgdl0sIGkpID0+CkNvbW1hbmRlciA9ICh7IG9uQ29tbWFuZCwgLi4ucHJvcHMgfSkgPT4KICBoYW5kbGVyID0gZSA9PgogIHRvZ2dsZSA9IHRya2wgPT4KTGF5ZXIgPSAoeyB0aXRsZSwgbmFtZSwgbGFiZWwsIGksIGNvbG9yLCBlbGVtZW50LCBjbGFzc05hbWUsIC4uLnByb3BzIH0pID0+CiAgc2V0VmlzaWJsZSA9IHZhbHVlID0+CiAgZSA9PgogIGUgPT4KICBsID0+CiAgbCA9PgogIChpdGVtLCB2YWx1ZSkgPT4KICBpdGVtID0+CiAgbCA9PgooW2wsIHN0YXRlXSkgPT4KICBlID0+CiAgb25Nb3VzZU1vdmU6IGUgPT4KICBvbk1vdXNlVXA6IGUgPT4KRG9jdW1lbnRMaXN0CiAgY29uc3RydWN0b3IoKQoocHVzaCwgc3RvcCkgPT4KICBhZGQobmFtZSwgY29tcG9uZW50KQogIGFkZEVudHJ5KFtuYW1lLCBjb21wb25lbnRdKQogIHJlbW92ZShuYW1lKQogIHVwZGF0ZSgpCiAgZm46IGUgPT4KICBmbjogKCkgPT4KICBvcGVuID0+CiAgcHJvcHMgPT4KICBwcm9wcyA9PgogIGUgPT4KICBpID0+CiAgaSA9PgooeyBjb29yZCB9KSA9PgogIHNpZGUgPT4KICBjcmVhdGU6IChwcm9qZWN0LCBwcm9wcyA9IHt9KSA9PgogIGEgPT4KICBlID0+CiAgZSA9PgogIG5hbWUgPT4KICBlID0+CiAgbWFrZUxheWVyTmFtZShuYW1lLCBzaWRlKQogIGZuOiAoKSA9PgogIG9uQ2hhbmdlKGV2ZW50KQogIHByb3BzID0+CiAgcHJvcHMgPT4KICBwcm9wcyA9PgooZSwgcCwgaSkgPT4KICBtYWtlU29ydENvbXBhcmU6IGtleSA9PgogIGZ1bmN0aW9uKGEsIGIpCiAgZnVuY3Rpb24oYSwgYikKICBvbkNvbW1hbmQ6IGNtZFN0ciA9PgogIGhhbmRsZUNoYW5nZTogZSA9PgogIGV2ZW50ID0+CiAgZSA9PgpNb3ZlRXZlbnQoZXZlbnQsIHByZXZFdmVudCkKV2Fsa1VwKGUpCiAgZSA9PgogIHogPT4KICBwID0+CiAgZSA9PgogIGUgPT4KICBlID0+CiAgdiA9PgogIGwgPT4KICBlID0+CiAgKCkgPT4KICAoZSwgZGVwdGgpID0+CiAgY2xhc3NlcyA9PgogIGUgPT4KICBlID0+CiAgKGEsIGIpID0+CiAgKGEsIGIpID0+Ck5vZGUKICBlID0+CiAgKHAsIGQsIHNldCwgc3RvcCkgPT4KICBlID0+CiAgZSA9PgpUb3VjaEV2ZW50KGV2ZW50KQogIGUgPT4KKHAsIGkpID0+CihhLCBiKSA9PgogIHNpemUgPT4KICBib3JkZXIgPT4KICByID0+CiAgbW9kKG4sIG0pCigpID0+CiAgKHBvcywgbGFzdCwgZmlyc3QpID0+CiAgY2FuY2VsKCkKICAub25jb250ZXh0bWVudSA9IGZ1bmN0aW9uKGUpCiAgLnByb2Nlc3NFdmVudHMgPSBmdW5jdGlvbiBldmVudExvb3AoKQogIGV2ZW50ID0+CiAgZSA9PgogIG9uUnVudGltZUluaXRpYWxpemVkOiAoKSA9PgogIHByaW50OiB0eHQgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								754,
								781
							],
							[
								952,
								998
							],
							[
								1565,
								1595
							],
							[
								1651,
								1684
							],
							[
								1692,
								1693
							],
							[
								1707,
								1732
							],
							[
								1927,
								1940
							],
							[
								1976,
								1990
							],
							[
								2083,
								2099
							],
							[
								2344,
								2356
							],
							[
								2453,
								2475
							],
							[
								2776,
								2786
							],
							[
								3030,
								3044
							],
							[
								3858,
								3897
							],
							[
								4069,
								4089
							],
							[
								5552,
								5570
							],
							[
								5641,
								5669
							],
							[
								5873,
								5884
							],
							[
								6029,
								6045
							],
							[
								6222,
								6241
							],
							[
								6327,
								6369
							],
							[
								7366,
								7372
							],
							[
								8114,
								8129
							],
							[
								8297,
								8308
							],
							[
								11536,
								11552
							],
							[
								11783,
								11800
							],
							[
								11852,
								11866
							],
							[
								12273,
								12293
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function StartREPL(prefix = path.",
							"(",
							"[0], '.js'), suffix = '')",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" (level, ...args) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get socklist()",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAAGAIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					15,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/grammar-geda-netlist.js",
						"symkeys":
						[
							[
								118,
								145
							],
							[
								156,
								170
							],
							[
								357,
								387
							],
							[
								463,
								486
							],
							[
								555,
								579
							],
							[
								640,
								668
							],
							[
								750,
								772
							],
							[
								842,
								869
							],
							[
								941,
								962
							],
							[
								1028,
								1051
							],
							[
								1116,
								1138
							],
							[
								1203,
								1227
							],
							[
								1287,
								1311
							],
							[
								1371,
								1395
							],
							[
								1455,
								1479
							],
							[
								1539,
								1569
							],
							[
								1656,
								1676
							]
						],
						"symlist":
						[
							"function wrap(parser, name)",
							" (str, pos) =>",
							"function geda_netlist(...args)",
							"function value(...args)",
							"function values(...args)",
							"function components(...args)",
							"function nets(...args)",
							"function component(...args)",
							"function net(...args)",
							"function DELIM(...args)",
							"function TEXT(...args)",
							"function LBRACK(...args)",
							"function RBRACK(...args)",
							"function LPAREN(...args)",
							"function RPAREN(...args)",
							"function LINE_COMMENT(...args)",
							"function NL(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAgAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpClN0YXJ0UkVQTChwcmVmaXggPSBwYXRoLgooClswXSwgJy5qcycpLCBzdWZmaXggPSAnJykKICAuaGVscCA9ICgpID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiguLi5hcmdzKSA9PgogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgLmNyZWF0ZVdTID0gKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pID0+CiAgKGxldmVsLCAuLi5hcmdzKSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kTWVzc2FnZSA9IGZ1bmN0aW9uKG1zZykKICBvbkNsb3NlKHdzKQogIG9uSHR0cChyZXEsIHJzcCkKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICAoKSA9PgogIChkYmcsIHNvY2spID0+CigpID0+CiAgb25GZChmZCwgcmQsIHdyKQogIGdldCBjb25uZWN0aW9ucygpCiAgZ2V0IHNvY2tsaXN0KCkKICBxdWl0KHdoeSkAAAAAAAAAACgBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					16,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/list-proxies.js",
						"symkeys":
						[
							[
								985,
								1015
							],
							[
								1132,
								1152
							],
							[
								1298,
								1304
							],
							[
								1372,
								1378
							],
							[
								1420,
								1427
							],
							[
								1467,
								1473
							],
							[
								1499,
								1547
							],
							[
								1552,
								1553
							],
							[
								1716,
								1765
							],
							[
								1890,
								1910
							],
							[
								2114,
								2126
							],
							[
								2826,
								2845
							],
							[
								3370,
								3377
							],
							[
								3598,
								3629
							],
							[
								3660,
								3692
							],
							[
								3862,
								3894
							],
							[
								3982,
								4014
							],
							[
								4053,
								4081
							],
							[
								4167,
								4187
							],
							[
								4399,
								4405
							],
							[
								4471,
								4477
							],
							[
								4519,
								4526
							],
							[
								4566,
								4572
							],
							[
								4598,
								4646
							],
							[
								4651,
								4652
							],
							[
								4917,
								4928
							],
							[
								4988,
								5016
							],
							[
								5755,
								5776
							],
							[
								6397,
								6418
							],
							[
								6459,
								6482
							],
							[
								6608,
								6629
							],
							[
								6806,
								6822
							],
							[
								7090,
								7096
							],
							[
								7169,
								7178
							],
							[
								7277,
								7283
							],
							[
								8360,
								8371
							],
							[
								9149,
								9225
							],
							[
								9422,
								9431
							],
							[
								9438,
								9442
							],
							[
								9475,
								9483
							],
							[
								9490,
								9494
							],
							[
								9576,
								9586
							],
							[
								9599,
								9603
							],
							[
								9787,
								9793
							]
						],
						"symlist":
						[
							"function TCPSocket(host, port)",
							"(resolve, reject) =>",
							" () =>",
							" () =>",
							" err =>",
							" () =>",
							" function finish(msg, start = -1, end = Date.",
							")",
							"function HTTPRequest(url, proxy_host, proxy_port)",
							"(resolve, reject) =>",
							" res =>",
							"function Proxy(obj)",
							"prop =>",
							".prototype.valueOf = function()",
							".prototype.toSource = function()",
							".prototype.toString = function()",
							".prototype.check = function(url)",
							".prototype.ping = function()",
							"(resolve, reject) =>",
							" () =>",
							" () =>",
							" err =>",
							" () =>",
							" function finish(msg, start = -1, end = Date.",
							")",
							" function()",
							"async function main(...args)",
							"async (push, stop) =>",
							"async (push, stop) =>",
							"async (err, proxies) =>",
							"async (push, stop) =>",
							"async proxies =>",
							"err =>",
							" error =>",
							" () =>",
							"async () =>",
							"async function writeResults(results, format = 'txt', outputName = 'proxies')",
							"txt: r =>",
							"p =>",
							"sh: r =>",
							"p =>",
							"json: r =>",
							"p =>",
							"err =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAoAQAAICB3cmFwKHBhcnNlciwgbmFtZSkKICAoc3RyLCBwb3MpID0+CiAgZ2VkYV9uZXRsaXN0KC4uLmFyZ3MpCiAgdmFsdWUoLi4uYXJncykKICB2YWx1ZXMoLi4uYXJncykKICBjb21wb25lbnRzKC4uLmFyZ3MpCiAgbmV0cyguLi5hcmdzKQogIGNvbXBvbmVudCguLi5hcmdzKQogIG5ldCguLi5hcmdzKQpERUxJTSguLi5hcmdzKQpURVhUKC4uLmFyZ3MpCkxCUkFDSyguLi5hcmdzKQpSQlJBQ0soLi4uYXJncykKTFBBUkVOKC4uLmFyZ3MpClJQQVJFTiguLi5hcmdzKQpMSU5FX0NPTU1FTlQoLi4uYXJncykKTkwoLi4uYXJncykAAAAAAAAAAOcCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					17,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/plot-cv.js",
						"symkeys":
						[
							[
								297,
								315
							],
							[
								397,
								417
							],
							[
								495,
								522
							],
							[
								580,
								595
							],
							[
								665,
								690
							],
							[
								774,
								832
							],
							[
								1851,
								1855
							],
							[
								1882,
								1886
							]
						],
						"symlist":
						[
							"function connect()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							".process = async function process(contours, hier, ...args)",
							"c =>",
							"c =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADnAgAAVENQU29ja2V0KGhvc3QsIHBvcnQpCihyZXNvbHZlLCByZWplY3QpID0+CiAgKCkgPT4KICAoKSA9PgogIGVyciA9PgogICgpID0+CiAgZmluaXNoKG1zZywgc3RhcnQgPSAtMSwgZW5kID0gRGF0ZS4KKQpIVFRQUmVxdWVzdCh1cmwsIHByb3h5X2hvc3QsIHByb3h5X3BvcnQpCihyZXNvbHZlLCByZWplY3QpID0+CiAgcmVzID0+ClByb3h5KG9iaikKICBwcm9wID0+CiAgLnByb3RvdHlwZS52YWx1ZU9mID0gZnVuY3Rpb24oKQogIC5wcm90b3R5cGUudG9Tb3VyY2UgPSBmdW5jdGlvbigpCiAgLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkKICAucHJvdG90eXBlLmNoZWNrID0gZnVuY3Rpb24odXJsKQogIC5wcm90b3R5cGUucGluZyA9IGZ1bmN0aW9uKCkKKHJlc29sdmUsIHJlamVjdCkgPT4KICAoKSA9PgogICgpID0+CiAgZXJyID0+CiAgKCkgPT4KICBmaW5pc2gobXNnLCBzdGFydCA9IC0xLCBlbmQgPSBEYXRlLgopCiAgZnVuY3Rpb24oKQogIG1haW4oLi4uYXJncykKKHB1c2gsIHN0b3ApID0+CihwdXNoLCBzdG9wKSA9PgooZXJyLCBwcm94aWVzKSA9PgoocHVzaCwgc3RvcCkgPT4KICBwcm94aWVzID0+CiAgZXJyID0+CiAgZXJyb3IgPT4KICAoKSA9PgooKSA9PgogIHdyaXRlUmVzdWx0cyhyZXN1bHRzLCBmb3JtYXQgPSAndHh0Jywgb3V0cHV0TmFtZSA9ICdwcm94aWVzJykKICB0eHQ6IHIgPT4KICBwID0+CiAgc2g6IHIgPT4KICBwID0+CiAganNvbjogciA9PgogIHAgPT4KICBlcnIgPT4AAAAAAAAAALMAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					18,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								194,
								217
							],
							[
								310,
								330
							],
							[
								451,
								478
							],
							[
								524,
								539
							],
							[
								604,
								629
							],
							[
								676,
								699
							],
							[
								753,
								772
							],
							[
								989,
								1007
							],
							[
								1136,
								1154
							],
							[
								1225,
								1231
							],
							[
								1619,
								1625
							],
							[
								1739,
								1754
							],
							[
								1806,
								1822
							],
							[
								1894,
								1910
							],
							[
								2049,
								2067
							],
							[
								2423,
								2445
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACzAAAAICBjb25uZWN0KCkKICBvbkNvbm5lY3Q6IHNvY2tldCA9PgogIG9uTWVzc2FnZTogKHNvY2tldCwgbXNnKSA9PgogIG9uQ2xvc2U6IHdoeSA9PgogIG9uUG9uZzogKHNvY2tldCwgZGF0YSkgPT4KICAucHJvY2VzcyA9IGZ1bmN0aW9uIHByb2Nlc3MoY29udG91cnMsIGhpZXIsIC4uLmFyZ3MpCiAgYyA9PgogIGMgPT4AAAAAAAAAACIBAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					19,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-net.js",
						"symkeys":
						[
							[
								427,
								449
							]
						],
						"symlist":
						[
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAiAQAAQ3JlYXRlU2VydmVyKCkKICBvbkNvbm5lY3Q6IHNvY2tldCA9PgogIG9uTWVzc2FnZTogKHNvY2tldCwgbXNnKSA9PgogIG9uQ2xvc2U6IHdoeSA9PgogIG9uUG9uZzogKHNvY2tldCwgZGF0YSkgPT4KQ3JlYXRlQ2xpZW50KCkKKGxldmVsLCAuLi5hcmdzKSA9PgogIG9uTWVzc2FnZSh3cywgbXNnKQogIG9uQ29ubmVjdCh3cywgcmVxKQogICgpID0+CiAgKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAA8AAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					20,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-rpc.js",
						"symkeys":
						[
							[
								693,
								720
							],
							[
								891,
								937
							],
							[
								1504,
								1534
							],
							[
								1590,
								1612
							],
							[
								1897,
								1907
							],
							[
								2151,
								2165
							],
							[
								3077,
								3090
							],
							[
								3126,
								3140
							],
							[
								3240,
								3256
							],
							[
								3788,
								3827
							],
							[
								3999,
								4019
							],
							[
								4424,
								4456
							],
							[
								4649,
								4683
							],
							[
								4767,
								4801
							],
							[
								5136,
								5143
							],
							[
								5212,
								5220
							],
							[
								5276,
								5283
							],
							[
								5387,
								5402
							],
							[
								5436,
								5445
							],
							[
								5493,
								5513
							],
							[
								6058,
								6076
							],
							[
								6215,
								6226
							],
							[
								6320,
								6336
							],
							[
								6503,
								6522
							],
							[
								6630,
								6646
							],
							[
								6880,
								6897
							],
							[
								7402,
								7422
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							".createWS = (url, callbacks, listen) =>",
							" (level, ...args) =>",
							" function proxy(req, res)",
							" function* config(req, res)",
							" function* files(req, resp)",
							"name =>",
							"entry =>",
							"file =>",
							"([file, st]) =>",
							"(a, b) =>",
							"(acc, [file, st]) =>",
							"onConnect(ws, req)",
							"onClose(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							"onFd(fd, rd, wr)",
							"get connections()",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAADzAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					21,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-net.js",
						"symkeys":
						[
							[
								427,
								449
							]
						],
						"symlist":
						[
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADzAQAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpCiAgbWFpbiguLi5hcmdzKQogIChhLCB2KSA9PgogICh2LCBwdiwgbykgPT4KICAuaGVscCA9ICgpID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiAgLmNyZWF0ZVdTID0gKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pID0+CiAgKGxldmVsLCAuLi5hcmdzKSA9PgogIHByb3h5KHJlcSwgcmVzKQogIGNvbmZpZyhyZXEsIHJlcykKICBmaWxlcyhyZXEsIHJlc3ApCiAgbmFtZSA9PgogIGVudHJ5ID0+CiAgZmlsZSA9PgooW2ZpbGUsIHN0XSkgPT4KKGEsIGIpID0+CihhY2MsIFtmaWxlLCBzdF0pID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgb25DbG9zZSh3cykKICBvbkh0dHAocmVxLCByc3ApCiAgb25NZXNzYWdlKHdzLCBkYXRhKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXQgY29ubmVjdGlvbnMoKQogIHF1aXQod2h5KQAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					22,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-cv.js",
						"symkeys":
						[
							[
								1003,
								1033
							],
							[
								1113,
								1143
							],
							[
								1209,
								1220
							],
							[
								1362,
								1383
							],
							[
								1599,
								1610
							],
							[
								1634,
								1645
							],
							[
								1726,
								1748
							],
							[
								2416,
								2421
							],
							[
								2510,
								2517
							],
							[
								2759,
								2785
							],
							[
								3840,
								3844
							],
							[
								3938,
								3942
							],
							[
								7366,
								7370
							]
						],
						"symlist":
						[
							"function WriteImage(name, mat)",
							"function SaveConfig(configObj)",
							"([k, v]) =>",
							"function LoadConfig()",
							"([k, v]) =>",
							"([k, v]) =>",
							"function main(...args)",
							"() =>",
							"name =>",
							" function toHex(n, b = 2)",
							"k =>",
							"k =>",
							"p =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAACjAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					23,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-opencv.js",
						"symkeys":
						[
							[
								672,
								694
							],
							[
								1527,
								1557
							],
							[
								1647,
								1677
							],
							[
								1743,
								1754
							],
							[
								2008,
								2029
							],
							[
								2203,
								2214
							],
							[
								2238,
								2249
							],
							[
								2359,
								2383
							],
							[
								2499,
								2521
							],
							[
								2615,
								2645
							],
							[
								2679,
								2707
							],
							[
								2867,
								2876
							],
							[
								2925,
								2933
							],
							[
								2981,
								2987
							],
							[
								3118,
								3125
							],
							[
								3203,
								3225
							],
							[
								5011,
								5035
							],
							[
								5514,
								5521
							],
							[
								7083,
								7120
							],
							[
								7192,
								7226
							],
							[
								7380,
								7409
							],
							[
								7513,
								7547
							],
							[
								7625,
								7660
							],
							[
								7953,
								7993
							],
							[
								8043,
								8085
							],
							[
								8534,
								8570
							],
							[
								9527,
								9531
							],
							[
								9580,
								9595
							],
							[
								9669,
								9673
							],
							[
								9742,
								9751
							],
							[
								9904,
								9923
							],
							[
								9984,
								10000
							],
							[
								10067,
								10071
							],
							[
								10105,
								10109
							],
							[
								10142,
								10151
							],
							[
								10184,
								10192
							],
							[
								10238,
								10242
							],
							[
								10275,
								10279
							],
							[
								10312,
								10321
							],
							[
								10354,
								10362
							],
							[
								10485,
								10503
							],
							[
								11554,
								11591
							],
							[
								12540,
								12548
							],
							[
								13222,
								13247
							],
							[
								13845,
								13859
							],
							[
								14243,
								14268
							],
							[
								14605,
								14621
							],
							[
								14733,
								14745
							],
							[
								14761,
								14776
							],
							[
								14813,
								14827
							]
						],
						"symlist":
						[
							"function GLFW(...args)",
							"function WriteImage(name, mat)",
							"function SaveConfig(configObj)",
							"([k, v]) =>",
							"function LoadConfig()",
							"([k, v]) =>",
							"([k, v]) =>",
							"function InspectMat(mat)",
							"function ToHex(number)",
							"function Accumulator(callback)",
							"self = function(name, value)",
							"entries()",
							"values()",
							"keys()",
							"clear()",
							"function main(...args)",
							" (event, x, y, flags) =>",
							"file =>",
							" function AcquireFrame(src, dst)",
							" function Grayscale(src, dst)",
							" function Blur(src, dst)",
							" function Threshold(src, dst)",
							" function Morphology(src, dst)",
							" function Skeletonization(src, dst)",
							" function PixelNeighborhood(src, dst)",
							" function HoughLinesP(src, dst)",
							"l =>",
							"GetAngle = l =>",
							"l =>",
							"(a, b) =>",
							"isHorizontal = l =>",
							"firstLast = a =>",
							"l =>",
							"l =>",
							"(a, b) =>",
							"([l]) =>",
							"l =>",
							"l =>",
							"(a, b) =>",
							"([l]) =>",
							"angle2Color = a =>",
							" function HoughCircles(src, dst)",
							" i =>",
							" function RedrawStatus()",
							"(name, idx) =>",
							" function RedrawWindow()",
							"(name, param) =>",
							"processor =>",
							".before = () =>",
							".after = () =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACjAAAAV3JpdGVJbWFnZShuYW1lLCBtYXQpClNhdmVDb25maWcoY29uZmlnT2JqKQooW2ssIHZdKSA9PgpMb2FkQ29uZmlnKCkKKFtrLCB2XSkgPT4KKFtrLCB2XSkgPT4KICBtYWluKC4uLmFyZ3MpCigpID0+CiAgbmFtZSA9PgogIHRvSGV4KG4sIGIgPSAyKQogIGsgPT4KICBrID0+CiAgcCA9PgAAAAAAAAAAAAMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					24,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-cv.js",
						"symkeys":
						[
							[
								1003,
								1033
							],
							[
								1113,
								1143
							],
							[
								1209,
								1220
							],
							[
								1362,
								1383
							],
							[
								1599,
								1610
							],
							[
								1634,
								1645
							],
							[
								1726,
								1748
							],
							[
								2416,
								2421
							],
							[
								2510,
								2517
							],
							[
								2759,
								2785
							],
							[
								3840,
								3844
							],
							[
								3938,
								3942
							],
							[
								7366,
								7370
							]
						],
						"symlist":
						[
							"function WriteImage(name, mat)",
							"function SaveConfig(configObj)",
							"([k, v]) =>",
							"function LoadConfig()",
							"([k, v]) =>",
							"([k, v]) =>",
							"function main(...args)",
							"() =>",
							"name =>",
							" function toHex(n, b = 2)",
							"k =>",
							"k =>",
							"p =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAR0xGVyguLi5hcmdzKQpXcml0ZUltYWdlKG5hbWUsIG1hdCkKU2F2ZUNvbmZpZyhjb25maWdPYmopCihbaywgdl0pID0+CkxvYWRDb25maWcoKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgpJbnNwZWN0TWF0KG1hdCkKVG9IZXgobnVtYmVyKQpBY2N1bXVsYXRvcihjYWxsYmFjaykKICBzZWxmID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpCiAgZW50cmllcygpCiAgdmFsdWVzKCkKICBrZXlzKCkKICBjbGVhcigpCiAgbWFpbiguLi5hcmdzKQogIChldmVudCwgeCwgeSwgZmxhZ3MpID0+CiAgZmlsZSA9PgpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKVGhyZXNob2xkKHNyYywgZHN0KQpNb3JwaG9sb2d5KHNyYywgZHN0KQpTa2VsZXRvbml6YXRpb24oc3JjLCBkc3QpClBpeGVsTmVpZ2hib3Job29kKHNyYywgZHN0KQpIb3VnaExpbmVzUChzcmMsIGRzdCkKICBsID0+CkdldEFuZ2xlID0gbCA9PgogIGwgPT4KKGEsIGIpID0+CiAgaXNIb3Jpem9udGFsID0gbCA9PgogIGZpcnN0TGFzdCA9IGEgPT4KICBsID0+CiAgbCA9PgooYSwgYikgPT4KKFtsXSkgPT4KICBsID0+CiAgbCA9PgooYSwgYikgPT4KKFtsXSkgPT4KICBhbmdsZTJDb2xvciA9IGEgPT4KSG91Z2hDaXJjbGVzKHNyYywgZHN0KQogIGkgPT4KUmVkcmF3U3RhdHVzKCkKKG5hbWUsIGlkeCkgPT4KUmVkcmF3V2luZG93KCkKKG5hbWUsIHBhcmFtKSA9PgogIHByb2Nlc3NvciA9PgogIC5iZWZvcmUgPSAoKSA9PgogIC5hZnRlciA9ICgpID0+AAAAAAAAAACjAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					25,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACjAAAAV3JpdGVJbWFnZShuYW1lLCBtYXQpClNhdmVDb25maWcoY29uZmlnT2JqKQooW2ssIHZdKSA9PgpMb2FkQ29uZmlnKCkKKFtrLCB2XSkgPT4KKFtrLCB2XSkgPT4KICBtYWluKC4uLmFyZ3MpCigpID0+CiAgbmFtZSA9PgogIHRvSGV4KG4sIGIgPSAyKQogIGsgPT4KICBrID0+CiAgcCA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					26,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/config.js",
						"symkeys":
						[
							[
								124,
								129
							],
							[
								176,
								207
							],
							[
								273,
								284
							],
							[
								543,
								565
							],
							[
								742,
								753
							],
							[
								777,
								788
							]
						],
						"symlist":
						[
							"() =>",
							" function SaveConfig(configObj)",
							"([k, v]) =>",
							" function LoadConfig()",
							"([k, v]) =>",
							"([k, v]) =>"
						]
					},
					"AQAAAAAAAAAAAAAATAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					27,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-cv.js",
						"symkeys":
						[
							[
								1003,
								1033
							],
							[
								1113,
								1143
							],
							[
								1209,
								1220
							],
							[
								1362,
								1383
							],
							[
								1599,
								1610
							],
							[
								1634,
								1645
							],
							[
								1726,
								1748
							],
							[
								2416,
								2421
							],
							[
								2510,
								2517
							],
							[
								2759,
								2785
							],
							[
								3840,
								3844
							],
							[
								3938,
								3942
							],
							[
								7366,
								7370
							]
						],
						"symlist":
						[
							"function WriteImage(name, mat)",
							"function SaveConfig(configObj)",
							"([k, v]) =>",
							"function LoadConfig()",
							"([k, v]) =>",
							"([k, v]) =>",
							"function main(...args)",
							"() =>",
							"name =>",
							" function toHex(n, b = 2)",
							"k =>",
							"k =>",
							"p =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABMAAAAKCkgPT4KU2F2ZUNvbmZpZyhjb25maWdPYmopCihbaywgdl0pID0+CkxvYWRDb25maWcoKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgAAAAAAAAAAowAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					28,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/config.js",
						"symkeys":
						[
							[
								124,
								129
							],
							[
								176,
								207
							],
							[
								273,
								284
							],
							[
								543,
								565
							],
							[
								742,
								753
							],
							[
								777,
								788
							]
						],
						"symlist":
						[
							"() =>",
							" function SaveConfig(configObj)",
							"([k, v]) =>",
							" function LoadConfig()",
							"([k, v]) =>",
							"([k, v]) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACjAAAAV3JpdGVJbWFnZShuYW1lLCBtYXQpClNhdmVDb25maWcoY29uZmlnT2JqKQooW2ssIHZdKSA9PgpMb2FkQ29uZmlnKCkKKFtrLCB2XSkgPT4KKFtrLCB2XSkgPT4KICBtYWluKC4uLmFyZ3MpCigpID0+CiAgbmFtZSA9PgogIHRvSGV4KG4sIGIgPSAyKQogIGsgPT4KICBrID0+CiAgcCA9PgAAAAAAAAAATAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					29,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								754,
								781
							],
							[
								952,
								998
							],
							[
								1565,
								1595
							],
							[
								1651,
								1684
							],
							[
								1692,
								1693
							],
							[
								1707,
								1732
							],
							[
								1927,
								1940
							],
							[
								1976,
								1990
							],
							[
								2083,
								2099
							],
							[
								2344,
								2356
							],
							[
								2453,
								2475
							],
							[
								2776,
								2786
							],
							[
								3030,
								3044
							],
							[
								3858,
								3897
							],
							[
								4069,
								4089
							],
							[
								5552,
								5570
							],
							[
								5641,
								5669
							],
							[
								5873,
								5884
							],
							[
								6029,
								6045
							],
							[
								6222,
								6241
							],
							[
								6327,
								6369
							],
							[
								7366,
								7372
							],
							[
								8114,
								8129
							],
							[
								8297,
								8308
							],
							[
								11536,
								11552
							],
							[
								11783,
								11800
							],
							[
								11852,
								11866
							],
							[
								12273,
								12293
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function StartREPL(prefix = path.",
							"(",
							"[0], '.js'), suffix = '')",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" (level, ...args) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get socklist()",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABMAAAAKCkgPT4KU2F2ZUNvbmZpZyhjb25maWdPYmopCihbaywgdl0pID0+CkxvYWRDb25maWcoKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgAAAAAAAAAAGAIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					30,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/config.js",
						"symkeys":
						[
							[
								124,
								129
							],
							[
								170,
								200
							],
							[
								266,
								277
							],
							[
								549,
								571
							],
							[
								748,
								759
							],
							[
								783,
								794
							]
						],
						"symlist":
						[
							"() =>",
							"function SaveConfig(configObj)",
							"([k, v]) =>",
							" function LoadConfig()",
							"([k, v]) =>",
							"([k, v]) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAgAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpClN0YXJ0UkVQTChwcmVmaXggPSBwYXRoLgooClswXSwgJy5qcycpLCBzdWZmaXggPSAnJykKICAuaGVscCA9ICgpID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiguLi5hcmdzKSA9PgogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgLmNyZWF0ZVdTID0gKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pID0+CiAgKGxldmVsLCAuLi5hcmdzKSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kTWVzc2FnZSA9IGZ1bmN0aW9uKG1zZykKICBvbkNsb3NlKHdzKQogIG9uSHR0cChyZXEsIHJzcCkKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICAoKSA9PgogIChkYmcsIHNvY2spID0+CigpID0+CiAgb25GZChmZCwgcmQsIHdyKQogIGdldCBjb25uZWN0aW9ucygpCiAgZ2V0IHNvY2tsaXN0KCkKICBxdWl0KHdoeSkAAAAAAAAAAEwAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					31,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABMAAAAKCkgPT4KU2F2ZUNvbmZpZyhjb25maWdPYmopCihbaywgdl0pID0+CkxvYWRDb25maWcoKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					32,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/config.js",
						"symkeys":
						[
							[
								145,
								150
							],
							[
								191,
								221
							],
							[
								287,
								298
							],
							[
								570,
								592
							],
							[
								769,
								780
							],
							[
								804,
								815
							]
						],
						"symlist":
						[
							"() =>",
							"function SaveConfig(configObj)",
							"([k, v]) =>",
							" function LoadConfig()",
							"([k, v]) =>",
							"([k, v]) =>"
						]
					},
					"AQAAAAAAAAAAAAAATAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					33,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/config.js",
						"symkeys":
						[
							[
								86,
								91
							],
							[
								132,
								162
							],
							[
								228,
								239
							],
							[
								511,
								533
							],
							[
								710,
								721
							],
							[
								745,
								756
							]
						],
						"symlist":
						[
							"() =>",
							"function SaveConfig(configObj)",
							"([k, v]) =>",
							" function LoadConfig()",
							"([k, v]) =>",
							"([k, v]) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABMAAAAKCkgPT4KU2F2ZUNvbmZpZyhjb25maWdPYmopCihbaywgdl0pID0+CkxvYWRDb25maWcoKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgAAAAAAAAAATAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					34,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABMAAAAKCkgPT4KU2F2ZUNvbmZpZyhjb25maWdPYmopCihbaywgdl0pID0+CkxvYWRDb25maWcoKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					35,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-cv.js",
						"symkeys":
						[
							[
								1003,
								1033
							],
							[
								1113,
								1143
							],
							[
								1209,
								1220
							],
							[
								1362,
								1383
							],
							[
								1599,
								1610
							],
							[
								1634,
								1645
							],
							[
								1726,
								1748
							],
							[
								2416,
								2421
							],
							[
								2510,
								2517
							],
							[
								2759,
								2785
							],
							[
								3840,
								3844
							],
							[
								3938,
								3942
							],
							[
								7366,
								7370
							]
						],
						"symlist":
						[
							"function WriteImage(name, mat)",
							"function SaveConfig(configObj)",
							"([k, v]) =>",
							"function LoadConfig()",
							"([k, v]) =>",
							"([k, v]) =>",
							"function main(...args)",
							"() =>",
							"name =>",
							" function toHex(n, b = 2)",
							"k =>",
							"k =>",
							"p =>"
						]
					},
					"AQAAAAAAAAAAAAAAowAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					36,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/config.js",
						"symkeys":
						[
							[
								86,
								91
							],
							[
								132,
								162
							],
							[
								228,
								239
							],
							[
								511,
								533
							],
							[
								710,
								721
							],
							[
								745,
								756
							]
						],
						"symlist":
						[
							"() =>",
							"function SaveConfig(configObj)",
							"([k, v]) =>",
							" function LoadConfig()",
							"([k, v]) =>",
							"([k, v]) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACjAAAAV3JpdGVJbWFnZShuYW1lLCBtYXQpClNhdmVDb25maWcoY29uZmlnT2JqKQooW2ssIHZdKSA9PgpMb2FkQ29uZmlnKCkKKFtrLCB2XSkgPT4KKFtrLCB2XSkgPT4KICBtYWluKC4uLmFyZ3MpCigpID0+CiAgbmFtZSA9PgogIHRvSGV4KG4sIGIgPSAyKQogIGsgPT4KICBrID0+CiAgcCA9PgAAAAAAAAAATAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					37,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAABMAAAAKCkgPT4KU2F2ZUNvbmZpZyhjb25maWdPYmopCihbaywgdl0pID0+CkxvYWRDb25maWcoKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					38,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					39,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/config.js",
						"symkeys":
						[
							[
								86,
								91
							],
							[
								132,
								162
							],
							[
								228,
								239
							],
							[
								505,
								526
							],
							[
								742,
								753
							],
							[
								777,
								788
							]
						],
						"symlist":
						[
							"() =>",
							"function SaveConfig(configObj)",
							"([k, v]) =>",
							"function LoadConfig()",
							"([k, v]) =>",
							"([k, v]) =>"
						]
					},
					"AQAAAAAAAAAAAAAATAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					40,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/config.js",
						"symkeys":
						[
							[
								86,
								91
							],
							[
								132,
								162
							],
							[
								228,
								239
							],
							[
								497,
								518
							],
							[
								726,
								737
							],
							[
								761,
								772
							]
						],
						"symlist":
						[
							"() =>",
							"function SaveConfig(configObj)",
							"([k, v]) =>",
							"function LoadConfig()",
							"([k, v]) =>",
							"([k, v]) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABMAAAAKCkgPT4KU2F2ZUNvbmZpZyhjb25maWdPYmopCihbaywgdl0pID0+CkxvYWRDb25maWcoKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgAAAAAAAAAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEwAAAAoKSA9PgpTYXZlQ29uZmlnKGNvbmZpZ09iaikKKFtrLCB2XSkgPT4KTG9hZENvbmZpZygpCihbaywgdl0pID0+Cihbaywgdl0pID0+AAAAAAAAAABMAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					41,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABMAAAAKCkgPT4KU2F2ZUNvbmZpZyhjb25maWdPYmopCihbaywgdl0pID0+CkxvYWRDb25maWcoKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					42,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					43,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					44,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					45,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					46,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					47,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					48,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					49,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					50,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					51,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					52,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					53,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					54,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					55,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					56,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					57,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					58,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					59,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/config.js",
						"symkeys":
						[
							[
								86,
								91
							],
							[
								132,
								162
							],
							[
								228,
								239
							],
							[
								497,
								518
							],
							[
								726,
								737
							],
							[
								761,
								772
							]
						],
						"symlist":
						[
							"() =>",
							"function SaveConfig(configObj)",
							"([k, v]) =>",
							"function LoadConfig()",
							"([k, v]) =>",
							"([k, v]) =>"
						]
					},
					"AQAAAAAAAAAAAAAATAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-cv.js",
						"symkeys":
						[
							[
								1003,
								1033
							],
							[
								1113,
								1143
							],
							[
								1209,
								1220
							],
							[
								1362,
								1383
							],
							[
								1599,
								1610
							],
							[
								1634,
								1645
							],
							[
								1726,
								1748
							],
							[
								2416,
								2421
							],
							[
								2510,
								2517
							],
							[
								2759,
								2785
							],
							[
								3840,
								3844
							],
							[
								3938,
								3942
							],
							[
								7366,
								7370
							]
						],
						"symlist":
						[
							"function WriteImage(name, mat)",
							"function SaveConfig(configObj)",
							"([k, v]) =>",
							"function LoadConfig()",
							"([k, v]) =>",
							"([k, v]) =>",
							"function main(...args)",
							"() =>",
							"name =>",
							" function toHex(n, b = 2)",
							"k =>",
							"k =>",
							"p =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABMAAAAKCkgPT4KU2F2ZUNvbmZpZyhjb25maWdPYmopCihbaywgdl0pID0+CkxvYWRDb25maWcoKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgAAAAAAAAAAowAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/plot-cv.js",
						"symkeys":
						[
							[
								297,
								315
							],
							[
								397,
								417
							],
							[
								495,
								522
							],
							[
								580,
								595
							],
							[
								665,
								690
							],
							[
								774,
								832
							],
							[
								1851,
								1855
							],
							[
								1882,
								1886
							]
						],
						"symlist":
						[
							"function connect()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							".process = async function process(contours, hier, ...args)",
							"c =>",
							"c =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACjAAAAV3JpdGVJbWFnZShuYW1lLCBtYXQpClNhdmVDb25maWcoY29uZmlnT2JqKQooW2ssIHZdKSA9PgpMb2FkQ29uZmlnKCkKKFtrLCB2XSkgPT4KKFtrLCB2XSkgPT4KICBtYWluKC4uLmFyZ3MpCigpID0+CiAgbmFtZSA9PgogIHRvSGV4KG4sIGIgPSAyKQogIGsgPT4KICBrID0+CiAgcCA9PgAAAAAAAAAAswAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/libraries.js",
						"symkeys":
						[
							[
								197,
								232
							],
							[
								697,
								710
							],
							[
								764,
								777
							],
							[
								854,
								882
							],
							[
								1066,
								1090
							]
						],
						"symlist":
						[
							"async function Search(q, languages)",
							" (v, p) =>",
							" (p, v) =>",
							"async function main(...args)",
							"add = (arr, ...items) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACzAAAAICBjb25uZWN0KCkKICBvbkNvbm5lY3Q6IHNvY2tldCA9PgogIG9uTWVzc2FnZTogKHNvY2tldCwgbXNnKSA9PgogIG9uQ2xvc2U6IHdoeSA9PgogIG9uUG9uZzogKHNvY2tldCwgZGF0YSkgPT4KICAucHJvY2VzcyA9IGZ1bmN0aW9uIHByb2Nlc3MoY29udG91cnMsIGhpZXIsIC4uLmFyZ3MpCiAgYyA9PgogIGMgPT4AAAAAAAAAAFcAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/grammar-geda-netlist.js",
						"symkeys":
						[
							[
								118,
								145
							],
							[
								156,
								170
							],
							[
								357,
								387
							],
							[
								463,
								486
							],
							[
								555,
								579
							],
							[
								640,
								668
							],
							[
								750,
								772
							],
							[
								842,
								869
							],
							[
								941,
								962
							],
							[
								1028,
								1051
							],
							[
								1116,
								1138
							],
							[
								1203,
								1227
							],
							[
								1287,
								1311
							],
							[
								1371,
								1395
							],
							[
								1455,
								1479
							],
							[
								1539,
								1569
							],
							[
								1656,
								1676
							]
						],
						"symlist":
						[
							"function wrap(parser, name)",
							" (str, pos) =>",
							"function geda_netlist(...args)",
							"function value(...args)",
							"function values(...args)",
							"function components(...args)",
							"function nets(...args)",
							"function component(...args)",
							"function net(...args)",
							"function DELIM(...args)",
							"function TEXT(...args)",
							"function LBRACK(...args)",
							"function RBRACK(...args)",
							"function LPAREN(...args)",
							"function RPAREN(...args)",
							"function LINE_COMMENT(...args)",
							"function NL(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABXAAAAU2VhcmNoKHEsIGxhbmd1YWdlcykKICAodiwgcCkgPT4KICAocCwgdikgPT4KICBtYWluKC4uLmFyZ3MpCiAgYWRkID0gKGFyciwgLi4uaXRlbXMpID0+AAAAAAAAAAAoAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								754,
								781
							],
							[
								952,
								998
							],
							[
								1565,
								1595
							],
							[
								1651,
								1684
							],
							[
								1692,
								1693
							],
							[
								1707,
								1732
							],
							[
								1927,
								1940
							],
							[
								1976,
								1990
							],
							[
								2083,
								2099
							],
							[
								2344,
								2356
							],
							[
								2453,
								2475
							],
							[
								2776,
								2786
							],
							[
								3030,
								3044
							],
							[
								3858,
								3897
							],
							[
								4069,
								4089
							],
							[
								5552,
								5570
							],
							[
								5641,
								5669
							],
							[
								5873,
								5884
							],
							[
								6029,
								6045
							],
							[
								6222,
								6241
							],
							[
								6327,
								6369
							],
							[
								7366,
								7372
							],
							[
								8114,
								8129
							],
							[
								8297,
								8308
							],
							[
								11536,
								11552
							],
							[
								11783,
								11800
							],
							[
								11852,
								11866
							],
							[
								12273,
								12293
							]
						],
						"symlist":
						[
							"function ReadJSON(filename)",
							"function WriteFile(name, data, verbose = true)",
							"function WriteJSON(name, data)",
							"function StartREPL(prefix = path.",
							"(",
							"[0], '.js'), suffix = '')",
							".help = () =>",
							".show = arg =>",
							".cleanup = () =>",
							"(...args) =>",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							".createWS = (url, callbacks, listen) =>",
							" (level, ...args) =>",
							"onConnect(ws, req)",
							".sendMessage = function(msg)",
							"onClose(ws)",
							"onHttp(req, rsp)",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							" () =>",
							" (dbg, sock) =>",
							"async () =>",
							"onFd(fd, rd, wr)",
							"get connections()",
							"get socklist()",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAoAQAAICB3cmFwKHBhcnNlciwgbmFtZSkKICAoc3RyLCBwb3MpID0+CiAgZ2VkYV9uZXRsaXN0KC4uLmFyZ3MpCiAgdmFsdWUoLi4uYXJncykKICB2YWx1ZXMoLi4uYXJncykKICBjb21wb25lbnRzKC4uLmFyZ3MpCiAgbmV0cyguLi5hcmdzKQogIGNvbXBvbmVudCguLi5hcmdzKQogIG5ldCguLi5hcmdzKQpERUxJTSguLi5hcmdzKQpURVhUKC4uLmFyZ3MpCkxCUkFDSyguLi5hcmdzKQpSQlJBQ0soLi4uYXJncykKTFBBUkVOKC4uLmFyZ3MpClJQQVJFTiguLi5hcmdzKQpMSU5FX0NPTU1FTlQoLi4uYXJncykKTkwoLi4uYXJncykAAAAAAAAAABgCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/main.js",
						"symkeys":
						[
							[
								8625,
								8630
							],
							[
								8812,
								8818
							],
							[
								8876,
								8881
							],
							[
								8934,
								8938
							],
							[
								9012,
								9016
							],
							[
								9038,
								9047
							],
							[
								9706,
								9725
							],
							[
								9846,
								9850
							],
							[
								10230,
								10254
							],
							[
								10295,
								10316
							],
							[
								10318,
								10323
							],
							[
								10331,
								10336
							],
							[
								10358,
								10393
							],
							[
								10507,
								10525
							],
							[
								10607,
								10612
							],
							[
								10804,
								10825
							],
							[
								10958,
								10976
							],
							[
								11655,
								11680
							],
							[
								11726,
								11744
							],
							[
								12720,
								12747
							],
							[
								13108,
								13133
							],
							[
								13492,
								13526
							],
							[
								14042,
								14074
							],
							[
								14249,
								14259
							],
							[
								14392,
								14402
							],
							[
								14525,
								14535
							],
							[
								14706,
								14730
							],
							[
								14789,
								14838
							],
							[
								15079,
								15101
							],
							[
								15108,
								15132
							],
							[
								15140,
								15169
							],
							[
								15754,
								15806
							],
							[
								16259,
								16263
							],
							[
								16290,
								16295
							],
							[
								16730,
								16816
							],
							[
								17014,
								17036
							],
							[
								17549,
								17581
							],
							[
								17909,
								17943
							],
							[
								18058,
								18063
							],
							[
								18088,
								18124
							],
							[
								18337,
								18362
							],
							[
								18553,
								18578
							],
							[
								18633,
								18637
							],
							[
								18692,
								18696
							],
							[
								19143,
								19160
							],
							[
								19354,
								19369
							],
							[
								19492,
								19509
							],
							[
								19561,
								19565
							],
							[
								19610,
								19614
							],
							[
								19645,
								19649
							],
							[
								19692,
								19697
							],
							[
								19784,
								19803
							],
							[
								20018,
								20053
							],
							[
								20091,
								20099
							],
							[
								20168,
								20172
							],
							[
								20735,
								20739
							],
							[
								20798,
								20802
							],
							[
								21388,
								21394
							],
							[
								21569,
								21573
							],
							[
								21594,
								21598
							],
							[
								21633,
								21637
							],
							[
								21902,
								21915
							],
							[
								22043,
								22047
							],
							[
								22248,
								22264
							],
							[
								22530,
								22535
							],
							[
								22648,
								22657
							],
							[
								22729,
								22738
							],
							[
								22815,
								22824
							],
							[
								23464,
								23486
							],
							[
								23663,
								23723
							],
							[
								23972,
								23992
							],
							[
								24003,
								24012
							],
							[
								24067,
								24079
							],
							[
								24125,
								24136
							],
							[
								24225,
								24256
							],
							[
								24578,
								24611
							],
							[
								25690,
								25743
							],
							[
								25794,
								25807
							],
							[
								25889,
								25932
							],
							[
								26011,
								26015
							],
							[
								26144,
								26151
							],
							[
								26178,
								26185
							],
							[
								26263,
								26284
							],
							[
								26580,
								26622
							],
							[
								26745,
								26766
							],
							[
								27026,
								27071
							],
							[
								27264,
								27334
							],
							[
								27783,
								27808
							],
							[
								27831,
								27835
							],
							[
								27855,
								27868
							],
							[
								27984,
								28056
							],
							[
								28365,
								28374
							],
							[
								28806,
								28871
							],
							[
								28958,
								28984
							],
							[
								29230,
								29255
							],
							[
								29278,
								29282
							],
							[
								29302,
								29315
							],
							[
								29369,
								29425
							],
							[
								29427,
								29433
							],
							[
								29442,
								29444
							],
							[
								29469,
								29476
							],
							[
								29500,
								29594
							],
							[
								29601,
								29625
							],
							[
								29688,
								29715
							],
							[
								29724,
								29744
							],
							[
								29879,
								29883
							],
							[
								30070,
								30089
							],
							[
								30173,
								30192
							],
							[
								30289,
								30304
							],
							[
								31198,
								31213
							],
							[
								31313,
								31328
							],
							[
								32009,
								32050
							],
							[
								32255,
								32259
							],
							[
								32289,
								32300
							],
							[
								32383,
								32403
							],
							[
								32666,
								32690
							],
							[
								32748,
								32788
							],
							[
								33160,
								33179
							],
							[
								33230,
								33249
							],
							[
								34111,
								34139
							],
							[
								34358,
								34370
							],
							[
								34407,
								34419
							],
							[
								34930,
								34978
							],
							[
								35203,
								35209
							],
							[
								35359,
								35364
							],
							[
								35390,
								35397
							],
							[
								35460,
								35465
							],
							[
								35497,
								35504
							],
							[
								36140,
								36156
							],
							[
								36279,
								36283
							],
							[
								36791,
								36799
							],
							[
								37242,
								37250
							],
							[
								37303,
								37308
							],
							[
								37349,
								37357
							],
							[
								37497,
								37502
							],
							[
								37589,
								37605
							],
							[
								39281,
								39286
							],
							[
								39919,
								39970
							],
							[
								40394,
								40399
							],
							[
								40418,
								40423
							],
							[
								40731,
								40748
							],
							[
								40924,
								40930
							],
							[
								41078,
								41098
							],
							[
								41175,
								41205
							],
							[
								41381,
								41389
							],
							[
								41493,
								41504
							],
							[
								41620,
								41624
							],
							[
								42361,
								42402
							],
							[
								43025,
								43048
							],
							[
								43637,
								43641
							],
							[
								43785,
								43789
							],
							[
								44301,
								44305
							],
							[
								44320,
								44350
							],
							[
								44403,
								44407
							],
							[
								44426,
								44456
							],
							[
								44515,
								44519
							],
							[
								44543,
								44567
							],
							[
								44632,
								44636
							],
							[
								44676,
								44700
							],
							[
								44817,
								44821
							],
							[
								44860,
								44864
							],
							[
								44939,
								44943
							],
							[
								44982,
								44986
							],
							[
								45084,
								45088
							],
							[
								45446,
								45481
							],
							[
								45592,
								45605
							],
							[
								46046,
								46086
							],
							[
								46137,
								46146
							],
							[
								46167,
								46178
							],
							[
								46270,
								46281
							],
							[
								46327,
								46383
							],
							[
								46390,
								46396
							],
							[
								46478,
								46498
							],
							[
								46545,
								46603
							],
							[
								46610,
								46616
							],
							[
								46659,
								46666
							],
							[
								46683,
								46704
							],
							[
								46766,
								46777
							],
							[
								47007,
								47025
							],
							[
								47065,
								47071
							],
							[
								47104,
								47132
							],
							[
								47170,
								47192
							],
							[
								47277,
								47301
							],
							[
								47302,
								47316
							],
							[
								48438,
								48471
							],
							[
								48480,
								48481
							],
							[
								48533,
								48557
							],
							[
								48598,
								48629
							],
							[
								48638,
								48639
							],
							[
								48883,
								48926
							],
							[
								49245,
								49272
							],
							[
								49566,
								49585
							],
							[
								49798,
								49814
							],
							[
								50138,
								50158
							],
							[
								51053,
								51100
							],
							[
								51483,
								51498
							],
							[
								51715,
								51728
							],
							[
								52005,
								52018
							],
							[
								52224,
								52237
							],
							[
								52461,
								52467
							],
							[
								52517,
								52538
							],
							[
								56273,
								56284
							],
							[
								57120,
								57124
							],
							[
								57573,
								57578
							],
							[
								57732,
								57746
							],
							[
								57775,
								57780
							],
							[
								57908,
								57929
							],
							[
								57987,
								57992
							],
							[
								58100,
								58121
							],
							[
								58346,
								58359
							],
							[
								58360,
								58387
							],
							[
								58528,
								58551
							],
							[
								58833,
								58848
							],
							[
								58873,
								58890
							],
							[
								58957,
								58965
							],
							[
								59038,
								59043
							],
							[
								59149,
								59173
							],
							[
								59820,
								59847
							],
							[
								59943,
								59947
							],
							[
								60312,
								60348
							],
							[
								60453,
								60462
							],
							[
								60497,
								60508
							],
							[
								60569,
								60583
							],
							[
								61168,
								61172
							],
							[
								61857,
								61865
							],
							[
								61981,
								61989
							],
							[
								62109,
								62117
							],
							[
								62232,
								62240
							],
							[
								62297,
								62305
							],
							[
								62777,
								62785
							],
							[
								62970,
								63017
							],
							[
								63163,
								63176
							],
							[
								63339,
								63357
							],
							[
								63525,
								63529
							],
							[
								63601,
								63608
							],
							[
								63856,
								63875
							],
							[
								63907,
								63925
							],
							[
								64451,
								64471
							],
							[
								64796,
								64813
							],
							[
								65021,
								65039
							],
							[
								65316,
								65339
							],
							[
								65790,
								65807
							],
							[
								65899,
								65907
							],
							[
								66126,
								66140
							],
							[
								66323,
								66363
							],
							[
								66428,
								66442
							],
							[
								67017,
								67033
							],
							[
								67071,
								67146
							],
							[
								67397,
								67418
							],
							[
								67527,
								67531
							],
							[
								68010,
								68024
							],
							[
								68328,
								68332
							],
							[
								68404,
								68408
							],
							[
								68690,
								68707
							],
							[
								68875,
								68883
							],
							[
								69081,
								69085
							],
							[
								69181,
								69196
							],
							[
								69442,
								69446
							],
							[
								69653,
								69670
							],
							[
								69762,
								69777
							],
							[
								70575,
								70587
							],
							[
								70594,
								70607
							],
							[
								70645,
								70660
							],
							[
								70764,
								70784
							],
							[
								70964,
								70991
							],
							[
								71045,
								71057
							],
							[
								71175,
								71183
							],
							[
								71632,
								71640
							],
							[
								72462,
								72471
							],
							[
								72706,
								72713
							],
							[
								72812,
								72832
							],
							[
								73019,
								73039
							],
							[
								73405,
								73415
							],
							[
								74218,
								74222
							],
							[
								74318,
								74322
							],
							[
								74357,
								74371
							],
							[
								74628,
								74635
							],
							[
								77025,
								77057
							],
							[
								77566,
								77570
							],
							[
								77835,
								77839
							],
							[
								77907,
								77911
							],
							[
								77995,
								78002
							],
							[
								78081,
								78085
							],
							[
								79159,
								79205
							],
							[
								79672,
								79681
							],
							[
								80753,
								80768
							],
							[
								80947,
								80961
							],
							[
								81090,
								81104
							],
							[
								81253,
								81267
							],
							[
								82255,
								82273
							],
							[
								82471,
								82494
							],
							[
								82536,
								82551
							],
							[
								82907,
								82922
							],
							[
								83335,
								83355
							],
							[
								83837,
								83855
							],
							[
								84571,
								84580
							],
							[
								84623,
								84627
							],
							[
								84839,
								84877
							],
							[
								85052,
								85075
							],
							[
								85219,
								85224
							],
							[
								85263,
								85273
							],
							[
								85437,
								85441
							],
							[
								85588,
								85592
							],
							[
								85631,
								85636
							],
							[
								86041,
								86045
							],
							[
								86084,
								86098
							],
							[
								86102,
								86116
							],
							[
								86123,
								86127
							],
							[
								86148,
								86163
							],
							[
								86219,
								86244
							],
							[
								86376,
								86387
							],
							[
								86437,
								86442
							],
							[
								86502,
								86507
							],
							[
								86962,
								86972
							],
							[
								87086,
								87103
							],
							[
								87116,
								87120
							],
							[
								87310,
								87314
							],
							[
								87482,
								87503
							],
							[
								88649,
								88653
							],
							[
								88759,
								88763
							],
							[
								89057,
								89085
							],
							[
								89536,
								89540
							],
							[
								89996,
								90005
							],
							[
								90137,
								90146
							],
							[
								90250,
								90258
							],
							[
								90764,
								90773
							],
							[
								90922,
								90926
							],
							[
								90991,
								91017
							],
							[
								91662,
								91667
							],
							[
								91974,
								92005
							],
							[
								93042,
								93063
							],
							[
								93268,
								93296
							],
							[
								93663,
								93706
							],
							[
								95036,
								95045
							],
							[
								95925,
								95929
							],
							[
								96669,
								96696
							],
							[
								96819,
								96832
							]
						],
						"symlist":
						[
							"() =>",
							"res =>",
							"() =>",
							"r =>",
							"r =>",
							"entries()",
							"GetProject = arg =>",
							"p =>",
							"add = (arr, ...items) =>",
							"useSlot = (arr, i) =>",
							"() =>",
							" v =>",
							"trklGetSet = (get, set) => value =>",
							"MouseEvents = h =>",
							"() =>",
							"(parent, delegate) =>",
							"append_to(elem, p)",
							"function DrawSVG(...args)",
							"append_to(elem, p)",
							" function adjustViewBox(e)",
							"function calcViewBox(box)",
							"function setViewBox(svgOwner, box)",
							"ElementToXML = (e, predicate) =>",
							" (v, k) =>",
							" (v, k) =>",
							" (v, k) =>",
							"async readFile(filename)",
							"async writeFile(filename, data, overwrite = true)",
							"async exists(filename)",
							"async realpath(filename)",
							"async function LoadFile(file)",
							"async function SaveFile(filename, data, contentType)",
							"s =>",
							"() =>",
							"async function SaveSVG(filename, layers = [1, 16, 20, 21, 22, 23, 25, 27, 47, 48, 51])",
							"predicate = element =>",
							"async function LoadSVG(filename)",
							"async function LoadImage(filename)",
							"() =>",
							" function RenderComponent(component)",
							"ModifyColors = fn => e =>",
							"FindLayer = name_or_id =>",
							"n =>",
							"l =>",
							"(id = '#geom') =>",
							"(props = {}) =>",
							"maxZIndex = () =>",
							"e =>",
							"z =>",
							"z =>",
							"() =>",
							"randomColor = () =>",
							"function DrawArc(start, end, angle)",
							"props =>",
							"p =>",
							"a =>",
							"m =>",
							"hex =>",
							"p =>",
							"p =>",
							"p =>",
							"({ x, y }) =>",
							"a =>",
							"({ x, y }, i) =>",
							" e =>",
							"(l, i) =>",
							"(p, i) =>",
							"(p, i) =>",
							"add = (level, item) =>",
							" function RecurseBinaryNode(node, parent = null, depth = 0)",
							"(nodes, i, level) =>",
							"fx = j =>",
							"(node, j) =>",
							" item =>",
							" function DrawNode(x, y, node)",
							" function DrawEdge(item, parent)",
							"function GetPaths(query, parent = project.svgElement)",
							" (a, e) =>",
							"function PathToPolylines(path, step = 0.01)",
							"p =>",
							"poly =>",
							"poly =>",
							" (p, d, set, stop) =>",
							"function PathToPolyline(path, step = 0.01)",
							" (p, d, set, stop) =>",
							"function PathsToPolylines(paths, step = 0.01)",
							"function OutsetPath(path, offset, miterLimit = 2, arcTolerance = 0.01)",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function OutsetPaths(paths, offset, miterLimit = 2, arcTolerance = 0.25)",
							"(a, p) =>",
							"function ClipPath(path, clip, mode = ClipperLib.ClipType.ctUnion)",
							"add = (p, clip = false) =>",
							".toPolylines = function()",
							"p =>",
							"({ X, Y }) =>",
							"function saveItemStates(itemList, get = item => Util.is.",
							"(item.",
							"))",
							"item =>",
							"function restoreItemStates( itemStates, /* prettier-ignore */ set = (item, value) => item.",
							"(value ? 'yes' : 'no') )",
							"function EagleMaps(project)",
							"transformPath = p =>",
							"e =>",
							"dom2eagle = node =>",
							"eagle2dom = elem =>",
							"path2dom = p =>",
							"(key, value) =>",
							"(key, value) =>",
							"function* PackageNames(doc = project.doc)",
							"e =>",
							"([e, b]) =>",
							"([e, w, h, m, v]) =>",
							"({ index, ...match }) =>",
							" ({ s, v, indexes }, match, i) =>",
							"([token, index]) =>",
							"([token, index]) =>",
							"function NextDocument(n = 1)",
							" (idx, i) =>",
							" (idx, i) =>",
							"async function LoadDocument(project, parentElem)",
							"err =>",
							"() =>",
							" ent =>",
							"() =>",
							" ent =>",
							"renamePackages()",
							"a =>",
							"value =>",
							"layer =>",
							"() =>",
							"layer =>",
							"() =>",
							"fn = function(v)",
							"() =>",
							".makeGroup = function({ transform, ...props } = {})",
							"id =>",
							"() =>",
							" function xx()",
							" () =>",
							"function (transform)",
							" (tag, attr, children = []) =>",
							"value =>",
							"async () =>",
							"Rect",
							"async function ChooseDocument(project, i)",
							"GenerateVoronoi = () =>",
							"Rect",
							"p =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ lSite, rSite, ...edge }) =>",
							"e =>",
							"({ va, vb, ...edge }) =>",
							"v =>",
							"add = (arr, ...items) =>",
							"l =>",
							"t =>",
							"l =>",
							"t =>",
							"p =>",
							" (acc, { site, halfedges }) =>",
							"({ site }) =>",
							"function PackageChildren(element, layer)",
							"(c, i) =>",
							"([i, p]) =>",
							"([i, e]) =>",
							"function ElementChildren(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							"([name, element]) =>",
							"function ElementGeometries(layer = 'tPlace', rfn = ent => ",
							"(ent))",
							" ent =>",
							"([name, children]) =>",
							"([i, e]) =>",
							"([name, lines]) =>",
							"pts =>",
							"([name, lines, polygons]) =>",
							"function NewPath(path)",
							"MakeFitAction = index =>",
							"async event =>",
							"function ZoomFactor(val = config.",
							")",
							"function ZoomLog(factor)",
							"function AdjustZoom(l = config.",
							")",
							"CreateGrblSocket = async (port = 'tnt1') =>",
							"function HandleMessage(msg)",
							" pointStr =>",
							"socketFn = () =>",
							".send = (...args) =>",
							"AuthorizationDialog = ({ onAuth, ...props }) =>",
							"onSubmit: () =>",
							"onInput: e =>",
							"onInput: e =>",
							"onClick: e =>",
							"arg =>",
							".onload = async () =>",
							"response =>",
							"e =>",
							" v =>",
							"TestArc: () =>",
							"() =>",
							"async (push, stop) =>",
							"() =>",
							"async (push, stop) =>",
							" target =>",
							" (key, modifiers = 0) =>",
							".focusSearch = state =>",
							"children: () =>",
							"geometries: () =>",
							"value =>",
							"() =>",
							"testComponent = props =>",
							" function File(obj, i)",
							"File",
							"File.prototype.toString = function()",
							"(a, b) =>",
							"(obj, i) =>",
							"(acc, file) =>",
							"i =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"value =>",
							"updateIfChanged = (trkl, newValue, callback) =>",
							" (elem, i) =>",
							"changeInput = e =>",
							"p =>",
							" arg =>",
							"Consumer = props =>",
							"async function* ()",
							"log(type, time, msg)",
							"Logger = props =>",
							"async function* ()",
							"([type, d, t, m], i) =>",
							"Dumper = props =>",
							"value =>",
							"([k, v], i) =>",
							"Commander = ({ onCommand, ...props }) =>",
							"handler = e =>",
							"toggle = trkl =>",
							"Layer = ({ title, name, label, i, color, element, className, ...props }) =>",
							"setVisible = value =>",
							"e =>",
							" e =>",
							"l =>",
							"l =>",
							" (item, value) =>",
							" item =>",
							"l =>",
							"([l, state]) =>",
							"e =>",
							"onMouseMove: e =>",
							"onMouseUp: e =>",
							"DocumentList",
							"constructor()",
							"(push, stop) =>",
							"add(name, component)",
							"addEntry([name, component])",
							"remove(name)",
							"update()",
							"fn: e =>",
							"fn: () =>",
							"open =>",
							" props =>",
							" props =>",
							"async e =>",
							"i =>",
							"i =>",
							"({ coord }) =>",
							"side =>",
							"create: (project, props = {}) =>",
							"a =>",
							"e =>",
							"e =>",
							"name =>",
							"e =>",
							" function makeLayerName(name, side)",
							"fn: () =>",
							"onChange(event)",
							" props =>",
							" props =>",
							" props =>",
							"async (e, p, i) =>",
							"makeSortCompare: key =>",
							" function(a, b)",
							" function(a, b)",
							"onCommand: cmdStr =>",
							"handleChange: e =>",
							" event =>",
							"e =>",
							" function MoveEvent(event, prevEvent)",
							" function* WalkUp(e)",
							" e =>",
							" z =>",
							"p =>",
							"e =>",
							" e =>",
							"e =>",
							" v =>",
							" l =>",
							"e =>",
							" () =>",
							" (e, depth) =>",
							" classes =>",
							" e =>",
							" e =>",
							" (a, b) =>",
							" (a, b) =>",
							"Node",
							"e =>",
							" (p, d, set, stop) =>",
							"e =>",
							"e =>",
							" function TouchEvent(event)",
							"e =>",
							"(p, i) =>",
							"(a, b) =>",
							" size =>",
							"border =>",
							"r =>",
							" function mod(n, m)",
							"() =>",
							" (pos, last, first) =>",
							" function cancel()",
							".oncontextmenu = function(e)",
							".processEvents = async function eventLoop()",
							" event =>",
							"e =>",
							"onRuntimeInitialized: () =>",
							"print: txt =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAgAAUmVhZEpTT04oZmlsZW5hbWUpCldyaXRlRmlsZShuYW1lLCBkYXRhLCB2ZXJib3NlID0gdHJ1ZSkKV3JpdGVKU09OKG5hbWUsIGRhdGEpClN0YXJ0UkVQTChwcmVmaXggPSBwYXRoLgooClswXSwgJy5qcycpLCBzdWZmaXggPSAnJykKICAuaGVscCA9ICgpID0+CiAgLnNob3cgPSBhcmcgPT4KICAuY2xlYW51cCA9ICgpID0+CiguLi5hcmdzKSA9PgogIG1haW4oLi4uYXJncykKICAoYSwgdikgPT4KICAodiwgcHYsIG8pID0+CiAgLmNyZWF0ZVdTID0gKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pID0+CiAgKGxldmVsLCAuLi5hcmdzKSA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIC5zZW5kTWVzc2FnZSA9IGZ1bmN0aW9uKG1zZykKICBvbkNsb3NlKHdzKQogIG9uSHR0cChyZXEsIHJzcCkKICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICAoKSA9PgogIChkYmcsIHNvY2spID0+CigpID0+CiAgb25GZChmZCwgcmQsIHdyKQogIGdldCBjb25uZWN0aW9ucygpCiAgZ2V0IHNvY2tsaXN0KCkKICBxdWl0KHdoeSkAAAAAAAAAANEVAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADRFQAAKCkgPT4KICByZXMgPT4KKCkgPT4KICByID0+CiAgciA9PgogIGVudHJpZXMoKQpHZXRQcm9qZWN0ID0gYXJnID0+CiAgcCA9PgogIGFkZCA9IChhcnIsIC4uLml0ZW1zKSA9PgogIHVzZVNsb3QgPSAoYXJyLCBpKSA9PgooKSA9PgogIHYgPT4KICB0cmtsR2V0U2V0ID0gKGdldCwgc2V0KSA9PiB2YWx1ZSA9PgpNb3VzZUV2ZW50cyA9IGggPT4KKCkgPT4KKHBhcmVudCwgZGVsZWdhdGUpID0+CiAgYXBwZW5kX3RvKGVsZW0sIHApCkRyYXdTVkcoLi4uYXJncykKICBhcHBlbmRfdG8oZWxlbSwgcCkKICBhZGp1c3RWaWV3Qm94KGUpCiAgY2FsY1ZpZXdCb3goYm94KQogIHNldFZpZXdCb3goc3ZnT3duZXIsIGJveCkKRWxlbWVudFRvWE1MID0gKGUsIHByZWRpY2F0ZSkgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICAodiwgaykgPT4KICByZWFkRmlsZShmaWxlbmFtZSkKICB3cml0ZUZpbGUoZmlsZW5hbWUsIGRhdGEsIG92ZXJ3cml0ZSA9IHRydWUpCiAgZXhpc3RzKGZpbGVuYW1lKQogIHJlYWxwYXRoKGZpbGVuYW1lKQpMb2FkRmlsZShmaWxlKQpTYXZlRmlsZShmaWxlbmFtZSwgZGF0YSwgY29udGVudFR5cGUpCiAgcyA9PgooKSA9PgpTYXZlU1ZHKGZpbGVuYW1lLCBsYXllcnMgPSBbMSwgMTYsIDIwLCAyMSwgMjIsIDIzLCAyNSwgMjcsIDQ3LCA0OCwgNTFdKQogIHByZWRpY2F0ZSA9IGVsZW1lbnQgPT4KTG9hZFNWRyhmaWxlbmFtZSkKTG9hZEltYWdlKGZpbGVuYW1lKQooKSA9PgpSZW5kZXJDb21wb25lbnQoY29tcG9uZW50KQpNb2RpZnlDb2xvcnMgPSBmbiA9PiBlID0+CkZpbmRMYXllciA9IG5hbWVfb3JfaWQgPT4KICBuID0+CiAgbCA9PgooaWQgPSAnI2dlb20nKSA9PgoocHJvcHMgPSB7fSkgPT4KICBtYXhaSW5kZXggPSAoKSA9PgogIGUgPT4KICB6ID0+CiAgeiA9PgooKSA9PgogIHJhbmRvbUNvbG9yID0gKCkgPT4KRHJhd0FyYyhzdGFydCwgZW5kLCBhbmdsZSkKICBwcm9wcyA9PgogIHAgPT4KICBhID0+CiAgbSA9PgogIGhleCA9PgogIHAgPT4KICBwID0+CiAgcCA9PgooeyB4LCB5IH0pID0+CiAgYSA9PgooeyB4LCB5IH0sIGkpID0+CiAgZSA9PgoobCwgaSkgPT4KKHAsIGkpID0+CihwLCBpKSA9PgogIGFkZCA9IChsZXZlbCwgaXRlbSkgPT4KUmVjdXJzZUJpbmFyeU5vZGUobm9kZSwgcGFyZW50ID0gbnVsbCwgZGVwdGggPSAwKQoobm9kZXMsIGksIGxldmVsKSA9PgogIGZ4ID0gaiA9Pgoobm9kZSwgaikgPT4KICBpdGVtID0+CkRyYXdOb2RlKHgsIHksIG5vZGUpCkRyYXdFZGdlKGl0ZW0sIHBhcmVudCkKR2V0UGF0aHMocXVlcnksIHBhcmVudCA9IHByb2plY3Quc3ZnRWxlbWVudCkKICAoYSwgZSkgPT4KUGF0aFRvUG9seWxpbmVzKHBhdGgsIHN0ZXAgPSAwLjAxKQogIHAgPT4KICBwb2x5ID0+CiAgcG9seSA9PgogIChwLCBkLCBzZXQsIHN0b3ApID0+ClBhdGhUb1BvbHlsaW5lKHBhdGgsIHN0ZXAgPSAwLjAxKQogIChwLCBkLCBzZXQsIHN0b3ApID0+ClBhdGhzVG9Qb2x5bGluZXMocGF0aHMsIHN0ZXAgPSAwLjAxKQpPdXRzZXRQYXRoKHBhdGgsIG9mZnNldCwgbWl0ZXJMaW1pdCA9IDIsIGFyY1RvbGVyYW5jZSA9IDAuMDEpCiAgLnRvUG9seWxpbmVzID0gZnVuY3Rpb24oKQogIHAgPT4KKHsgWCwgWSB9KSA9PgpPdXRzZXRQYXRocyhwYXRocywgb2Zmc2V0LCBtaXRlckxpbWl0ID0gMiwgYXJjVG9sZXJhbmNlID0gMC4yNSkKKGEsIHApID0+CkNsaXBQYXRoKHBhdGgsIGNsaXAsIG1vZGUgPSBDbGlwcGVyTGliLkNsaXBUeXBlLmN0VW5pb24pCiAgYWRkID0gKHAsIGNsaXAgPSBmYWxzZSkgPT4KICAudG9Qb2x5bGluZXMgPSBmdW5jdGlvbigpCiAgcCA9PgooeyBYLCBZIH0pID0+CiAgc2F2ZUl0ZW1TdGF0ZXMoaXRlbUxpc3QsIGdldCA9IGl0ZW0gPT4gVXRpbC5pcy4KKGl0ZW0uCikpCiAgaXRlbSA9PgogIHJlc3RvcmVJdGVtU3RhdGVzKCBpdGVtU3RhdGVzLCAvKnByZXR0aWVyLWlnbm9yZSAqLyBzZXQgPSAoaXRlbSwgdmFsdWUpID0+IGl0ZW0uCih2YWx1ZSA/ICd5ZXMnIDogJ25vJykgKQpFYWdsZU1hcHMocHJvamVjdCkKICB0cmFuc2Zvcm1QYXRoID0gcCA9PgogIGUgPT4KICBkb20yZWFnbGUgPSBub2RlID0+CiAgZWFnbGUyZG9tID0gZWxlbSA9PgogIHBhdGgyZG9tID0gcCA9Pgooa2V5LCB2YWx1ZSkgPT4KKGtleSwgdmFsdWUpID0+ClBhY2thZ2VOYW1lcyhkb2MgPSBwcm9qZWN0LmRvYykKICBlID0+CihbZSwgYl0pID0+CihbZSwgdywgaCwgbSwgdl0pID0+Cih7IGluZGV4LCAuLi5tYXRjaCB9KSA9PgogICh7IHMsIHYsIGluZGV4ZXMgfSwgbWF0Y2gsIGkpID0+CihbdG9rZW4sIGluZGV4XSkgPT4KKFt0b2tlbiwgaW5kZXhdKSA9PgpOZXh0RG9jdW1lbnQobiA9IDEpCiAgKGlkeCwgaSkgPT4KICAoaWR4LCBpKSA9PgpMb2FkRG9jdW1lbnQocHJvamVjdCwgcGFyZW50RWxlbSkKICBlcnIgPT4KKCkgPT4KICBlbnQgPT4KKCkgPT4KICBlbnQgPT4KICByZW5hbWVQYWNrYWdlcygpCiAgYSA9PgogIHZhbHVlID0+CiAgbGF5ZXIgPT4KKCkgPT4KICBsYXllciA9PgooKSA9PgogIGZuID0gZnVuY3Rpb24odikKKCkgPT4KICAubWFrZUdyb3VwID0gZnVuY3Rpb24oeyB0cmFuc2Zvcm0sIC4uLnByb3BzIH0gPSB7fSkKICBpZCA9PgooKSA9PgogIHh4KCkKICAoKSA9PgoodHJhbnNmb3JtKQogICh0YWcsIGF0dHIsIGNoaWxkcmVuID0gW10pID0+CiAgdmFsdWUgPT4KKCkgPT4KUmVjdApDaG9vc2VEb2N1bWVudChwcm9qZWN0LCBpKQpHZW5lcmF0ZVZvcm9ub2kgPSAoKSA9PgpSZWN0CiAgcCA9PgogIGUgPT4KKHsgbFNpdGUsIHJTaXRlLCAuLi5lZGdlIH0pID0+CiAgZSA9PgooeyBsU2l0ZSwgclNpdGUsIC4uLmVkZ2UgfSkgPT4KICBlID0+Cih7IHZhLCB2YiwgLi4uZWRnZSB9KSA9PgogIHYgPT4KICBhZGQgPSAoYXJyLCAuLi5pdGVtcykgPT4KICBsID0+CiAgdCA9PgogIGwgPT4KICB0ID0+CiAgcCA9PgogIChhY2MsIHsgc2l0ZSwgaGFsZmVkZ2VzIH0pID0+Cih7IHNpdGUgfSkgPT4KUGFja2FnZUNoaWxkcmVuKGVsZW1lbnQsIGxheWVyKQooYywgaSkgPT4KKFtpLCBwXSkgPT4KKFtpLCBlXSkgPT4KRWxlbWVudENoaWxkcmVuKGxheWVyID0gJ3RQbGFjZScsIHJmbiA9IGVudCA9PiAKKGVudCkpCihbbmFtZSwgZWxlbWVudF0pID0+CkVsZW1lbnRHZW9tZXRyaWVzKGxheWVyID0gJ3RQbGFjZScsIHJmbiA9IGVudCA9PiAKKGVudCkpCiAgZW50ID0+CihbbmFtZSwgY2hpbGRyZW5dKSA9PgooW2ksIGVdKSA9PgooW25hbWUsIGxpbmVzXSkgPT4KICBwdHMgPT4KKFtuYW1lLCBsaW5lcywgcG9seWdvbnNdKSA9PgpOZXdQYXRoKHBhdGgpCk1ha2VGaXRBY3Rpb24gPSBpbmRleCA9PgogIGV2ZW50ID0+Clpvb21GYWN0b3IodmFsID0gY29uZmlnLgopClpvb21Mb2coZmFjdG9yKQpBZGp1c3Rab29tKGwgPSBjb25maWcuCikKQ3JlYXRlR3JibFNvY2tldCA9IChwb3J0ID0gJ3RudDEnKSA9PgpIYW5kbGVNZXNzYWdlKG1zZykKICBwb2ludFN0ciA9PgogIHNvY2tldEZuID0gKCkgPT4KICAuc2VuZCA9ICguLi5hcmdzKSA9PgpBdXRob3JpemF0aW9uRGlhbG9nID0gKHsgb25BdXRoLCAuLi5wcm9wcyB9KSA9PgogIG9uU3VibWl0OiAoKSA9PgogIG9uSW5wdXQ6IGUgPT4KICBvbklucHV0OiBlID0+CiAgb25DbGljazogZSA9PgogIGFyZyA9PgogIC5vbmxvYWQgPSAoKSA9PgogIHJlc3BvbnNlID0+CiAgZSA9PgogIHYgPT4KVGVzdEFyYzogKCkgPT4KKCkgPT4KKHB1c2gsIHN0b3ApID0+CigpID0+CihwdXNoLCBzdG9wKSA9PgogIHRhcmdldCA9PgogIChrZXksIG1vZGlmaWVycyA9IDApID0+CiAgLmZvY3VzU2VhcmNoID0gc3RhdGUgPT4KICBjaGlsZHJlbjogKCkgPT4KICBnZW9tZXRyaWVzOiAoKSA9PgogIHZhbHVlID0+CigpID0+CiAgdGVzdENvbXBvbmVudCA9IHByb3BzID0+CkZpbGUob2JqLCBpKQpGaWxlCkZpbGUucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKQooYSwgYikgPT4KKG9iaiwgaSkgPT4KKGFjYywgZmlsZSkgPT4KICBpID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdmFsdWUgPT4KICB2YWx1ZSA9PgogIHZhbHVlID0+CiAgdXBkYXRlSWZDaGFuZ2VkID0gKHRya2wsIG5ld1ZhbHVlLCBjYWxsYmFjaykgPT4KICAoZWxlbSwgaSkgPT4KICBjaGFuZ2VJbnB1dCA9IGUgPT4KICBwID0+CiAgYXJnID0+CkNvbnN1bWVyID0gcHJvcHMgPT4KKCkKICBsb2codHlwZSwgdGltZSwgbXNnKQpMb2dnZXIgPSBwcm9wcyA9PgooKQooW3R5cGUsIGQsIHQsIG1dLCBpKSA9PgpEdW1wZXIgPSBwcm9wcyA9PgogIHZhbHVlID0+Cihbaywgdl0sIGkpID0+CkNvbW1hbmRlciA9ICh7IG9uQ29tbWFuZCwgLi4ucHJvcHMgfSkgPT4KICBoYW5kbGVyID0gZSA9PgogIHRvZ2dsZSA9IHRya2wgPT4KTGF5ZXIgPSAoeyB0aXRsZSwgbmFtZSwgbGFiZWwsIGksIGNvbG9yLCBlbGVtZW50LCBjbGFzc05hbWUsIC4uLnByb3BzIH0pID0+CiAgc2V0VmlzaWJsZSA9IHZhbHVlID0+CiAgZSA9PgogIGUgPT4KICBsID0+CiAgbCA9PgogIChpdGVtLCB2YWx1ZSkgPT4KICBpdGVtID0+CiAgbCA9PgooW2wsIHN0YXRlXSkgPT4KICBlID0+CiAgb25Nb3VzZU1vdmU6IGUgPT4KICBvbk1vdXNlVXA6IGUgPT4KRG9jdW1lbnRMaXN0CiAgY29uc3RydWN0b3IoKQoocHVzaCwgc3RvcCkgPT4KICBhZGQobmFtZSwgY29tcG9uZW50KQogIGFkZEVudHJ5KFtuYW1lLCBjb21wb25lbnRdKQogIHJlbW92ZShuYW1lKQogIHVwZGF0ZSgpCiAgZm46IGUgPT4KICBmbjogKCkgPT4KICBvcGVuID0+CiAgcHJvcHMgPT4KICBwcm9wcyA9PgogIGUgPT4KICBpID0+CiAgaSA9PgooeyBjb29yZCB9KSA9PgogIHNpZGUgPT4KICBjcmVhdGU6IChwcm9qZWN0LCBwcm9wcyA9IHt9KSA9PgogIGEgPT4KICBlID0+CiAgZSA9PgogIG5hbWUgPT4KICBlID0+CiAgbWFrZUxheWVyTmFtZShuYW1lLCBzaWRlKQogIGZuOiAoKSA9PgogIG9uQ2hhbmdlKGV2ZW50KQogIHByb3BzID0+CiAgcHJvcHMgPT4KICBwcm9wcyA9PgooZSwgcCwgaSkgPT4KICBtYWtlU29ydENvbXBhcmU6IGtleSA9PgogIGZ1bmN0aW9uKGEsIGIpCiAgZnVuY3Rpb24oYSwgYikKICBvbkNvbW1hbmQ6IGNtZFN0ciA9PgogIGhhbmRsZUNoYW5nZTogZSA9PgogIGV2ZW50ID0+CiAgZSA9PgpNb3ZlRXZlbnQoZXZlbnQsIHByZXZFdmVudCkKV2Fsa1VwKGUpCiAgZSA9PgogIHogPT4KICBwID0+CiAgZSA9PgogIGUgPT4KICBlID0+CiAgdiA9PgogIGwgPT4KICBlID0+CiAgKCkgPT4KICAoZSwgZGVwdGgpID0+CiAgY2xhc3NlcyA9PgogIGUgPT4KICBlID0+CiAgKGEsIGIpID0+CiAgKGEsIGIpID0+Ck5vZGUKICBlID0+CiAgKHAsIGQsIHNldCwgc3RvcCkgPT4KICBlID0+CiAgZSA9PgpUb3VjaEV2ZW50KGV2ZW50KQogIGUgPT4KKHAsIGkpID0+CihhLCBiKSA9PgogIHNpemUgPT4KICBib3JkZXIgPT4KICByID0+CiAgbW9kKG4sIG0pCigpID0+CiAgKHBvcywgbGFzdCwgZmlyc3QpID0+CiAgY2FuY2VsKCkKICAub25jb250ZXh0bWVudSA9IGZ1bmN0aW9uKGUpCiAgLnByb2Nlc3NFdmVudHMgPSBmdW5jdGlvbiBldmVudExvb3AoKQogIGV2ZW50ID0+CiAgZSA9PgogIG9uUnVudGltZUluaXRpYWxpemVkOiAoKSA9PgogIHByaW50OiB0eHQgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.html",
						"symkeys":
						[
							[
								184,
								188
							],
							[
								257,
								263
							]
						],
						"symlist":
						[
							"body",
							"canvas"
						]
					},
					"AQAAAAAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					10,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBib2R5CiAgY2FudmFzAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					11,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								802,
								811
							],
							[
								1168,
								1189
							],
							[
								1228,
								1246
							],
							[
								1528,
								1543
							],
							[
								1872,
								1881
							],
							[
								1952,
								1975
							],
							[
								2368,
								2392
							],
							[
								2757,
								2784
							],
							[
								3169,
								3179
							],
							[
								3189,
								3200
							],
							[
								3218,
								3228
							],
							[
								3259,
								3263
							],
							[
								3749,
								3770
							],
							[
								3869,
								3890
							],
							[
								3948,
								3972
							],
							[
								4397,
								4428
							],
							[
								4680,
								4705
							],
							[
								4797,
								4812
							],
							[
								4984,
								5015
							]
						],
						"symlist":
						[
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							" v =>",
							" () =>",
							" v =>",
							"b =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function MouseHandler(e)",
							"async function* MouseIterator()",
							"function ResizeHandler(e)",
							"function Init()",
							" (duration, name, args, ret) =>"
						]
					},
					"AQAAAAAAAAAAAAAA8gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					13,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								802,
								811
							],
							[
								1168,
								1189
							],
							[
								1228,
								1246
							],
							[
								1528,
								1543
							],
							[
								1872,
								1881
							],
							[
								1952,
								1975
							],
							[
								2368,
								2392
							],
							[
								2757,
								2784
							],
							[
								3169,
								3179
							],
							[
								3189,
								3200
							],
							[
								3218,
								3228
							],
							[
								3259,
								3263
							],
							[
								3749,
								3770
							],
							[
								3869,
								3890
							],
							[
								3948,
								3972
							],
							[
								4397,
								4428
							],
							[
								4680,
								4705
							],
							[
								4797,
								4812
							],
							[
								4984,
								5015
							]
						],
						"symlist":
						[
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							" v =>",
							" () =>",
							" v =>",
							"b =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function MouseHandler(e)",
							"async function* MouseIterator()",
							"function ResizeHandler(e)",
							"function Init()",
							" (duration, name, args, ret) =>"
						]
					},
					"AQAAAAAAAAAAAAAA8gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					15,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					16,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					17,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								802,
								811
							],
							[
								1168,
								1189
							],
							[
								1228,
								1246
							],
							[
								1528,
								1543
							],
							[
								1872,
								1881
							],
							[
								1952,
								1975
							],
							[
								2368,
								2392
							],
							[
								2757,
								2784
							],
							[
								3169,
								3179
							],
							[
								3189,
								3200
							],
							[
								3218,
								3228
							],
							[
								3259,
								3263
							],
							[
								3749,
								3770
							],
							[
								3869,
								3890
							],
							[
								3948,
								3972
							],
							[
								4397,
								4428
							],
							[
								4680,
								4705
							],
							[
								4797,
								4812
							],
							[
								4984,
								5015
							]
						],
						"symlist":
						[
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							" v =>",
							" () =>",
							" v =>",
							"b =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function MouseHandler(e)",
							"async function* MouseIterator()",
							"function ResizeHandler(e)",
							"function Init()",
							" (duration, name, args, ret) =>"
						]
					},
					"AQAAAAAAAAAAAAAA8gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					18,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								802,
								811
							],
							[
								1168,
								1189
							],
							[
								1228,
								1246
							],
							[
								1528,
								1543
							],
							[
								1872,
								1881
							],
							[
								1952,
								1975
							],
							[
								2368,
								2392
							],
							[
								2757,
								2784
							],
							[
								3169,
								3179
							],
							[
								3189,
								3200
							],
							[
								3218,
								3228
							],
							[
								3259,
								3263
							],
							[
								3749,
								3770
							],
							[
								3869,
								3890
							],
							[
								3948,
								3972
							],
							[
								4397,
								4428
							],
							[
								4680,
								4705
							],
							[
								4826,
								4841
							],
							[
								5013,
								5044
							]
						],
						"symlist":
						[
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							" v =>",
							" () =>",
							" v =>",
							"b =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function MouseHandler(e)",
							"async function* MouseIterator()",
							"function ResizeHandler(e)",
							"function Init()",
							" (duration, name, args, ret) =>"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAAPIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAAPIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAAPIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					19,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								802,
								811
							],
							[
								1168,
								1189
							],
							[
								1228,
								1246
							],
							[
								1528,
								1543
							],
							[
								1872,
								1881
							],
							[
								1952,
								1975
							],
							[
								2368,
								2392
							],
							[
								2757,
								2784
							],
							[
								3169,
								3179
							],
							[
								3189,
								3200
							],
							[
								3218,
								3228
							],
							[
								3259,
								3263
							],
							[
								3749,
								3770
							],
							[
								3869,
								3890
							],
							[
								3948,
								3972
							],
							[
								4397,
								4428
							],
							[
								4680,
								4705
							],
							[
								4826,
								4841
							],
							[
								5013,
								5044
							]
						],
						"symlist":
						[
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							" v =>",
							" () =>",
							" v =>",
							"b =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function MouseHandler(e)",
							"async function* MouseIterator()",
							"function ResizeHandler(e)",
							"function Init()",
							" (duration, name, args, ret) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAAPIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					20,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					21,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								802,
								811
							],
							[
								1168,
								1189
							],
							[
								1228,
								1246
							],
							[
								1528,
								1543
							],
							[
								1872,
								1881
							],
							[
								1952,
								1975
							],
							[
								2368,
								2392
							],
							[
								2757,
								2784
							],
							[
								3169,
								3179
							],
							[
								3189,
								3200
							],
							[
								3218,
								3228
							],
							[
								3259,
								3263
							],
							[
								3749,
								3770
							],
							[
								3869,
								3890
							],
							[
								3948,
								3972
							],
							[
								4397,
								4428
							],
							[
								4680,
								4705
							],
							[
								4826,
								4841
							],
							[
								5013,
								5044
							]
						],
						"symlist":
						[
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							" v =>",
							" () =>",
							" v =>",
							"b =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function MouseHandler(e)",
							"async function* MouseIterator()",
							"function ResizeHandler(e)",
							"function Init()",
							" (duration, name, args, ret) =>"
						]
					},
					"AQAAAAAAAAAAAAAA8gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					22,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								802,
								811
							],
							[
								1168,
								1189
							],
							[
								1228,
								1246
							],
							[
								1528,
								1543
							],
							[
								1872,
								1881
							],
							[
								1952,
								1975
							],
							[
								2368,
								2392
							],
							[
								2757,
								2784
							],
							[
								3169,
								3179
							],
							[
								3189,
								3200
							],
							[
								3218,
								3228
							],
							[
								3259,
								3263
							],
							[
								3749,
								3770
							],
							[
								3869,
								3890
							],
							[
								3948,
								3972
							],
							[
								4397,
								4428
							],
							[
								4680,
								4705
							],
							[
								4826,
								4841
							],
							[
								5013,
								5044
							]
						],
						"symlist":
						[
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							" v =>",
							" () =>",
							" v =>",
							"b =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function MouseHandler(e)",
							"async function* MouseIterator()",
							"function ResizeHandler(e)",
							"function Init()",
							" (duration, name, args, ret) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAAPIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					23,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					24,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					25,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								802,
								811
							],
							[
								1168,
								1189
							],
							[
								1228,
								1246
							],
							[
								1528,
								1543
							],
							[
								1872,
								1881
							],
							[
								1952,
								1975
							],
							[
								2368,
								2392
							],
							[
								2757,
								2784
							],
							[
								3169,
								3179
							],
							[
								3189,
								3200
							],
							[
								3218,
								3228
							],
							[
								3259,
								3263
							],
							[
								3749,
								3770
							],
							[
								3869,
								3890
							],
							[
								3948,
								3972
							],
							[
								4397,
								4428
							],
							[
								4680,
								4705
							],
							[
								4826,
								4841
							],
							[
								5013,
								5044
							]
						],
						"symlist":
						[
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							" v =>",
							" () =>",
							" v =>",
							"b =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function MouseHandler(e)",
							"async function* MouseIterator()",
							"function ResizeHandler(e)",
							"function Init()",
							" (duration, name, args, ret) =>"
						]
					},
					"AwAAAAAAAAAAAAAA8gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPIAAAAodiwgaSkgPT4KTG9vcCgpCiAgbG9nID0gKHQsIG5hbWUpID0+CkZpcmUoKQooYSwgcCkgPT4KUmVkcmF3KCkKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KICAoKSA9PgogIHYgPT4KICBiID0+ClJhbmRvbUJ5dGUoKQpNb2R1bG8obiwgbSkKTW91c2VIYW5kbGVyKGUpCk1vdXNlSXRlcmF0b3IoKQpSZXNpemVIYW5kbGVyKGUpCkluaXQoKQogIChkdXJhdGlvbiwgbmFtZSwgYXJncywgcmV0KSA9PgAAAAAAAAAA8gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					26,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					27,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					28,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								802,
								811
							],
							[
								1168,
								1189
							],
							[
								1228,
								1246
							],
							[
								1528,
								1543
							],
							[
								1872,
								1881
							],
							[
								1952,
								1975
							],
							[
								2368,
								2392
							],
							[
								2757,
								2784
							],
							[
								3169,
								3179
							],
							[
								3189,
								3200
							],
							[
								3218,
								3228
							],
							[
								3259,
								3263
							],
							[
								3749,
								3770
							],
							[
								3869,
								3890
							],
							[
								3948,
								3972
							],
							[
								4397,
								4428
							],
							[
								4680,
								4705
							],
							[
								4826,
								4841
							],
							[
								5013,
								5044
							]
						],
						"symlist":
						[
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							" v =>",
							" () =>",
							" v =>",
							"b =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function MouseHandler(e)",
							"async function* MouseIterator()",
							"function ResizeHandler(e)",
							"function Init()",
							" (duration, name, args, ret) =>"
						]
					},
					"AQAAAAAAAAAAAAAA8gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					29,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								802,
								811
							],
							[
								1168,
								1189
							],
							[
								1228,
								1246
							],
							[
								1528,
								1543
							],
							[
								1872,
								1881
							],
							[
								1952,
								1975
							],
							[
								2368,
								2392
							],
							[
								2757,
								2784
							],
							[
								3169,
								3179
							],
							[
								3189,
								3200
							],
							[
								3218,
								3228
							],
							[
								3259,
								3263
							],
							[
								3749,
								3770
							],
							[
								3869,
								3890
							],
							[
								3948,
								3972
							],
							[
								4397,
								4428
							],
							[
								4680,
								4705
							],
							[
								4826,
								4841
							],
							[
								5072,
								5103
							]
						],
						"symlist":
						[
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							" v =>",
							" () =>",
							" v =>",
							"b =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function MouseHandler(e)",
							"async function* MouseIterator()",
							"function ResizeHandler(e)",
							"function Init()",
							" (duration, name, args, ret) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAAPIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					30,
					5,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								802,
								811
							],
							[
								1168,
								1189
							],
							[
								1228,
								1246
							],
							[
								1528,
								1543
							],
							[
								1872,
								1881
							],
							[
								1952,
								1975
							],
							[
								2368,
								2392
							],
							[
								2757,
								2784
							],
							[
								3169,
								3179
							],
							[
								3189,
								3200
							],
							[
								3218,
								3228
							],
							[
								3259,
								3263
							],
							[
								3749,
								3770
							],
							[
								3869,
								3890
							],
							[
								3948,
								3972
							],
							[
								4397,
								4428
							],
							[
								4680,
								4705
							],
							[
								4826,
								4841
							],
							[
								5072,
								5103
							]
						],
						"symlist":
						[
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							" v =>",
							" () =>",
							" v =>",
							"b =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function MouseHandler(e)",
							"async function* MouseIterator()",
							"function ResizeHandler(e)",
							"function Init()",
							" (duration, name, args, ret) =>"
						]
					},
					"CgAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAAPIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAAPIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAAPIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAAPIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAAPIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					31,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								802,
								811
							],
							[
								1168,
								1189
							],
							[
								1228,
								1246
							],
							[
								1528,
								1543
							],
							[
								1872,
								1881
							],
							[
								1952,
								1975
							],
							[
								2368,
								2392
							],
							[
								2757,
								2784
							],
							[
								3169,
								3179
							],
							[
								3189,
								3200
							],
							[
								3218,
								3228
							],
							[
								3259,
								3263
							],
							[
								3749,
								3770
							],
							[
								3869,
								3890
							],
							[
								3948,
								3972
							],
							[
								4397,
								4428
							],
							[
								4680,
								4705
							],
							[
								4826,
								4841
							],
							[
								5072,
								5103
							]
						],
						"symlist":
						[
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							" v =>",
							" () =>",
							" v =>",
							"b =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function MouseHandler(e)",
							"async function* MouseIterator()",
							"function ResizeHandler(e)",
							"function Init()",
							" (duration, name, args, ret) =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAAPIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAAPIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/v3server-roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								802,
								811
							],
							[
								1168,
								1189
							],
							[
								1228,
								1246
							],
							[
								1528,
								1543
							],
							[
								1872,
								1881
							],
							[
								1952,
								1975
							],
							[
								2368,
								2392
							],
							[
								2757,
								2784
							],
							[
								3169,
								3179
							],
							[
								3189,
								3200
							],
							[
								3218,
								3228
							],
							[
								3259,
								3263
							],
							[
								3749,
								3770
							],
							[
								3869,
								3890
							],
							[
								3948,
								3972
							],
							[
								4397,
								4428
							],
							[
								4680,
								4705
							],
							[
								4826,
								4841
							],
							[
								5072,
								5103
							]
						],
						"symlist":
						[
							"(v, i) =>",
							"async function Loop()",
							"log = (t, name) =>",
							"function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							" v =>",
							" () =>",
							" v =>",
							"b =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function MouseHandler(e)",
							"async function* MouseIterator()",
							"function ResizeHandler(e)",
							"function Init()",
							" (duration, name, args, ret) =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAAPIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/v3server-roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								194,
								217
							],
							[
								310,
								330
							],
							[
								451,
								478
							],
							[
								524,
								539
							],
							[
								604,
								629
							],
							[
								676,
								699
							],
							[
								753,
								772
							],
							[
								989,
								1007
							],
							[
								1136,
								1154
							],
							[
								1225,
								1231
							],
							[
								1619,
								1625
							],
							[
								1739,
								1754
							],
							[
								1806,
								1822
							],
							[
								1894,
								1910
							],
							[
								2049,
								2067
							],
							[
								2423,
								2445
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADyAAAAKHYsIGkpID0+Ckxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CiAgKCkgPT4KICB2ID0+CiAgYiA9PgpSYW5kb21CeXRlKCkKTW9kdWxvKG4sIG0pCk1vdXNlSGFuZGxlcihlKQpNb3VzZUl0ZXJhdG9yKCkKUmVzaXplSGFuZGxlcihlKQpJbml0KCkKICAoZHVyYXRpb24sIG5hbWUsIGFyZ3MsIHJldCkgPT4AAAAAAAAAACIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/v3server-roman/Projects/plot-cv/grammar-geda-netlist.js",
						"symkeys":
						[
							[
								118,
								145
							],
							[
								156,
								170
							],
							[
								357,
								387
							],
							[
								463,
								486
							],
							[
								555,
								579
							],
							[
								640,
								668
							],
							[
								750,
								772
							],
							[
								842,
								869
							],
							[
								941,
								962
							],
							[
								1028,
								1051
							],
							[
								1116,
								1138
							],
							[
								1203,
								1227
							],
							[
								1287,
								1311
							],
							[
								1371,
								1395
							],
							[
								1455,
								1479
							],
							[
								1539,
								1569
							],
							[
								1656,
								1676
							]
						],
						"symlist":
						[
							"function wrap(parser, name)",
							" (str, pos) =>",
							"function geda_netlist(...args)",
							"function value(...args)",
							"function values(...args)",
							"function components(...args)",
							"function nets(...args)",
							"function component(...args)",
							"function net(...args)",
							"function DELIM(...args)",
							"function TEXT(...args)",
							"function LBRACK(...args)",
							"function RBRACK(...args)",
							"function LPAREN(...args)",
							"function RPAREN(...args)",
							"function LINE_COMMENT(...args)",
							"function NL(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAiAQAAQ3JlYXRlU2VydmVyKCkKICBvbkNvbm5lY3Q6IHNvY2tldCA9PgogIG9uTWVzc2FnZTogKHNvY2tldCwgbXNnKSA9PgogIG9uQ2xvc2U6IHdoeSA9PgogIG9uUG9uZzogKHNvY2tldCwgZGF0YSkgPT4KQ3JlYXRlQ2xpZW50KCkKKGxldmVsLCAuLi5hcmdzKSA9PgogIG9uTWVzc2FnZSh3cywgbXNnKQogIG9uQ29ubmVjdCh3cywgcmVxKQogICgpID0+CiAgKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAACgBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/v3server-roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								194,
								217
							],
							[
								310,
								330
							],
							[
								451,
								478
							],
							[
								524,
								539
							],
							[
								604,
								629
							],
							[
								676,
								699
							],
							[
								753,
								772
							],
							[
								989,
								1007
							],
							[
								1136,
								1154
							],
							[
								1225,
								1231
							],
							[
								1619,
								1625
							],
							[
								1739,
								1754
							],
							[
								1806,
								1822
							],
							[
								1894,
								1910
							],
							[
								2049,
								2067
							],
							[
								2423,
								2445
							]
						],
						"symlist":
						[
							"function CreateServer()",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAoAQAAICB3cmFwKHBhcnNlciwgbmFtZSkKICAoc3RyLCBwb3MpID0+CiAgZ2VkYV9uZXRsaXN0KC4uLmFyZ3MpCiAgdmFsdWUoLi4uYXJncykKICB2YWx1ZXMoLi4uYXJncykKICBjb21wb25lbnRzKC4uLmFyZ3MpCiAgbmV0cyguLi5hcmdzKQogIGNvbXBvbmVudCguLi5hcmdzKQogIG5ldCguLi5hcmdzKQpERUxJTSguLi5hcmdzKQpURVhUKC4uLmFyZ3MpCkxCUkFDSyguLi5hcmdzKQpSQlJBQ0soLi4uYXJncykKTFBBUkVOKC4uLmFyZ3MpClJQQVJFTiguLi5hcmdzKQpMSU5FX0NPTU1FTlQoLi4uYXJncykKTkwoLi4uYXJncykAAAAAAAAAACIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/mnt/v3server-roman/Projects/plot-cv/grammar-geda-netlist.js",
						"symkeys":
						[
							[
								118,
								145
							],
							[
								156,
								170
							],
							[
								357,
								387
							],
							[
								463,
								486
							],
							[
								555,
								579
							],
							[
								640,
								668
							],
							[
								750,
								772
							],
							[
								842,
								869
							],
							[
								941,
								962
							],
							[
								1028,
								1051
							],
							[
								1116,
								1138
							],
							[
								1203,
								1227
							],
							[
								1287,
								1311
							],
							[
								1371,
								1395
							],
							[
								1455,
								1479
							],
							[
								1539,
								1569
							],
							[
								1656,
								1676
							]
						],
						"symlist":
						[
							"function wrap(parser, name)",
							" (str, pos) =>",
							"function geda_netlist(...args)",
							"function value(...args)",
							"function values(...args)",
							"function components(...args)",
							"function nets(...args)",
							"function component(...args)",
							"function net(...args)",
							"function DELIM(...args)",
							"function TEXT(...args)",
							"function LBRACK(...args)",
							"function RBRACK(...args)",
							"function LPAREN(...args)",
							"function RPAREN(...args)",
							"function LINE_COMMENT(...args)",
							"function NL(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAiAQAAQ3JlYXRlU2VydmVyKCkKICBvbkNvbm5lY3Q6IHNvY2tldCA9PgogIG9uTWVzc2FnZTogKHNvY2tldCwgbXNnKSA9PgogIG9uQ2xvc2U6IHdoeSA9PgogIG9uUG9uZzogKHNvY2tldCwgZGF0YSkgPT4KQ3JlYXRlQ2xpZW50KCkKKGxldmVsLCAuLi5hcmdzKSA9PgogIG9uTWVzc2FnZSh3cywgbXNnKQogIG9uQ29ubmVjdCh3cywgcmVxKQogICgpID0+CiAgKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAACgBAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "main.js",
			"settings":
			{
				"buffer_size": 96862,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					612,
					1,
					"insert",
					{
						"characters": "Key"
					},
					"AwAAAB08AQAAAAAAHjwBAAAAAAAAAAAAHjwBAAAAAAAfPAEAAAAAAAAAAAAfPAEAAAAAACA8AQAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdPAEAAAAAAB08AQAAAAAAAAAAAAAA8L8"
				],
				[
					613,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACA8AQAAAAAAIjwBAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgPAEAAAAAACA8AQAAAAAAAAAAAAAA8L8"
				],
				[
					614,
					1,
					"insert",
					{
						"characters": "key"
					},
					"AwAAACE8AQAAAAAAIjwBAAAAAAAAAAAAIjwBAAAAAAAjPAEAAAAAAAAAAAAjPAEAAAAAACQ8AQAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhPAEAAAAAACE8AQAAAAAAAAAAAAAA8L8"
				],
				[
					616,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACU8AQAAAAAAJjwBAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlPAEAAAAAACU8AQAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANA8AQAAAAAA0TwBAAAAAAAAAAAA0TwBAAAAAADXPAEAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0DwBAAAAAADQPAEAAAAAAAAAAAAAAPC/"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA9EUAAAAAAAD0RQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "fire.html",
			"settings":
			{
				"buffer_size": 500,
				"line_ending": "Unix"
			}
		},
		{
			"file": "fire.js",
			"settings":
			{
				"buffer_size": 5198,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					86,
					1,
					"insert",
					{
						"characters": "v"
					},
					"AQAAAI4SAAAAAAAAjxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOEgAAAAAAAI4SAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					1,
					"left_delete",
					null,
					"AQAAAI4SAAAAAAAAjhIAAAAAAAABAAAAdg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPEgAAAAAAAI8SAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"paste",
					null,
					"AQAAAI4SAAAAAAAAuBIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOEgAAAAAAAI4SAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					2,
					"left_delete",
					null,
					"AgAAAJ8SAAAAAAAAnxIAAAAAAAAWAAAAJHtlLnR5cGV9IEAgJHt4fSwke3l9YJ4SAAAAAAAAnhIAAAAAAAABAAAAYA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfEgAAAAAAALUSAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAAJ4SAAAAAAAAnxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeEgAAAAAAAJ4SAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					1,
					"left_delete",
					null,
					"AQAAAJ4SAAAAAAAAnhIAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfEgAAAAAAAJ8SAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAJ4SAAAAAAAAoBIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeEgAAAAAAAJ4SAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "rect"
					},
					"BAAAAJ8SAAAAAAAAoBIAAAAAAAAAAAAAoBIAAAAAAAChEgAAAAAAAAAAAAChEgAAAAAAAKISAAAAAAAAAAAAAKISAAAAAAAAoxIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfEgAAAAAAAJ8SAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKQSAAAAAAAApRIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkEgAAAAAAAKQSAAAAAAAAAAAAAAAA8L8"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": " ret"
					},
					"BAAAAKUSAAAAAAAAphIAAAAAAAAAAAAAphIAAAAAAACnEgAAAAAAAAAAAACnEgAAAAAAAKgSAAAAAAAAAAAAAKgSAAAAAAAAqRIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAClEgAAAAAAAKUSAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					2,
					"right_delete",
					null,
					"AgAAAJASAAAAAAAAkBIAAAAAAAABAAAAL5ASAAAAAAAAkBIAAAAAAAABAAAALw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQEgAAAAAAAJASAAAAAAAAAAAAAAAAMEA"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": "ct"
					},
					"AgAAAKcSAAAAAAAAqBIAAAAAAAAAAAAAqBIAAAAAAACpEgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnEgAAAAAAAKcSAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					3,
					"left_delete",
					null,
					"AwAAAKgSAAAAAAAAqBIAAAAAAAABAAAAdKcSAAAAAAAApxIAAAAAAAABAAAAY6YSAAAAAAAAphIAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpEgAAAAAAAKkSAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "ct"
					},
					"AgAAAKYSAAAAAAAApxIAAAAAAAAAAAAApxIAAAAAAACoEgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmEgAAAAAAAKYSAAAAAAAAAAAAAAAA8L8"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "\nwindow.add"
					},
					"DAAAAAcUAAAAAAAACBQAAAAAAAAAAAAACBQAAAAAAAAKFAAAAAAAAAAAAAAKFAAAAAAAAAsUAAAAAAAAAAAAAAsUAAAAAAAADBQAAAAAAAAAAAAADBQAAAAAAAANFAAAAAAAAAAAAAANFAAAAAAAAA4UAAAAAAAAAAAAAA4UAAAAAAAADxQAAAAAAAAAAAAADxQAAAAAAAAQFAAAAAAAAAAAAAAQFAAAAAAAABEUAAAAAAAAAAAAABEUAAAAAAAAEhQAAAAAAAAAAAAAEhQAAAAAAAATFAAAAAAAAAAAAAATFAAAAAAAABQUAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHFAAAAAAAAAcUAAAAAAAAAAAAAAAA8L8"
				],
				[
					155,
					1,
					"insert_completion",
					{
						"completion": "addEventListener($1)",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "addEventListener(...)"
					},
					"AgAAABEUAAAAAAAAERQAAAAAAAADAAAAYWRkERQAAAAAAAAjFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUFAAAAAAAABQUAAAAAAAAAAAAAAAA8L8"
				],
				[
					156,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACIUAAAAAAAAJBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiFAAAAAAAACIUAAAAAAAAAAAAAAAA8L8"
				],
				[
					157,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAACIUAAAAAAAAIhQAAAAAAAABAAAAKCIUAAAAAAAAIhQAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjFAAAAAAAACMUAAAAAAAAAAAAAAAA8L8"
				],
				[
					158,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAACIUAAAAAAAAJBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiFAAAAAAAACIUAAAAAAAAAAAAAAAA8L8"
				],
				[
					159,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAACIUAAAAAAAAIhQAAAAAAAABAAAAIiIUAAAAAAAAIhQAAAAAAAABAAAAIg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjFAAAAAAAACMUAAAAAAAAAAAAAAAA8L8"
				],
				[
					160,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAACIUAAAAAAAAJBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiFAAAAAAAACIUAAAAAAAAAAAAAAAA8L8"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": "0r"
					},
					"AgAAACMUAAAAAAAAJBQAAAAAAAAAAAAAJBQAAAAAAAAlFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjFAAAAAAAACMUAAAAAAAAAAAAAAAA8L8"
				],
				[
					162,
					2,
					"left_delete",
					null,
					"AgAAACQUAAAAAAAAJBQAAAAAAAABAAAAciMUAAAAAAAAIxQAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlFAAAAAAAACUUAAAAAAAAAAAAAAAA8L8"
				],
				[
					163,
					1,
					"insert",
					{
						"characters": "resize"
					},
					"BgAAACMUAAAAAAAAJBQAAAAAAAAAAAAAJBQAAAAAAAAlFAAAAAAAAAAAAAAlFAAAAAAAACYUAAAAAAAAAAAAACYUAAAAAAAAJxQAAAAAAAAAAAAAJxQAAAAAAAAoFAAAAAAAAAAAAAAoFAAAAAAAACkUAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjFAAAAAAAACMUAAAAAAAAAAAAAAAA8L8"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACoUAAAAAAAAKxQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqFAAAAAAAACoUAAAAAAAAAAAAAAAA8L8"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": " Res"
					},
					"BAAAACsUAAAAAAAALBQAAAAAAAAAAAAALBQAAAAAAAAtFAAAAAAAAAAAAAAtFAAAAAAAAC4UAAAAAAAAAAAAAC4UAAAAAAAALxQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArFAAAAAAAACsUAAAAAAAAAAAAAAAA8L8"
				],
				[
					168,
					1,
					"insert_completion",
					{
						"completion": "ResizeHandler",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "ResizeHandler"
					},
					"AgAAACwUAAAAAAAALBQAAAAAAAADAAAAUmVzLBQAAAAAAAA5FAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvFAAAAAAAAC8UAAAAAAAAAAAAAAAA8L8"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADkUAAAAAAAAOhQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5FAAAAAAAADkUAAAAAAAAAAAAAAAA8L8"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADoUAAAAAAAAOxQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6FAAAAAAAADoUAAAAAAAAAAAAAAAA8L8"
				],
				[
					171,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAADsUAAAAAAAAPRQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7FAAAAAAAADsUAAAAAAAAAAAAAAAA8L8"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": "tr"
					},
					"AgAAADwUAAAAAAAAPRQAAAAAAAAAAAAAPRQAAAAAAAA+FAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8FAAAAAAAADwUAAAAAAAAAAAAAAAA8L8"
				],
				[
					173,
					2,
					"left_delete",
					null,
					"AgAAAD0UAAAAAAAAPRQAAAAAAAABAAAAcjwUAAAAAAAAPBQAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+FAAAAAAAAD4UAAAAAAAAAAAAAAAA8L8"
				],
				[
					174,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAADsUAAAAAAAAOxQAAAAAAAABAAAAJzsUAAAAAAAAOxQAAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8FAAAAAAAADwUAAAAAAAAAAAAAAAA8L8"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": "true"
					},
					"BAAAADsUAAAAAAAAPBQAAAAAAAAAAAAAPBQAAAAAAAA9FAAAAAAAAAAAAAA9FAAAAAAAAD4UAAAAAAAAAAAAAD4UAAAAAAAAPxQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7FAAAAAAAADsUAAAAAAAAAAAAAAAA8L8"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEAUAAAAAAAAQRQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAFAAAAAAAAEAUAAAAAAAAAAAAAAAA8L8"
				],
				[
					182,
					1,
					"cut",
					null,
					"AQAAAAgUAAAAAAAACBQAAAAAAAA6AAAAICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgUmVzaXplSGFuZGxlciwgdHJ1ZSk7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIFAAAAAAAAEIUAAAAAAAAAAAAAAAAAAA"
				],
				[
					185,
					1,
					"paste",
					null,
					"AQAAAFUTAAAAAAAAjxMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVEwAAAAAAAFUTAAAAAAAAAAAAAAAAAAA"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFUTAAAAAAAAVhMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVEwAAAAAAAFUTAAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "debugger-server.js",
			"settings":
			{
				"buffer_size": 12640,
				"line_ending": "Unix"
			}
		},
		{
			"file": "grammar-geda-netlist.js",
			"settings":
			{
				"buffer_size": 1913,
				"line_ending": "Unix"
			}
		},
		{
			"file": "libraries.js",
			"settings":
			{
				"buffer_size": 1407,
				"line_ending": "Unix"
			}
		},
		{
			"file": "list-proxies.js",
			"settings":
			{
				"buffer_size": 10062,
				"line_ending": "Unix"
			}
		},
		{
			"file": "plot-cv.js",
			"settings":
			{
				"buffer_size": 2430,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test-minnet.js",
			"settings":
			{
				"buffer_size": 2946,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test-net.js",
			"settings":
			{
				"buffer_size": 2878,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test-cv.js",
			"settings":
			{
				"buffer_size": 8677,
				"line_ending": "Unix"
			}
		},
		{
			"file": "config.js",
			"settings":
			{
				"buffer_size": 852,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"paste",
					null,
					"AQAAAKkAAAAAAAAAoQEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKkAAAAAAAAAqQAAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"left_delete",
					null,
					"AQAAACQBAAAAAAAAJAEAAAAAAAAGAAAAcmV0dXJu",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACQBAAAAAAAAKgEAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJkBAAAAAAAAmgEAAAAAAAAAAAAAmgEAAAAAAACdAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkBAAAAAAAAmQEAAAAAAAD////////vfw"
				],
				[
					18,
					1,
					"paste",
					null,
					"AQAAAJ0BAAAAAAAACAIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0BAAAAAAAAnQEAAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "lket"
					},
					"BAAAACIBAAAAAAAAIwEAAAAAAAAAAAAAIwEAAAAAAAAkAQAAAAAAAAAAAAAkAQAAAAAAACUBAAAAAAAAAAAAACUBAAAAAAAAJgEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIBAAAAAAAAIgEAAAAAAAAAAAAAAAAAAA"
				],
				[
					21,
					3,
					"left_delete",
					null,
					"AwAAACUBAAAAAAAAJQEAAAAAAAABAAAAdCQBAAAAAAAAJAEAAAAAAAABAAAAZSMBAAAAAAAAIwEAAAAAAAABAAAAaw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYBAAAAAAAAJgEAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "et"
					},
					"AgAAACMBAAAAAAAAJAEAAAAAAAAAAAAAJAEAAAAAAAAlAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMBAAAAAAAAIwEAAAAAAAAAAAAAAADwvw"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " ret="
					},
					"BQAAACUBAAAAAAAAJgEAAAAAAAAAAAAAJgEAAAAAAAAnAQAAAAAAAAAAAAAnAQAAAAAAACgBAAAAAAAAAAAAACgBAAAAAAAAKQEAAAAAAAAAAAAAKQEAAAAAAAAqAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUBAAAAAAAAJQEAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAABACAAAAAAAAEQIAAAAAAAAAAAAAEQIAAAAAAAASAgAAAAAAAAAAAAASAgAAAAAAABMCAAAAAAAAAAAAABMCAAAAAAAAFAIAAAAAAAAAAAAAFAIAAAAAAAAVAgAAAAAAAAAAAAAVAgAAAAAAABYCAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABACAAAAAAAAEAIAAAAAAAAAAAAAAABSQA"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " ret;"
					},
					"BQAAABYCAAAAAAAAFwIAAAAAAAAAAAAAFwIAAAAAAAAYAgAAAAAAAAAAAAAYAgAAAAAAABkCAAAAAAAAAAAAABkCAAAAAAAAGgIAAAAAAAAAAAAAGgIAAAAAAAAbAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYCAAAAAAAAFgIAAAAAAAAAAAAAAADwvw"
				],
				[
					30,
					1,
					"left_delete",
					null,
					"AQAAAB4CAAAAAAAAHgIAAAAAAABvAQAAZXhwb3J0IGZ1bmN0aW9uIFNhdmVDb25maWcoY29uZmlnT2JqKSB7CiAgY29uZmlnT2JqID0gT2JqZWN0LmZyb21FbnRyaWVzKE9iamVjdC5lbnRyaWVzKGNvbmZpZ09iaikubWFwKChbaywgdl0pID0+IFtrLCArdl0pKTsKICBsZXQgZmlsZSA9IHN0ZC5vcGVuKGJhc2VuYW1lKCkgKyAnLmNvbmZpZy5qc29uJywgJ3crYicpOwogIGZpbGUucHV0cyhKU09OLnN0cmluZ2lmeShjb25maWdPYmosIG51bGwsIDIpICsgJ1xuJyk7CiAgZmlsZS5jbG9zZSgpOwogIGNvbnNvbGUubG9nKGBTYXZlZCBjb25maWcgdG8gJyR7YmFzZW5hbWUoKSArICcuY29uZmlnLmpzb24nfSdgLCBpbnNwZWN0KGNvbmZpZ09iaiwgeyBjb21wYWN0OiBmYWxzZSB9KSk7Cn0KCg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4CAAAAAAAAjQMAAAAAAAAAAAAAAAAAAA"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAB4CAAAAAAAAHwIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB4CAAAAAAAAHgIAAAAAAAAAAAAAAADwvw"
				],
				[
					37,
					1,
					"cut",
					null,
					"AQAAABwAAAAAAAAAHAAAAAAAAAAfAAAAaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwAAAAAAAAAOwAAAAAAAAAAAAAAAADwvw"
				],
				[
					38,
					2,
					"paste",
					null,
					"AgAAABwAAAAAAAAAOwAAAAAAAAAAAAAAOwAAAAAAAABaAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAADwvw"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "fs"
					},
					"AwAAAEIAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAABDAAAAAAAAAAcAAABpbnNwZWN0QwAAAAAAAABEAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIAAAAAAAAASQAAAAAAAAAAAAAAAADwvw"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAE0AAAAAAAAATgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0AAAAAAAAATQAAAAAAAAAAAAAAAADwvw"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "fs"
					},
					"AwAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABMAAAAAAAAAAgAAABpbmZzcGVjdEwAAAAAAAAATQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsAAAAAAAAAUwAAAAAAAAAAAAAAAADwvw"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAFwDAAAAAAAAXQMAAAAAAAAAAAAAXQMAAAAAAABdAwAAAAAAAAkAAAAgaW5zcGVjdCg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFwDAAAAAAAAZQMAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"left_delete",
					null,
					"AQAAAGYDAAAAAAAAZgMAAAAAAAAVAAAALCB7IGNvbXBhY3Q6IGZhbHNlIH0p",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGYDAAAAAAAAewMAAAAAAAAAAAAAAADwvw"
				],
				[
					87,
					1,
					"left_delete",
					null,
					"AQAAABwAAAAAAAAAHAAAAAAAAAAfAAAAaW1wb3J0IGluc3BlY3QgZnJvbSAnaW5zcGVjdCc7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwAAAAAAAAAOwAAAAAAAAAAAAAAAADwvw"
				],
				[
					89,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAcAAAAaW1wb3J0ICogYXMgc3RkIGZyb20gJ3N0ZCc7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"
				],
				[
					99,
					1,
					"paste",
					null,
					"AQAAAPgBAAAAAAAAZAMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgBAAAAAAAA+AEAAAAAAAAAAAAAAADwvw"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAGMDAAAAAAAAZAMAAAAAAAAAAAAAZAMAAAAAAABkAwAAAAAAAE0BAAAKCmV4cG9ydCBmdW5jdGlvbiBMb2FkQ29uZmlnKCkgewogIGxldCBzdHIgPSBzdGQubG9hZEZpbGUoYmFzZW5hbWUoKSArICcuY29uZmlnLmpzb24nKTsKICBsZXQgY29uZmlnT2JqID0gSlNPTi5wYXJzZShzdHIgfHwgJ3t9Jyk7CgogIGNvbmZpZ09iaiA9IE9iamVjdC5mcm9tRW50cmllcygKICAgIE9iamVjdC5lbnRyaWVzKGNvbmZpZ09iaikKICAgICAgLm1hcCgoW2ssIHZdKSA9PiBbaywgK3ZdKQogICAgICAuZmlsdGVyKChbaywgdl0pID0+ICFpc05hTih2KSkKICApOwogIGNvbnNvbGUubG9nKCdMb2FkQ29uZmlnOicsIGNvbmZpZ09iaik7CiAgcmV0dXJuIGNvbmZpZ09iajsKfQo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGMDAAAAAAAAsAQAAAAAAAAAAAAAAADwvw"
				],
				[
					133,
					1,
					"",
					null,
					"AQAAAAcBAAAAAAAACQEAAAAAAAAKAAAAZmlsZXN5c3RlbQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAcBAAAAAAAAEQEAAAAAAAAAAAAAAADwvw"
				],
				[
					134,
					1,
					"",
					null,
					"AQAAABUCAAAAAAAAFwIAAAAAAAAKAAAAZmlsZXN5c3RlbQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABUCAAAAAAAAHwIAAAAAAAAAAAAAAADwvw"
				],
				[
					137,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAFQDAAAAAAAAVQMAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFQDAAAAAAAAVAMAAAAAAAAAAAAAAADwvw"
				],
				[
					148,
					1,
					"revert",
					null,
					"BAAAAAAAAAAAAAAAAAAAAAAAAABVAwAAaW1wb3J0IGZzIGZyb20gJ2ZzJzsKaW1wb3J0IHsgbWVtb2l6ZSB9IGZyb20gJy4vbGliL21pc2MuanMnOwoKbGV0IGJhc2VuYW1lID0gbWVtb2l6ZSgoKSA9PiBwcm9jZXNzLmFyZ3ZbMV0ucmVwbGFjZSgvXC5qcyQvLCAnJykpOwoKZnVuY3Rpb24gU2F2ZUNvbmZpZyhjb25maWdPYmopIHsKICBjb25maWdPYmogPSBPYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXMoY29uZmlnT2JqKS5tYXAoKFtrLCB2XSkgPT4gW2ssICt2XSkpOwoKbGV0IHJldD0gICBmcy53cml0ZUZpbGUoVXRpbC5nZXRBcmd2KClbMV0ucmVwbGFjZSgvXC5qcyQvLCAnLmNvbmZpZy5qc29uJyksIEpTT04uc3RyaW5naWZ5KGNvbmZpZ09iaiwgbnVsbCwgMikgKyAnXG4nKTsKICAgICBjb25zb2xlLmxvZyhgU2F2ZWQgY29uZmlnIHRvICcke2Jhc2VuYW1lKCkgKyAnLmNvbmZpZy5qc29uJ30nYCwgaW5zcGVjdChjb25maWdPYmosIHsgY29tcGFjdDogZmFsc2UgfSkpOwpyZXR1cm4gcmV0Owp9CgpmdW5jdGlvbiBMb2FkQ29uZmlnKCkgewogIGxldCBzdHIgPSBmcy5yZWFkRmlsZShVdGlsLmdldEFyZ3YoKVsxXS5yZXBsYWNlKC9cLmpzJC8sICcuY29uZmlnLmpzb24nKSwgJ3V0Zi04Jyk7CiAgbGV0IGNvbmZpZ09iaiA9IEpTT04ucGFyc2Uoc3RyID8/ICd7fScpOwoKICBjb25maWdPYmogPSBPYmplY3QuZnJvbUVudHJpZXMoCiAgICBPYmplY3QuZW50cmllcyhjb25maWdPYmopCiAgICAgIC5tYXAoKFtrLCB2XSkgPT4gW2ssICt2XSkKICAgICAgLmZpbHRlcigoW2ssIHZdKSA9PiAhaXNOYU4odikpCiAgKTsKICBjb25zb2xlLmxvZygnTG9hZENvbmZpZzonLCBjb25maWdPYmopOwogIHJldHVybiBjb25maWdPYmo7Cn0gCgAAAAAAAAAAVAMAAAAAAAAAAAAAAAAAAAAAAABUAwAAAAAAAAAAAAAAAAAAAAAAAFQDAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABcDAAAAAAAAHgMAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "test-opencv.js",
			"settings":
			{
				"buffer_size": 17937,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "test-rpc.js",
			"settings":
			{
				"buffer_size": 7785,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test-sockets.js",
			"settings":
			{
				"buffer_size": 1279,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ws-worker.js",
			"settings":
			{
				"buffer_size": 4112,
				"line_ending": "Unix"
			}
		},
		{
			"file": "components.js",
			"settings":
			{
				"buffer_size": 42401,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1510,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHoYAAAAAAAAexgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6GAAAAAAAAHoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1512,
					1,
					"insert",
					{
						"characters": "sib"
					},
					"AwAAAGsYAAAAAAAAbBgAAAAAAAAAAAAAbBgAAAAAAABtGAAAAAAAAAAAAABtGAAAAAAAAG4YAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrGAAAAAAAAGsYAAAAAAAAAAAAAADgYEA"
				],
				[
					1513,
					1,
					"insert_completion",
					{
						"completion": "siblingCounter",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "siblingCounter"
					},
					"AgAAAGsYAAAAAAAAaxgAAAAAAAADAAAAc2liaxgAAAAAAAB5GAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuGAAAAAAAAG4YAAAAAAAAAAAAAAAA8L8"
				],
				[
					1514,
					1,
					"insert",
					{
						"characters": "++;"
					},
					"AwAAAHkYAAAAAAAAehgAAAAAAAAAAAAAehgAAAAAAAB7GAAAAAAAAAAAAAB7GAAAAAAAAHwYAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5GAAAAAAAAHkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1525,
					1,
					"cut",
					null,
					"AQAAAAkYAAAAAAAACRgAAAAAAAAzAAAAICAgICAgICBjb25zb2xlLmxvZygnQnV0dG9uR3JvdXAuZXZlbnQ6JywgdGFyZ2V0KTsK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJGAAAAAAAADwYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1528,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFkYAAAAAAAAWhgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABZGAAAAAAAAFkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1529,
					1,
					"paste",
					null,
					"AQAAAFoYAAAAAAAAjRgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaGAAAAAAAAFoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1539,
					1,
					"paste",
					null,
					"AgAAAIQYAAAAAAAAkhgAAAAAAAAAAAAAkhgAAAAAAACSGAAAAAAAAAYAAAB0YXJnZXQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEGAAAAAAAAIoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1544,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABOpAAAaW1wb3J0IHsKICBoLAogIEZyYWdtZW50LAogIGh0bWwsCiAgcmVuZGVyLAogIENvbXBvbmVudCwKICB1c2VTdGF0ZSwKICB1c2VFZmZlY3QsCiAgdXNlUmVmLAogIHVzZUNhbGxiYWNrLAogIFBvcnRhbCwKICBSZWFjdENvbXBvbmVudCwKICB0b0NoaWxkQXJyYXkgLyosIGNsb25lRWxlbWVudCovCn0gZnJvbSAnLi9saWIvZG9tL3ByZWFjdENvbXBvbmVudC5qcyc7Ci8vaW1wb3J0IHsgaXNWYWxpZEVsZW1lbnQgfSBmcm9tICcuL2xpYi9jb21wYXQubWpzJzsKCmltcG9ydCB7IHRya2wgfSBmcm9tICcuL2xpYi90cmtsLmpzJzsKaW1wb3J0IHsgRWxlbWVudCB9IGZyb20gJy4vbGliL2RvbS5qcyc7CmltcG9ydCBwYXRoIGZyb20gJy4vbGliL3BhdGguanMnOwppbXBvcnQgeyB1c2VUcmtsIH0gZnJvbSAnLi9saWIvaG9va3MvdXNlVHJrbC5qcyc7CmltcG9ydCB7IGNsYXNzTmFtZXMgfSBmcm9tICcuL2xpYi9jbGFzc05hbWVzLmpzJzsKaW1wb3J0IHsKICB1c2VBY3RpdmUsCiAgdXNlQ2xpY2tvdXQsCiAgdXNlRGltZW5zaW9ucywKICB1c2VEb3VibGVDbGljaywKICB1c2VFbGVtZW50LAogIEV2ZW50VHJhY2tlciwKICB1c2VFdmVudCwKICB1c2VGb2N1cywKICB1c2VSZWNvZ25pemVycywKICB1c2VEcmFnLAogIHVzZVBpbmNoLAogIHVzZVdoZWVsLAogIHVzZU1vdmUsCiAgdXNlU2Nyb2xsLAogIHVzZUdlc3R1cmUsCiAgdXNlSG92ZXIsCiAgdXNlTW91c2VQb3NpdGlvbiwKICB1c2VQYW5ab29tLAogIHVzZVRvZ2dsZUJ1dHRvbkdyb3VwU3RhdGUKfSBmcm9tICcuL2xpYi9ob29rcy5qcyc7CmltcG9ydCBkZWVwRGlmZiBmcm9tICcuL2xpYi9kZWVwLWRpZmYuanMnOwppbXBvcnQgeyB1c2VWYWx1ZSB9IGZyb20gJy4vbGliL3JlcGVhdGVyL3JlYWN0LWhvb2tzLmpzJzsKaW1wb3J0IFJ1bGVyRHJhZ2dhYmxlIGZyb20gJy4vcnVsZXItZHJhZ2dhYmxlLmpzJzsKCmV4cG9ydCBjb25zdCBSdWxlciA9ICh7IGhhbmRsZUNoYW5nZSwgc3R5bGUgPSB7fSwgY2xhc3M6IGNsYXNzTmFtZSB9KSA9PiB7CiAgY29uc3QgcmVmUnVsZXIgPSB1c2VSZWYoKTsKICBjb25zdCBbdmFsdWUsIHNldFZhbHVlXSA9IHVzZVN0YXRlKG51bGwpOwoKICAvKmNvbnNvbGUubG9nKCdSdWxlciByZWZSdWxlcjogJywgcmVmUnVsZXIpOwogIC8vY29uc29sZS5sb2coJ1J1bGVyIHZhbHVlOiAnLCB2YWx1ZSk7Ki8KCiAgY29uc3QgaGFuZGxlcnMgPSB0cmtsKG51bGwpOwogIGxldCBjb21tYW5kczsKCiAgaGFuZGxlcnMuc3Vic2NyaWJlKHZhbHVlID0+IHsKICAgIGlmKCFjb21tYW5kcyAmJiBVdGlsLmlzT2JqZWN0KHZhbHVlKSkgY29tbWFuZHMgPSB2YWx1ZTsKICAgIC8qY29uc29sZS5sb2coJ3Rya2wgaGFuZGxlcnMgdmFsdWUgPScsIHZhbHVlKTsKICAgIC8vY29uc29sZS5sb2coJ2NvbW1hbmRzID0nLCBjb21tYW5kcyk7Ki8KICB9KTsKCiAgY29uc3QgcHJlc3NpbmdEb3duID0gKCkgPT4gY29tbWFuZHMucHJlc3NpbmdEb3duKCk7CiAgY29uc3QgcHJlc3NpbmdVcCA9ICgpID0+IGNvbW1hbmRzLnByZXNzaW5nVXAoKTsKICBjb25zdCBzdG9wUHJlc3NpbmcgPSAoKSA9PiBjb21tYW5kcy5zdG9wUHJlc3NpbmcoKTsKICBsZXQgb25DaGFuZ2VkID0gdmFsdWUgPT4gc2V0VmFsdWUodmFsdWUpOwoKICBpZih0eXBlb2YgaGFuZGxlQ2hhbmdlID09ICdmdW5jdGlvbicpIHsKICAgIGNvbnN0IHByZXZIYW5kbGVyID0gb25DaGFuZ2VkOwogICAgb25DaGFuZ2VkID0gdmFsdWUgPT4gewogICAgICBwcmV2SGFuZGxlcih2YWx1ZSk7CiAgICAgIGhhbmRsZUNoYW5nZSh2YWx1ZSk7CiAgICB9OwogIH0KCiAgcmV0dXJuIGgoJ2RpdicsIHsgc3R5bGUsIGNsYXNzOiBjbGFzc05hbWUgfSwgWwogICAgaCgKICAgICAgJ2J1dHRvbicsCiAgICAgIHsKICAgICAgICBvbk1vdXNlRG93bjogcHJlc3NpbmdEb3duLAogICAgICAgIG9uTW91c2VVcDogc3RvcFByZXNzaW5nCiAgICAgIH0sCiAgICAgIFsnRG93biddCiAgICApLAogICAgaCgKICAgICAgJ2J1dHRvbicsCiAgICAgIHsKICAgICAgICBvbk1vdXNlRG93bjogcHJlc3NpbmdVcCwKICAgICAgICBvbk1vdXNlVXA6IHN0b3BQcmVzc2luZwogICAgICB9LAogICAgICBbJ1VwJ10KICAgICksCiAgICBoKCdkaXYnLCB7fSwgW1V0aWwucm91bmRUbyh2YWx1ZSwgMC4wMDEsIDMpXSksCiAgICBoKAogICAgICBSdWxlckRyYWdnYWJsZSwKICAgICAgewogICAgICAgIHJlZjogcmVmUnVsZXIsCiAgICAgICAgaGFuZGxlcnMsCiAgICAgICAgZGVmYXVsdFZhbHVlOiA1MCwKICAgICAgICBvbkNoYW5nZWQsCiAgICAgICAgbG9uZ0xlbmd0aDogNjAwLAogICAgICAgIHNob3J0TGVuZ3RoOiA2MCwKICAgICAgICBob3Jpem9udGFsOiBmYWxzZQogICAgICB9LAogICAgICBbXQogICAgKQogIF0pOwp9OwoKZXhwb3J0IGNvbnN0IENsaWNrSGFuZGxlciA9IGNhbGxiYWNrID0+IGUgPT4gewogIGlmKGUudHlwZSkgewogICAgY29uc3QgcHJlc3MgPSBlLnR5cGUuZW5kc1dpdGgoJ2Rvd24nKTsKICAgIGNhbGxiYWNrKGUsIHByZXNzKTsKICB9Cn07CgpleHBvcnQgY29uc3QgVG9nZ2xlSGFuZGxlciA9IChjYWxsYmFjaywgZ2V0U3RhdGUsIHNldFN0YXRlKSA9PiBlID0+IHsKICBpZihlLnR5cGUpIHsKICAgIGNvbnN0IHByZXNzID0gZS50eXBlLmVuZHNXaXRoKCdkb3duJyk7CgogICAgaWYocHJlc3MpIHsKICAgICAgbGV0IHN0YXRlID0gIWdldFN0YXRlKCk7CiAgICAgIHNldFN0YXRlKHN0YXRlKTsKICAgICAgY2FsbGJhY2soZSwgc3RhdGUpOwogICAgfQogIH0KfTsKCmV4cG9ydCBjb25zdCBNb3VzZUV2ZW50cyA9IGggPT4gKHsKICBvbk1vdXNlRG93bjogaCwKCiAgLyogIG9uQmx1cjogaCwqLwogIG9uTW91c2VPdXQ6IGgsCiAgb25Nb3VzZVVwOiBoCn0pOwoKZXhwb3J0IGNvbnN0IE92ZXJsYXkgPSAoewogIGNsYXNzTmFtZSA9ICdvdmVybGF5JywKICB0aXRsZSwKICB0b29sdGlwLAogIGFjdGl2ZSA9IHRydWUsCiAgZW5hYmxlID0gdHJrbCh0cnVlKSwKICB2aXNpYmxlID0gdHJrbCh0cnVlKSwKICB0b2dnbGUsCiAgc3RhdGUsCiAgb25QdXNoLAogIHRleHQsCiAgY2hpbGRyZW4sCiAgLi4ucHJvcHMKfSkgPT4gewogIGNvbnN0IFtwdXNoZWQsIHNldFB1c2hlZF0gPQogICAgdHlwZW9mIHN0YXRlID09ICdmdW5jdGlvbicgPyBbdXNlVHJrbChzdGF0ZSksIHN0YXRlXSA6IHVzZVN0YXRlKGZhbHNlKTsKICBjb25zdCBlbmFibGVkID0gdXNlVHJrbChlbmFibGUpOwogIGNvbnN0IGV2ZW50cyA9IGVuYWJsZWQKICAgID8gTW91c2VFdmVudHMoCiAgICAgICAgKHRvZ2dsZSA/IFRvZ2dsZUhhbmRsZXIgOiBDbGlja0hhbmRsZXIpKAogICAgICAgICAgKGUsIHN0YXRlKSA9PiB7CiAgICAgICAgICAgIGNvbnN0IHByZXYgPSBwdXNoZWQ7CiAgICAgICAgICAgIGlmKGUuYnV0dG9ucyAmJiBlLmJ1dHRvbnMgIT0gMSkgcmV0dXJuOwogICAgICAgICAgICBpZighZS50eXBlLmVuZHNXaXRoKCdkb3duJykgJiYgIWUudHlwZS5lbmRzV2l0aCgndXAnKSkgcmV0dXJuOwogICAgICAgICAgICBsZXQgcmV0OwogICAgICAgICAgICAvLyBjb25zb2xlLmxvZygiTW91c2VFdmVudCIsIHt0eXBlOiBlLnR5cGUsIHN0YXRlfSk7CiAgICAgICAgICAgIGlmKHR5cGVvZiBvblB1c2ggPT0gJ2Z1bmN0aW9uJykgcmV0ID0gb25QdXNoKGUsIHN0YXRlKTsKICAgICAgICAgICAgaWYocmV0ID09PSB0cnVlIHx8IHJldCA9PT0gZmFsc2UpIHN0YXRlID0gcmV0OwogICAgICAgICAgICBzZXRQdXNoZWQoc3RhdGUpOwogICAgICAgICAgfSwKICAgICAgICAgICgpID0+IHB1c2hlZCwKICAgICAgICAgIHNldFB1c2hlZAogICAgICAgICkKICAgICAgKQogICAgOiB7fTsKICBpZih0eXBlb2YgdGl0bGUgPT0gJ3N0cmluZycgJiYgdGl0bGUubGVuZ3RoID4gMCkgcHJvcHMudGl0bGUgPSB0aXRsZTsKICBpZih0eXBlb2YgdG9vbHRpcCA9PSAnc3RyaW5nJyAmJiB0b29sdGlwLmxlbmd0aCA+IDApIHByb3BzWydkYXRhLXRvb2x0aXAnXSA9IHRvb2x0aXA7CiAgcmV0dXJuIGgoCiAgICAnZGl2JywKICAgIHsKICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWVzKAogICAgICAgIGNsYXNzTmFtZSwKICAgICAgICBwdXNoZWQgJiYgJ3B1c2hlZCcsCiAgICAgICAgYWN0aXZlID8gJ2FjdGl2ZScgOiAnaW5hY3RpdmUnLAogICAgICAgICF2aXNpYmxlICYmICdoaWRkZW4nCiAgICAgICksCiAgICAgIC4uLnByb3BzLAogICAgICAuLi5ldmVudHMKICAgIH0sCiAgICBjaGlsZHJlbgogICk7Cn07CgpleHBvcnQgY29uc3QgQ29udGFpbmVyID0gKHsgY2xhc3NOYW1lID0gJ3BhbmVsJywgdGFnID0gJ2RpdicsIGNoaWxkcmVuLCAuLi5wcm9wcyB9KSA9PiB7CiAgLy8gdXNlQ2FsbGJhY2soKCkgPT4gY29uc29sZS5kZWJ1ZygncmUtcmVuZGVyIHBhbmVsJykpOwogIHJldHVybiBoKHRhZywgeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIGNoaWxkcmVuKTsKfTsKCmV4cG9ydCBjb25zdCBCdXR0b24gPSBhbGxQcm9wcyA9PiB7CiAgbGV0IHsKICAgIGNsYXNzTmFtZSwKICAgIGNhcHRpb24sCiAgICBpbWFnZSwKICAgIGZuLAogICAgc3RhdGUsCiAgICBlbmFibGUgPSB0cmtsKHRydWUpLAogICAgdmlzaWJsZSA9IHRya2wodHJ1ZSksCiAgICBvblB1c2ggPSBzdGF0ZSA9PiAoc3RhdGUgJiYgdHlwZW9mIGZuID09ICdmdW5jdGlvbicgPyBmbihzdGF0ZSkgOiB1bmRlZmluZWQpLAogICAgc3R5bGUgPSB7fSwKICAgIC4uLnByb3BzCiAgfSA9IGFsbFByb3BzOwogIGNvbnN0IGVuYWJsZWQgPSB1c2VUcmtsKGVuYWJsZSk7CiAgY29uc3Qgc2hvdyA9IHVzZVRya2wodmlzaWJsZSk7CgogIGlmKCFwcm9wcy5jaGlsZHJlbikgcHJvcHMuY2hpbGRyZW4gPSBbXTsKICBpZih0eXBlb2YgaW1hZ2UgPT0gJ3N0cmluZycpIGltYWdlID0gaCgnaW1nJywgeyBzcmM6IGltYWdlIH0pOwogIGVsc2UgaWYodHlwZW9mIGltYWdlID09ICdmdW5jdGlvbicpIGltYWdlID0gaW1hZ2UoYWxsUHJvcHMpOwoKICBwcm9wcy5jaGlsZHJlbi51bnNoaWZ0KGltYWdlKTsKCiAgLy9jb25zb2xlLmxvZygnQnV0dG9uJywgY2FwdGlvbiA/PyBpbWFnZSwgeyBlbmFibGVkLCBzaG93IH0pOwoKICByZXR1cm4gaChPdmVybGF5LCB7CiAgICBjbGFzc05hbWU6IGNsYXNzTmFtZXMoJ2J1dHRvbicsIGNsYXNzTmFtZSwgIWVuYWJsZWQgJiYgJ2Rpc2FibGVkJyksCiAgICB0ZXh0OiBjYXB0aW9uLAogICAgdG9nZ2xlOiB0cnVlLAogICAgc3RhdGUsCiAgICBvblB1c2gsCiAgICBzdHlsZSwKICAgIGVuYWJsZSwKICAgIHZpc2libGUsCiAgICAuLi5wcm9wcwogIH0pOwp9OwoKZXhwb3J0IGNvbnN0IFRvZ2dsZSA9ICh7IGNsYXNzTmFtZSwgaW1hZ2VzLCBmbiwgc3RhdGUsIHN0eWxlID0ge30sIC4uLnByb3BzIH0pID0+IHsKICBjb25zdCBwdXNoZWQgPSB1c2VUcmtsKHN0YXRlKTsKICBjb25zdCBpbWFnZSA9IGltYWdlc1twdXNoZWQgfCAwXTsKICBzdGF0ZS5zdWJzY3JpYmUodmFsdWUgPT4gewogICAgLy9jb25zb2xlLmxvZygnVG9nZ2xlZDonLCB2YWx1ZSk7CiAgfSk7CiAgcmV0dXJuIGgoQnV0dG9uLCB7CiAgICBjbGFzc05hbWUsCiAgICBmbiwKICAgIHN0YXRlLAogICAgaW1hZ2UsCiAgICBzdHlsZSwKICAgIC4uLnByb3BzCiAgfSk7Cn07CgpleHBvcnQgY29uc3QgQnV0dG9uR3JvdXAgPSAoeyBjbGFzc05hbWUsIGluZGV4ID0gdHJrbCgpLCBjaGlsZHJlbiwgLi4ucHJvcHMgfSkgPT4gewogIGNvbnN0IGFjdGl2ZSA9IHVzZVRya2woaW5kZXgpOwogIGNvbnN0IGJ1dHRvbnMgPSBbCiAgICAuLi5jaGlsZHJlbi5tYXAoKGNvbXBvbmVudCwgaSkgPT4KICAgICAgdHlwZW9mIGNvbXBvbmVudCA9PSAnZnVuY3Rpb24nCiAgICAgICAgPyBjb21wb25lbnQoewogICAgICAgICAgICAuLi5wcm9wcywKICAgICAgICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWVzKCdidXR0b24nLCBjbGFzc05hbWUpLAogICAgICAgICAgICBzdGF0ZTogYWN0aXZlID09PSBpLAogICAgICAgICAgICBvblB1c2gKICAgICAgICAgIH0pCiAgICAgICAgOiBjb21wb25lbnQKICAgICkKICBdOwoKICBmdW5jdGlvbiBvblB1c2goZXZlbnQpIHsKICAgIGxldCB7IGN1cnJlbnRUYXJnZXQsIHRhcmdldCB9ID0gZXZlbnQ7Cgpjb25zdCB0YWc9dGFyZ2V0Py50YWdOYW1lPy50b0xvd2VyQ2FzZSgpOwpsZXQgc2libGluZ0NvdW50ZXI9MDsKICBpZih0YWcgPT0gJ2ltZycpIHsKZG8gewogIHRhcmdldCA9IHRhcmdldC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nOwpzaWJsaW5nQ291bnRlcisrOwp9d2hpbGUodGFyZ2V0KTsKICAgICAgICBjb25zb2xlLmxvZygnQnV0dG9uR3JvdXAuZXZlbnQ6Jywgc2libGluZ0NvdW50ZXIpOwoKICB9CiAgfQoKICBjb25zb2xlLmxvZygnQnV0dG9uR3JvdXAuYnV0dG9uczonLCBidXR0b25zKTsKCiAgcmV0dXJuIGgoCiAgICAnZGl2JywKICAgIHsKICAgICAgY2xhc3NOYW1lOiAnYnV0dG9uLWdyb3VwJywKICAgICAgb25Nb3VzZURvd246IG9uUHVzaAogICAgfSwKICAgIGJ1dHRvbnMKICApOwp9OwoKLypodG1sYAogIDwke092ZXJsYXl9IGNsYXNzTmFtZT0iYnV0dG9uIiB0ZXh0PSR7Y2FwdGlvbn0gb25QdXNoPSR7c3RhdGUgPT4gKHN0YXRlID8gZm4oc3RhdGUpIDogdW5kZWZpbmVkKX0gJHsuLi5wcm9wc30gLz4KYDsKKi8KZXhwb3J0IGNvbnN0IEZsb2F0aW5nUGFuZWwgPSAoeyBjaGlsZHJlbiwgY2xhc3NOYW1lLCBvblNpemUsIG9uSGlkZSwgc3R5bGUgPSB7fSwgLi4ucHJvcHMgfSkgPT4gewogIGNvbnN0IFtyZWYsIHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9XSA9IHVzZURpbWVuc2lvbnMoKTsKCiAgLy9jb25zb2xlLmxvZygnRmxvYXRpbmdQYW5lbC5kaW1lbnNpb25zOicsIHsgeCwgeSwgd2lkdGgsIGhlaWdodCB9KTsKCiAgY29uc3QgW3NpemUsIHNldFNpemVdID0gdXNlU3RhdGUob25TaXplID8gb25TaXplKCkgOiB7fSk7CiAgY29uc3QgW2hpZGRlbiwgc2V0SGlkZGVuXSA9IHVzZVN0YXRlKG9uSGlkZSA/IG9uSGlkZSgpIDogZmFsc2UpOwoKICBsZXQgbm9VcGRhdGUgPSBmYWxzZTsKCiAgY29uc3QgaGFzT25TaXplID0gdHlwZW9mIG9uU2l6ZSA9PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBvblNpemUuc3Vic2NyaWJlID09ICdmdW5jdGlvbic7CgogIGZ1bmN0aW9uIHVwZGF0ZVNpemUodmFsdWUpIHsKICAgIGlmKCFub1VwZGF0ZSkgc2V0U2l6ZSh2YWx1ZSk7CiAgfQogIHVzZUVmZmVjdCgoKSA9PiB7CiAgICBoYXNPblNpemUgJiYgb25TaXplLnN1YnNjcmliZSh1cGRhdGVTaXplKTsKICAgIHJldHVybiAoKSA9PiBoYXNPblNpemUgJiYgb25TaXplLnVuc3Vic2NyaWJlKHVwZGF0ZVNpemUpOwogIH0sIFtdKTsKCiAgaWYoaGFzT25TaXplKSB7CiAgICBjb25zdCB0bXBTaXplID0gb25TaXplKCk7CiAgICBub1VwZGF0ZSA9IHRydWU7CiAgICAvLyBpZih0bXBTaXplLndpZHRoICE9IHdpZHRoIHx8IHRtcFNpemUuaGVpZ2h0ICE9IGhlaWdodCkKICAgIGlmKFV0aWwuaXNPYmplY3QodG1wU2l6ZSkgJiYgKHRtcFNpemUud2lkdGggPT09IHVuZGVmaW5lZCB8fCB0bXBTaXplLmhlaWdodCA9PT0gdW5kZWZpbmVkKSkKICAgICAgaWYod2lkdGggIT09IHVuZGVmaW5lZCAmJiBoZWlnaHQgIT09IHVuZGVmaW5lZCkgb25TaXplKHsgd2lkdGgsIGhlaWdodCB9KTsKICAgIG5vVXBkYXRlID0gZmFsc2U7CiAgfQogIGNvbnN0IGhhc09uSGlkZSA9IHR5cGVvZiBvbkhpZGUgPT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2Ygb25IaWRlLnN1YnNjcmliZSA9PSAnZnVuY3Rpb24nOwoKICBmdW5jdGlvbiB1cGRhdGVIaWRlKHZhbHVlKSB7CiAgICBzZXRIaWRkZW4odmFsdWUpOwogIH0KICB1c2VFZmZlY3QoKCkgPT4gewogICAgaGFzT25IaWRlICYmIG9uSGlkZS5zdWJzY3JpYmUodXBkYXRlSGlkZSk7CiAgICByZXR1cm4gKCkgPT4gaGFzT25IaWRlICYmIG9uSGlkZS51bnN1YnNjcmliZSh1cGRhdGVIaWRlKTsKICB9LCBbXSk7CgogIGlmKHNpemUpIHsKICAgIGlmKCFpc05hTigrc2l6ZS53aWR0aCkpIHN0eWxlLndpZHRoID0gYCR7c2l6ZS53aWR0aH1weGA7CiAgICBpZighaXNOYU4oK3NpemUuaGVpZ2h0KSkgc3R5bGUuaGVpZ2h0ID0gYCR7c2l6ZS5oZWlnaHR9cHhgOwogICAgLy8gICAgY29uc29sZS5sb2coJ0Zsb2F0aW5nUGFuZWwgc2l6ZTonLCBzaXplKTsKICB9CgogIGlmKGhpZGRlbikgc3R5bGUuZGlzcGxheSA9ICdub25lJzsKCiAgcmV0dXJuIGgoCiAgICBPdmVybGF5LAogICAgewogICAgICByZWYsCiAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lcygnZmxvYXRpbmcnLCBoaWRkZW4gJiYgJ2hpZGRlbicsIGNsYXNzTmFtZSksCiAgICAgIC4uLnByb3BzLAogICAgICBzdHlsZQogICAgfSwKICAgIGNoaWxkcmVuCiAgKTsKfTsKCmV4cG9ydCBjb25zdCBMYWJlbCA9ICh7IGNsYXNzTmFtZSwgdGV4dCwgdGl0bGUsIHRvb2x0aXAsIGNoaWxkcmVuLCAuLi5wcm9wcyB9KSA9PiB7CiAgaWYodHlwZW9mIHRpdGxlID09ICdzdHJpbmcnICYmIHRpdGxlLmxlbmd0aCA+IDApIHByb3BzLnRpdGxlID0gdGl0bGU7CiAgaWYodHlwZW9mIHRvb2x0aXAgPT0gJ3N0cmluZycgJiYgdG9vbHRpcC5sZW5ndGggPiAwKSBwcm9wc1snZGF0YS10b29sdGlwJ10gPSB0b29sdGlwOwogIHJldHVybiBoKAogICAgJ2RpdicsCiAgICB7IGNsYXNzTmFtZTogY2xhc3NOYW1lcygnY2FwdGlvbicsIGNsYXNzTmFtZSksIC4uLnByb3BzIH0sCiAgICAodGV4dCA/IFt0ZXh0XSA6IFtdKS5jb25jYXQoY2hpbGRyZW4pCiAgKTsKfTsKCmV4cG9ydCBjb25zdCBEeW5hbWljTGFiZWwgPSAoeyBjYXB0aW9uLCB0aXRsZSwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+IHsKICBjb25zdCBbdGV4dCwgc2V0VGV4dF0gPSB1c2VTdGF0ZShjYXB0aW9uKCkpOwoKICBjYXB0aW9uLnN1YnNjcmliZSh2YWx1ZSA9PiBzZXRUZXh0KHZhbHVlKSk7CgogIHJldHVybiBoKExhYmVsLCB7IC4uLnByb3BzLCB0ZXh0IH0sIFtdKTsKfTsKCmV4cG9ydCBjb25zdCBJdGVtID0gKHsgY2xhc3NOYW1lID0gJ2l0ZW0nLCB0aXRsZSwgdG9vbHRpcCwgbGFiZWwsIGljb24sIGNoaWxkcmVuLCAuLi5wcm9wcyB9KSA9PiB7CiAgaWYodHlwZW9mIHRpdGxlID09ICdzdHJpbmcnICYmIHRpdGxlLmxlbmd0aCA+IDApIHByb3BzLnRpdGxlID0gdGl0bGU7CiAgaWYodHlwZW9mIHRvb2x0aXAgPT0gJ3N0cmluZycgJiYgdG9vbHRpcC5sZW5ndGggPiAwKSBwcm9wc1snZGF0YS10b29sdGlwJ10gPSB0b29sdGlwOwogIC8vY29uc29sZS5sb2coJ0l0ZW0nLCBwcm9wcyk7CiAgcmV0dXJuIGgoT3ZlcmxheSwgeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIGgoTGFiZWwsIHsgdGV4dDogaWNvbiB9LCBsYWJlbCkpOwp9OwoKZXhwb3J0IGNvbnN0IEljb24gPSAoeyBjbGFzc05hbWUgPSAnaWNvbicsIGNhcHRpb24sIGltYWdlLCAuLi5wcm9wcyB9KSA9PgogIGgoQ29udGFpbmVyLCB7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgaCgnaW1nJywgeyBzcmM6IGltYWdlIH0pKTsKCmV4cG9ydCBjb25zdCBQcm9ncmVzcyA9ICh7IGNsYXNzTmFtZSwgcGVyY2VudCwgLi4ucHJvcHMgfSkgPT4KICBoKAogICAgT3ZlcmxheSwKICAgIHsKICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWVzKCdwcm9ncmVzcycsICdjZW50ZXInLCBjbGFzc05hbWUpLAogICAgICB0ZXh0OiBwZXJjZW50ICsgJyUnLAogICAgICBzdHlsZTogewogICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLAogICAgICAgIHdpZHRoOiAnMTAwJScsCiAgICAgICAgaGVpZ2h0OiAnMS41ZW0nLAogICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCBibGFjaycsCiAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJywKICAgICAgICB6SW5kZXg6ICc5OScKICAgICAgfQogICAgfSwKICAgIGgoJ2RpdicsIHsKICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWVzKCdwcm9ncmVzcy1iYXInLCAnZmlsbCcpLAogICAgICBzdHlsZTogewogICAgICAgIHdpZHRoOiBwZXJjZW50ICsgJyUnLAogICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLAogICAgICAgIGxlZnQ6ICcwcHgnLAogICAgICAgIHRvcDogJzBweCcsCiAgICAgICAgekluZGV4OiAnOTgnCiAgICAgIH0KICAgIH0pCiAgKTsKCi8qZXhwb3J0IGNvbnN0IEJyb3dzZUljb24gPSAocHJvcHMpID0+IGh0bWxgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iNDAiIHdpZHRoPSI0MCIgdmlld0JveD0iMTMxIC0xMzEgNzMxLjQyOSA3MzEuNDI5Ij4KICA8cGF0aCBkPSJNMjQwLjcxNCAzOS40MTR2MzkwLjZoNDMyLjRsNzkuNi0yNDQuMWgtNDM1LjZsLTQ4LjggMTQ1LjcgMzMuMS0xNzAuMmgzNzh2LTQ4LjhoLTI0My40bC00Ny4yLTczLjJ6IiBmaWxsPSIjZmZmIi8+Cjwvc3ZnPgpgOyovCgpleHBvcnQgY29uc3QgU2NoZW1hdGljSWNvbiA9IHByb3BzID0+IGh0bWxgCiAgPHN2ZyB2aWV3Qm94PSIwIDAgNDAgNDAiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CiAgICA8ZGVmcyAvPgogICAgPHBhdGgKICAgICAgZD0iTTMyLjAyIDMuNTk0Yy0yMS4zNDcgMjQuMjctMTAuNjczIDEyLjEzNSAwIDB6bTMuNDM5IDI2LjQ5NGEyLjcyNyAyLjcyNyAwIDAxLS43IDEuNjc1bC03LjE2NSA3LjUwNWEyLjM3NSAyLjM3NSAwIDAxLTEuNzA2LjczMkgxMi43NjZjLTMuMzIgMC01Ljk3OC0yLjgtNS45NzgtNi4yNDVWNi4yNWMwLTEuNzM1LjY3NS0zLjMwMiAxLjc1NC00LjQzM0M5LjYyOS43MDIgMTEuMTA4IDAgMTIuNzY2IDBoMTYuNzA4QTUuODYgNS44NiAwIDAxMzMuNyAxLjgxNyA2LjQyMiA2LjQyMiAwIDAxMzUuNDYgNi4yNXoiCiAgICAgIGZpbGw9IiNmZmYiCiAgICAvPgogICAgPHBhdGgKICAgICAgZD0iTTMzLjA3OSA2LjI1YTMuODIgMy44MiAwIDAwLTEuMDU5LTIuNjU2IDMuNDgxIDMuNDgxIDAgMDAtMi41NDctMS4wOTFIMTIuNzY1Yy0uOTY4IDAtMS44NjguMzc1LTIuNTM4IDEuMDlBMy43ODUgMy43ODUgMCAwMDkuMTc1IDYuMjV2MjcuNTA1YzAgMi4wNiAxLjYxMiAzLjc0MiAzLjU5IDMuNzQyaDEzLjE0M1YyOS44Mmg3LjE3em0yLjM4IDIzLjgzOGEyLjcyOCAyLjcyOCAwIDAxLS43IDEuNjc1bC03LjE2NSA3LjUwNWEyLjM3NSAyLjM3NSAwIDAxLTEuNzA2LjczM0gxMi43NjZjLTMuMzE5IDAtNS45NzgtMi44MDItNS45NzgtNi4yNDVWNi4yNWMwLTEuNzM1LjY3NS0zLjMwMwogICAgMS43NTQtNC40MzRDOS42My43MDIgMTEuMTA4IDAgMTIuNzY2IDBoMTYuNzA4QTUuODYgNS44NiAwIDAxMzMuNyAxLjgxN2E2LjQyMSA2LjQyMSAwIDAxMS43NiA0LjQzNHoiCiAgICAgIGZpbGw9IiM0NDQ0NDMiCiAgICAvPgogICAgPHBhdGggZD0iTTMzLjA3NCAyNC44MjFINC41MzV2LTE3LjVoMjguNTM5eiIgZmlsbD0iI2I0YjNiMyIgLz4KICAgIDxwYXRoCiAgICAgIGQ9Ik0xMy42OTUgMTguODEyYy4yODcuMzcxLjUwMS43MDEuNTAxIDEuMTkgMCAxLjA3NS0uODE3IDEuNjIxLTEuODA2IDEuNjIxSDkuMjM0Yy0uNTQ2IDAtMS4wMTktLjEtMS40NS0uNDYtLjM4OC0uMzE1LS42NzQtLjgzMS0uNjc0LTEuMzM0IDAtLjQ1OC4yNTgtLjg2Ljc2LS44Ni40MTYgMCAuNjc1LjM0My42NzUuNzMgMCAuNDMyLjIyOS40OS42MzEuNDloMy4xMTNjLjExNSAwIC40NzIuMDQzLjQ3Mi0uMTc1IDAtLjExMi0uMi0uMzI4LS4yNTctLjQxNWwtNC45MjEtNi4zMjVjLS4zLS4zODctLjQ3My0uNjc1LS40NzMtMS4xNzggMC0uNTc0LjI3My0xLjA2Mi43Ni0xLjM3NS40MDEtLjI2LjczMS0uMjYgMS4xOS0uMjZoMy4wNDNjLjU0NSAwIDEuMDAzLjExNSAxLjQyLjQ3NS4zNzUuMzI4LjY3NS44Ni42NzUgMS4zNjIgMCAuNDU5LS4yMy44MzEtLjc0Ny44MzEtLjQzIDAtLjY5LS4yNzItLjY5LS42NzMgMC0uNDg4LS4yNDItLjU2LS42ODctLjU2SDkuMDMzYy0uMTU4IDAtLjQ4OC0uMDQzLS40ODguMiAwIC4xMy4xNTguMzAyLjIxNC4zODhsNC45MzcgNi4zMjd6bTQuOTMzIDIuODExYy0xLjA3NyAwLTEuNjkzLS40My0yLjE1My0xLjM2NGwtMS4zMTktMi42NjdjLS4yNDUtLjQ4OC0uMzg3LS45NDYtLjM4Ny0xLjUwNiAwLS42MzIuMTEyLTEuMDIuNC0xLjU5M2wxLjMyLTIuNjU1Yy40ODgtLjk4OSAxLjEwNi0xLjM3NiAyLjIxLTEuMzc2aDIuNDM3Yy4zMTYgMCAuNzIuMTcxLjcyLjcxOCAwIC41MTYtLjM4OS43MTctLjcxOS43MTdoLTIuMzk1Yy0uNjE3IDAtLjcxNy4wNTctLjk5LjYwMmwtMS4yNSAyLjQ5N2MtLjE4NS4zODYtLjMuNjQ1LS4zIDEuMDkgMCAuNDAyLjEzLjY0NS4zLjk5bDEuMjIgMi40OGMuMjg4LjU4OC40MzMuNjMzIDEuMDc1LjYzM2gyLjM0Yy4zMTUgMCAuNzIuMTcyLjcyLjcxNyAwIC41MTYtLjM5LjcxNy0uNzIuNzE3em02LjE3LTQuODY0djQuMTQ3YzAgLjQ2LS4yLjcxNy0uNzE3LjcxN3MtLjcxNy0uMjU3LS43MTctLjcxN3YtOS43MjhjMC0uNDU5LjItLjcxNy43MTctLjcxNy41MTcgMCAuNzE3LjI1OC43MTcuNzE3djQuMTQ2aDQuMjE4di00LjE0NmMwLS40NTkuMi0uNzE3LjcxNy0uNzE3cy43MTcuMjU4LjcxNy43MTd2OS43MjhjMCAuNDYtLjIwMS43MTctLjcxNy43MTdzLS43MTctLjI1Ny0uNzE3LS43MTd2LTQuMTQ3eiIKICAgICAgZmlsbD0iI2JmMjcyZiIKICAgIC8+CiAgPC9zdmc+CmA7CgpleHBvcnQgY29uc3QgQm9hcmRJY29uID0gcHJvcHMgPT4gaHRtbGAKICA8c3ZnIHZpZXdCb3g9IjAgMCA0MCA0MCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICAgIDxkZWZzIC8+CiAgICA8cGF0aAogICAgICBkPSJNMzIuMDIgMy41OTRjLTIxLjM0NyAyNC4yNy0xMC42NzMgMTIuMTM1IDAgMHptMy40MzkgMjYuNDk0YTIuNzI3IDIuNzI3IDAgMDEtLjcgMS42NzVsLTcuMTY1IDcuNTA1YTIuMzc1IDIuMzc1IDAgMDEtMS43MDYuNzMySDEyLjc2NmMtMy4zMiAwLTUuOTc4LTIuOC01Ljk3OC02LjI0NVY2LjI1YzAtMS43MzUuNjc1LTMuMzAyIDEuNzU0LTQuNDMzQzkuNjI5LjcwMiAxMS4xMDggMCAxMi43NjYgMGgxNi43MDhBNS44NiA1Ljg2IDAgMDEzMy43IDEuODE3IDYuNDIyIDYuNDIyIDAgMDEzNS40NiA2LjI1eiIKICAgICAgZmlsbD0iI2ZmZiIKICAgIC8+CiAgICA8cGF0aAogICAgICBkPSJNMzMuMDc5IDYuMjVhMy44MiAzLjgyIDAgMDAtMS4wNTktMi42NTYgMy40ODEgMy40ODEgMCAwMC0yLjU0OC0xLjA5MUgxMi43NjVjLS45NjggMC0xLjg2OC4zNzQtMi41MzggMS4wOUEzLjc4NSAzLjc4NSAwIDAwOS4xNzUgNi4yNXYyNy41MDVjMCAyLjA2IDEuNjEyIDMuNzQyIDMuNTkxIDMuNzQySDI1LjkxVjI5LjgyaDcuMTdWNi4yNXptMi4zOCAyMy44MzdhMi43MjggMi43MjggMCAwMS0uNyAxLjY3NWwtNy4xNjUgNy41MDVhMi4zNzUgMi4zNzUgMCAwMS0xLjcwNy43MzNIMTIuNzY1Yy0zLjMxOSAwLTUuOTc4LTIuODAxLTUuOTc4LTYuMjQ1VjYuMjVhNi40MSA2LjQxIDAgMDExLjc1NC00LjQzNEM5LjYzLjcwMSAxMS4xMDcgMCAxMi43NjUgMGgxNi43MDdBNS44NiA1Ljg2IDAgMDEzMy43IDEuODE2YTYuNDIxIDYuNDIxIDAgMDExLjc1OSA0LjQzNHYyMy44Mzd6IgogICAgICBmaWxsPSIjNDQ0NDQzIgogICAgLz4KICAgIDxwYXRoIGQ9Ik0zMy4wNzkgMjQuNzk1SDQuNTR2LTE3LjVIMzMuMDh2MTcuNXoiIGZpbGw9IiNiNGIzYjMiIC8+CiAgICA8cGF0aAogICAgICBkPSJNOC43MzggMjAuMjA2aDIuNjA4YzEuMDQ0IDAgMS42NTMtLjQ2MiAxLjY1My0xLjU2NSAwLTEuMjE3LS4zMzMtMS45LTEuNjUzLTEuOUg4LjczN3YzLjQ2NnptMC00LjkxNGgyLjYwOGMxLjA0NCAwIDEuNjUzLS40NjUgMS42NTMtMS41NjYgMC0xLjIxNy0uMzMzLTEuODk5LTEuNjUzLTEuODk5SDguNzM3djMuNDY1em0tMS40NS00LjkxNWg0LjA1OGMyLjEzMiAwIDMuMTAzIDEuMzA1IDMuMTAzIDMuMzUgMCAuODQtLjE4OCAxLjYwOC0uOTU2IDIuMjkuODI0Ljc4Mi45NTYgMS41NS45NTYgMi42MjQgMCAxLjktMS4yNjEgMy4wMTQtMy4xMDMgMy4wMTRINy4yODdWMTAuMzc3em0xMC4xNSAzLjcxMmgzLjIxN2MuNDA2IDAgMS4wNDUtLjAyOSAxLjA0NS0uNjA5di0xYzAtLjU4LS41OTUtLjY1My0xLjAzLS42NTNoLTMuMjMydjIuMjYyem0wIDYuODQyYzAgLjQ2My0uMjA0LjcyNC0uNzI1LjcyNC0uNTIzIDAtLjcyNi0uMjYxLS43MjYtLjcyNFYxMC4zNzdoNC44NzJjMS4xNDYgMCAyLjI5MS44MTMgMi4yOTEgMi4xMDN2MWMwIDEuMzY0LTEuMTMgMi4wNTktMi4yOTEgMi4wNTloLTEuMzM0bDMuMjYxIDQuNjY5Yy4xNTkuMjE2LjM2My40OS4zNjMuNzY3IDAgLjQwNS0uMzM0LjY4LS43MzkuNjgtLjI5IDAtLjQ3OS0uMTczLS42MzctLjQwNWwtNC4wMDItNS43MTFoLS4zMzN2NS4zOTJ6bTkuNjMtLjcyNWguMjc2Yy42MSAwIC43NTQtLjA3MiAxLjAxNS0uNjA3bDEuMjc1LTIuNTgyYy4xNjItLjMzMy4yNzUtLjU4LjI3NS0uOTQzIDAtLjQ5My0uMTU5LS43NjgtLjM2MS0xLjE4OGwtMS4yMDQtMi40NWMtLjMwNS0uNjI0LS40MzQtLjYwOS0xLjEtLjYwOWgtLjE3NXY4LjM4ek0yNS42MiAxMS44M2gtLjUzN2MtLjQ4IDAtLjg4NC0uMTc1LS44ODQtLjcyNSAwLS41MjMuMzkxLS43MjUuODQtLjcyNWgyLjQyMWMxLjEzMSAwIDEuNjk1LjQ2MiAyLjE4OCAxLjQ1bDEuMjc3IDIuNTVjLjI4OC41OTUuNDM1IDEuMDE1LjQzNSAxLjY4MiAwIC41NzktLjE1OSAxLjA3My0uNDIgMS41OTRsLTEuMzIxIDIuNjM3Yy0uNTA1IDEuMDMyLTEuMTYgMS4zNjMtMi4yOSAxLjM2M2gtMi40MDRjLS4zNzkgMC0uNzI1LS4yMDEtLjcyNS0uNzI1IDAtLjUyLjM0Ni0uNzIzLjcyNS0uNzIzaC42OTZ2LTguMzh6IgogICAgICBmaWxsPSIjNDJhYjNkIgogICAgLz4KICA8L3N2Zz4KYDsKCmV4cG9ydCBjb25zdCBMaWJyYXJ5SWNvbiA9IHByb3BzID0+IGh0bWxgIDxzdmcKICB2aWV3Qm94PSIwIDAgNDAgNDAiCiAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgo+CiAgPGc+CiAgICA8cGF0aAogICAgICBkPSJNMy4zOTcgNi40ODh2MjYuOTM4YzAgMy4wODUgMi4xMyA1LjY3NSA1LjAxMyA2LjQwN1YuMTA1YTYuNTYxIDYuNTYxIDAgMDAtNS4wMTIgNi4zOE0zMC4xMjItLjA5NkgxMS42NDV2NDAuMTA1aDE4LjQ3N2E2LjYgNi42IDAgMDA2LjU5LTYuNTgxVjYuNDg4YTYuNTgyIDYuNTgyIDAgMDAtNi41OS02LjU4MyIKICAgICAgZmlsbD0iIzQ0NDQ0MyIKICAgIC8+CiAgICA8cGF0aCBkPSJNMzAuMzEzIDE5Ljc5MWgtMTIuNXYtMTIuNWgxMi41djEyLjV6IiBmaWxsPSIjZGVkZDAwIiAvPgogIDwvZz4KPC9zdmc+YDsKCmV4cG9ydCBjb25zdCBHQ29kZUljb24gPSBwcm9wcyA9PiBodG1sYDxzdmcgdmlld0JveD0iMCAwIDQwIDQwIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPgogIDxwYXRoCiAgICBkPSJNMzIuMDIgMy41OTRjLTIxLjM0NyAyNC4yNy0xMC42NzMgMTIuMTM1IDAgMHptMy40MzkgMjYuNDk0YTIuNzI3IDIuNzI3IDAgMDEtLjcgMS42NzVsLTcuMTY1IDcuNTA1YTIuMzc1IDIuMzc1IDAgMDEtMS43MDYuNzMySDEyLjc2NmMtMy4zMiAwLTUuOTc4LTIuOC01Ljk3OC02LjI0NVY2LjI1YzAtMS43MzUuNjc1LTMuMzAyIDEuNzU0LTQuNDMzQzkuNjI5LjcwMiAxMS4xMDggMCAxMi43NjYgMGgxNi43MDhBNS44NiA1Ljg2IDAgMDEzMy43IDEuODE3YTYuNDIyIDYuNDIyIDAgMDExLjc2IDQuNDMzeiIKICAgIGZpbGw9IiNmZmYiCiAgLz4KICA8cGF0aAogICAgZD0iTTMzLjA3OSA2LjI1Yy0yMi4wNTMgMjIuNS0xMS4wMjYgMTEuMjUgMCAwem0yLjM4IDIzLjgzN2EyLjcyOCAyLjcyOCAwIDAxLS43IDEuNjc1bC03LjE2NSA3LjUwNWEyLjM3NSAyLjM3NSAwIDAxLTEuNzA3LjczM0gxMi43NjVjLTMuMzE5IDAtNS45NzgtMi44MDEtNS45NzgtNi4yNDVWNi4yNWE2LjQxIDYuNDEgMCAwMTEuNzU0LTQuNDM0QzkuNjMuNzAxIDExLjEwNyAwIDEyLjc2NSAwaDE2LjcwN0E1Ljg2IDUuODYgMCAwMTMzLjcgMS44MTZhNi40MjEgNi40MjEgMCAwMTEuNzU5IDQuNDM0eiIKICAgIGZpbGw9IiNmZmYiCiAgLz4KICA8cGF0aAogICAgZD0iTTMzLjA3OSA2LjI1YTMuODIgMy44MiAwIDAwLTEuMDU5LTIuNjU2IDMuNDgxIDMuNDgxIDAgMDAtMi41NDgtMS4wOTFIMTIuNzY1Yy0uOTY4IDAtMS44NjguMzc0LTIuNTM4IDEuMDlBMy43ODUgMy43ODUgMCAwMDkuMTc1IDYuMjV2MjcuNTA1YzAgMi4wNiAxLjYxMiAzLjc0MiAzLjU5MSAzLjc0MkgyNS45MVYyOS44Mmg3LjE3VjYuMjV6bTIuMzggMjMuODM3YTIuNzI4IDIuNzI4IDAgMDEtLjcgMS42NzVsLTcuMTY1IDcuNTA1YTIuMzc1IDIuMzc1IDAgMDEtMS43MDcuNzMzSDEyLjc2NWMtMy4zMTkgMC01Ljk3OC0yLjgwMS01Ljk3OC02LjI0NVY2LjI1YTYuNDEgNi40MSAwIDAxMS43NTQtNC40MzRDOS42My43MDEgMTEuMTA3IDAgMTIuNzY1IDBoMTYuNzA3QTUuODYgNS44NiAwIDAxMzMuNyAxLjgxNmE2LjQyMSA2LjQyMSAwIDAxMS43NTkgNC40MzR2MjMuODM3eiIKICAgIGZpbGw9IiM0NDQ0NDMiCiAgLz4KICA8cGF0aAogICAgZD0iTTYuNzU3IDIyLjc1Yy0uNTgzLS41ODMtLjYyNC0xLjA0LS42MjQtNi44N3MuMDQxLTYuMjg4LjYyNC02Ljg3Yy42MDYtLjYwNiAxLjA0MS0uNjI1IDE0LjM2Ni0uNjI1czEzLjc2LjAxOCAxNC4zNjYuNjI0Yy41ODMuNTgzLjYyNCAxLjA0MS42MjQgNi44NyAwIDUuODMtLjA0MSA2LjI4OC0uNjI0IDYuODcxLS42MDYuNjA2LTEuMDQxLjYyNS0xNC4zNjYuNjI1cy0xMy43Ni0uMDE5LTE0LjM2Ni0uNjI1eiIKICAgIGZpbGw9IiNmZmYiCiAgLz4KICA8cGF0aAogICAgZD0iTTYuNzU3IDIyLjc1Yy0uNTgzLS41ODMtLjYyNC0xLjA0LS42MjQtNi44N3MuMDQxLTYuMjg4LjYyNC02Ljg3Yy42MDYtLjYwNiAxLjA0MS0uNjI1IDE0LjM2Ni0uNjI1czEzLjc2LjAxOCAxNC4zNjYuNjI0Yy41ODMuNTgzLjYyNCAxLjA0MS42MjQgNi44NyAwIDUuODMtLjA0MSA2LjI4OC0uNjI0IDYuODcxLS42MDYuNjA2LTEuMDQxLjYyNS0xNC4zNjYuNjI1cy0xMy43Ni0uMDE5LTE0LjM2Ni0uNjI1em01LjYyMi01Ljc3N2MwLTEuMDQxLS4xMjItMS40MDYtLjQ2OS0xLjQwNi0uMzEyIDAtLjQ2OC4zMTMtLjQ2OC45MzcgMCAxLjAyMi0uNDYzIDEuMTk3LTEuMzg1LjUyMi0uNzI0LS41MjktLjczNi0yLjA2Ny0uMDIxLTIuNTkuMzE0LS4yMy45MjgtLjMyMyAxLjQ0NC0uMjIuNzY0LjE1My44OTkuMDgxLjg5OS0uNDgzIDAtLjU3OS0uMTgxLS42NjQtMS40MDYtLjY2NC0uOTg5IDAtMS41OS4xODUtMi4wMy42MjUtLjQ0LjQ0LS42MjQgMS4wNC0uNjI0IDIuMDMgMCAxLjg5MS43NjMgMi42NTQgMi42NTQgMi42NTRoMS40MDZ6bTQuOTk2Ljc0MWMwLS41NjQtLjEzNC0uNjM2LS44OTgtLjQ4My0xLjE3Mi4yMzQtMS45OS0uMzg1LTEuOTktMS41MDcgMC0xLjEyMy44MTgtMS43NDIgMS45OS0xLjUwNy43NjQuMTUyLjg5OC4wOC44OTgtLjQ4NCAwLS41NzEtLjE4Mi0uNjY0LTEuMzA3LS42NjQtMS44MjcgMC0yLjc1Mi45MS0yLjc1MiAyLjcwOSAwIDEuODMzLjc4MyAyLjYgMi42NTQgMi42IDEuMjI1IDAgMS40MDUtLjA4NSAxLjQwNS0uNjY0em01LjIxMS0uMDE1Yy45NzQtLjkxNS45OTctMi44OTMuMDQ0LTMuOTA3LS45MTUtLjk3NC0yLjg5My0uOTk2LTMuOTA3LS4wNDQtLjk3NC45MTUtLjk5NyAyLjg5My0uMDQ0IDMuOTA3LjkxNS45NzUgMi44OTMuOTk3IDMuOTA3LjA0NHptLTIuNjAzLS41OWMtMS4xODUtLjQzOS0xLjEwNC0yLjU0LjExLTIuODU3Ljg0NC0uMjIgMS44NTYuMjMzIDIuMDMzLjkxLjM3MiAxLjQyMy0uNzY1IDIuNDU2LTIuMTQzIDEuOTQ2em03LjkxMi41OWMuOTc1LS45MTUuOTk3LTIuODkzLjA0NC0zLjkwNy0uNTI4LS41NjItMS4wMTQtLjcyMy0yLjE4Ni0uNzIzaC0xLjUwN1YxOC4zNzhoMS40NjNjMS4wNzMgMCAxLjY1Ny0uMTgxIDIuMTg2LS42Nzl6bS0yLjcxMi0xLjk3NXYtMS43ODZsLjg1OS4yMTJjMS4xMzYuMjgxIDEuNDA1LjU4MiAxLjQwNSAxLjU3NCAwIC45OTEtLjI2OSAxLjI5Mi0xLjQwNSAxLjU3M2wtLjg2LjIxMnptNy44MDcgMi4xODZjMC0uMzM5LS4zNDctLjQ2OS0xLjI0OS0uNDY5LTEuMDQgMC0xLjI1LS4xMDQtMS4yNS0uNjI0IDAtLjUwNi4yMS0uNjI1IDEuMDk0LS42MjUuNzYzIDAgMS4wOTMtLjE0MSAxLjA5My0uNDY4IDAtLjMyOC0uMzMtLjQ2OS0xLjA5My0uNDY5LS44ODUgMC0xLjA5My0uMTE5LTEuMDkzLS42MjQgMC0uNTA2LjIwOC0uNjI1IDEuMDkzLS42MjUuNzYzIDAgMS4wOTMtLjE0MSAxLjA5My0uNDY4IDAtLjM1NC0uMzgyLS40NjktMS41NjEtLjQ2OWgtMS41NjJWMTguMzc4aDEuNzE4YzEuMzE4IDAgMS43MTctLjEwOSAxLjcxNy0uNDY4eiIKICAgIGZpbGw9IiM1OWYiCiAgLz4KPC9zdmc+IGA7CgpleHBvcnQgY29uc3QgRmlsZUljb25zID0gewogIHNjaDogU2NoZW1hdGljSWNvbiwKICBicmQ6IEJvYXJkSWNvbiwKICBsYnI6IExpYnJhcnlJY29uLAogIG5nYzogR0NvZGVJY29uCn07CgpleHBvcnQgY29uc3QgQ29uZGl0aW9uYWwgPSAoewogIGluaXRpYWxTdGF0ZSwKICBjb21wb25lbnQgPSBGcmFnbWVudCwKICBjbGFzc05hbWUsCiAgY2hpbGRyZW4sCiAgc2lnbmFsLAogIC4uLnByb3BzCn0pID0+IHsKICBjb25zdCBbc2hvdywgc2V0U2hvd25dID0gdXNlU3RhdGUoaW5pdGlhbFN0YXRlICE9PSB1bmRlZmluZWQgPyBpbml0aWFsU3RhdGUgOiBzaWduYWwoKSk7CgogIGlmKHNpZ25hbCkgc2lnbmFsLnN1YnNjcmliZSh2YWx1ZSA9PiBzZXRTaG93bih2YWx1ZSkpOwoKICByZXR1cm4gc2hvdyA/IGgoY29tcG9uZW50LCB7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgY2hpbGRyZW4pIDogaChGcmFnbWVudCwge30pOwp9OwoKZXhwb3J0IGNvbnN0IFNob3dIaWRlID0gKHsgaW5pdGlhbFN0YXRlLCBjb21wb25lbnQsIGNsYXNzTmFtZSwgY2hpbGRyZW4sIHNpZ25hbCwgLi4ucHJvcHMgfSkgPT4gewogIGNvbnN0IFtoaWRkZW4sIHNldEhpZGRlbl0gPSB1c2VTdGF0ZShpbml0aWFsU3RhdGUgIT09IHVuZGVmaW5lZCA/IGluaXRpYWxTdGF0ZSA6ICFzaWduYWwoKSk7CgogIGlmKHNpZ25hbCkgc2lnbmFsLnN1YnNjcmliZSh2YWx1ZSA9PiBzZXRIaWRkZW4oIXZhbHVlKSk7CgogIHJldHVybiBoKGNvbXBvbmVudCwgeyBjbGFzc05hbWU6IGNsYXNzTmFtZXMoY2xhc3NOYW1lLCBoaWRkZW4gJiYgJ2hpZGRlbicpLCAuLi5wcm9wcyB9LCBjaGlsZHJlbik7Cn07CgpleHBvcnQgY29uc3QgRWRpdEJveCA9ICh7CiAgdmFsdWUgPSAnJywKICB0eXBlID0gJ2RpdicsCiAgY2xhc3NOYW1lLAogIGhpZGRlbiA9IGZhbHNlLAogIGN1cnJlbnQsCiAgZm9jdXMsCiAgLi4ucHJvcHMKfSkgPT4gewogIGlmKHR5cGVvZiBjdXJyZW50ID09ICdmdW5jdGlvbicpIHByb3BzLnJlZiA9IGlucHV0ID0+IGN1cnJlbnQoaW5wdXQpOwoKICBjb25zdCBvdXRlclByb3BzID0geyBjbGFzc05hbWU6IGNsYXNzTmFtZXMoY2xhc3NOYW1lLCBoaWRkZW4gJiYgJ2hpZGRlbicpIH07CgogIGlmKHR5cGUgPT0gJ2Zvcm0nKSBvdXRlclByb3BzLm9uU3VibWl0ID0gZXZlbnQgPT4gZXZlbnQucHJldmVudERlZmF1bHQoKTsKCiAgcmV0dXJuIGgoCiAgICB0eXBlLAogICAgb3V0ZXJQcm9wcywKICAgIGgoJ2lucHV0JywgewogICAgICB0eXBlOiAndGV4dCcsCiAgICAgIHZhbHVlLAogICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZXMoY2xhc3NOYW1lLCBoaWRkZW4gJiYgJ2hpZGRlbicpLAogICAgICAuLi5wcm9wcwogICAgfSkKICApOwp9OwoKZXhwb3J0IGNvbnN0IEZpbGUgPSAoewogIGxhYmVsLAogIG5hbWUsCiAgZGVzY3JpcHRpb24sCiAgaSwKICBrZXksCiAgY2xhc3NOYW1lID0gJ2ZpbGUnLAogIG9uUHVzaCwKICBzaWduYWwsCiAgZGF0YSwKICBkb2MsCiAgLi4ucHJvcHMKfSkgPT4gewogIC8vY29uc29sZS5sb2coJ0ZpbGUnLCBwcm9wcyk7CiAgY29uc3QgW2xvYWRlZCwgc2V0TG9hZGVkXSA9IHVzZVN0YXRlKE5hTik7CiAgaWYoc2lnbmFsKSBzaWduYWwuc3Vic2NyaWJlKGRhdGEgPT4gc2V0TG9hZGVkKGRhdGEucGVyY2VudCkpOwogIG9uUHVzaCA9CiAgICBvblB1c2ggfHwKICAgIChhc3luYyBzdGF0ZSA9PiB7CiAgICAgIGF3YWl0IGxvYWQobmFtZSk7CiAgICB9KTsKICBsZXQgaWQgPSBrZXkgfHwgaTsKICBsZXQgaWNvblByb3BzID0geyBzdHlsZTogeyBtaW5XaWR0aDogJzIwcHgnIC8qLCB3aWR0aDogJzQwcHgnLCBoZWlnaHQ6ICc0MHB4JyovIH0gfTsKICBsZXQgaWNvbiA9IC9icmQkL2kudGVzdChpZCArIGNsYXNzTmFtZSkKICAgID8gaChCb2FyZEljb24sIHsgLi4uaWNvblByb3BzLCBjbGFzc05hbWU6ICdpY29uJyB9KQogICAgOiAvc2NoJC9pLnRlc3QoaWQgKyBjbGFzc05hbWUpCiAgICA/IGgoU2NoZW1hdGljSWNvbiwgeyAuLi5pY29uUHJvcHMsIGNsYXNzTmFtZTogJ2ljb24nIH0pCiAgICA6IC9sYnIkL2kudGVzdChpZCArIGNsYXNzTmFtZSkKICAgID8gaChMaWJyYXJ5SWNvbiwgeyAuLi5pY29uUHJvcHMsIGNsYXNzTmFtZTogJ2ljb24nIH0pCiAgICA6IHVuZGVmaW5lZDsKICBsZXQgZmlsZUV4dCA9IHBhdGguZXh0bmFtZShuYW1lKS5yZXBsYWNlKC9eXC4vLCAnJyk7CiAgaWYoIWljb24gJiYgRmlsZUljb25zW2ZpbGVFeHRdKQogICAgaWNvbiA9IGgoRmlsZUljb25zW2ZpbGVFeHRdLCB7IC4uLmljb25Qcm9wcywgY2xhc3NOYW1lOiAnaWNvbicgfSk7CiAgaWYoaWQpIHsKICAgIGlkID0gaXNOYU4oK2lkKSA/IGkgOiBpZDsKICAgIGlkID0gJ2ZpbGUtJyArIGlkOwogIH0KICBsYWJlbCA9IGxhYmVsLnJlcGxhY2UoLyhbXlxzXSktKFteXHNdKS9nLCAnJDEgJDInKTsKICAvL2lmKGljb24pIGxhYmVsID0gbGFiZWwucmVwbGFjZSgvXC5bXi5dKiQvLCAnJyk7CiAgbGFiZWwgPSBoKExhYmVsLCB7IHRleHQ6IFV0aWwud29yZFdyYXAobGFiZWwsIDUwLCAnXG4nKSB9KTsKICBpZihkZXNjcmlwdGlvbikgewogICAgbGV0IHMgPSBVdGlsLm11bHRpUGFyYWdyYXBoV29yZFdyYXAoCiAgICAgIFV0aWwuc3RyaXBYTUwoVXRpbC5kZWNvZGVIVE1MRW50aXRpZXMoZGVzY3JpcHRpb24pKSwKICAgICAgNjAsCiAgICAgICdcbicKICAgICk7CiAgICBsZXQgZCA9IHMuc3BsaXQoL1xuL2cpLnNsaWNlKDAsIDEpOwogICAgbGFiZWwgPSBoKCdkaXYnLCB7fSwgWwogICAgICBsYWJlbCwKICAgICAgaCgKICAgICAgICAnZGl2JywKICAgICAgICB7IGNsYXNzTmFtZTogJ2Rlc2NyaXB0aW9uJyB9LAogICAgICAgIGQubWFwKGxpbmUgPT4gaCgncHJlJywgeyBjbGFzc05hbWU6ICdkZXNjcmlwdGlvbicgfSwgW2xpbmVdKSkKICAgICAgKQogICAgXSk7CiAgfQogIGljb24gPSBoKCdkaXYnLCB7IC4uLmljb25Qcm9wcywgY2xhc3NOYW1lOiAnaWNvbicgfSwgaWNvbik7CiAgcmV0dXJuIGgoCiAgICBJdGVtLAogICAgeyBjbGFzc05hbWUsIGlkLCAnZGF0YS1maWxlbmFtZSc6IG5hbWUsIGxhYmVsLCBvblB1c2gsIGljb24sIC4uLnByb3BzIH0sCiAgICBoKFByb2dyZXNzLCB7CiAgICAgIGNsYXNzTmFtZTogIWlzTmFOKGxvYWRlZCkgPyAndmlzaWJsZScgOiAnaGlkZGVuJywKICAgICAgcGVyY2VudDogbG9hZGVkCiAgICB9KQogICk7Cn07CgpleHBvcnQgY29uc3QgQ2hvb3NlciA9ICh7CiAgY2xhc3NOYW1lID0gJ2xpc3QnLAogIGl0ZW1DbGFzcyA9ICdpdGVtJywKICB0b29sdGlwID0gKCkgPT4gJycsCiAgaXRlbUNvbXBvbmVudCA9IE92ZXJsYXksCiAgaXRlbUZpbHRlciwKICBpdGVtcywKICBzb3J0Q29tcGFyZSwKICBvbkNoYW5nZSA9ICgpID0+IHt9LAogIG9uUHVzaCA9ICgpID0+IHt9LAogIC4uLnByb3BzCn0pID0+IHsKICBjb25zdCBbYWN0aXZlLCBzZXRBY3RpdmVdID0gdXNlU3RhdGUoLTEpOwogIGNvbnN0IFtmaWx0ZXIsIHNldEZpbHRlcl0gPSB1c2VTdGF0ZSgnKicpOwogIGNvbnN0IFtsaXN0LCBzZXRMaXN0XSA9IC8qdXNlU3RhdGUoaXRlbXMpOyovIHRya2wuaXMoaXRlbXMpID8gdXNlU3RhdGUoaXRlbXMoKSkgOiBbaXRlbXNdOwoKICBpZih0cmtsLmlzKGl0ZW1zKSkgaXRlbXMuc3Vic2NyaWJlKHNldExpc3QpOwoKICAvL2lmKHR5cGVvZiBpdGVtcyA9PSAnZnVuY3Rpb24nKSBjb25zb2xlLmVycm9yKCdpdGVtcygpOicsIGl0ZW1zKCkpOwoKICBjb25zdCBwdXNoSGFuZGxlciA9IGkgPT4gKGUsIHN0YXRlKSA9PiB7CiAgICBjb25zdCBwcmV2ID0gYWN0aXZlOwogICAgc3RhdGUgPT0gdHJ1ZSAmJiBzZXRBY3RpdmUoaSk7CiAgICBpZihpICE9IHByZXYgJiYgZS50eXBlLmVuZHNXaXRoKCdkb3duJykpIG9uQ2hhbmdlKGUsIGxpc3RbaV0sIGkpOwogICAgb25QdXNoKGUsIGksIHN0YXRlKTsKICB9OwoKICBpZihpdGVtRmlsdGVyKSB7CiAgICBzZXRGaWx0ZXIoaXRlbUZpbHRlcigpKTsKICAgIGl0ZW1GaWx0ZXIuc3Vic2NyaWJlKHZhbHVlID0+IHNldEZpbHRlcih2YWx1ZSkpOwogIH0KICBjb25zdCBsaXN0MnJlID0gbGlzdCA9PgogICAgbGlzdAogICAgICAubWFwKHBhcnQgPT4KICAgICAgICBVdGlsLnRyeUNhdGNoKCgpID0+IG5ldyBSZWdFeHAocGFydC50cmltKCkucmVwbGFjZSgvXC4vZywgJ1xcLicpLnJlcGxhY2UoL1wqL2csICcuKicpLCAnaScpKQogICAgICApCiAgICAgIC5maWx0ZXIociA9PiByICE9PSBudWxsKTsKICBjb25zdCBiYXIgPSBodG1sYGA7CiAgY29uc3QgcHJlRmlsdGVyID0gZmlsdGVyCiAgICAucmVwbGFjZSgvXHwvZywgJyB8ICcpCiAgICAucmVwbGFjZSgvXCsvLCAnICsnKQogICAgLnNwbGl0KC9ccysvZykKICAgIC5maWx0ZXIocCA9PiAhLzpcL1wvLy50ZXN0KHApKTsKICBjb25zdCBwbHVzID0gbGlzdDJyZShwcmVGaWx0ZXIuZmlsdGVyKHAgPT4gcC5zdGFydHNXaXRoKCcrJykpLm1hcChwID0+IHAucmVwbGFjZSgvXCsvZywgJycpKSk7CiAgY29uc3QgcmVzdCA9IHByZUZpbHRlci5maWx0ZXIocCA9PiAhcC5zdGFydHNXaXRoKCcrJykpLmpvaW4oJyAnKTsKICAvL2NvbnNvbGUubG9nKCdmaWx0ZXInLCB7IHBsdXMsIHJlc3QgfSk7CiAgY29uc3QgcmVMaXN0ID0gcmVzdAogICAgLnNwbGl0KC9cfC9nKQogICAgLm1hcChwID0+IHAudHJpbSgpKQogICAgLmZpbHRlcihwID0+IHAgIT0gJycpCiAgICAubWFwKHAgPT4gbGlzdDJyZShwLnNwbGl0KC9cc1xzKi9nKSkpOwogIC8vU2NvbnNvbGUuZGVidWcoJ3JlZ2V4OicsIC4uLnJlTGlzdCk7CiAgY29uc3QgcHJlZCA9IG5hbWUgPT4KICAgICFyZUxpc3QuZXZlcnkoYyA9PiAhYy5ldmVyeShyZSA9PiByZS50ZXN0KG5hbWUpKSkgJiYgcGx1cy5ldmVyeShyZSA9PiByZS50ZXN0KG5hbWUpKTsKICBjb25zdCBvdGhlciA9IGxpc3QuZmlsdGVyKCh7IG5hbWUgfSkgPT4gIXByZWQobmFtZSkpLm1hcChpID0+IGkubmFtZSk7CiAgY29uc3QgZGlzcGxheUxpc3QgPSBbLi4ubGlzdF0uc29ydChzb3J0Q29tcGFyZSk7CiAgLy9jb25zb2xlLmxvZygnZGlzcGxheUxpc3QnLCB7IGRpc3BsYXlMaXN0LCBzb3J0Q29tcGFyZSB9KTsKICBjb25zdCBjaGlsZHJlbiA9IGRpc3BsYXlMaXN0CiAgICAuZmlsdGVyKCh7IG5hbWUgfSkgPT4gcHJlZChuYW1lKSkKICAgIC5tYXAoKHZhbHVlLCBrZXkpID0+IHsKICAgICAgbGV0IHsgbmFtZSwgZGVzY3JpcHRpb24gLyo9ICcnKi8sIGksIHRpdGxlLCBudW1iZXIsIGRhdGEsIC4uLml0ZW0gfSA9IHZhbHVlOwogICAgICBkYXRhID0gZGF0YSB8fCBudW1iZXI7CiAgICAgIGkgPSBpID09PSB1bmRlZmluZWQgPyBudW1iZXIgOiBpOwogICAgICAvL2NvbnNvbGUubG9nKGBDaG9vc2VyIGl0ZW0gIyR7aX06YCwgeyBrZXlzOiBPYmplY3Qua2V5cyhpdGVtKSwgZGF0YSB9KTsKCiAgICAgIHJldHVybiBoKGl0ZW1Db21wb25lbnQsIHsKICAgICAgICBrZXk6IGksCiAgICAgICAgaSwKICAgICAgICBjbGFzc05hbWU6CiAgICAgICAgICB0eXBlb2YgaXRlbUNsYXNzID09ICdmdW5jdGlvbicKICAgICAgICAgICAgPyBpdGVtQ2xhc3ModmFsdWUpCiAgICAgICAgICAgIDogY2xhc3NOYW1lcyhpdGVtQ2xhc3MgfHwgY2xhc3NOYW1lICsgJy1pdGVtJywgKG5hbWUgKyAnJykucmVwbGFjZSgvLipcLi8sICcnKSksCiAgICAgICAgYWN0aXZlOiBpID09IGFjdGl2ZSwKICAgICAgICBvblB1c2g6IHB1c2hIYW5kbGVyKGkpLAogICAgICAgIGxhYmVsOiBuYW1lLnJlcGxhY2UobmV3IFJlZ0V4cCgnLiovJyksICcnKSwKICAgICAgICB0b29sdGlwOiB0b29sdGlwKHsKICAgICAgICAgIHRpdGxlLAogICAgICAgICAgbmFtZSwKICAgICAgICAgIGRlc2NyaXB0aW9uLAogICAgICAgICAgaSwKICAgICAgICAgIG51bWJlciwKICAgICAgICAgIGRhdGEsCiAgICAgICAgICAuLi5pdGVtCiAgICAgICAgfSksCiAgICAgICAgbmFtZSwKICAgICAgICBkZXNjcmlwdGlvbiwKICAgICAgICAuLi5pdGVtCiAgICAgIH0pOwogICAgfSk7CgogIHJldHVybiBoKAogICAgQ29udGFpbmVyLAogICAgeyBjbGFzc05hbWU6IGNsYXNzTmFtZXMoJ3BhbmVsJywgJ25vLXNlbGVjdCcsIGNsYXNzTmFtZSksIC4uLnByb3BzIH0sCiAgICBjaGlsZHJlbgogICk7Cn07Cgpjb25zdCBUb29sVGlwRm4gPSAoeyBuYW1lLCBkYXRhLCAuLi5pdGVtIH0pID0+IHsKICBsZXQgdG9vbHRpcCA9IGBuYW1lXHQke25hbWUucmVwbGFjZShuZXcgUmVnRXhwKCcuKi8nLCAnZycpLCAnJyl9YDsKCiAgZm9yKGxldCBmaWVsZCBvZiBbJ3R5cGUnLCAnc2l6ZScsICdzaGEnLCAncGF0aCddKQogICAgaWYoaXRlbVtmaWVsZF0gIT09IHVuZGVmaW5lZCkgdG9vbHRpcCArPSBgXG4ke2ZpZWxkfVx0JHtpdGVtW2ZpZWxkXX1gOwogIGlmKHR5cGVvZiBkYXRhID09ICdvYmplY3QnICYmIGRhdGEgIT0gbnVsbCkgewogICAgLy9jb25zb2xlLmxvZygnZGF0YScsZGF0YSk7CiAgICBkYXRhID0gT2JqZWN0LmVudHJpZXMoZGF0YSkKICAgICAgLmZpbHRlcigoW25hbWUsIHZhbHVlXSkgPT4gIWlzTmFOKHZhbHVlKSAmJiB2YWx1ZSAhPSBudWxsKQogICAgICAubWFwKChbbmFtZSwgdmFsdWVdKSA9PiBgJHtuYW1lfTogJHt2YWx1ZX1gKQogICAgICAuam9pbignXG4nKTsKICB9IGVsc2UgZGF0YSA9IFV0aWwuYWJicmV2aWF0ZShkYXRhKTsKICBpZihkYXRhKSB0b29sdGlwICs9IGBcbmRhdGFcdCR7ZGF0YX1gOwogIHJldHVybiB0b29sdGlwOwp9OwoKZXhwb3J0IGNvbnN0IEZpbGVMaXN0ID0gKHsKICBmaWxlcywKICBvbkNoYW5nZSwKICBvbkFjdGl2ZSwKICBmaWx0ZXIsCiAgc2hvd1NlYXJjaCwKICBmb2N1c1NlYXJjaCwKICBjdXJyZW50SW5wdXQsCiAgY2hhbmdlSW5wdXQsCiAgdGFnID0gJ2RpdicsCiAgbGlzdFRhZyA9ICdkaXYnLAogIHNvcnRLZXksCiAgc29ydE9yZGVyLAogIG1ha2VTb3J0Q29tcGFyZSwKICAuLi5wcm9wcwp9KSA9PiB7CiAgY29uc3QgW2FjdGl2ZSwgc2V0QWN0aXZlXSA9IHVzZVN0YXRlKHRydWUpOwogIGNvbnN0IFtpdGVtcywgc2V0SXRlbXNdID0gdXNlU3RhdGUoZmlsZXMoKSk7CiAgY29uc3Qga2V5ID0gdXNlVHJrbChzb3J0S2V5KTsKICBjb25zdCBvcmRlciA9IHVzZVRya2woc29ydE9yZGVyKTsKCiAgY29uc3Qgc29ydEZ1bmN0aW9uID0gbWFrZVNvcnRDb21wYXJlKGtleSk7CiAgY29uc3Qgc29ydENvbXBhcmUgPSAoYSwgYikgPT4gc29ydEZ1bmN0aW9uKGEsIGIpICogKG9yZGVyIHwgMSk7CgogIGZpbGVzLnN1YnNjcmliZSh2YWx1ZSA9PiBzZXRJdGVtcyh2YWx1ZSkpOwoKICBvbkFjdGl2ZS5zdWJzY3JpYmUodmFsdWUgPT4gc2V0QWN0aXZlKHZhbHVlKSk7CiAgY29uc3QgY2xhc3NOYW1lID0gY2xhc3NOYW1lcygnc2lkZWJhcicsIGFjdGl2ZSA/ICdhY3RpdmUnIDogJ2luYWN0aXZlJyk7CgogIHJldHVybiBoKHRhZywgeyBjbGFzc05hbWUgfSwgWwogICAgaChDb25kaXRpb25hbCwgewogICAgICBjb21wb25lbnQ6IEVkaXRCb3gsCiAgICAgIHR5cGU6ICdmb3JtJywKICAgICAgY2xhc3NOYW1lOiAnc2VhcmNoJywKICAgICAgYXV0b2ZvY3VzOiB0cnVlLAogICAgICBuYW1lOiAncXVlcnknLAogICAgICBpZDogJ3NlYXJjaCcsCiAgICAgIHBsYWNlaG9sZGVyOiAnU2VhcmNoJywKICAgICAgc2lnbmFsOiBzaG93U2VhcmNoLAogICAgICBmb2N1czogZm9jdXNTZWFyY2gsCiAgICAgIGN1cnJlbnQ6IGN1cnJlbnRJbnB1dCwKICAgICAgb25DaGFuZ2U6IGNoYW5nZUlucHV0LAogICAgICBvbklucHV0OiBjaGFuZ2VJbnB1dCwKICAgICAgdmFsdWU6IGZpbHRlcigpCiAgICB9KSwKICAgIGgoQ2hvb3NlciwgewogICAgICB0YWc6IGxpc3RUYWcsCiAgICAgIGNsYXNzTmFtZTogJ2xpc3QnLAogICAgICBpdGVtQ29tcG9uZW50OiBGaWxlLAogICAgICBpdGVtQ2xhc3M6IGl0ZW0gPT4gY2xhc3NOYW1lcygnZmlsZScsICdoY2VudGVyJywgaXRlbS5uYW1lLnJlcGxhY2UoLy4qXC4vZywgJycpKSwKICAgICAgaXRlbUZpbHRlcjogZmlsdGVyLAogICAgICBzb3J0Q29tcGFyZSwKICAgICAgaXRlbXMsCiAgICAgIHRvb2x0aXA6IFRvb2xUaXBGbiwKICAgICAgb25DaGFuZ2U6ICguLi5hcmdzKSA9PiBvbkNoYW5nZSguLi5hcmdzKSwKICAgICAgLi4ucHJvcHMKICAgIH0pCiAgXSk7Cn07CgpleHBvcnQgY29uc3QgUGFuZWwgPSAoeyBjbGFzc05hbWUsIGNoaWxkcmVuLCAuLi5wcm9wcyB9KSA9PgogIGgoQ29udGFpbmVyLCB7IGNsYXNzTmFtZTogY2xhc3NOYW1lcygncGFuZWwnLCBjbGFzc05hbWUpLCAuLi5wcm9wcyB9LCBjaGlsZHJlbik7CgpleHBvcnQgY29uc3QgV3JhcEluQXNwZWN0Qm94ID0gKGVuYWJsZSwgeyB3aWR0aCA9ICcxMDAlJywgYXNwZWN0ID0gMSwgY2xhc3NOYW1lIH0sIGNoaWxkcmVuKSA9PgogIGVuYWJsZQogICAgPyBoKAogICAgICAgIFNpemVkQXNwZWN0UmF0aW9Cb3gsCiAgICAgICAgewogICAgICAgICAgY2xhc3NOYW1lLAogICAgICAgICAgd2lkdGgsCiAgICAgICAgICBhc3BlY3QsCiAgICAgICAgICBzdHlsZTogeyBvdmVyZmxvdzogJ3Zpc2libGUnIH0KICAgICAgICB9LAogICAgICAgIGNoaWxkcmVuCiAgICAgICkKICAgIDogaCgKICAgICAgICAnZGl2JywKICAgICAgICB7CiAgICAgICAgICBjbGFzc05hbWUsCiAgICAgICAgICBzdHlsZTogeyB3aWR0aCB9CiAgICAgICAgfSwKICAgICAgICBjaGlsZHJlbgogICAgICApOwoKZXhwb3J0IGNvbnN0IEFzcGVjdFJhdGlvQm94ID0gKAogIHsKICAgIGFzcGVjdCA9IDEuMCwKICAgIGNoaWxkcmVuLAogICAgaW5zaWRlQ2xhc3NOYW1lLAogICAgb3V0c2lkZUNsYXNzTmFtZSwKICAgIG91dHNpZGVQcm9wcyA9IHt9LAogICAgc3R5bGUsCiAgICAuLi5wcm9wcwogIH0gLyogY29uc29sZS5kZWJ1ZygnQXNwZWN0UmF0aW9Cb3ggJywgeyBwcm9wcywgYXNwZWN0LCBjaGlsZHJlbiwgaW5zaWRlQ2xhc3NOYW1lLCBvdXRzaWRlQ2xhc3NOYW1lLCBzdHlsZSB9KTsqLwopID0+CiAgaChGcmFnbWVudCwge30sIFsKICAgIGgoCiAgICAgICdkaXYnLAogICAgICB7CiAgICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWVzKCdhc3BlY3QtcmF0aW8tYm94Jywgb3V0c2lkZUNsYXNzTmFtZSksCiAgICAgICAgc3R5bGU6IHsKICAgICAgICAgIGhlaWdodDogMCwKICAgICAgICAgIHBhZGRpbmdCb3R0b206ICgxLjAgLyBhc3BlY3QpICogMTAwICsgJyUnLAogICAgICAgICAgLi4uc3R5bGUKICAgICAgICB9CiAgICAgIH0sCiAgICAgIFsKICAgICAgICBoKAogICAgICAgICAgJ2RpdicsCiAgICAgICAgICB7CiAgICAgICAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lcygnYXNwZWN0LXJhdGlvLWJveC1pbnNpZGUnLCBpbnNpZGVDbGFzc05hbWUpCiAgICAgICAgICB9LAogICAgICAgICAgY2hpbGRyZW4KICAgICAgICApCiAgICAgIF0KICAgICkKICBdKTsKCmV4cG9ydCBjb25zdCBTaXplZEFzcGVjdFJhdGlvQm94ID0gKHsKICBpZCwKICB3aWR0aCwKICBoZWlnaHQsCiAgc3R5bGUsCiAgY2xhc3NOYW1lLAogIGNoaWxkcmVuLAogIG91dHNpZGVDbGFzc05hbWUsCiAgaW5zaWRlQ2xhc3NOYW1lLAogIGluc2lkZVByb3BzLAogIG91dHNpZGVQcm9wcyA9IHt9LAogIHNpemVDbGFzc05hbWUsCiAgc2l6ZVByb3BzID0ge30sCiAgb25DbGljaywKICAuLi5wcm9wcwp9KSA9PgogIGgoCiAgICAnZGl2JywKICAgIHsKICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWVzKAogICAgICAgICdhc3BlY3QtcmF0aW8tYm94LXNpemUnLAogICAgICAgIGNsYXNzTmFtZSAmJiBjbGFzc05hbWUgKyAnLXNpemUnLAogICAgICAgIHNpemVDbGFzc05hbWUKICAgICAgKSwKICAgICAgc3R5bGU6IHsgcG9zaXRpb246ICdyZWxhdGl2ZScsIHdpZHRoLCBoZWlnaHQsIC4uLnN0eWxlIH0sCiAgICAgIG9uQ2xpY2ssCiAgICAgIGlkCiAgICB9LAogICAgWwogICAgICBoKAogICAgICAgIEFzcGVjdFJhdGlvQm94LAogICAgICAgIHsKICAgICAgICAgIG91dHNpZGVDbGFzc05hbWU6IGNsYXNzTmFtZXMoCiAgICAgICAgICAgICdhc3BlY3QtcmF0aW8tYm94LW91dHNpZGUnLAogICAgICAgICAgICBjbGFzc05hbWUgJiYgY2xhc3NOYW1lICsgJy1vdXRzaWRlJywKICAgICAgICAgICAgb3V0c2lkZUNsYXNzTmFtZQogICAgICAgICAgKSwKICAgICAgICAgIG91dHNpZGVQcm9wcywKICAgICAgICAgIGluc2lkZUNsYXNzTmFtZTogaW5zaWRlQ2xhc3NOYW1lIHx8IGNsYXNzTmFtZSwKICAgICAgICAgIG9uQ2xpY2ssCiAgICAgICAgICAuLi5wcm9wcwogICAgICAgIH0sCiAgICAgICAgY2hpbGRyZW4KICAgICAgKQogICAgXQogICk7CgpleHBvcnQgY29uc3QgVHJhbnNmb3JtZWRFbGVtZW50ID0gKHsKICB0eXBlID0gJ2RpdicsCiAgaWQsCiAgYXNwZWN0LAogIGxpc3RlbmVyLAogIHN0eWxlID0geyBwb3NpdGlvbjogJ3JlbGF0aXZlJyB9LAogIGNsYXNzTmFtZSwKICBjaGlsZHJlbiA9IFtdLAogIC4uLnByb3BzCn0pID0+IHsKICAvKiAgY29uc3QgW3RyYW5zZm9ybSwgc2V0VHJhbnNmb3JtXSA9IHVzZVN0YXRlKG5ldyBUcmFuc2Zvcm1hdGlvbkxpc3QoKSk7CiAgLy9jb25zb2xlLmRlYnVnKCdUcmFuc2Zvcm1lZEVsZW1lbnQ6JywgeyBhc3BlY3QgfSk7CiAgLy8KICBpZihsaXN0ZW5lciAmJiBsaXN0ZW5lci5zdWJzY3JpYmUpCiAgICBsaXN0ZW5lci5zdWJzY3JpYmUodmFsdWUgPT4gewogICAgIC8vY29uc29sZS5sb2coJ1RyYW5zZm9ybWVkRWxlbWVudCBzZXRWYWx1ZScsIHZhbHVlKTsKICAgICAgaWYodmFsdWUgIT09IHVuZGVmaW5lZCkgc2V0VHJhbnNmb3JtKHZhbHVlICsgJycpOwogICAgfSk7Ki8KICBsZXQgdHJhbnNmb3JtID0gdXNlVHJrbChsaXN0ZW5lcik7CiAgcmV0dXJuIGgoCiAgICB0eXBlLAogICAgewogICAgICBpZCwKICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWVzKCd0cmFuc2Zvcm1lZC1lbGVtZW50JywgY2xhc3NOYW1lICYmIGNsYXNzTmFtZSArICctc2l6ZScpLAogICAgICBzdHlsZTogewogICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLAogICAgICAgIC4uLnN0eWxlLAogICAgICAgIHRyYW5zZm9ybTogdHJhbnNmb3JtLnRvU3RyaW5nKCdweCcpCiAgICAgIH0sCiAgICAgIGFzcGVjdCwKICAgICAgLi4ucHJvcHMKICAgIH0sCiAgICBjaGlsZHJlbgogICk7Cn07CgpleHBvcnQgY29uc3QgU2xpZGVyID0gKHsKICBtaW4gPSAwLAogIG1heCA9IDEwMCwKICB2YWx1ZTogaW5pdGlhbFZhbHVlID0gMCwKICBzdGVwID0gMSwKICBuYW1lID0gJ3NsaWRlcicsCiAgb3JpZW50ID0gJ2hvcml6b250YWwnLAogIGxhYmVsLAogIG9uQ2hhbmdlID0gdmFsdWUgPT4ge30sCiAgc3R5bGUgPSB7fSwKICBsZW5ndGgsCiAgLi4ucHJvcHMKfSkgPT4gewogIGNvbnN0IFt2YWx1ZSwgc2V0VmFsdWVdID0gdXNlU3RhdGUoaW5pdGlhbFZhbHVlKTsKICBjb25zdCBvbklucHV0ID0gZSA9PiB7CiAgICBjb25zdCB7IHRhcmdldCB9ID0gZTsKCiAgICBzZXRWYWx1ZSh0YXJnZXQudmFsdWUpOwogICAgb25DaGFuZ2UodGFyZ2V0LnZhbHVlKTsKICB9OwogIGxhYmVsID0gbGFiZWwgfHwgbmFtZTsKICBsZXQgZGltID0gbGVuZ3RoID8geyBbb3JpZW50ID09ICdob3Jpem9udGFsJyA/ICd3aWR0aCcgOiAnaGVpZ2h0J106IGxlbmd0aCB9IDoge307CgogIHJldHVybiBoKAogICAgJ2RpdicsCiAgICB7CiAgICAgIHN0eWxlOiB7CiAgICAgICAgZGlzcGxheTogJ2lubGluZS1mbGV4JywKICAgICAgICBmbGV4QmFzaXM6ICcxMDAlJywKICAgICAgICBmbGV4Rmxvdzogb3JpZW50ID09ICdob3Jpem9udGFsJyA/ICdyb3cnIDogJ2NvbHVtbicsCiAgICAgICAganVzdGlmeUNvbnRlbnQ6ICdzdHJldGNoJywKICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJywKICAgICAgICBmb250U2l6ZTogJzAuOGVtJywKICAgICAgICAuLi5zdHlsZQogICAgICB9CiAgICB9LAogICAgWwogICAgICAvL2goJ2xhYmVsJywgeyBmb3I6IG5hbWUgfSwgbGFiZWwpLAogICAgICBsYWJlbCwKICAgICAgaCgnaW5wdXQnLCB7CiAgICAgICAgbmFtZSwKICAgICAgICB0eXBlOiAncmFuZ2UnLAogICAgICAgIG1pbiwKICAgICAgICBtYXgsCiAgICAgICAgb3JpZW50LAogICAgICAgIHN0eWxlOiB7CiAgICAgICAgICBXZWJraXRBcHBlYXJhbmNlOiBgc2xpZGVyLSR7b3JpZW50fWAsCiAgICAgICAgICBkaXNwbGF5OiAnaW5saW5lJywKICAgICAgICAgIHdpZHRoOiA0MCwKICAgICAgICAgIGZsZXg6ICcxIDEgYXV0bycsCiAgICAgICAgICAuLi5kaW0KICAgICAgICB9LAogICAgICAgIC4uLnByb3BzLAogICAgICAgIHZhbHVlLAogICAgICAgIG9uSW5wdXQKICAgICAgfSksCiAgICAgIGgoJ2lucHV0JywgewogICAgICAgIG5hbWUsCiAgICAgICAgdHlwZTogJ251bWJlcicsCiAgICAgICAgbWluLAogICAgICAgIG1heCwKCiAgICAgICAgb3JpZW50LAogICAgICAgIHN0eWxlOiB7CiAgICAgICAgICB3aWR0aDogKCttYXggKyAnJykubGVuZ3RoICogMTAgKyAncHgnLAogICAgICAgICAgTW96QXBwZWFyYW5jZTogYHRleHRmaWVsZGAsCiAgICAgICAgICBXZWJraXRBcHBlYXJhbmNlOiAnbm9uZScsCiAgICAgICAgICBtYXJnaW46IDAsCiAgICAgICAgICBkaXNwbGF5OiAnaW5saW5lJywKICAgICAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicsCiAgICAgICAgICBmbGV4OiAnMCAxIGF1dG8nCiAgICAgICAgfSwKICAgICAgICAuLi5wcm9wcywKICAgICAgICB2YWx1ZSwKICAgICAgICBvbklucHV0CiAgICAgIH0pCiAgICBdCiAgKTsKfTsKCmV4cG9ydCBjb25zdCBDYW52YXMgPSAoeyBvbkluaXQsIC4uLnByb3BzIH0pID0+IHsKICBjb25zdCBbZHJhd2luZywgc2V0RHJhd2luZ10gPSB1c2VTdGF0ZShmYWxzZSk7CiAgY29uc3QgW3dpZHRoLCBzZXRXaWR0aF0gPSB1c2VTdGF0ZShwcm9wcy53aWR0aCk7CiAgY29uc3QgW2hlaWdodCwgc2V0SGVpZ2h0XSA9IHVzZVN0YXRlKHByb3BzLmhlaWdodCk7CiAgY29uc3QgY2FudmFzUmVmID0gdXNlUmVmKCk7CiAgY29uc3QgY3R4ID0gdXNlUmVmKCk7CgogIHVzZUVmZmVjdCgoKSA9PiB7CiAgICAvL2NvbnNvbGUuZGVidWcoJ2NhbnZhc1JlZi5jdXJyZW50JywgY2FudmFzUmVmLmN1cnJlbnQpOwogICAgY3R4LmN1cnJlbnQgPSBjYW52YXNSZWYuY3VycmVudC5nZXRDb250ZXh0KCcyZCcpOwogICAgLy9jb25zb2xlLmRlYnVnKCdjdHguY3VycmVudCcsIGN0eC5jdXJyZW50KTsKICAgIGNvbnN0IHsgb2Zmc2V0TGVmdDogeCwgb2Zmc2V0VG9wOiB5IH0gPSBjYW52YXNSZWYuY3VycmVudDsKCiAgICBpZih0eXBlb2Ygb25Jbml0ID09ICdmdW5jdGlvbicpCiAgICAgIG9uSW5pdChjdHguY3VycmVudCwgY2FudmFzUmVmLmN1cnJlbnQsIHsgd2lkdGgsIGhlaWdodCwgeCwgeSB9KTsKICB9LCBbXSk7CgogIC8qICBjb25zdCBbd2luZG93V2lkdGgsIHdpbmRvd0hlaWdodF0gPSB1c2VXaW5kb3dTaXplKCgpID0+IHsKICAgIHNldFdpZHRoKHdpbmRvdy5pbm5lcldpZHRoKQogICAgc2V0SGVpZ2h0KHdpbmRvdy5pbm5lckhlaWdodCkKICB9KSovCgogIGZ1bmN0aW9uIGhhbmRsZU1vdXNlTW92ZShlKSB7CiAgICAvL2FjdHVhbCBjb29yZGluYXRlcwogICAgY29uc3QgY29vcmRzID0gWwogICAgICBlLmNsaWVudFggLSBjYW52YXNSZWYuY3VycmVudC5vZmZzZXRMZWZ0LAogICAgICBlLmNsaWVudFkgLSBjYW52YXNSZWYuY3VycmVudC5vZmZzZXRUb3AKICAgIF07CiAgICBpZihkcmF3aW5nKSB7CiAgICAgIGN0eC5jdXJyZW50LmxpbmVUbyguLi5jb29yZHMpOwogICAgICBjdHguY3VycmVudC5zdHJva2UoKTsKICAgIH0KICAgIGlmKHByb3BzLmhhbmRsZU1vdXNlTW92ZSkgewogICAgICBwcm9wcy5oYW5kbGVNb3VzZU1vdmUoLi4uY29vcmRzKTsKICAgIH0KICB9CgogIGZ1bmN0aW9uIHN0YXJ0RHJhd2luZyhlKSB7CiAgICBjdHguY3VycmVudC5saW5lSm9pbiA9ICdyb3VuZCc7CiAgICBjdHguY3VycmVudC5saW5lQ2FwID0gJ3JvdW5kJzsKICAgIGN0eC5jdXJyZW50LmxpbmVXaWR0aCA9IDE7CiAgICBjdHguY3VycmVudC5zdHJva2VTdHlsZSA9IHByb3BzLmNvbG9yOwogICAgY3R4LmN1cnJlbnQuYmVnaW5QYXRoKCk7CiAgICAvL2FjdHVhbCBjb29yZGluYXRlcwogICAgY3R4LmN1cnJlbnQubW92ZVRvKAogICAgICBlLmNsaWVudFggLSBjYW52YXNSZWYuY3VycmVudC5vZmZzZXRMZWZ0LAogICAgICBlLmNsaWVudFkgLSBjYW52YXNSZWYuY3VycmVudC5vZmZzZXRUb3AKICAgICk7CiAgICBzZXREcmF3aW5nKHRydWUpOwogIH0KCiAgZnVuY3Rpb24gc3RvcERyYXdpbmcoKSB7CiAgICBjdHguY3VycmVudC5jbG9zZVBhdGgoKTsKICAgIHNldERyYXdpbmcoZmFsc2UpOwogIH0KCiAgcmV0dXJuIGgoCiAgICAnY2FudmFzJywKICAgIHsKICAgICAgcmVmOiBjYW52YXNSZWYsCiAgICAgIHdpZHRoLAogICAgICBoZWlnaHQsCiAgICAgIG9uTW91c2VEb3duOiBzdGFydERyYXdpbmcsCiAgICAgIG9uTW91c2VVcDogc3RvcERyYXdpbmcsCiAgICAgIG9uTW91c2VPdXQ6IHN0b3BEcmF3aW5nLAogICAgICBvbk1vdXNlTW92ZTogaGFuZGxlTW91c2VNb3ZlCiAgICB9LAogICAgW10KICApOwp9OwoKZXhwb3J0IGNvbnN0IENvbG9yV2hlZWwgPSAoeyByYWRpdXMgPSA1MCwgLi4ucHJvcHMgfSkgPT4gewogIGxldCBkYXRhOwogIGxldCBsZWZ0LCB0b3A7CiAgcmV0dXJuIGgoQ2FudmFzLCB7CiAgICB3aWR0aDogcmFkaXVzICogMiwKICAgIGhlaWdodDogcmFkaXVzICogMiwKICAgIG9uSW5pdDogKGN0eCwgY2FudmFzLCBzaXplKSA9PiB7CiAgICAgIGxlZnQgPSBzaXplLng7CiAgICAgIHRvcCA9IHNpemUueTsKCiAgICAgIGRyYXdDaXJjbGUoKTsKICAgICAgY3R4LmxpbmVXaWR0aCA9IDAuNzU7CiAgICAgIGN0eC5iZWdpblBhdGgoKTsKICAgICAgY3R4LmFyYyg1MCwgNTAsIDUwIC0gY3R4LmxpbmVXaWR0aCAvIDIsIDAsIE1hdGguY2VpbCgyICogTWF0aC5QSSkpOwogICAgICBjdHguc3Ryb2tlKCk7CgogICAgICBmdW5jdGlvbiBkcmF3Q2lyY2xlKCkgewogICAgICAgIGxldCByYWRpdXMgPSA1MDsKICAgICAgICBsZXQgaW1hZ2UgPSBjdHguY3JlYXRlSW1hZ2VEYXRhKDIgKiByYWRpdXMsIDIgKiByYWRpdXMpOwogICAgICAgIGRhdGEgPSBpbWFnZS5kYXRhOwoKICAgICAgICBmb3IobGV0IHggPSAtcmFkaXVzOyB4IDwgcmFkaXVzOyB4KyspIHsKICAgICAgICAgIGZvcihsZXQgeSA9IC1yYWRpdXM7IHkgPCByYWRpdXM7IHkrKykgewogICAgICAgICAgICBsZXQgW3IsIHBoaV0gPSB4eTJwb2xhcih4LCB5KTsKCiAgICAgICAgICAgIGlmKHIgPiByYWRpdXMpIHsKICAgICAgICAgICAgICAvL3NraXAgYWxsICh4LHkpIGNvb3JkaW5hdGVzIHRoYXQgYXJlIG91dHNpZGUgb2YgdGhlIGNpcmNsZQogICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICB9CgogICAgICAgICAgICBsZXQgZGVnID0gcmFkMmRlZyhwaGkpOwoKICAgICAgICAgICAgLy9GaWd1cmUgb3V0IHRoZSBzdGFydGluZyBpbmRleCBvZiB0aGlzIHBpeGVsIGluIHRoZSBpbWFnZSBkYXRhIGFycmF5LgogICAgICAgICAgICBsZXQgcm93TGVuZ3RoID0gMiAqIHJhZGl1czsKICAgICAgICAgICAgbGV0IGFkanVzdGVkWCA9IHggKyByYWRpdXM7IC8vY29udmVydCB4IGZyb20gWy01MCwgNTBdIHRvIFswLCAxMDBdICh0aGUgY29vcmRpbmF0ZXMgb2YgdGhlIGltYWdlIGRhdGEgYXJyYXkpIGxldCBhZGp1c3RlZFkgPSB5ICsgcmFkaXVzOyAvL2NvbnZlcnQgeSBmcm9tIFstNTAsIDUwXSB0byBbMCwgMTAwXSAodGhlIGNvb3JkaW5hdGVzIG9mIHRoZSBpbWFnZSBkYXRhIGFycmF5KSBsZXQgcGl4ZWxXaWR0aCA9IDQ7IC8vZWFjaCBwaXhlbCByZXF1aXJlcyA0IHNsb3RzIGluIHRoZSBkYXRhIGFycmF5IGxldCBpbmRleCA9IChhZGp1c3RlZFggKyBhZGp1c3RlZFkgKiByb3dMZW5ndGgpICogcGl4ZWxXaWR0aDsKCiAgICAgICAgICAgIGxldCBodWUgPSBkZWc7CiAgICAgICAgICAgIGxldCBzYXR1cmF0aW9uID0gciAvIHJhZGl1czsKICAgICAgICAgICAgbGV0IHZhbHVlID0gMS4wOwoKICAgICAgICAgICAgbGV0IFtyZWQsIGdyZWVuLCBibHVlXSA9IGhzdjJyZ2IoaHVlLCBzYXR1cmF0aW9uLCB2YWx1ZSk7CiAgICAgICAgICAgIGxldCBhbHBoYSA9IDI1NTsKCiAgICAgICAgICAgIGRhdGFbaW5kZXhdID0gcmVkOwogICAgICAgICAgICBkYXRhW2luZGV4ICsgMV0gPSBncmVlbjsKICAgICAgICAgICAgZGF0YVtpbmRleCArIDJdID0gYmx1ZTsKICAgICAgICAgICAgZGF0YVtpbmRleCArIDNdID0gYWxwaGE7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBjdHgucHV0SW1hZ2VEYXRhKGltYWdlLCAwLCAwKTsKICAgICAgfQoKICAgICAgZnVuY3Rpb24geHkycG9sYXIoeCwgeSkgewogICAgICAgIGxldCByID0gTWF0aC5zcXJ0KHggKiB4ICsgeSAqIHkpOwogICAgICAgIGxldCBwaGkgPSBNYXRoLmF0YW4yKHksIHgpOwogICAgICAgIHJldHVybiBbciwgcGhpXTsKICAgICAgfQoKICAgICAgLy9yYWQgaW4gWy3PgCwgz4BdIHJhbmdlCiAgICAgIC8vcmV0dXJuIGRlZ3JlZSBpbiBbMCwgMzYwXSByYW5nZQogICAgICBmdW5jdGlvbiByYWQyZGVnKHJhZCkgewogICAgICAgIHJldHVybiAoKHJhZCArIE1hdGguUEkpIC8gKDIgKiBNYXRoLlBJKSkgKiAzNjA7CiAgICAgIH0KCiAgICAgIC8vaHVlIGluIHJhbmdlIFswLCAzNjBdCiAgICAgIC8vc2F0dXJhdGlvbiwgdmFsdWUgaW4gcmFuZ2UgWzAsMV0KICAgICAgLy9yZXR1cm4gW3IsZyxiXSBlYWNoIGluIHJhbmdlIFswLDI1NV0KICAgICAgLy9TZWU6IGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0hTTF9hbmRfSFNWI0Zyb21fSFNWCiAgICAgIGZ1bmN0aW9uIGhzdjJyZ2IoaHVlLCBzYXR1cmF0aW9uLCB2YWx1ZSkgewogICAgICAgIGxldCBjaHJvbWEgPSB2YWx1ZSAqIHNhdHVyYXRpb247CiAgICAgICAgbGV0IGh1ZTEgPSBodWUgLyA2MDsKICAgICAgICBsZXQgeCA9IGNocm9tYSAqICgxIC0gTWF0aC5hYnMoKGh1ZTEgJSAyKSAtIDEpKTsKICAgICAgICBsZXQgcjEsIGcxLCBiMTsKICAgICAgICBpZihodWUxID49IDAgJiYgaHVlMSA8PSAxKSB7CiAgICAgICAgICBbcjEsIGcxLCBiMV0gPSBbY2hyb21hLCB4LCAwXTsKICAgICAgICB9IGVsc2UgaWYoaHVlMSA+PSAxICYmIGh1ZTEgPD0gMikgewogICAgICAgICAgW3IxLCBnMSwgYjFdID0gW3gsIGNocm9tYSwgMF07CiAgICAgICAgfSBlbHNlIGlmKGh1ZTEgPj0gMiAmJiBodWUxIDw9IDMpIHsKICAgICAgICAgIFtyMSwgZzEsIGIxXSA9IFswLCBjaHJvbWEsIHhdOwogICAgICAgIH0gZWxzZSBpZihodWUxID49IDMgJiYgaHVlMSA8PSA0KSB7CiAgICAgICAgICBbcjEsIGcxLCBiMV0gPSBbMCwgeCwgY2hyb21hXTsKICAgICAgICB9IGVsc2UgaWYoaHVlMSA+PSA0ICYmIGh1ZTEgPD0gNSkgewogICAgICAgICAgW3IxLCBnMSwgYjFdID0gW3gsIDAsIGNocm9tYV07CiAgICAgICAgfSBlbHNlIGlmKGh1ZTEgPj0gNSAmJiBodWUxIDw9IDYpIHsKICAgICAgICAgIFtyMSwgZzEsIGIxXSA9IFtjaHJvbWEsIDAsIHhdOwogICAgICAgIH0KCiAgICAgICAgbGV0IG0gPSB2YWx1ZSAtIGNocm9tYTsKICAgICAgICBsZXQgW3IsIGcsIGJdID0gW3IxICsgbSwgZzEgKyBtLCBiMSArIG1dOwoKICAgICAgICAvL0NoYW5nZSByLGcsYiB2YWx1ZXMgZnJvbSBbMCwxXSB0byBbMCwyNTVdCiAgICAgICAgcmV0dXJuIFsyNTUgKiByLCAyNTUgKiBnLCAyNTUgKiBiXTsKICAgICAgfQogICAgfQogIH0pOwp9OwoKZXhwb3J0IGNvbnN0IENyb3NzSGFpciA9ICh7IHBvc2l0aW9uLCBzaG93LCByYWRpdXMgPSAyMCwgLi4ucHJvcHMgfSkgPT4gewogIGNvbnN0IFtwb3MsIHNldFBvc10gPSB1c2VTdGF0ZShwb3NpdGlvbigpKTsKICBjb25zdCBbdmlzaWJsZSwgc2V0VmlzaWJsZV0gPSB1c2VTdGF0ZShzaG93KCkpOwoKICBwb3NpdGlvbi5zdWJzY3JpYmUodmFsdWUgPT4gc2V0UG9zKHZhbHVlKSk7CiAgc2hvdy5zdWJzY3JpYmUodmFsdWUgPT4gc2V0VmlzaWJsZSh2YWx1ZSkpOwoKICByZXR1cm4gaCgKICAgICdkaXYnLAogICAgewogICAgICBzdHlsZTogewogICAgICAgIHBvc2l0aW9uOiAnZml4ZWQnLAogICAgICAgIGxlZnQ6IGAke3Bvcy54IC0gcmFkaXVzfXB4YCwKICAgICAgICB0b3A6IGAke3Bvcy55IC0gcmFkaXVzfXB4YCwKICAgICAgICAuLi4odmlzaWJsZSA/IHt9IDogeyBkaXNwbGF5OiAnbm9uZScgfSksCiAgICAgICAgekluZGV4OiAxMDAwMDAKICAgICAgfQogICAgfSwKICAgIGgoCiAgICAgICdzdmcnLAogICAgICB7CiAgICAgICAgdmlld0JveDogJzAgMCAyMiAyMicsCiAgICAgICAgc3R5bGU6IHsKICAgICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLAogICAgICAgICAgd2lkdGg6IGAke3JhZGl1cyAqIDJ9cHhgLAogICAgICAgICAgaGVpZ2h0OiBgJHtyYWRpdXMgKiAyfXB4YAogICAgICAgIH0KICAgICAgfSwKICAgICAgaCgncGF0aCcsIHsKICAgICAgICBkOiAnTTExLjAwNCAyMmMtLjAwNy05LjE4NC0uMDEzLTEyLjgxNiAwLTIyTTAgMTEuMDA1YzkuMTgzLS4wMDcgMTIuODE2LS4wMTMgMjIgME0xNS4yNyAxMUE0LjI3MSA0LjI3MSAwIDAxMTEgMTUuMjcgNC4yNzEgNC4yNzEgMCAwMTYuNzI5IDExIDQuMjcxIDQuMjcxIDAgMDExMSA2LjcyOWE0LjI3MSA0LjI3MSAwIDAxNC4yNzEgNC4yN3ptMy42NDUuMDE1YTcuOTMyIDcuOTMxIDAgMDEtNy45MzIgNy45MzIgNy45MzIgNy45MzEgMCAwMS03LjkzMS03LjkzMiA3LjkzMiA3LjkzMSAwIDAxNy45MzEtNy45MzEgNy45MzIgNy45MzEgMCAwMTcuOTMyIDcuOTMxeicsCiAgICAgICAgZmlsbDogJ25vbmUnLAogICAgICAgIHN0cm9rZTogJyMwMDAnLAogICAgICAgIHN0cm9rZVdpZHRoOiAxCiAgICAgIH0pCiAgICApCiAgKTsKfTsKCmV4cG9ydCBjb25zdCBNb3ZlQ3Vyc29yID0gcHJvcHMgPT4KICBoKAogICAgJ3N2ZycsCiAgICB7CiAgICAgIGhlaWdodDogJzIyJywKICAgICAgd2lkdGg6ICcyMicsCiAgICAgIHhtbG5zOiAnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnCiAgICB9LAogICAgWwogICAgICBoKCdkZWZzJywge30pLAogICAgICBoKCdwYXRoJywgewogICAgICAgIGQ6ICdNMTkuMTczIDExLjcyMmwtMi4zOTMgMi4zOTMgMS4wNDQgMS4wNDRMMjIgMTAuOTgzbC00LjE3Ni00LjE3N0wxNi43OCA3Ljg1bDMuMTMyIDMuMTMzek01LjIyMSAxNC4xMTVsLTMuMTMyLTMuMTMyTDUuMjIgNy44NTEgNC4xNzcgNi44MDYgMCAxMC45ODNsNC4xNzcgNC4xNzd6bTYuNTM1LTExLjI4OGwyLjM5OCAyLjM5NCAxLjA0NC0xLjA0NEwxMS4wMTggMCA2Ljg0IDQuMTc3IDcuODg1IDUuMjJsMy4xMzItMy4xMzN6bS0xLjQ3MyAxNi4zNDVMNy44ODUgMTYuNzhsLTEuMDQ0IDEuMDQ0TDExLjAxNyAyMmw0LjE4MS00LjE3Ny0xLjA0NC0xLjA0NC0zLjEzNiAzLjEzMnptLTcuNDU1LTcuNDVoMTYuMzQ1bC43MzktLjc0LS43NC0uNzM5SDIuODI5bC0uNzQuNzR6bTguOTI4LTguODk1bC0uNzM5LS43MzktLjczNC43NHY3LjQxNWgxLjQ3M3ptLTEuNDczIDE2LjM0NWwuNzM0Ljc0Ljc0LS43NHYtNy40NTVoLTEuNDc0eicKICAgICAgfSkKICAgIF0KICApOwoKZXhwb3J0IGNvbnN0IERyb3BEb3duID0gKHsgY2hpbGRyZW4sIGludG8gLyogPSAnYm9keScqLywgaXNPcGVuID0gdHJrbChmYWxzZSksIC4uLnByb3BzIH0pID0+IHsKICBsZXQgW2J1dHRvbiwgb3ZlcmxheV0gPSBSZWFjdENvbXBvbmVudC50b0NoaWxkQXJyYXkoY2hpbGRyZW4pOwogIGNvbnN0IFtvcGVuLCBzZXRPcGVuXSA9IHVzZVN0YXRlKGlzT3BlbigpKTsKICBpc09wZW4uc3Vic2NyaWJlKHZhbHVlID0+IHNldE9wZW4odmFsdWUpKTsKICBjb25zdCBbcmVmLCByZWN0LCBlbGVtZW50XSA9IHVzZURpbWVuc2lvbnMoKTsKICBjb25zdCBvcmVmID0gdXNlRWxlbWVudChlbGVtZW50ID0+IHsKICAgIGlmKHJlY3QpIHsKICAgICAgY29uc3QgeHkgPSBuZXcgUmVjdChyZWN0KS50b1BvaW50cygpWzNdOwogICAgICBFbGVtZW50LnNldENTUyhlbGVtZW50LCB4eS50b0NTUygpKTsKICAgIH0KICB9KTsKICBjb25zdCBldmVudCA9IHVzZUNhbGxiYWNrKAogICAgdHJrbCgpLnN1YnNjcmliZSgoZSwgcHJldikgPT4gewogICAgICBjb25zdCB7IHgsIHksIGJ1dHRvbnMsIGJ1dHRvbiwgdGltZVN0YW1wIH0gPSBlOwogICAgICBjb25zdCBvcmVjdCA9IEVsZW1lbnQucmVjdChvcmVmLmN1cnJlbnQpOwogICAgICBjb25zdCB0aW1lU3RlcCA9IHRpbWVTdGFtcCAtIChwcmV2ID8gcHJldi50aW1lU3RhbXAgOiBOYU4pOwogICAgICBjb25zdCBwb2ludHMgPSBbbmV3IFBvaW50KHByZXYpLCBuZXcgUG9pbnQoZSldOwogICAgICBjb25zdCBkaWZmID0gUG9pbnQuZGlmZiguLi5wb2ludHMpOwogICAgICBjb25zdCBkaXN0ID0gUG9pbnQuZGlzdGFuY2UoLi4ucG9pbnRzKTsKICAgICAgY29uc3QgaW5zaWRlID0gb3JlY3QgJiYgb3JlY3QuaW5zaWRlKHsgeCwgeSB9KTsKICAgICAgLy8gICBjb25zb2xlLmRlYnVnKGUudHlwZSwgZGlmZiwgZGlzdCwge3RpbWVTdGVwLCBvcmVjdCwgaW5zaWRlLCB4LCB5LCBidXR0b25zLCBidXR0b24sIHRpbWVTdGFtcCB9KTsKICAgICAgaWYoZS5idXR0b24gPT0gMikgewogICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgICAgaWYob3JlZi5jdXJyZW50ICYmIG9wZW4gJiYgIWluc2lkZSkgewogICAgICAgIGlzT3BlbihmYWxzZSk7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICAgIHJldHVybiB0cnVlOwogICAgfSkKICApOwoKICB1c2VFdmVudCgnbW91c2Vkb3duJywgZXZlbnQpOwoKICBpZih0eXBlb2YgYnV0dG9uID09ICdmdW5jdGlvbicpIGJ1dHRvbiA9IGJ1dHRvbih7IHJlZjogcmVmLCAuLi5wcm9wcyB9KTsKICBpZih0eXBlb2Ygb3ZlcmxheSA9PSAnZnVuY3Rpb24nKSBvdmVybGF5ID0gb3ZlcmxheSh7IHJlZjogb3JlZiwgb25Nb3VzZVdoZWVsIH0pOwogIC8vY29uc29sZS5sb2coJ0Ryb3BEb3duIG9wZW49JywgeyBvcGVuIH0pOwoKICBmdW5jdGlvbiBvbk1vdXNlV2hlZWwoZSkgewogICAgY29uc3QgeyBkZWx0YVksIHdoZWVsRGVsdGEsIHdoZWVsRGVsdGFYLCB3aGVlbERlbHRhWSB9ID0gZTsKICAgIC8vY29uc29sZS5sb2coZS50eXBlLCAnOiAnLCB7IGRlbHRhWSwgd2hlZWxEZWx0YSwgd2hlZWxEZWx0YVgsIHdoZWVsRGVsdGFZIH0pOwogICAgZS5zdG9wUHJvcGFnYXRpb24oKTsKICAgIHJldHVybiBmYWxzZTsKICB9CgogIHJldHVybiBoKEZyYWdtZW50LCB7fSwgb3BlbiA/IFtidXR0b24sIGludG8gPyBoKFBvcnRhbCwgeyBpbnRvIH0sIG92ZXJsYXkpIDogb3ZlcmxheV0gOiBidXR0b24pOwp9OwoKZXhwb3J0IGNvbnN0IEZlbmNlID0gKHsgY2hpbGRyZW4sIHN0eWxlID0ge30sIHNpemVMaXN0ZW5lciwgYXNwZWN0TGlzdGVuZXIsIC4uLnByb3BzIH0pID0+IHsKICBjb25zdCBbZGltZW5zaW9ucywgc2V0RGltZW5zaW9uc10gPSB1c2VTdGF0ZShzaXplTGlzdGVuZXIoKSk7CiAgY29uc3QgW2FzcGVjdCwgc2V0QXNwZWN0XSA9IHVzZVN0YXRlKGFzcGVjdExpc3RlbmVyKCkpOwogIGlmKHNpemVMaXN0ZW5lciAmJiBzaXplTGlzdGVuZXIuc3Vic2NyaWJlKSBzaXplTGlzdGVuZXIuc3Vic2NyaWJlKHZhbHVlID0+IHNldERpbWVuc2lvbnModmFsdWUpKTsKICBpZihhc3BlY3RMaXN0ZW5lciAmJiBhc3BlY3RMaXN0ZW5lci5zdWJzY3JpYmUpCiAgICBhc3BlY3RMaXN0ZW5lci5zdWJzY3JpYmUodmFsdWUgPT4gc2V0QXNwZWN0KHZhbHVlKSk7CiAgLy9jb25zb2xlLmRlYnVnKCdGZW5jZSBkaW1lbnNpb25zOicsIGRpbWVuc2lvbnMpOwogIHJldHVybiBoKAogICAgVHJhbnNmb3JtZWRFbGVtZW50LAogICAgewogICAgICBpZDogJ2ZlbmNlJywKICAgICAgdHlwZTogJ2RpdicgfHwgU2l6ZWRBc3BlY3RSYXRpb0JveCwKICAgICAgJ2RhdGEtYXNwZWN0JzogYXNwZWN0LAogICAgICAvLyBsaXN0ZW5lcjogdHJhbnNmb3JtLAogICAgICBzdHlsZTogewogICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLAogICAgICAgIG1pbldpZHRoOiAnMTAwcHgnLAogICAgICAgIHRvcDogMCwKICAgICAgICBsZWZ0OiAwLAogICAgICAgIC4uLnN0eWxlLAogICAgICAgIC4uLmRpbWVuc2lvbnMKICAgICAgfSwKICAgICAgLi4ucHJvcHMKICAgIH0sCiAgICBjaGlsZHJlbgogICk7Cn07CgpleHBvcnQgY29uc3QgWm9vbWFibGUgPSAoeyB0eXBlID0gJ2RpdicsIHN0eWxlLCBjaGlsZHJlbiwgLi4ucHJvcHMgfSkgPT4gewogIGNvbnN0IHsgdHJhbnNmb3JtLCBwYW5ab29tSGFuZGxlcnMsIHNldENvbnRhaW5lciwgc2V0UGFuLCBzZXRab29tIH0gPSB1c2VQYW5ab29tKHsKICAgIHpvb21TZW5zaXRpdml0eTogMC4wMDEsCiAgICBtaW5ab29tOiAxLAogICAgaW5pdGlhbFpvb206IDQsCiAgICAvL21pblg6IDAsIG1pblk6IDAsIC8vbWF4WDogd2luZG93LmlubmVyV2lkdGgsIG1heFk6IHdpbmRvdy5pbm5lckhlaWdodCwKICAgIG9uUGFuLAogICAgb25ab29tCiAgfSk7CiAgZnVuY3Rpb24gb25QYW4oYXJnKSB7CiAgICAvL2NvbnNvbGUubG9nKCdvblBhbicsIGFyZyk7CiAgfQogIGZ1bmN0aW9uIG9uWm9vbShhcmcpIHsKICAgIC8vY29uc29sZS5sb2coJ29uWm9vbScsIGFyZyk7CiAgfQogIC8vIGNvbnNvbGUubG9nKCdab29tYWJsZSB0cmFuc2Zvcm06JywgdHJhbnNmb3JtKTsKICBsZXQgaW5uZXIgPSB0cmtsKCk7CiAgY29uc3QgcmVmID0gZWwgPT4gewogICAgLyogIGlmKGVsICYmIHR5cGVvZiBlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QgPT0gJ2Z1bmN0aW9uJykKICAgICAgICAgIC8vY29uc29sZS5sb2coJ1pvb21hYmxlLmNvbnRhaW5lcjonLCBlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSk7CgogICAgICAgIGlmKGlubmVyKCkpCiAgICAgICAgICAvL2NvbnNvbGUubG9nKCdab29tYWJsZS5pbm5lcjonLCBpbm5lcigpLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpKTsqLwogICAgc2V0Q29udGFpbmVyKGVsKTsKICB9OwogIHJldHVybiBoKAogICAgdHlwZSwKICAgIHsKICAgICAgLi4ucHJvcHMsCiAgICAgIC4uLnBhblpvb21IYW5kbGVycwogICAgfSwKICAgIGgodHlwZSwgeyByZWYsIHN0eWxlOiB7IC4uLnN0eWxlLCB0cmFuc2Zvcm0gfSB9LCBjaGlsZHJlbikKICApOwp9OwoKZXhwb3J0IGNvbnN0IERpc3BsYXlMaXN0ID0gKHsgZGF0YSwgLi4ucHJvcHMgfSkgPT4gewogIGxldCBbaXRlbXMsIHNldEl0ZW1zXSA9IHVzZVN0YXRlKFtdKTsKCiAgbGV0IGl0ZW1EYXRhID0gdXNlVmFsdWUoYXN5bmMgZnVuY3Rpb24qICgpIHsKICAgIGZvciBhd2FpdChsZXQgaXRlbSBvZiBkYXRhLnJlcGVhdGVyKSB7CiAgICAgIC8vY29uc29sZS5sb2coJ0Rpc3BsYXlMaXN0Lml0ZW06JywgaXRlbSk7CiAgICAgIHlpZWxkIGl0ZW07CiAgICB9CiAgfSk7CgogIGlmKGl0ZW1EYXRhKSBzZXRJdGVtcyhpdGVtRGF0YSk7CgogIC8vY29uc29sZS5sb2coJ2l0ZW1EYXRhOicsIGl0ZW1EYXRhKTsKCiAgcmV0dXJuIGgoRnJhZ21lbnQsIHt9LCBbJ0Rpc3BsYXlMaXN0JywgLi4uaXRlbXNdKTsKfTsKLyoKZXhwb3J0IGNvbnN0IENvbmRpdGlvbmFsID0gKHsgdHJrbCwgY2hpbGRyZW4sIC4uLnByb3BzIH0pID0+IHsKICBjb25zdCBbY29uZCwgc2V0Q29uZF0gPSB1c2VTdGF0ZSh0cmtsKCkpOwoKICB0cmtsLnN1YnNjcmliZShzZXRDb25kKTsrCgogIHJldHVybiBoKEZyYWdtZW50LCB7fSwgY29uZCA/IGNoaWxkcmVuIDogW10pOwp9OwoqLwpleHBvcnQgZGVmYXVsdCB7CiAgT3ZlcmxheSwKICBDb250YWluZXIsCiAgQ2hvb3NlciwKICBCdXR0b24sCiAgTGFiZWwsCiAgSXRlbSwKICBJY29uLAogIFByb2dyZXNzLAogIEJvYXJkSWNvbiwKICBGaWxlLAogIEZpbGVMaXN0LAogIFBhbmVsLAogIEFzcGVjdFJhdGlvQm94LAogIFdyYXBJbkFzcGVjdEJveCwKICBTaXplZEFzcGVjdFJhdGlvQm94LAogIENhbnZhcywKICBDb2xvcldoZWVsLAogIFNsaWRlciwKICBDcm9zc0hhaXIsCiAgTW92ZUN1cnNvciwKICBGZW5jZQp9OwoAAAAAAAAAAHSkAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSGAAAAAAAAJIYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1583,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALsYAAAAAAAAvBgAAAAAAAAAAAAAvBgAAAAAAADCGAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7GAAAAAAAALsYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1584,
					1,
					"insert",
					{
						"characters": "index"
					},
					"BQAAAMIYAAAAAAAAwxgAAAAAAAAAAAAAwxgAAAAAAADEGAAAAAAAAAAAAADEGAAAAAAAAMUYAAAAAAAAAAAAAMUYAAAAAAAAxhgAAAAAAAAAAAAAxhgAAAAAAADHGAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADCGAAAAAAAAMIYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1585,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMcYAAAAAAAAyRgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHGAAAAAAAAMcYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1586,
					1,
					"paste",
					null,
					"AQAAAMgYAAAAAAAA1hgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIGAAAAAAAAMgYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1587,
					1,
					"insert",
					{
						"characters": "-1"
					},
					"AgAAANYYAAAAAAAA1xgAAAAAAAAAAAAA1xgAAAAAAADYGAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADWGAAAAAAAANYYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1589,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANkYAAAAAAAA2hgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZGAAAAAAAANkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1628,
					1,
					"insert",
					{
						"characters": "onChange"
					},
					"CAAAABcWAAAAAAAAGBYAAAAAAAAAAAAAGBYAAAAAAAAZFgAAAAAAAAAAAAAZFgAAAAAAABoWAAAAAAAAAAAAABoWAAAAAAAAGxYAAAAAAAAAAAAAGxYAAAAAAAAcFgAAAAAAAAAAAAAcFgAAAAAAAB0WAAAAAAAAAAAAAB0WAAAAAAAAHhYAAAAAAAAAAAAAHhYAAAAAAAAfFgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXFgAAAAAAABcWAAAAAAAAAAAAAAAA8L8"
				],
				[
					1629,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAB8WAAAAAAAAIBYAAAAAAAAAAAAAIBYAAAAAAAAhFgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfFgAAAAAAAB8WAAAAAAAAAAAAAAAA8L8"
				],
				[
					1630,
					1,
					"insert",
					{
						"characters": " trkl(),"
					},
					"CAAAACEWAAAAAAAAIhYAAAAAAAAAAAAAIhYAAAAAAAAjFgAAAAAAAAAAAAAjFgAAAAAAACQWAAAAAAAAAAAAACQWAAAAAAAAJRYAAAAAAAAAAAAAJRYAAAAAAAAmFgAAAAAAAAAAAAAmFgAAAAAAACcWAAAAAAAAAAAAACcWAAAAAAAAKBYAAAAAAAAAAAAAKBYAAAAAAAApFgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhFgAAAAAAACEWAAAAAAAAAAAAAAAA8L8"
				],
				[
					1631,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACkWAAAAAAAAKhYAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApFgAAAAAAACkWAAAAAAAAAAAAAAAA8L8"
				],
				[
					1636,
					1,
					"insert_snippet",
					{
						"contents": "(${0:$SELECTION})"
					},
					"AgAAACIWAAAAAAAAIhYAAAAAAAAGAAAAdHJrbCgpIhYAAAAAAAAqFgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiFgAAAAAAACgWAAAAAAAAAAAAAAAA8L8"
				],
				[
					1637,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AgAAACMWAAAAAAAAJBYAAAAAAAAAAAAAJBYAAAAAAAAkFgAAAAAAAAYAAAB0cmtsKCk",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjFgAAAAAAACkWAAAAAAAAAAAAAAAA8L8"
				],
				[
					1638,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAACQWAAAAAAAAJRYAAAAAAAAAAAAAJRYAAAAAAAAmFgAAAAAAAAAAAAAmFgAAAAAAACcWAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkFgAAAAAAACQWAAAAAAAAAAAAAAAA8L8"
				],
				[
					1639,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACcWAAAAAAAAKBYAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnFgAAAAAAACcWAAAAAAAAAAAAAAAA8L8"
				],
				[
					1640,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACgWAAAAAAAAKhYAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoFgAAAAAAACgWAAAAAAAAAAAAAAAA8L8"
				],
				[
					1642,
					1,
					"right_delete",
					null,
					"AQAAACoWAAAAAAAAKhYAAAAAAAABAAAAKQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqFgAAAAAAACoWAAAAAAAAAAAAAAAA8L8"
				],
				[
					1657,
					1,
					"insert",
					{
						"characters": "\nkl"
					},
					"BAAAANAYAAAAAAAA0RgAAAAAAAAAAAAA0RgAAAAAAADXGAAAAAAAAAAAAADXGAAAAAAAANgYAAAAAAAAAAAAANgYAAAAAAAA2RgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQGAAAAAAAANAYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1658,
					2,
					"left_delete",
					null,
					"AgAAANgYAAAAAAAA2BgAAAAAAAABAAAAbNcYAAAAAAAA1xgAAAAAAAABAAAAaw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZGAAAAAAAANkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1659,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAANcYAAAAAAAA2BgAAAAAAAAAAAAA2BgAAAAAAADZGAAAAAAAAAAAAADZGAAAAAAAANoYAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXGAAAAAAAANcYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1660,
					1,
					"insert",
					{
						"characters": " j"
					},
					"AgAAANoYAAAAAAAA2xgAAAAAAAAAAAAA2xgAAAAAAADcGAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaGAAAAAAAANoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1661,
					1,
					"insert",
					{
						"characters": " =siblin"
					},
					"CAAAANwYAAAAAAAA3RgAAAAAAAAAAAAA3RgAAAAAAADeGAAAAAAAAAAAAADeGAAAAAAAAN8YAAAAAAAAAAAAAN8YAAAAAAAA4BgAAAAAAAAAAAAA4BgAAAAAAADhGAAAAAAAAAAAAADhGAAAAAAAAOIYAAAAAAAAAAAAAOIYAAAAAAAA4xgAAAAAAAAAAAAA4xgAAAAAAADkGAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcGAAAAAAAANwYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1662,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAAOQYAAAAAAAA5RgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkGAAAAAAAAOQYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1663,
					1,
					"insert_completion",
					{
						"completion": "siblingCounter",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "siblingCounter"
					},
					"AgAAAN4YAAAAAAAA3hgAAAAAAAAHAAAAc2libGluZ94YAAAAAAAA7BgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlGAAAAAAAAOUYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1664,
					1,
					"insert",
					{
						"characters": "-1;"
					},
					"AwAAAOwYAAAAAAAA7RgAAAAAAAAAAAAA7RgAAAAAAADuGAAAAAAAAAAAAADuGAAAAAAAAO8YAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsGAAAAAAAAOwYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1670,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAO8YAAAAAAAA8BgAAAAAAAAAAAAA8BgAAAAAAAD2GAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvGAAAAAAAAO8YAAAAAAAA////////738"
				],
				[
					1673,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAPYYAAAAAAAA9xgAAAAAAAAAAAAA9xgAAAAAAAD4GAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2GAAAAAAAAPYYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1674,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPgYAAAAAAAA+hgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4GAAAAAAAAPgYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1675,
					1,
					"insert",
					{
						"characters": "j"
					},
					"AQAAAPkYAAAAAAAA+hgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5GAAAAAAAAPkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1676,
					1,
					"left_delete",
					null,
					"AQAAAPkYAAAAAAAA+RgAAAAAAAABAAAAag",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6GAAAAAAAAPoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1677,
					1,
					"insert",
					{
						"characters": "j"
					},
					"AQAAAPkYAAAAAAAA+hgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5GAAAAAAAAPkYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1678,
					1,
					"insert",
					{
						"characters": " !="
					},
					"AwAAAPoYAAAAAAAA+xgAAAAAAAAAAAAA+xgAAAAAAAD8GAAAAAAAAAAAAAD8GAAAAAAAAP0YAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6GAAAAAAAAPoYAAAAAAAAAAAAAAAA8L8"
				],
				[
					1679,
					1,
					"insert",
					{
						"characters": " active"
					},
					"BwAAAP0YAAAAAAAA/hgAAAAAAAAAAAAA/hgAAAAAAAD/GAAAAAAAAAAAAAD/GAAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAARkAAAAAAAAAAAAAARkAAAAAAAACGQAAAAAAAAAAAAACGQAAAAAAAAMZAAAAAAAAAAAAAAMZAAAAAAAABBkAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9GAAAAAAAAP0YAAAAAAAAAAAAAAAA8L8"
				],
				[
					1684,
					1,
					"insert",
					{
						"characters": "j"
					},
					"AgAAABIZAAAAAAAAExkAAAAAAAAAAAAAExkAAAAAAAATGQAAAAAAABAAAABzaWJsaW5nQ291bnRlci0x",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASGQAAAAAAACIZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1688,
					1,
					"insert",
					{
						"characters": "\nonChange"
					},
					"DAAAABUZAAAAAAAAFhkAAAAAAAAAAAAAFhkAAAAAAAAcGQAAAAAAAAAAAAAWGQAAAAAAABYZAAAAAAAABgAAACAgICAgIBYZAAAAAAAAGhkAAAAAAAAAAAAAGhkAAAAAAAAbGQAAAAAAAAAAAAAbGQAAAAAAABwZAAAAAAAAAAAAABwZAAAAAAAAHRkAAAAAAAAAAAAAHRkAAAAAAAAeGQAAAAAAAAAAAAAeGQAAAAAAAB8ZAAAAAAAAAAAAAB8ZAAAAAAAAIBkAAAAAAAAAAAAAIBkAAAAAAAAhGQAAAAAAAAAAAAAhGQAAAAAAACIZAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVGQAAAAAAABUZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1692,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAUZAAAAAAAABhkAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFGQAAAAAAAAUZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1693,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAAYZAAAAAAAACBkAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAGGQAAAAAAAAYZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1694,
					1,
					"right_delete",
					null,
					"AQAAAAcZAAAAAAAABxkAAAAAAAABAAAAfQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHGQAAAAAAAAcZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1696,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACQZAAAAAAAAJhkAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkGQAAAAAAACQZAAAAAAAAAAAAAADgaUA"
				],
				[
					1697,
					1,
					"insert",
					{
						"characters": "j"
					},
					"AQAAACUZAAAAAAAAJhkAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlGQAAAAAAACUZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1700,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACcZAAAAAAAAKBkAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnGQAAAAAAACcZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1701,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAACgZAAAAAAAAKRkAAAAAAAAAAAAAKRkAAAAAAAAqGQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoGQAAAAAAACgZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1702,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACoZAAAAAAAAKxkAAAAAAAAAAAAAKxkAAAAAAAAvGQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqGQAAAAAAACoZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1712,
					1,
					"insert",
					{
						"characters": "event"
					},
					"BwAAACUZAAAAAAAAJhkAAAAAAAAAAAAAJhkAAAAAAAAmGQAAAAAAAAEAAABqKxkAAAAAAAArGQAAAAAAAAQAAAAgICAgJhkAAAAAAAAnGQAAAAAAAAAAAAAnGQAAAAAAACgZAAAAAAAAAAAAACgZAAAAAAAAKRkAAAAAAAAAAAAAKRkAAAAAAAAqGQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlGQAAAAAAACYZAAAAAAAAAAAAAAAA8L8"
				],
				[
					1745,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAFQXAAAAAAAAVhcAAAAAAAAAAAAAQBcAAAAAAABCFwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUFwAAAAAAAEAXAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYFgAAAAAAAL0WAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lib/hooks/useEvent.js",
			"settings":
			{
				"buffer_size": 706,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"isntall",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"fo",
				"Format CSS: Expanded"
			],
			[
				"forma",
				"Format CSS: Expanded"
			],
			[
				"css",
				"Format CSS: Expanded"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"tidy",
				"Tidy CSS"
			],
			[
				"edut ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"build",
				"Build With: prettier ${file_path}"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"",
				"Bookmarks: Select Previous"
			],
			[
				"schem",
				"Schemr: Random scheme"
			],
			[
				"extra",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"extrac",
				"Extract Sublime Package: Extract all packages"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Install Package Control"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"schemeed",
				"SchemeEditor: Edit Scheme (file picker)"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"repo",
				"Package Control: Remove Repository"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"upgra",
				"Package Control: Upgrade Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"adv",
				"Package Control: Advanced Install Package"
			],
			[
				"ad",
				"Package Control: Advanced Install Package"
			],
			[
				"adva",
				"Package Control: Advanced Install Package"
			],
			[
				"edi",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove pac",
				"Package Control: Remove Package"
			],
			[
				"outl",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Debugger: Add or Select Configuration"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 442.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/mnt/v3server-roman/Projects/plot-cv"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/lib/preact.js",
		"/home/roman/Projects/plot-cv/lib/preact.mjs",
		"/home/roman/Projects/plot-cv/lib/compat.mjs",
		"/home/roman/Projects/plot-cv/lib/dom/preactComponent.js",
		"/home/roman/Projects/plot-cv/lib/hooks.mjs",
		"/home/roman/Projects/plot-cv/style.css",
		"/home/roman/Projects/plot-cv/preact.mjs",
		"/home/roman/Projects/plot-cv/components.js",
		"/home/roman/Projects/plot-cv/lib/eagle/element.js",
		"/home/roman/Projects/plot-cv/lib/dom/element.js",
		"/home/roman/Projects/plot-cv/lib/eagle/schematicRenderer.js",
		"/home/roman/Projects/plot-cv/lib/hooks/useTrkl.js",
		"/home/roman/Projects/plot-cv/plot-cv/components.js",
		"/home/roman/Projects/plot-cv/static/svg/sort-size-2.svg",
		"/home/roman/Projects/plot-cv/static/svg/sort-name-2.svg",
		"/home/roman/Projects/plot-cv/static/svg/sort-time-2.svg",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/commands.js",
		"/home/roman/Projects/plot-cv/static/debugger.css",
		"/home/roman/Projects/plot-cv/tlite.css",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvPipeline.js",
		"/home/roman/Projects/plot-cv/imagePipeline.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/qjsm.c",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvVideo.js",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvHighGUI.js",
		"/home/roman/Projects/plot-cv/test-cv.js",
		"/home/roman/Projects/plot-cv/lib/geom/align.js",
		"/home/roman/Projects/plot-cv/lib/geom/rect.js",
		"/home/roman/Projects/plot-cv/test-image.js",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/inotify_event.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/palette.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/geometry.hpp",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.js",
		"/home/roman/Projects/plot-cv/plot-cv/test-voronoi.js",
		"/home/roman/Projects/plot-cv/quickjs/README.md",
		"/home/roman/Projects/plot-cv/quickjs/readme.txt",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.hpp",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/home/roman/Projects/plot-cv/lib/geom/point.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/skeletonization.hpp",
		"/home/roman/Projects/plot-cv/server.js",
		"/home/roman/Projects/plot-cv/package.json",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_cv.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/gif_write.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/tests/test_gif.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/png_write.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/dominant-colors/DomColors.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/dominant_colors_grabber.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_imgproc.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/dominant_colors_grabber.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/qjs-opencv/gifenc/example.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/util.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/dominant-colors/DomColors.h",
		"/home/roman/Projects/plot-cv/qjs-opencv/dominant-colors/.git",
		"/home/roman/Projects/plot-cv/image-helpers.js",
		"/home/roman/Projects/plot-cv/test-eagle.js",
		"/home/roman/Projects/plot-cv/test-ecmascript2.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_mat.cpp",
		"/home/roman/Projects/plot-cv/test-video.config.json",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_contour.hpp",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/qjs-opencv/jsbindings.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_array.hpp",
		"/home/roman/Projects/plot-cv/test-repeater.js",
		"/home/roman/Projects/qjs-opencv/js_umat.hpp",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_typed_array.hpp",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mmap.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/cv-shell.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/roman/Projects/plot-cv/quickjs/list.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/qjs-opencv/cmake/FindOpenCV.cmake",
		"/home/roman/Projects/plot-cv/test-xml.js",
		"/home/roman/Projects/plot-cv/webSocket.js",
		"/home/roman/Projects/plot-cv/lib/repeater/timers.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs-libc.c",
		"/home/roman/Projects/plot-cv/qjs-modules/lib/terminal.js",
		"/home/roman/Projects/plot-cv/convert-imports.js",
		"/home/roman/Projects/plot-cv/clang-list.js",
		"/home/roman/Projects/plot-cv/lib/ecmascript/estree.js",
		"/home/roman/Projects/plot-cv/resolve-imports.js",
		"/home/roman/Projects/plot-cv/test-readdir.js",
		"/home/roman/Projects/plot-cv/RecursiveIterator.js",
		"/home/roman/Projects/plot-cv/lib/png.js",
		"/home/roman/Projects/plot-cv/lib/jpegSize.js",
		"/home/roman/Projects/plot-cv/lib/jpeg.js",
		"/home/roman/Projects/plot-cv/lib/image-info.js",
		"/home/roman/Projects/plot-cv/lib/image-size.js",
		"/home/roman/Projects/plot-cv/lib/repeater/limiters.js",
		"/home/roman/Projects/plot-cv/lib/repeater/pubsub.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/debugger.js",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.ts",
		"/home/roman/Projects/plot-cv/plot-cv/cv-shell.js",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/userscript-build.js",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/test-svgpath.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_misc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/test-lexer.js",
		"/home/roman/Projects/plot-cv/test-bpg.html",
		"/home/roman/Projects/plot-cv/test-call.js",
		"/home/roman/Projects/plot-cv/output-267.svg",
		"/home/roman/Projects/plot-cv/noise.js",
		"/home/roman/Projects/plot-cv/dump-structs.js",
		"/home/roman/Projects/plot-cv/debuggerprotocol.js",
		"/home/roman/Projects/plot-cv/list-proxies.js",
		"/home/roman/Projects/plot-cv/lib.js",
		"/home/roman/Projects/plot-cv/jsobjstruct.c",
		"/home/roman/Projects/plot-cv/example_gl2.c",
		"/home/roman/Projects/plot-cv/debugger.html",
		"/home/roman/Projects/plot-cv/lib/svg/path.js",
		"/home/roman/Projects/plot-cv/undefinedundefined63undefined"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 118.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,,-*/libwebsockets/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/build-*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/build/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexed*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*.min.js,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/indexex/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake,<open files>",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/quickjs-k*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnode*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,-*/qnoed*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,-*/qjs-cache*/*,-*/txiki*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/quickjs-2*/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,*.c,*.h,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp,/home/roman/Projects/plot-cv/cmake,*.cmake",
			"/home/roman/Projects/plot-cv,*.js,*.cmake,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*,/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv,*.js,*.cpp,*.hpp,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*,-*/acorn/*",
			"/home/roman/Projects/plot-cv,/home/roman/Projects/plot-cv/lib,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*,-*/quickjs/*",
			"/home/roman/Projects/plot-cv,*.js,-*/node_modules/*",
			"/home/roman/Projects/plot-cv,*.js",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h",
			"/home/roman/Projects/plot-cv/src,*.cpp,*.hpp",
			"/home/roman/Projects/plot-cv/quickjs,*.c,*.h"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"ResizeHandler",
			"\\.properties",
			"rect",
			"handler",
			"MouseIterator",
			"filesystem",
			"std\\.",
			"inspect",
			"          \n",
			"sort.*svg",
			"ButtonGroup",
			"useEvent",
			"mousedown",
			"ButtonGr",
			"sort-",
			"createRef",
			"IS_HYDRATE",
			"hydrate",
			"createRef",
			"preactCom",
			"Fragment",
			"vnode",
			"cloneElement",
			"cloneEleme",
			"clone",
			"\\(Button,",
			"\\(Button, ",
			"'group'",
			"ButtonGroup",
			"black",
			"#000",
			"black",
			"#000",
			"#fff",
			"#000",
			"fill",
			"button",
			"components.js",
			"ButtonGroup",
			"align",
			"CCimage",
			"resize",
			"fromImages",
			"input",
			"'ImageSize",
			"seq\\.size",
			"FAIL:",
			"ImageSize",
			"dst",
			"firstSize",
			"dst0Size",
			"videoSize",
			"video\\.",
			"videos",
			"ImageSequence",
			"fetch",
			"'/save'",
			"save'",
			"Compile\\(",
			"args",
			"SpawnCom",
			"SpawnCm",
			"-I",
			"'I'",
			"'-I'",
			"'-I?",
			"'-I'",
			"-I",
			"document",
			"global\\.",
			"outputName",
			"ResponseData",
			"dirs\\[",
			"dirs =",
			"'Request",
			"data'",
			"LoadFile",
			"LoadDoc",
			"file,",
			"file:",
			"POST files",
			"main",
			"fs\\.",
			"fsPromises",
			"\\.read",
			"post",
			"readdir",
			"safeStat",
			"filesystem",
			"fsProm",
			"\\.read",
			"fsProm",
			"readFile",
			"fsProm",
			"getDescription",
			"fsPromises",
			"open",
			"fs\\.promises",
			"fs.promises",
			"'req'",
			"'req",
			"dirs =",
			"names",
			"app.use",
			"util",
			"runMount",
			"getIterators",
			"GetFilesList",
			"files",
			"'data'",
			"POINT_METHOD_NORM",
			"fromAngle",
			"\\n\\n\\n",
			"^}$",
			"std::vector",
			"C<",
			"gif_write",
			"join",
			"paletteApply",
			"js_error_print",
			"Failed loading",
			"fs.open",
			"console.log",
			"'unhandled'",
			"'dst'",
			"invert",
			"JS_EValFunction",
			"js_color_read"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"fs",
			"black",
			"white",
			"input.",
			"'save'",
			"globalThis.",
			"fsPromises",
			"\\n\\n",
			"}\\n",
			"vector",
			"std::vector<",
			"log.info",
			"waitFor",
			"'",
			"'\\\\x\\1'",
			"'\\x\\1'",
			"200",
			"120",
			"out += ",
			"",
			"mask",
			"mas",
			"",
			"['.",
			"currentFile",
			"/* prettier-ignore */ import",
			"ShowSource",
			"/* prettier-ignore */ Object.assign(globalThis",
			"component",
			"",
			"token.id",
			"loc",
			"lexeme",
			"body",
			"toArrayBuffer",
			"toString",
			"waitRead",
			"dbg",
			"toString",
			"this.#events",
			"%2i",
			"-9s",
			"proc",
			"fs.",
			"jsm_module_record",
			"stepMode",
			"this.",
			"= require('\\1')",
			"const ",
			"fs",
			"ReadImport",
			"1000",
			"1000l",
			"SockAddr",
			"writeFileSync(",
			"...args",
			"iconProps",
			"js_module_get",
			"js_module_find",
			"jsm_load_module",
			"js_\\1",
			"js_load_\\1",
			"js_eval_binary",
			"ifndef NDEBUG",
			"lex->start",
			"lex->byte_length",
			"lex->pos",
			"lex->token_id",
			"lex->byte_length",
			"lex->pos",
			"tokens",
			"this.columns",
			"terminal.flush()",
			"f.flush()",
			"f.puts(",
			"500",
			"\\1this.\\2",
			"debug",
			"ucsLength",
			"this.",
			"this.out.flush",
			"history",
			"\\1//console.log",
			"puts",
			"export function",
			"type",
			"header.",
			"#000000",
			"a",
			"MakeListCommand",
			"si",
			"pi",
			"plen",
			"slen",
			"pattern[0]",
			"string[0]",
			"string.length",
			"pattern.length",
			"string.length",
			"export const",
			"this",
			"item",
			"js_deep_defaultflags",
			"sheet",
			"makeListMembersCmd",
			"get_websocket_obj",
			"0",
			"searchPath",
			"makeValueDescriptor",
			"socket",
			"",
			", func",
			"func,",
			"func",
			"function ",
			"readline",
			"",
			"(",
			"Pointer",
			"deref",
			"export \\1",
			"log",
			"\\1//console",
			"`${name}",
			"js_keypoint_data2(ctx, ",
			"String.fromCharCode",
			"UTF8MinCode",
			"UTF8FirstCodeMask"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 296,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/mnt/v3server-roman/Projects/plot-cv/grammar-geda-netlist.js",
							"function_name_status_row": 38,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									118,
									145
								],
								[
									156,
									170
								],
								[
									357,
									387
								],
								[
									463,
									486
								],
								[
									555,
									579
								],
								[
									640,
									668
								],
								[
									750,
									772
								],
								[
									842,
									869
								],
								[
									941,
									962
								],
								[
									1028,
									1051
								],
								[
									1116,
									1138
								],
								[
									1203,
									1227
								],
								[
									1287,
									1311
								],
								[
									1371,
									1395
								],
								[
									1455,
									1479
								],
								[
									1539,
									1569
								],
								[
									1656,
									1676
								]
							],
							"symlist":
							[
								"  wrap(parser, name)",
								"\t(str, pos) =>",
								"  geda_netlist(...args)",
								"  value(...args)",
								"  values(...args)",
								"  components(...args)",
								"  nets(...args)",
								"  component(...args)",
								"  net(...args)",
								"DELIM(...args)",
								"TEXT(...args)",
								"LBRACK(...args)",
								"RBRACK(...args)",
								"LPAREN(...args)",
								"RPAREN(...args)",
								"LINE_COMMENT(...args)",
								"NL(...args)"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1638108692.14,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 96862,
						"regions":
						{
							"col_00000001":
							{
								"flags": 16,
								"regions":
								[
									[
										88574,
										88583
									]
								],
								"scope": "col_00000001"
							},
							"col_00000001_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00000001_circle.png",
								"regions":
								[
									[
										88478,
										88478
									]
								],
								"scope": "col_gutter"
							},
							"col_0000FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										45206,
										45210
									]
								],
								"scope": "col_0000FFFF"
							},
							"col_0000FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000FFFF_circle.png",
								"regions":
								[
									[
										45189,
										45189
									]
								],
								"scope": "col_gutter"
							},
							"col_0078F0FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21221,
										21228
									]
								],
								"scope": "col_0078F0FF"
							},
							"col_0078F0FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0078F0FF_circle.png",
								"regions":
								[
									[
										21171,
										21171
									]
								],
								"scope": "col_gutter"
							},
							"col_00DD0080":
							{
								"flags": 16,
								"regions":
								[
									[
										23312,
										23321
									]
								],
								"scope": "col_00DD0080"
							},
							"col_00DD0080_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00DD0080_circle.png",
								"regions":
								[
									[
										23299,
										23299
									]
								],
								"scope": "col_gutter"
							},
							"col_00FF00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										23376,
										23380
									]
								],
								"scope": "col_00FF00FF"
							},
							"col_00FF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FF00FF_circle.png",
								"regions":
								[
									[
										23330,
										23330
									]
								],
								"scope": "col_gutter"
							},
							"col_00FFFFBF":
							{
								"flags": 16,
								"regions":
								[
									[
										45348,
										45368
									]
								],
								"scope": "col_00FFFFBF"
							},
							"col_00FFFFBF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FFFFBF_circle.png",
								"regions":
								[
									[
										45249,
										45249
									]
								],
								"scope": "col_gutter"
							},
							"col_00FFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										22787,
										22791
									]
								],
								"scope": "col_00FFFFFF"
							},
							"col_00FFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_00FFFFFF_circle.png",
								"regions":
								[
									[
										22713,
										22713
									]
								],
								"scope": "col_gutter"
							},
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										11269,
										11273
									],
									[
										22386,
										22391
									],
									[
										22920,
										22924
									],
									[
										23091,
										23095
									],
									[
										24333,
										24337
									],
									[
										24903,
										24907
									],
									[
										28612,
										28617
									],
									[
										28688,
										28693
									],
									[
										44883,
										44887
									],
									[
										78190,
										78202
									],
									[
										85966,
										85970
									],
									[
										87963,
										87967
									],
									[
										88117,
										88121
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										11190,
										11190
									],
									[
										22371,
										22371
									],
									[
										22905,
										22905
									],
									[
										23078,
										23078
									],
									[
										24318,
										24318
									],
									[
										24888,
										24888
									],
									[
										28557,
										28557
									],
									[
										28637,
										28637
									],
									[
										44838,
										44838
									],
									[
										78147,
										78147
									],
									[
										85906,
										85906
									],
									[
										87910,
										87910
									],
									[
										88049,
										88049
									]
								],
								"scope": "col_gutter"
							},
							"col_1EE67BFF":
							{
								"flags": 16,
								"regions":
								[
									[
										21458,
										21465
									]
								],
								"scope": "col_1EE67BFF"
							},
							"col_1EE67BFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_1EE67BFF_circle.png",
								"regions":
								[
									[
										21407,
										21407
									]
								],
								"scope": "col_gutter"
							},
							"col_2E17B3FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21262,
										21269
									]
								],
								"scope": "col_2E17B3FF"
							},
							"col_2E17B3FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_2E17B3FF_circle.png",
								"regions":
								[
									[
										21243,
										21243
									]
								],
								"scope": "col_gutter"
							},
							"col_3394E8FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21469,
										21476
									]
								],
								"scope": "col_3394E8FF"
							},
							"col_3394E8FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_3394E8FF_circle.png",
								"regions":
								[
									[
										21407,
										21407
									]
								],
								"scope": "col_gutter"
							},
							"col_34DB05FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21210,
										21217
									]
								],
								"scope": "col_34DB05FF"
							},
							"col_34DB05FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_34DB05FF_circle.png",
								"regions":
								[
									[
										21171,
										21171
									]
								],
								"scope": "col_gutter"
							},
							"col_3578E6FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21284,
										21291
									]
								],
								"scope": "col_3578E6FF"
							},
							"col_3578E6FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_3578E6FF_circle.png",
								"regions":
								[
									[
										21243,
										21243
									]
								],
								"scope": "col_gutter"
							},
							"col_554D85FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21273,
										21280
									]
								],
								"scope": "col_554D85FF"
							},
							"col_554D85FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_554D85FF_circle.png",
								"regions":
								[
									[
										21243,
										21243
									]
								],
								"scope": "col_gutter"
							},
							"col_657FFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										79776,
										79793
									]
								],
								"scope": "col_657FFFFF"
							},
							"col_657FFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_657FFFFF_circle.png",
								"regions":
								[
									[
										79755,
										79755
									]
								],
								"scope": "col_gutter"
							},
							"col_7F7F7F54":
							{
								"flags": 16,
								"regions":
								[
									[
										11486,
										11507
									]
								],
								"scope": "col_7F7F7F54"
							},
							"col_7F7F7F54_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_7F7F7F54_circle.png",
								"regions":
								[
									[
										11439,
										11439
									]
								],
								"scope": "col_gutter"
							},
							"col_808080FF":
							{
								"flags": 16,
								"regions":
								[
									[
										67845,
										67849
									],
									[
										70238,
										70242
									]
								],
								"scope": "col_808080FF"
							},
							"col_808080FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_808080FF_circle.png",
								"regions":
								[
									[
										67789,
										67789
									],
									[
										70170,
										70170
									]
								],
								"scope": "col_gutter"
							},
							"col_8D1AE6FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21232,
										21239
									]
								],
								"scope": "col_8D1AE6FF"
							},
							"col_8D1AE6FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_8D1AE6FF_circle.png",
								"regions":
								[
									[
										21171,
										21171
									]
								],
								"scope": "col_gutter"
							},
							"col_B35917FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21306,
										21313
									]
								],
								"scope": "col_B35917FF"
							},
							"col_B35917FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_B35917FF_circle.png",
								"regions":
								[
									[
										21243,
										21243
									]
								],
								"scope": "col_gutter"
							},
							"col_D0E634FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21447,
										21454
									]
								],
								"scope": "col_D0E634FF"
							},
							"col_D0E634FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_D0E634FF_circle.png",
								"regions":
								[
									[
										21407,
										21407
									]
								],
								"scope": "col_gutter"
							},
							"col_E64535FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21425,
										21432
									]
								],
								"scope": "col_E64535FF"
							},
							"col_E64535FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E64535FF_circle.png",
								"regions":
								[
									[
										21407,
										21407
									]
								],
								"scope": "col_gutter"
							},
							"col_E6AA4CFF":
							{
								"flags": 16,
								"regions":
								[
									[
										21436,
										21443
									]
								],
								"scope": "col_E6AA4CFF"
							},
							"col_E6AA4CFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E6AA4CFF_circle.png",
								"regions":
								[
									[
										21407,
										21407
									]
								],
								"scope": "col_gutter"
							},
							"col_E9B470FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21295,
										21302
									]
								],
								"scope": "col_E9B470FF"
							},
							"col_E9B470FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_E9B470FF_circle.png",
								"regions":
								[
									[
										21243,
										21243
									]
								],
								"scope": "col_gutter"
							},
							"col_EB1F00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21188,
										21195
									]
								],
								"scope": "col_EB1F00FF"
							},
							"col_EB1F00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_EB1F00FF_circle.png",
								"regions":
								[
									[
										21171,
										21171
									]
								],
								"scope": "col_gutter"
							},
							"col_F0CC11FF":
							{
								"flags": 16,
								"regions":
								[
									[
										21199,
										21206
									]
								],
								"scope": "col_F0CC11FF"
							},
							"col_F0CC11FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_F0CC11FF_circle.png",
								"regions":
								[
									[
										21171,
										21171
									]
								],
								"scope": "col_gutter"
							},
							"col_FF0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										7148,
										7151
									],
									[
										19416,
										19420
									],
									[
										28780,
										28783
									],
									[
										45005,
										45009
									]
								],
								"scope": "col_FF0000FF"
							},
							"col_FF0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF0000FF_circle.png",
								"regions":
								[
									[
										7137,
										7137
									],
									[
										19403,
										19403
									],
									[
										28716,
										28716
									],
									[
										44960,
										44960
									]
								],
								"scope": "col_gutter"
							},
							"col_FF00FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										45646,
										45650
									]
								],
								"scope": "col_FF00FFFF"
							},
							"col_FF00FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF00FFFF_circle.png",
								"regions":
								[
									[
										45625,
										45625
									]
								],
								"scope": "col_gutter"
							},
							"col_FF65FEFF":
							{
								"flags": 16,
								"regions":
								[
									[
										79735,
										79752
									]
								],
								"scope": "col_FF65FEFF"
							},
							"col_FF65FEFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF65FEFF_circle.png",
								"regions":
								[
									[
										79713,
										79713
									]
								],
								"scope": "col_gutter"
							},
							"col_FF6F00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										86676,
										86683
									]
								],
								"scope": "col_FF6F00FF"
							},
							"col_FF6F00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF6F00FF_circle.png",
								"regions":
								[
									[
										86659,
										86659
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFF00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										22898,
										22902
									],
									[
										88351,
										88355
									]
								],
								"scope": "col_FFFF00FF"
							},
							"col_FFFF00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFF00FF_circle.png",
								"regions":
								[
									[
										22885,
										22885
									],
									[
										88328,
										88328
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										24353,
										24357
									],
									[
										64193,
										64198
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										24340,
										24340
									],
									[
										64175,
										64175
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								17908,
								17908
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 562,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1638156957.96,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8430.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "fire.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 500,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1638156962.18,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "fire.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5198,
						"regions":
						{
						},
						"selection":
						[
							[
								3111,
								3102
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 128,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1638589699.81,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 740.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "debugger-server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12640,
						"regions":
						{
						},
						"selection":
						[
							[
								5474,
								5480
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 160,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1638133842.49,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2005.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "grammar-geda-netlist.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1913,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1638589703.71,
							"tabs_extra_last_activated_sheet_index": 4,
							"tabs_extra_moving":
							[
								3,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "libraries.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1407,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1638133842.14,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "list-proxies.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10062,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1638108750.08,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "plot-cv.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2430,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1638133841.96,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "test-minnet.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2946,
						"regions":
						{
						},
						"selection":
						[
							[
								397,
								400
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 12,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1638589701.95,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "test-net.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2878,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1638108879.84,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1071.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "test-cv.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8677,
						"regions":
						{
						},
						"selection":
						[
							[
								1361,
								1725
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 42,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1638133841.53,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 204.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "config.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 852,
						"regions":
						{
						},
						"selection":
						[
							[
								493,
								493
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 10,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1638133840.71,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "test-opencv.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17937,
						"regions":
						{
						},
						"selection":
						[
							[
								874,
								874
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 23,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1638108903.43,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "test-rpc.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7785,
						"regions":
						{
						},
						"selection":
						[
							[
								5104,
								5105
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 147,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1638108801.05,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2805.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "test-sockets.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1279,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "ws-worker.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4112,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1638108711.43,
							"tabs_extra_last_activated_sheet_index": 10,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "components.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 42401,
						"regions":
						{
							"col_0000FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										34462,
										34466
									],
									[
										34631,
										34635
									]
								],
								"scope": "col_0000FFFF"
							},
							"col_0000FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_0000FFFF_circle.png",
								"regions":
								[
									[
										34433,
										34433
									],
									[
										34601,
										34601
									]
								],
								"scope": "col_gutter"
							},
							"col_008000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										34455,
										34460
									],
									[
										34594,
										34599
									]
								],
								"scope": "col_008000FF"
							},
							"col_008000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_008000FF_circle.png",
								"regions":
								[
									[
										34433,
										34433
									],
									[
										34564,
										34564
									]
								],
								"scope": "col_gutter"
							},
							"col_010101FF":
							{
								"flags": 16,
								"regions":
								[
									[
										10054,
										10059
									],
									[
										37228,
										37232
									]
								],
								"scope": "col_010101FF"
							},
							"col_010101FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_010101FF_circle.png",
								"regions":
								[
									[
										10027,
										10027
									],
									[
										37211,
										37211
									]
								],
								"scope": "col_gutter"
							},
							"col_42AB3DFF":
							{
								"flags": 16,
								"regions":
								[
									[
										15010,
										15017
									]
								],
								"scope": "col_42AB3DFF"
							},
							"col_42AB3DFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_42AB3DFF_circle.png",
								"regions":
								[
									[
										14998,
										14998
									]
								],
								"scope": "col_gutter"
							},
							"col_444443FF":
							{
								"flags": 16,
								"regions":
								[
									[
										11547,
										11554
									],
									[
										13768,
										13775
									],
									[
										15359,
										15366
									],
									[
										16665,
										16672
									]
								],
								"scope": "col_444443FF"
							},
							"col_444443FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_444443FF_circle.png",
								"regions":
								[
									[
										11535,
										11535
									],
									[
										13756,
										13756
									],
									[
										15347,
										15347
									],
									[
										16655,
										16655
									]
								],
								"scope": "col_gutter"
							},
							"col_5599FFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										18504,
										18508
									]
								],
								"scope": "col_5599FFFF"
							},
							"col_5599FFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_5599FFFF_circle.png",
								"regions":
								[
									[
										18494,
										18494
									]
								],
								"scope": "col_gutter"
							},
							"col_B4B3B3FF":
							{
								"flags": 16,
								"regions":
								[
									[
										11618,
										11625
									],
									[
										13842,
										13849
									]
								],
								"scope": "col_B4B3B3FF"
							},
							"col_B4B3B3FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_B4B3B3FF_circle.png",
								"regions":
								[
									[
										11563,
										11563
									],
									[
										13784,
										13784
									]
								],
								"scope": "col_gutter"
							},
							"col_BF272FFF":
							{
								"flags": 16,
								"regions":
								[
									[
										12824,
										12831
									]
								],
								"scope": "col_BF272FFF"
							},
							"col_BF272FFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_BF272FFF_circle.png",
								"regions":
								[
									[
										12812,
										12812
									]
								],
								"scope": "col_gutter"
							},
							"col_DEDD00FF":
							{
								"flags": 16,
								"regions":
								[
									[
										15433,
										15440
									]
								],
								"scope": "col_DEDD00FF"
							},
							"col_DEDD00FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_DEDD00FF_circle.png",
								"regions":
								[
									[
										15375,
										15375
									]
								],
								"scope": "col_gutter"
							},
							"col_FF0000FF":
							{
								"flags": 16,
								"regions":
								[
									[
										34450,
										34453
									],
									[
										34559,
										34562
									]
								],
								"scope": "col_FF0000FF"
							},
							"col_FF0000FF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FF0000FF_circle.png",
								"regions":
								[
									[
										34433,
										34433
									],
									[
										34533,
										34533
									]
								],
								"scope": "col_gutter"
							},
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										10612,
										10616
									],
									[
										11070,
										11074
									],
									[
										13286,
										13290
									],
									[
										15873,
										15877
									],
									[
										16191,
										16195
									],
									[
										16935,
										16939
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										10496,
										10496
									],
									[
										11058,
										11058
									],
									[
										13274,
										13274
									],
									[
										15863,
										15863
									],
									[
										16181,
										16181
									],
									[
										16925,
										16925
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
							[
								5784,
								5821
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 251,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1637917132.9,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 3927.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "lib/hooks/useEvent.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 706,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1637913359.85,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.754262567352,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 139.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 259.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "make",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"fire",
				"fire.js"
			],
			[
				"config.js",
				"config.js"
			],
			[
				"useEve",
				"lib/hooks/useEvent.js"
			],
			[
				"ompat.mjs",
				"lib/compat.mjs"
			],
			[
				".mjs",
				"lib/compat.mjs"
			],
			[
				"hooks.mj",
				"lib/hooks.mjs"
			],
			[
				"preact.mjs",
				"preact.mjs"
			],
			[
				"hooks.",
				"lib/hooks.mjs"
			],
			[
				"compat.mj",
				"lib/compat.mjs"
			],
			[
				"preactCom",
				"lib/dom/preactComponent.js"
			],
			[
				"components.",
				"components.js"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"tlite.css",
				"tlite.css"
			],
			[
				"debugger.css",
				"static/debugger.css"
			],
			[
				"style.css",
				"style.css"
			],
			[
				"useTrkl",
				"lib/hooks/useTrkl.js"
			],
			[
				"compon",
				"components.js"
			],
			[
				"elemen",
				"lib/eagle/element.js"
			],
			[
				"schema",
				"lib/eagle/schematicRenderer.js"
			],
			[
				"main",
				"main.js"
			],
			[
				"commands",
				"commands.js"
			],
			[
				"components",
				"components.js"
			],
			[
				"cvHi",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"test-cv",
				"test-cv.js"
			],
			[
				"align.js",
				"lib/geom/align.js"
			],
			[
				"rect.js",
				"lib/geom/rect.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"qjsm",
				"quickjs/qjs-modules/qjsm.c"
			],
			[
				"cvVid",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"cvpip",
				"qjs-opencv/js/cvPipeline.js"
			],
			[
				"imagepip",
				"imagePipeline.js"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"ast-shell",
				"ast-shell.js"
			],
			[
				"imagePip",
				"imagePipeline.js"
			],
			[
				"test-im",
				"test-image.js"
			],
			[
				"usetrkl",
				"lib/hooks/useTrkl.js"
			],
			[
				"fetch.j",
				"lib/fetch.js"
			],
			[
				"comm",
				"commands.js"
			],
			[
				"package",
				"package.json"
			],
			[
				"io-help",
				"io-helpers.js"
			],
			[
				"repeater.js",
				"lib/repeater/repeater.js"
			],
			[
				"server.js",
				"server.js"
			],
			[
				"point.js",
				"lib/geom/point.js"
			],
			[
				"js_Cv",
				"qjs-opencv/js_cv.cpp"
			],
			[
				"gif_wr",
				"qjs-opencv/gif_write.hpp"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/qjsm.c"
			],
			[
				"console.js",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"quickjs.h",
				"quickjs/quickjs.h"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/utils.c"
			],
			[
				"js_mat",
				"qjs-opencv/js_mat.cpp"
			],
			[
				"image-he",
				"image-helpers.js"
			],
			[
				"main.j",
				"main.js"
			],
			[
				"test-ec",
				"test-ecmascript2.js"
			],
			[
				"test-eagle",
				"test-eagle.js"
			],
			[
				"test-xml",
				"test-xml.js"
			],
			[
				"quickjs-misc",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"quickjs-misc.c",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"quickjs-mmap",
				"quickjs/qjs-modules/quickjs-mmap.c"
			],
			[
				"quickjs-libc.c",
				"quickjs/quickjs-libc.c"
			],
			[
				"quickjs.c",
				"quickjs/quickjs.c"
			],
			[
				"quickjs-ins",
				"quickjs/qjs-modules/quickjs-inspect.c"
			],
			[
				"quickjs-xml",
				"quickjs/qjs-modules/quickjs-xml.c"
			],
			[
				"quickjs-in",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"list.h",
				"quickjs/list.h"
			],
			[
				"webSOc",
				"webSocket.js"
			],
			[
				"timers.",
				"lib/repeater/timers.js"
			],
			[
				"cv-shell",
				"cv-shell.js"
			],
			[
				"cvGUI",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"js_Mat",
				"qjs-opencv/js_mat.cpp"
			],
			[
				"-helper",
				"io-helpers.js"
			],
			[
				"cvVide",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"test-image",
				"test-image.js"
			],
			[
				"quickjs-lib",
				"quickjs/quickjs-libc.c"
			],
			[
				"test-repe",
				"test-repeater.js"
			],
			[
				"repea",
				"lib/repeater/repeater.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"io-helper",
				"io-helpers.js"
			],
			[
				"jpeg.js",
				"lib/jpeg.js"
			],
			[
				"image-h",
				"image-helpers.js"
			],
			[
				"estree.js",
				"lib/ecmascript/estree.js"
			],
			[
				"clang-list",
				"clang-list.js"
			],
			[
				"ast-shel",
				"ast-shell.js"
			],
			[
				"terminal",
				"qjs-modules/lib/terminal.js"
			],
			[
				"packa",
				"package.json"
			],
			[
				"Svgpath",
				"lib/svg/path.js"
			],
			[
				"cvVIde",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"js_poin",
				"qjs-opencv/js_point.hpp"
			],
			[
				"js_cont",
				"qjs-opencv/js_contour.hpp"
			],
			[
				"test.js",
				"test.js"
			],
			[
				"test-open",
				"test-opencv.js"
			],
			[
				"path",
				"lib/svg/path.js"
			],
			[
				"path.js",
				"lib/svg/path.js"
			],
			[
				"svgpa",
				"lib/svg/path-parser.js"
			],
			[
				"svg.js",
				"lib/dom/svg.js"
			],
			[
				"test-clip",
				"test-clipper.js"
			],
			[
				"13",
				"opencv/disabled/code10-3.cpp"
			],
			[
				"test-svg",
				"test-svgpath.js"
			],
			[
				"test-svgp",
				"test-svgpath.js"
			],
			[
				"svg",
				"src/simple_svg_writer.hpp"
			],
			[
				"player-sy",
				"static/svg/player-symbols.svg"
			],
			[
				".svg",
				"restart.svg"
			],
			[
				"server",
				"debugger-server.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"sockets.c",
				"quickjs/qjs-modules/quickjs-sockets.c"
			],
			[
				"debuggerprot",
				"debuggerprotocol.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"quickjs-debugg",
				"quickjs/quickjs-debugger.c"
			],
			[
				"debugger.cs",
				"static/debugger.css"
			],
			[
				"quickjs-debu",
				"quickjs/quickjs-debugger.c"
			],
			[
				"debugger.js",
				"debugger.js"
			],
			[
				"repl",
				"repl.js"
			],
			[
				"wscli",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"test-rp",
				"test-rpc.js"
			],
			[
				"test-net",
				"test-net.js"
			],
			[
				"extend",
				"quickjs/qjs-modules/lib/extendArray.js"
			],
			[
				"useFe",
				"lib/hooks/useFetch.js"
			],
			[
				"lexer",
				"lib/lexer.js"
			],
			[
				"debugger-cli",
				"debugger-client.js"
			],
			[
				"process",
				"quickjs/qjs-modules/lib/process.js"
			],
			[
				"useClick",
				"lib/hooks/useClick.js"
			],
			[
				"style",
				"style.css"
			],
			[
				"css.j",
				"lib/dom/css.js"
			],
			[
				"debugger.ht",
				"debugger.html"
			],
			[
				"style.cs",
				"style.css"
			],
			[
				"arrow",
				"static/svg/arrow-right.svg"
			],
			[
				"jsle",
				"lib/jslexer.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/quickjs/modules/modules.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 309.0,
		"last_filter": "N",
		"selected_items":
		[
			[
				"N",
				"nb"
			],
			[
				"",
				"$"
			]
		],
		"width": 592.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 344.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
