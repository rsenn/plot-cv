{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"skel",
				"skeletonization"
			],
			[
				"Debugger",
				"DebuggerDispatcher"
			],
			[
				"JSInput",
				"JSInputOutputArray"
			],
			[
				"B",
				"BOOL"
			],
			[
				"JS_Set",
				"JS_SetPropertyUint32"
			],
			[
				"Asyn",
				"AsyncIterator"
			],
			[
				"ret",
				"return_flag"
			],
			[
				"ImportID",
				"ImportIdMap"
			],
			[
				"Num",
				"NumericRange"
			],
			[
				"define",
				"defineProperty(...)"
			],
			[
				"dbuf_",
				"dbuf_init2"
			],
			[
				"getOwn",
				"getOwnPropertyNames(...)"
			],
			[
				"has_",
				"has_dot_or_slash"
			],
			[
				"My",
				"MySQLResult"
			],
			[
				"JS_ToCS",
				"JS_ToCStringLen"
			],
			[
				"CF",
				"CFunctionClosureRecord"
			],
			[
				"js_",
				"js_mysqlresult_class_id"
			],
			[
				"extendA",
				"extendAsyncGenerator"
			],
			[
				"JS_SetPr",
				"JS_SetPropertyStr"
			],
			[
				"MYSQL_TYPE_NEW",
				"MYSQL_TYPE_NEWDECIMAL"
			],
			[
				"JS_CF",
				"JS_CFUNC_MAGIC_DEF"
			],
			[
				"js_mysqlresult_fun",
				"js_mysqlresult_functions"
			],
			[
				"JS_ToCSt",
				"JS_ToCStringLen"
			],
			[
				"js_mysql_f",
				"js_mysql_functions"
			],
			[
				"MARIA",
				"MARIADBCLIENT_LIBRARY"
			],
			[
				"depe",
				"dependencyMap"
			],
			[
				"depden",
				"dependencyTree"
			],
			[
				"add_",
				"add_dependencies"
			],
			[
				"ch",
				"chunks_written"
			],
			[
				"defineP",
				"defineProperties(...)"
			],
			[
				"CMAKE_CURR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"gener",
				"generate_module_header"
			],
			[
				"RINGBUFFER_C",
				"RINGBUFFER_CONSUMERANGE"
			],
			[
				"RINGBUFFER_CONSU",
				"RINGBUFFER_CONSUMERANGE"
			],
			[
				"JS_NewArra",
				"JS_NewArrayBufferCopy"
			],
			[
				"RINGBU",
				"RINGBUFFER_INSERT"
			],
			[
				"hea",
				"headers_sent"
			],
			[
				"PR",
				"PRIi64"
			],
			[
				"db",
				"dbuf_init2"
			],
			[
				"JS_Get",
				"JS_GetProperty"
			],
			[
				"Ret",
				"ReturnValuePathFunction"
			],
			[
				"cFunc",
				"cFuncListObjects"
			],
			[
				"isC",
				"isCFuncCall"
			],
			[
				"En",
				"EntityNames"
			],
			[
				"parseFrom",
				"parseFromString"
			],
			[
				"pseu",
				"pseudoClassArg"
			],
			[
				"pseudoC",
				"pseudoClassName"
			],
			[
				"Key",
				"KeyboardEvent"
			],
			[
				"getOp",
				"getOptionEntries"
			],
			[
				"setProp",
				"setPropertyValue"
			],
			[
				"parse",
				"parseSelectors"
			],
			[
				"jsm_buil",
				"jsm_builtin_init"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"JS_New",
				"JS_NewObject"
			],
			[
				"ide",
				"importIdentifiers"
			],
			[
				"iden",
				"importIdentifiers"
			],
			[
				"import",
				"importIdentifiers"
			],
			[
				"ident",
				"identifierSets"
			],
			[
				"path_is",
				"path_is_absolute"
			],
			[
				"js_is_",
				"js_is_null_or_undefined"
			],
			[
				"path_skip_se",
				"path_skip_separator_s"
			],
			[
				"WRITABLE_METHO",
				"WRITABLE_METHOD_CLOSE"
			],
			[
				"list_fo",
				"list_for_each_prev"
			],
			[
				"JS_Th",
				"JS_ThrowOutOfMemory"
			],
			[
				"JS_",
				"JS_ThrowOutOfMemory"
			],
			[
				"underly",
				"underlying_source"
			],
			[
				"Tok",
				"TokenSequence"
			],
			[
				"JS_GetPr",
				"JS_GetPropertyStr"
			],
			[
				"JS_Thro",
				"JS_ThrowOutOfMemory"
			],
			[
				"getAt",
				"getAttributeNames"
			],
			[
				"self",
				"self_closing_tags"
			],
			[
				"self_",
				"self_closing_tags"
			],
			[
				"JS_PROP",
				"JS_PROP_ENUMERABLE"
			],
			[
				"de",
				"dependencyMap"
			],
			[
				"dep",
				"dependencyMap"
			],
			[
				"js_is_null",
				"js_is_null_or_undefined"
			],
			[
				"JS_P",
				"JS_PROP_ENUMERABLE"
			],
			[
				"JS_SetP",
				"JS_SetPropertyUint32"
			],
			[
				"spec",
				"specifiers"
			],
			[
				"token_r",
				"token_release_rt"
			],
			[
				"JS_Thr",
				"JS_ThrowTypeError"
			],
			[
				"debug_js_mall",
				"debug_js_malloc_usable_size"
			],
			[
				"repl",
				"replaceRange"
			],
			[
				"js_malloc_u",
				"js_malloc_usable_size_rt"
			],
			[
				"malloc",
				"malloc_usable_size"
			],
			[
				"all",
				"alloc_block_list"
			],
			[
				"alloc",
				"alloc_block_list"
			],
			[
				"path_skip",
				"path_skip_component"
			],
			[
				"jsm_mo",
				"jsm_module_loader"
			],
			[
				"JS_Throw",
				"JS_ThrowInternalError"
			],
			[
				"JS_AtomTo",
				"JS_AtomToValue"
			],
			[
				"inspect",
				"inspectSymbol"
			],
			[
				"at",
				"attributes"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"owner",
				"ownerElement"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"child",
				"childElementCount"
			],
			[
				"getO",
				"getOwnPropertyNames"
			],
			[
				"js_misc_im",
				"js_misc_immutable_constructor"
			],
			[
				"obj",
				"object_tostring"
			],
			[
				"js_misc_immu",
				"js_misc_immutable_free"
			],
			[
				"js_misc_imm",
				"js_misc_immutable_constructor"
			],
			[
				"CMAKE_IMPORT",
				"CMAKE_IMPORT_LIBRARY_SUFFIX"
			],
			[
				"CMAKE_CUR",
				"CMAKE_CURRENT_BINARY_DIR"
			],
			[
				"js_is",
				"js_is_null_or_undefined"
			],
			[
				"js_asy",
				"js_async_socket_class_id"
			],
			[
				"JS_NewObj",
				"JS_NewObjectProtoClass"
			],
			[
				"async_",
				"async_socket_proto"
			],
			[
				"js_socket_class",
				"js_socket_class_id"
			],
			[
				"g",
				"getOwnPropertyNames(...)"
			],
			[
				"js_sockaddr_cl",
				"js_sockaddr_class_id"
			],
			[
				"js_so",
				"js_sockaddr_constructor"
			],
			[
				"js_sys",
				"js_syscallerror_class_id"
			],
			[
				"js_string",
				"js_stringdecoder_class_id"
			],
			[
				"js_pred",
				"js_predicate_class_id"
			],
			[
				"js_syn",
				"js_syntaxerror_class"
			],
			[
				"js_child",
				"js_child_process_class_id"
			],
			[
				"js_b",
				"js_blob_class_id"
			],
			[
				"js_loca",
				"js_location_class_id"
			],
			[
				"js_token_in",
				"js_token_inspect_funcs"
			],
			[
				"set",
				"setReadHandler"
			],
			[
				"js_get_",
				"js_get_propertystr_bool"
			],
			[
				"js_misc_ate",
				"js_misc_atexit_functions"
			],
			[
				"isF",
				"isFunction"
			],
			[
				"tab",
				"tab_atom_len"
			],
			[
				"isARr",
				"isArrayBuffer"
			],
			[
				"BIT",
				"BITFIELD_FROMARRAY"
			],
			[
				"to",
				"toStringTag"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  scriptName = (arg = scriptArgs[0]) =>\n() =>\n  signalName = n =>\n  checkChildExited(pid, status)\nGetLoc(node)\nLoadAST(source)\n  a =>\nStartREPL(prefix = \n, suffix = '')\n() =>\n  .show = arg =>\n  k =>\n  k =>\n  item =>\n(acc, keys, i) =>\nStartDebugger(args, connect, address)\nConnectDebugger(address, skipToMain = true, callback)\n  process(callback)\n  sendMessage: msg =>\nLaunchDebugger(dbg, skipToMain = true)\n() =>\nDebuggerDispatcher\n  value(name)\n  v =>\nPrintStackFrame(frame)\n  f =>\nPrintStack(stack)\n(member, obj, prop) =>\n  breakpoints(...args)\n  b =>\n  stackTrace(frame)\nframe =>\n  scopes(n)\n  waitRun()\n  variables(n, depth = 0)\n  add = item =>\n  toString()\nDebuggerDispatcher\n(port = 8777) =>\n() =>\nNewDebugger(args, skipToMain = false, address)\n  kill: () =>\nOnStopped(msg)\n  main(...args)\n(a, v) =>\n(v, pv, o) =>\n(v, pv, o) =>\n  createWS(url, callbacks, listen)\n() =>\n(level, str) =>\n  config(req, res)\n  files(req, res)\n  f =>\n  onConnect(ws, req)\n  value: function sendMessage(msg)\n  onClose(ws)\n  onError(ws)\n  onRequest(req, resp)\n(match, p1, p0, p2, p3, offset) =>\n  onMessage(ws, data)\n  handleCommand(ws, data)\n  forward = (fd, name) =>\nbuf =>\n() =>\n(dbg, sock) =>\n  msg =>\n  onFd(fd, rd, wr)\n() =>\n  showSessions()\n  get connections()\n  get socklist()\n  get file()\n(file, source) =>\n() =>\ns =>\n() =>\n  m =>\n  line(i)\n  match(re)\n  fns =>\n({ name }) =>\n  functions()\n([name, loc, params, expression, path]) =>\n  repeat(cond, fn, ...args)\n  cond = (r, i) =>\n  daemon()\n  quit(why)",
			"settings":
			{
				"buffer_size": 1493,
				"line_ending": "Unix",
				"name": "ùåÜ Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					179,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAaIwAA4oCU4pOC4oCTIHBpcGUgKCApIOKApiDigJQgbWFjcm8gZnVuY3Rpb24K4pOJICBzaWdoYW5kbGVyX3QgOyDigJQgdHlwZWRlZgrik4IgIGVudmlyb24g4oCmIOKAlCBtYWNybyBvYmplY3QK4pOCICBVU0VfV09SS0VSIOKApiDigJQgbWFjcm8gb2JqZWN0CuKclCAgVE9ETzoK4pOJICBKU09TUldIYW5kbGVyIDsg4oCUIHR5cGVkZWYK4pOJICBKU09TU2lnbmFsSGFuZGxlciA7IOKAlCB0eXBlZGVmCuKTiSAgSlNPU1RpbWVyIDsg4oCUIHR5cGVkZWYK4pOJICBKU1dvcmtlck1lc3NhZ2UgOyDigJQgdHlwZWRlZgrik4kgIEpTV29ya2VyTWVzc2FnZVBpcGUgOyDigJQgdHlwZWRlZgrik4kgIEpTV29ya2VyTWVzc2FnZUhhbmRsZXIgOyDigJQgdHlwZWRlZgrigJTikrjigJMgSlNUaHJlYWRTdGF0ZSB7IOKApiB9IDsg4oCUIHR5cGUK4pOJICBKU1RocmVhZFN0YXRlIDsg4oCUIHR5cGVkZWYK4oCU4pK74oCTIGpzX3N0ZF9kYnVmX2luaXQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBteV9pc2RpZ2l0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfcHJpbnRmX2ludGVybmFsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrHg8eD4pyUICBYWFg6IGhhbmRsZSBzdHJpbmdzIGNvbnRhaW5pbmcgbnVsbCBjaGFyYWN0ZXJzCseDx4PinJQgIFhYWDogc2hvdWxkIHN1cHBvcnQgYW4gZXh0ZW5zaW9uIG1lY2hhbmlzbQrigJTikrvigJMganNfbG9hZF9maWxlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrHg8eD4pyUICBYWFg6IG9uIExpbnV4LCBmdGVsbCgpIHJldHVybiBMT05HX01BWCBmb3IgZGlyZWN0b3JpZXMK4oCU4pK74oCTIGpzX2xvYWRTY3JpcHQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zdGRfbG9hZEZpbGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19tb2R1bGVfbG9hZGVyX3NvICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfbW9kdWxlX2xvYWRlcl9zbyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX21vZHVsZV9zZXRfaW1wb3J0X21ldGEgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19tb2R1bGVfbG9hZGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrHg8eD4pyUICBYWFg6IGNvdWxkIHByb3BhZ2F0ZSB0aGUgZXhjZXB0aW9uCuKAlOKSu+KAkyBqc19zdGRfZXhpdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9nZXRlbnYgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBzZXRlbnYgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyB1bnNldGVudiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9zZXRlbnYgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zdGRfdW5zZXRlbnYgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zdGRfZ2V0ZW52aXJvbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9nYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGludGVycnVwdF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2V0X2Jvb2xfb3B0aW9uICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZXZhbFNjcmlwdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4pOJICBKU1NUREZpbGUgOyDigJQgdHlwZWRlZgrigJTikrvigJMganNfc3RkX2ZpbGVfZmluYWxpemVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZ2V0X2Vycm5vICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RkX3N0cmVycm9yICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RkX3BhcnNlRXh0SlNPTiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX25ld19zdGRfZmlsZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3NldF9lcnJvcl9vYmplY3QgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zdGRfb3BlbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9wb3BlbiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9mZG9wZW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zdGRfdG1wZmlsZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9zcHJpbnRmICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RkX3ByaW50ZiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9maWxlX2dldCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9maWxlX3B1dHMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zdGRfZmlsZV9jbG9zZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9maWxlX3ByaW50ZiAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9maWxlX2ZsdXNoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RkX2ZpbGVfdGVsbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9maWxlX3NlZWsgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zdGRfZmlsZV9lb2YgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zdGRfZmlsZV9lcnJvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9maWxlX2NsZWFyZXJyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RkX2ZpbGVfZmlsZW5vICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RkX2ZpbGVfcmVhZF93cml0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24Kx4PHg+KclCAgWFhYOiBjb3VsZCB1c2UgbGVzcyBtZW1vcnkgYW5kIGdvIGZhc3RlcgrigJTikrvigJMganNfc3RkX2ZpbGVfZ2V0bGluZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24Kx4PHg+KclCAgWFhYOiBjb3VsZCB1c2UgbGVzcyBtZW1vcnkgYW5kIGdvIGZhc3RlcgrigJTikrvigJMganNfc3RkX2ZpbGVfcmVhZEFzU3RyaW5nICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RkX2ZpbGVfZ2V0Qnl0ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9maWxlX3B1dEJ5dGUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKTgiAgVVJMX0dFVF9QUk9HUkFNIOKApiDigJQgbWFjcm8gb2JqZWN0CuKTgiAgVVJMX0dFVF9CVUZfU0laRSDigKYg4oCUIG1hY3JvIG9iamVjdArigJTikrvigJMgaHR0cF9nZXRfaGVhZGVyX2xpbmUgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBodHRwX2dldF9zdGF0dXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zdGRfdXJsR2V0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTik4LigJMgREVGICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zdGRfaW5pdCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2luaXRfbW9kdWxlX3N0ZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29zX29wZW4gKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vc19jbG9zZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29zX3NlZWsgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vc19yZWFkX3dyaXRlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb3NfaXNhdHR5ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb3NfdHR5R2V0V2luU2l6ZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4pOCICBfX0VOQUJMRV9WSVJUVUFMX1RFUk1JTkFMX1BST0NFU1NJTkcg4oCmIOKAlCBtYWNybyBvYmplY3QK4pOCICBfX0VOQUJMRV9WSVJUVUFMX1RFUk1JTkFMX0lOUFVUIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKSu+KAkyBqc19vc190dHlTZXRSYXcgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vc190dHlHZXRXaW5TaXplICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdGVybV9leGl0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrHg8eD4pyUICBYWFg6IHNob3VsZCBhZGQgYSB3YXkgdG8gZ28gYmFjayB0byBub3JtYWwgbW9kZQrigJTikrvigJMganNfb3NfdHR5U2V0UmF3ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb3NfcmVtb3ZlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb3NfcmVuYW1lICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgaXNfbWFpbl90aHJlYWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmaW5kX3JoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZnJlZV9yd19oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb3Nfc2V0UmVhZEhhbmRsZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBmaW5kX3NoICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZnJlZV9zaCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIG9zX3NpZ25hbF9oYW5kbGVyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb3Nfc2lnbmFsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgZ2V0X3RpbWVfbXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBnZXRfdGltZV9tcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHVubGlua190aW1lciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGZyZWVfdGltZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vc190aW1lcl9maW5hbGl6ZXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vc190aW1lcl9tYXJrICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb3Nfc2V0VGltZW91dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29zX2NsZWFyVGltZW91dCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGNhbGxfaGFuZGxlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4pKhICBoYW5kbGVfcG9zdGVkX21lc3NhZ2UgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyBqc19vc19wb2xsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrHg8eD4pyUICBYWFg6IGhhbmRsZSBzaWduYWxzIGlmIHVzZWZ1bArHg8eD4pyUICBYWFg6IG9ubHkgdGltZXJzIGFuZCBiYXNpYyBjb25zb2xlIGlucHV0IGFyZSBzdXBwb3J0ZWQK4pKhICBqc19mcmVlX21lc3NhZ2UgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyBoYW5kbGVfcG9zdGVkX21lc3NhZ2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBoYW5kbGVfcG9zdGVkX21lc3NhZ2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vc19wb2xsICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbWFrZV9vYmpfZXJyb3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBtYWtlX3N0cmluZ19lcnJvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29zX2dldGN3ZCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29zX2NoZGlyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb3NfbWtkaXIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vc19yZWFkZGlyICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgdGltZXNwZWNfdG9fbXMgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vc19zdGF0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgbXNfdG9fdGltZXZhbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29zX3V0aW1lcyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29zX3NsZWVwICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMgcmVhbHBhdGggKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vc19yZWFscGF0aCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29zX3N5bWxpbmsgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vc19yZWFkbGluayAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGJ1aWxkX2VudnAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBteV9leGVjdnBlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb3NfZXhlYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29zX3dhaXRwaWQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vc19waXBlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfb3Nfa2lsbCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29zX2R1cCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX29zX2R1cDIgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKTiSAgSlNXb3JrZXJEYXRhIDsg4oCUIHR5cGVkZWYK4pOJICBXb3JrZXJGdW5jQXJncyA7IOKAlCB0eXBlZGVmCuKTiSAgSlNTQUJIZWFkZXIgOyDigJQgdHlwZWRlZgrigJTikrvigJMgYXRvbWljX2FkZF9pbnQgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zYWJfYWxsb2MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zYWJfZnJlZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3NhYl9kdXAgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19uZXdfbWVzc2FnZV9waXBlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZHVwX21lc3NhZ2VfcGlwZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2ZyZWVfbWVzc2FnZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX2ZyZWVfbWVzc2FnZV9waXBlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfZnJlZV9wb3J0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfd29ya2VyX2ZpbmFsaXplciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIHdvcmtlcl9mdW5jICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfd29ya2VyX2N0b3JfaW50ZXJuYWwgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKSoSAgSlNfR2V0TW9kdWxlTG9hZGVyRnVuYyAoICkgOyDigJQgZnVuY3Rpb24gZGVjbGFyYXRpb24K4pKhICBKU19HZXRNb2R1bGVMb2FkZXJPcGFxdWUgKCApIDsg4oCUIGZ1bmN0aW9uIGRlY2xhcmF0aW9uCuKAlOKSu+KAkyBqc193b3JrZXJfY3RvciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24Kx4PHg+KclCAgWFhYOiBpbiBvcmRlciB0byBhdm9pZCBwcm9ibGVtcyB3aXRoIHJlc291cmNlIGxpYmVyYXRpb24sIHdlCuKAlOKSu+KAkyBqc193b3JrZXJfcG9zdE1lc3NhZ2UgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc193b3JrZXJfc2V0X29ubWVzc2FnZSAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3dvcmtlcl9nZXRfb25tZXNzYWdlICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RkX3NldF93b3JrZXJfbmV3X2NvbnRleHRfZnVuYyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4pOCICBPU19QTEFURk9STSDigKYg4oCUIG1hY3JvIG9iamVjdArik4IgIE9TX1BMQVRGT1JNIOKApiDigJQgbWFjcm8gb2JqZWN0CuKTgiAgT1NfUExBVEZPUk0g4oCmIOKAlCBtYWNybyBvYmplY3QK4pOCICBPU19QTEFURk9STSDigKYg4oCUIG1hY3JvIG9iamVjdArik4IgIE9TX1BMQVRGT1JNIOKApiDigJQgbWFjcm8gb2JqZWN0CuKAlOKTguKAkyBPU19GTEFHICggKSDigKYg4oCUIG1hY3JvIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19vc19pbml0ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfaW5pdF9tb2R1bGVfb3MgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19wcmludCAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9hZGRfaGVscGVycyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24Kx4PHg+KclCAgWFhYOiBzaG91bGQgdGhlc2UgZ2xvYmFsIGRlZmluaXRpb25zIGJlIGVudW1lcmFibGU/CuKAlOKSu+KAkyBqc19zdGRfaW5pdF9oYW5kbGVycyAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9mcmVlX2hhbmRsZXJzICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrHg8eD4pyUICBYWFg6IGZyZWUgcG9ydF9saXN0ID8K4oCU4pK74oCTIGpzX2R1bXBfb2JqICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RkX2R1bXBfZXJyb3IxICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RkX2R1bXBfZXJyb3IgKCApIHsg4oCmIH0g4oCUIGZ1bmN0aW9uCuKAlOKSu+KAkyBqc19zdGRfcHJvbWlzZV9yZWplY3Rpb25fdHJhY2tlciAoICkgeyDigKYgfSDigJQgZnVuY3Rpb24K4oCU4pK74oCTIGpzX3N0ZF9sb29wICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgrigJTikrvigJMganNfc3RkX2V2YWxfYmluYXJ5ICggKSB7IOKApiB9IOKAlCBmdW5jdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					180,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								184,
								204
							],
							[
								228,
								251
							],
							[
								291,
								311
							],
							[
								578,
								609
							],
							[
								702,
								722
							],
							[
								843,
								870
							],
							[
								916,
								931
							],
							[
								996,
								1021
							],
							[
								1068,
								1091
							],
							[
								1145,
								1164
							],
							[
								1381,
								1399
							],
							[
								1528,
								1546
							],
							[
								1617,
								1623
							],
							[
								2011,
								2017
							],
							[
								2131,
								2146
							],
							[
								2198,
								2214
							],
							[
								2286,
								2302
							],
							[
								2441,
								2459
							],
							[
								2815,
								2837
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AQAAAAAAAAAAAAAAWwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					181,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABbAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CkNyZWF0ZUNsaWVudCgpCihsZXZlbCwgLi4uYXJncykgPT4KICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKKCkgPT4KKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					182,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								190,
								210
							],
							[
								234,
								257
							],
							[
								297,
								317
							],
							[
								584,
								615
							],
							[
								708,
								728
							],
							[
								849,
								876
							],
							[
								922,
								937
							],
							[
								1002,
								1027
							],
							[
								1074,
								1097
							],
							[
								1151,
								1170
							],
							[
								1387,
								1405
							],
							[
								1534,
								1552
							],
							[
								1623,
								1629
							],
							[
								2017,
								2023
							],
							[
								2137,
								2152
							],
							[
								2204,
								2220
							],
							[
								2292,
								2308
							],
							[
								2447,
								2465
							],
							[
								2821,
								2843
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AQAAAAAAAAAAAAAAWwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					183,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								190,
								210
							],
							[
								234,
								257
							],
							[
								297,
								317
							],
							[
								590,
								621
							],
							[
								714,
								734
							],
							[
								855,
								882
							],
							[
								928,
								943
							],
							[
								1008,
								1033
							],
							[
								1080,
								1103
							],
							[
								1157,
								1176
							],
							[
								1393,
								1411
							],
							[
								1540,
								1558
							],
							[
								1629,
								1635
							],
							[
								2023,
								2029
							],
							[
								2143,
								2158
							],
							[
								2210,
								2226
							],
							[
								2298,
								2314
							],
							[
								2453,
								2471
							],
							[
								2827,
								2849
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABbAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CkNyZWF0ZUNsaWVudCgpCihsZXZlbCwgLi4uYXJncykgPT4KICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKKCkgPT4KKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAFsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					184,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								190,
								210
							],
							[
								234,
								257
							],
							[
								297,
								317
							],
							[
								590,
								621
							],
							[
								714,
								734
							],
							[
								855,
								882
							],
							[
								928,
								943
							],
							[
								1008,
								1033
							],
							[
								1080,
								1103
							],
							[
								1157,
								1176
							],
							[
								1393,
								1411
							],
							[
								1540,
								1558
							],
							[
								1629,
								1635
							],
							[
								2023,
								2029
							],
							[
								2143,
								2158
							],
							[
								2210,
								2226
							],
							[
								2298,
								2314
							],
							[
								2453,
								2471
							],
							[
								2827,
								2849
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABbAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CkNyZWF0ZUNsaWVudCgpCihsZXZlbCwgLi4uYXJncykgPT4KICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKKCkgPT4KKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAFsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					185,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								190,
								210
							],
							[
								234,
								257
							],
							[
								297,
								317
							],
							[
								590,
								621
							],
							[
								714,
								734
							],
							[
								855,
								882
							],
							[
								928,
								943
							],
							[
								1008,
								1033
							],
							[
								1080,
								1103
							],
							[
								1157,
								1176
							],
							[
								1393,
								1411
							],
							[
								1540,
								1558
							],
							[
								1629,
								1635
							],
							[
								2023,
								2029
							],
							[
								2143,
								2158
							],
							[
								2210,
								2226
							],
							[
								2298,
								2314
							],
							[
								2453,
								2471
							],
							[
								2827,
								2849
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABbAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CkNyZWF0ZUNsaWVudCgpCihsZXZlbCwgLi4uYXJncykgPT4KICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKKCkgPT4KKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAFsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					188,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								190,
								210
							],
							[
								234,
								257
							],
							[
								297,
								317
							],
							[
								590,
								621
							],
							[
								714,
								734
							],
							[
								855,
								882
							],
							[
								928,
								943
							],
							[
								1008,
								1033
							],
							[
								1080,
								1103
							],
							[
								1157,
								1176
							],
							[
								1393,
								1411
							],
							[
								1540,
								1558
							],
							[
								1629,
								1635
							],
							[
								2023,
								2029
							],
							[
								2143,
								2158
							],
							[
								2210,
								2226
							],
							[
								2298,
								2314
							],
							[
								2453,
								2471
							],
							[
								2827,
								2849
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABbAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CkNyZWF0ZUNsaWVudCgpCihsZXZlbCwgLi4uYXJncykgPT4KICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKKCkgPT4KKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAFsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQAQAAAAAAAFEBAAAAAAAAAAAAAAAA8L8"
				],
				[
					189,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABbAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CkNyZWF0ZUNsaWVudCgpCihsZXZlbCwgLi4uYXJncykgPT4KICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKKCkgPT4KKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					190,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								221,
								241
							],
							[
								265,
								288
							],
							[
								328,
								348
							],
							[
								833,
								864
							],
							[
								957,
								977
							],
							[
								1098,
								1125
							],
							[
								1171,
								1186
							],
							[
								1251,
								1276
							],
							[
								1323,
								1346
							],
							[
								1400,
								1419
							],
							[
								1636,
								1654
							],
							[
								1783,
								1801
							],
							[
								1872,
								1878
							],
							[
								2266,
								2272
							],
							[
								2386,
								2401
							],
							[
								2453,
								2469
							],
							[
								2541,
								2557
							],
							[
								2694,
								2712
							],
							[
								3068,
								3090
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AQAAAAAAAAAAAAAAWwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					191,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								221,
								241
							],
							[
								360,
								383
							],
							[
								423,
								443
							],
							[
								928,
								959
							],
							[
								1052,
								1072
							],
							[
								1193,
								1220
							],
							[
								1266,
								1281
							],
							[
								1346,
								1371
							],
							[
								1418,
								1441
							],
							[
								1495,
								1514
							],
							[
								1731,
								1749
							],
							[
								1878,
								1896
							],
							[
								1967,
								1973
							],
							[
								2361,
								2367
							],
							[
								2481,
								2496
							],
							[
								2548,
								2564
							],
							[
								2636,
								2652
							],
							[
								2789,
								2807
							],
							[
								3163,
								3185
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABbAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CkNyZWF0ZUNsaWVudCgpCihsZXZlbCwgLi4uYXJncykgPT4KICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKKCkgPT4KKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAFsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					192,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								314,
								334
							],
							[
								359,
								382
							],
							[
								422,
								442
							],
							[
								927,
								958
							],
							[
								1051,
								1071
							],
							[
								1192,
								1219
							],
							[
								1265,
								1280
							],
							[
								1345,
								1370
							],
							[
								1417,
								1440
							],
							[
								1494,
								1513
							],
							[
								1730,
								1748
							],
							[
								1877,
								1895
							],
							[
								1966,
								1972
							],
							[
								2360,
								2366
							],
							[
								2480,
								2495
							],
							[
								2547,
								2563
							],
							[
								2635,
								2651
							],
							[
								2788,
								2806
							],
							[
								3162,
								3184
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABbAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CkNyZWF0ZUNsaWVudCgpCihsZXZlbCwgLi4uYXJncykgPT4KICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKKCkgPT4KKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAFsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					193,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								308,
								328
							],
							[
								353,
								376
							],
							[
								416,
								436
							],
							[
								921,
								952
							],
							[
								1045,
								1065
							],
							[
								1186,
								1213
							],
							[
								1259,
								1274
							],
							[
								1339,
								1364
							],
							[
								1411,
								1434
							],
							[
								1488,
								1507
							],
							[
								1724,
								1742
							],
							[
								1871,
								1889
							],
							[
								1960,
								1966
							],
							[
								2354,
								2360
							],
							[
								2474,
								2489
							],
							[
								2541,
								2557
							],
							[
								2629,
								2645
							],
							[
								2782,
								2800
							],
							[
								3156,
								3178
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAABbAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CkNyZWF0ZUNsaWVudCgpCihsZXZlbCwgLi4uYXJncykgPT4KICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKKCkgPT4KKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAFsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CkNyZWF0ZUNsaWVudCgpCihsZXZlbCwgLi4uYXJncykgPT4KICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKKCkgPT4KKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAFsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CkNyZWF0ZUNsaWVudCgpCihsZXZlbCwgLi4uYXJncykgPT4KICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKKCkgPT4KKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAFsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					194,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								308,
								328
							],
							[
								353,
								376
							],
							[
								416,
								436
							],
							[
								921,
								952
							],
							[
								1045,
								1065
							],
							[
								1186,
								1213
							],
							[
								1259,
								1274
							],
							[
								1339,
								1364
							],
							[
								1411,
								1434
							],
							[
								1488,
								1507
							],
							[
								1724,
								1742
							],
							[
								1871,
								1889
							],
							[
								1960,
								1966
							],
							[
								2354,
								2360
							],
							[
								2474,
								2489
							],
							[
								2541,
								2557
							],
							[
								2629,
								2645
							],
							[
								2782,
								2800
							],
							[
								3156,
								3178
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAABbAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CkNyZWF0ZUNsaWVudCgpCihsZXZlbCwgLi4uYXJncykgPT4KICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKKCkgPT4KKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAFsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CkNyZWF0ZUNsaWVudCgpCihsZXZlbCwgLi4uYXJncykgPT4KICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKKCkgPT4KKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAFsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CkNyZWF0ZUNsaWVudCgpCihsZXZlbCwgLi4uYXJncykgPT4KICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKKCkgPT4KKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAFsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					195,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								308,
								328
							],
							[
								353,
								376
							],
							[
								416,
								436
							],
							[
								921,
								952
							],
							[
								1045,
								1065
							],
							[
								1186,
								1213
							],
							[
								1259,
								1274
							],
							[
								1339,
								1364
							],
							[
								1411,
								1434
							],
							[
								1488,
								1507
							],
							[
								1724,
								1742
							],
							[
								1871,
								1889
							],
							[
								1960,
								1966
							],
							[
								2354,
								2360
							],
							[
								2474,
								2489
							],
							[
								2541,
								2557
							],
							[
								2629,
								2645
							],
							[
								2782,
								2800
							],
							[
								3156,
								3178
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABbAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CkNyZWF0ZUNsaWVudCgpCihsZXZlbCwgLi4uYXJncykgPT4KICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKKCkgPT4KKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAFsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CkNyZWF0ZUNsaWVudCgpCihsZXZlbCwgLi4uYXJncykgPT4KICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKKCkgPT4KKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAFsBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					196,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								308,
								328
							],
							[
								353,
								376
							],
							[
								416,
								436
							],
							[
								921,
								952
							],
							[
								1045,
								1065
							],
							[
								1186,
								1213
							],
							[
								1259,
								1274
							],
							[
								1339,
								1364
							],
							[
								1407,
								1423
							],
							[
								1547,
								1570
							],
							[
								1624,
								1643
							],
							[
								1860,
								1878
							],
							[
								2007,
								2025
							],
							[
								2096,
								2102
							],
							[
								2490,
								2496
							],
							[
								2610,
								2625
							],
							[
								2677,
								2693
							],
							[
								2765,
								2781
							],
							[
								2918,
								2936
							],
							[
								3292,
								3314
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"onFd(fd, rd, wr)",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABbAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CkNyZWF0ZUNsaWVudCgpCihsZXZlbCwgLi4uYXJncykgPT4KICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKKCkgPT4KKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAG4BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABuAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CiAgb25GZChmZCwgcmQsIHdyKQpDcmVhdGVDbGllbnQoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25Db25uZWN0KHdzLCByZXEpCigpID0+CigpID0+CiAgb25Qb25nKHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVxKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXRKU09OKCkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAABuAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					197,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								308,
								328
							],
							[
								353,
								376
							],
							[
								416,
								436
							],
							[
								921,
								952
							],
							[
								1045,
								1065
							],
							[
								1186,
								1213
							],
							[
								1259,
								1274
							],
							[
								1339,
								1364
							],
							[
								1407,
								1423
							],
							[
								1606,
								1629
							],
							[
								1683,
								1702
							],
							[
								1919,
								1937
							],
							[
								2066,
								2084
							],
							[
								2155,
								2161
							],
							[
								2549,
								2555
							],
							[
								2669,
								2684
							],
							[
								2736,
								2752
							],
							[
								2824,
								2840
							],
							[
								2977,
								2995
							],
							[
								3351,
								3373
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"onFd(fd, rd, wr)",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABuAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CiAgb25GZChmZCwgcmQsIHdyKQpDcmVhdGVDbGllbnQoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25Db25uZWN0KHdzLCByZXEpCigpID0+CigpID0+CiAgb25Qb25nKHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVxKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXRKU09OKCkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAABuAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					198,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								308,
								328
							],
							[
								353,
								376
							],
							[
								416,
								436
							],
							[
								921,
								952
							],
							[
								1045,
								1065
							],
							[
								1186,
								1213
							],
							[
								1259,
								1274
							],
							[
								1339,
								1364
							],
							[
								1407,
								1423
							],
							[
								1606,
								1629
							],
							[
								1683,
								1702
							],
							[
								1919,
								1937
							],
							[
								2066,
								2084
							],
							[
								2155,
								2161
							],
							[
								2549,
								2555
							],
							[
								2669,
								2684
							],
							[
								2736,
								2752
							],
							[
								2824,
								2840
							],
							[
								2977,
								2995
							],
							[
								3351,
								3373
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"onFd(fd, rd, wr)",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABuAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CiAgb25GZChmZCwgcmQsIHdyKQpDcmVhdGVDbGllbnQoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25Db25uZWN0KHdzLCByZXEpCigpID0+CigpID0+CiAgb25Qb25nKHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVxKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXRKU09OKCkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAABuAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbgEAACAgcHJpbnQgPSAoLi4uYXJncykgPT4KQ3JlYXRlU2VydmVyKCkKKGxldmVsLCAuLi5hcmdzKSA9PgogIHRlc3QocmVxLCByZXNwKQogIG9uQ29ubmVjdDogc29ja2V0ID0+CiAgb25NZXNzYWdlOiAoc29ja2V0LCBtc2cpID0+CiAgb25DbG9zZTogd2h5ID0+CiAgb25Qb25nOiAoc29ja2V0LCBkYXRhKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKQ3JlYXRlQ2xpZW50KCkKKGxldmVsLCAuLi5hcmdzKSA9PgogIG9uTWVzc2FnZSh3cywgbXNnKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgooKSA9PgogIG9uUG9uZyh3cywgcmVxKQogIG9uQ2xvc2Uod3MsIHJlcSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0SlNPTigpCiAgbWFpbiguLi5hcmdzKQAAAAAAAAAAbgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					199,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								308,
								328
							],
							[
								353,
								376
							],
							[
								416,
								436
							],
							[
								921,
								952
							],
							[
								1045,
								1065
							],
							[
								1186,
								1213
							],
							[
								1259,
								1274
							],
							[
								1339,
								1364
							],
							[
								1407,
								1423
							],
							[
								1607,
								1630
							],
							[
								1684,
								1703
							],
							[
								1920,
								1938
							],
							[
								2067,
								2085
							],
							[
								2156,
								2162
							],
							[
								2550,
								2556
							],
							[
								2670,
								2685
							],
							[
								2737,
								2753
							],
							[
								2825,
								2841
							],
							[
								2978,
								2996
							],
							[
								3352,
								3374
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"onFd(fd, rd, wr)",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABuAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CiAgb25GZChmZCwgcmQsIHdyKQpDcmVhdGVDbGllbnQoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25Db25uZWN0KHdzLCByZXEpCigpID0+CigpID0+CiAgb25Qb25nKHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVxKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXRKU09OKCkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAABuAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					200,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								308,
								328
							],
							[
								353,
								376
							],
							[
								416,
								436
							],
							[
								921,
								952
							],
							[
								1045,
								1065
							],
							[
								1186,
								1213
							],
							[
								1259,
								1274
							],
							[
								1339,
								1364
							],
							[
								1407,
								1423
							],
							[
								1607,
								1630
							],
							[
								1684,
								1703
							],
							[
								1920,
								1938
							],
							[
								2067,
								2085
							],
							[
								2156,
								2162
							],
							[
								2550,
								2556
							],
							[
								2670,
								2685
							],
							[
								2737,
								2753
							],
							[
								2825,
								2841
							],
							[
								2978,
								2996
							],
							[
								3352,
								3374
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"onFd(fd, rd, wr)",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABuAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CiAgb25GZChmZCwgcmQsIHdyKQpDcmVhdGVDbGllbnQoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25Db25uZWN0KHdzLCByZXEpCigpID0+CigpID0+CiAgb25Qb25nKHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVxKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXRKU09OKCkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAABuAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					201,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								308,
								328
							],
							[
								353,
								376
							],
							[
								416,
								436
							],
							[
								921,
								952
							],
							[
								1045,
								1065
							],
							[
								1186,
								1213
							],
							[
								1259,
								1274
							],
							[
								1339,
								1364
							],
							[
								1407,
								1423
							],
							[
								1635,
								1658
							],
							[
								1712,
								1731
							],
							[
								1948,
								1966
							],
							[
								2095,
								2113
							],
							[
								2184,
								2190
							],
							[
								2578,
								2584
							],
							[
								2698,
								2713
							],
							[
								2765,
								2781
							],
							[
								2853,
								2869
							],
							[
								3006,
								3024
							],
							[
								3380,
								3402
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"onFd(fd, rd, wr)",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABuAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CiAgb25GZChmZCwgcmQsIHdyKQpDcmVhdGVDbGllbnQoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25Db25uZWN0KHdzLCByZXEpCigpID0+CigpID0+CiAgb25Qb25nKHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVxKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXRKU09OKCkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAABuAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbgEAACAgcHJpbnQgPSAoLi4uYXJncykgPT4KQ3JlYXRlU2VydmVyKCkKKGxldmVsLCAuLi5hcmdzKSA9PgogIHRlc3QocmVxLCByZXNwKQogIG9uQ29ubmVjdDogc29ja2V0ID0+CiAgb25NZXNzYWdlOiAoc29ja2V0LCBtc2cpID0+CiAgb25DbG9zZTogd2h5ID0+CiAgb25Qb25nOiAoc29ja2V0LCBkYXRhKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKQ3JlYXRlQ2xpZW50KCkKKGxldmVsLCAuLi5hcmdzKSA9PgogIG9uTWVzc2FnZSh3cywgbXNnKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgooKSA9PgogIG9uUG9uZyh3cywgcmVxKQogIG9uQ2xvc2Uod3MsIHJlcSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0SlNPTigpCiAgbWFpbiguLi5hcmdzKQAAAAAAAAAAbgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					202,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								308,
								328
							],
							[
								353,
								376
							],
							[
								416,
								436
							],
							[
								921,
								952
							],
							[
								1045,
								1065
							],
							[
								1186,
								1213
							],
							[
								1259,
								1274
							],
							[
								1339,
								1364
							],
							[
								1407,
								1423
							],
							[
								1635,
								1658
							],
							[
								1712,
								1731
							],
							[
								1948,
								1966
							],
							[
								2095,
								2113
							],
							[
								2184,
								2190
							],
							[
								2578,
								2584
							],
							[
								2698,
								2713
							],
							[
								2765,
								2781
							],
							[
								2853,
								2869
							],
							[
								3006,
								3024
							],
							[
								3380,
								3402
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"onFd(fd, rd, wr)",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABuAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CiAgb25GZChmZCwgcmQsIHdyKQpDcmVhdGVDbGllbnQoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25Db25uZWN0KHdzLCByZXEpCigpID0+CigpID0+CiAgb25Qb25nKHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVxKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXRKU09OKCkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAABuAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					203,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								308,
								328
							],
							[
								353,
								376
							],
							[
								416,
								436
							],
							[
								921,
								952
							],
							[
								1045,
								1065
							],
							[
								1186,
								1213
							],
							[
								1259,
								1274
							],
							[
								1339,
								1364
							],
							[
								1407,
								1423
							],
							[
								1635,
								1658
							],
							[
								1712,
								1731
							],
							[
								1948,
								1966
							],
							[
								2095,
								2113
							],
							[
								2184,
								2190
							],
							[
								2578,
								2584
							],
							[
								2698,
								2713
							],
							[
								2765,
								2781
							],
							[
								2853,
								2869
							],
							[
								3006,
								3024
							],
							[
								3380,
								3402
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"onFd(fd, rd, wr)",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABuAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CiAgb25GZChmZCwgcmQsIHdyKQpDcmVhdGVDbGllbnQoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25Db25uZWN0KHdzLCByZXEpCigpID0+CigpID0+CiAgb25Qb25nKHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVxKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXRKU09OKCkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAABuAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					204,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								308,
								328
							],
							[
								353,
								376
							],
							[
								416,
								436
							],
							[
								921,
								952
							],
							[
								1045,
								1065
							],
							[
								1186,
								1213
							],
							[
								1259,
								1274
							],
							[
								1339,
								1364
							],
							[
								1407,
								1423
							],
							[
								1635,
								1658
							],
							[
								1712,
								1731
							],
							[
								1948,
								1966
							],
							[
								2095,
								2113
							],
							[
								2184,
								2190
							],
							[
								2578,
								2584
							],
							[
								2698,
								2713
							],
							[
								2765,
								2781
							],
							[
								2853,
								2869
							],
							[
								3006,
								3024
							],
							[
								3380,
								3402
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"onFd(fd, rd, wr)",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABuAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CiAgb25GZChmZCwgcmQsIHdyKQpDcmVhdGVDbGllbnQoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25Db25uZWN0KHdzLCByZXEpCigpID0+CigpID0+CiAgb25Qb25nKHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVxKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXRKU09OKCkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAABuAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbgEAACAgcHJpbnQgPSAoLi4uYXJncykgPT4KQ3JlYXRlU2VydmVyKCkKKGxldmVsLCAuLi5hcmdzKSA9PgogIHRlc3QocmVxLCByZXNwKQogIG9uQ29ubmVjdDogc29ja2V0ID0+CiAgb25NZXNzYWdlOiAoc29ja2V0LCBtc2cpID0+CiAgb25DbG9zZTogd2h5ID0+CiAgb25Qb25nOiAoc29ja2V0LCBkYXRhKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKQ3JlYXRlQ2xpZW50KCkKKGxldmVsLCAuLi5hcmdzKSA9PgogIG9uTWVzc2FnZSh3cywgbXNnKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgooKSA9PgogIG9uUG9uZyh3cywgcmVxKQogIG9uQ2xvc2Uod3MsIHJlcSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0SlNPTigpCiAgbWFpbiguLi5hcmdzKQAAAAAAAAAAbgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					205,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								308,
								328
							],
							[
								352,
								375
							],
							[
								415,
								435
							],
							[
								920,
								951
							],
							[
								1044,
								1064
							],
							[
								1185,
								1212
							],
							[
								1258,
								1273
							],
							[
								1338,
								1363
							],
							[
								1406,
								1422
							],
							[
								1634,
								1657
							],
							[
								1711,
								1730
							],
							[
								1947,
								1965
							],
							[
								2094,
								2112
							],
							[
								2183,
								2189
							],
							[
								2577,
								2583
							],
							[
								2697,
								2712
							],
							[
								2764,
								2780
							],
							[
								2852,
								2868
							],
							[
								3005,
								3023
							],
							[
								3379,
								3401
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"onFd(fd, rd, wr)",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABuAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CiAgb25GZChmZCwgcmQsIHdyKQpDcmVhdGVDbGllbnQoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25Db25uZWN0KHdzLCByZXEpCigpID0+CigpID0+CiAgb25Qb25nKHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVxKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXRKU09OKCkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAABuAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbgEAACAgcHJpbnQgPSAoLi4uYXJncykgPT4KQ3JlYXRlU2VydmVyKCkKKGxldmVsLCAuLi5hcmdzKSA9PgogIHRlc3QocmVxLCByZXNwKQogIG9uQ29ubmVjdDogc29ja2V0ID0+CiAgb25NZXNzYWdlOiAoc29ja2V0LCBtc2cpID0+CiAgb25DbG9zZTogd2h5ID0+CiAgb25Qb25nOiAoc29ja2V0LCBkYXRhKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKQ3JlYXRlQ2xpZW50KCkKKGxldmVsLCAuLi5hcmdzKSA9PgogIG9uTWVzc2FnZSh3cywgbXNnKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgooKSA9PgogIG9uUG9uZyh3cywgcmVxKQogIG9uQ2xvc2Uod3MsIHJlcSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0SlNPTigpCiAgbWFpbiguLi5hcmdzKQAAAAAAAAAAbgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					206,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								308,
								328
							],
							[
								352,
								375
							],
							[
								415,
								435
							],
							[
								920,
								951
							],
							[
								1044,
								1064
							],
							[
								1185,
								1212
							],
							[
								1258,
								1273
							],
							[
								1338,
								1363
							],
							[
								1406,
								1422
							],
							[
								1634,
								1657
							],
							[
								1711,
								1730
							],
							[
								1947,
								1965
							],
							[
								2094,
								2112
							],
							[
								2183,
								2189
							],
							[
								2577,
								2583
							],
							[
								2697,
								2712
							],
							[
								2764,
								2780
							],
							[
								2852,
								2868
							],
							[
								3005,
								3023
							],
							[
								3379,
								3401
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"onFd(fd, rd, wr)",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAABuAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CiAgb25GZChmZCwgcmQsIHdyKQpDcmVhdGVDbGllbnQoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25Db25uZWN0KHdzLCByZXEpCigpID0+CigpID0+CiAgb25Qb25nKHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVxKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXRKU09OKCkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAABuAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbgEAACAgcHJpbnQgPSAoLi4uYXJncykgPT4KQ3JlYXRlU2VydmVyKCkKKGxldmVsLCAuLi5hcmdzKSA9PgogIHRlc3QocmVxLCByZXNwKQogIG9uQ29ubmVjdDogc29ja2V0ID0+CiAgb25NZXNzYWdlOiAoc29ja2V0LCBtc2cpID0+CiAgb25DbG9zZTogd2h5ID0+CiAgb25Qb25nOiAoc29ja2V0LCBkYXRhKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKQ3JlYXRlQ2xpZW50KCkKKGxldmVsLCAuLi5hcmdzKSA9PgogIG9uTWVzc2FnZSh3cywgbXNnKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgooKSA9PgogIG9uUG9uZyh3cywgcmVxKQogIG9uQ2xvc2Uod3MsIHJlcSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0SlNPTigpCiAgbWFpbiguLi5hcmdzKQAAAAAAAAAAbgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG4BAAAgIHByaW50ID0gKC4uLmFyZ3MpID0+CkNyZWF0ZVNlcnZlcigpCihsZXZlbCwgLi4uYXJncykgPT4KICB0ZXN0KHJlcSwgcmVzcCkKICBvbkNvbm5lY3Q6IHNvY2tldCA9PgogIG9uTWVzc2FnZTogKHNvY2tldCwgbXNnKSA9PgogIG9uQ2xvc2U6IHdoeSA9PgogIG9uUG9uZzogKHNvY2tldCwgZGF0YSkgPT4KICBvbkZkKGZkLCByZCwgd3IpCkNyZWF0ZUNsaWVudCgpCihsZXZlbCwgLi4uYXJncykgPT4KICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKKCkgPT4KKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAG4BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					207,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								308,
								328
							],
							[
								352,
								375
							],
							[
								415,
								435
							],
							[
								920,
								951
							],
							[
								1044,
								1064
							],
							[
								1185,
								1212
							],
							[
								1258,
								1273
							],
							[
								1338,
								1363
							],
							[
								1406,
								1422
							],
							[
								1634,
								1657
							],
							[
								1711,
								1730
							],
							[
								1947,
								1965
							],
							[
								2094,
								2112
							],
							[
								2183,
								2189
							],
							[
								2577,
								2583
							],
							[
								2697,
								2712
							],
							[
								2764,
								2780
							],
							[
								2852,
								2868
							],
							[
								3005,
								3023
							],
							[
								3379,
								3401
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"onFd(fd, rd, wr)",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAABuAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CiAgb25GZChmZCwgcmQsIHdyKQpDcmVhdGVDbGllbnQoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25Db25uZWN0KHdzLCByZXEpCigpID0+CigpID0+CiAgb25Qb25nKHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVxKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXRKU09OKCkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAABuAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbgEAACAgcHJpbnQgPSAoLi4uYXJncykgPT4KQ3JlYXRlU2VydmVyKCkKKGxldmVsLCAuLi5hcmdzKSA9PgogIHRlc3QocmVxLCByZXNwKQogIG9uQ29ubmVjdDogc29ja2V0ID0+CiAgb25NZXNzYWdlOiAoc29ja2V0LCBtc2cpID0+CiAgb25DbG9zZTogd2h5ID0+CiAgb25Qb25nOiAoc29ja2V0LCBkYXRhKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKQ3JlYXRlQ2xpZW50KCkKKGxldmVsLCAuLi5hcmdzKSA9PgogIG9uTWVzc2FnZSh3cywgbXNnKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgooKSA9PgogIG9uUG9uZyh3cywgcmVxKQogIG9uQ2xvc2Uod3MsIHJlcSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0SlNPTigpCiAgbWFpbiguLi5hcmdzKQAAAAAAAAAAbgEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					208,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								334,
								354
							],
							[
								378,
								401
							],
							[
								441,
								461
							],
							[
								946,
								977
							],
							[
								1070,
								1090
							],
							[
								1211,
								1238
							],
							[
								1284,
								1299
							],
							[
								1364,
								1389
							],
							[
								1432,
								1448
							],
							[
								1660,
								1683
							],
							[
								1737,
								1756
							],
							[
								1973,
								1991
							],
							[
								2120,
								2138
							],
							[
								2209,
								2215
							],
							[
								2603,
								2609
							],
							[
								2723,
								2738
							],
							[
								2790,
								2806
							],
							[
								2878,
								2894
							],
							[
								3031,
								3049
							],
							[
								3405,
								3427
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"onFd(fd, rd, wr)",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"CAAAAAAAAAAAAAAAAAAAAAAAAABuAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CiAgb25GZChmZCwgcmQsIHdyKQpDcmVhdGVDbGllbnQoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25Db25uZWN0KHdzLCByZXEpCigpID0+CigpID0+CiAgb25Qb25nKHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVxKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXRKU09OKCkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAABuAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbgEAACAgcHJpbnQgPSAoLi4uYXJncykgPT4KQ3JlYXRlU2VydmVyKCkKKGxldmVsLCAuLi5hcmdzKSA9PgogIHRlc3QocmVxLCByZXNwKQogIG9uQ29ubmVjdDogc29ja2V0ID0+CiAgb25NZXNzYWdlOiAoc29ja2V0LCBtc2cpID0+CiAgb25DbG9zZTogd2h5ID0+CiAgb25Qb25nOiAoc29ja2V0LCBkYXRhKSA9PgogIG9uRmQoZmQsIHJkLCB3cikKQ3JlYXRlQ2xpZW50KCkKKGxldmVsLCAuLi5hcmdzKSA9PgogIG9uTWVzc2FnZSh3cywgbXNnKQogIG9uQ29ubmVjdCh3cywgcmVxKQooKSA9PgooKSA9PgogIG9uUG9uZyh3cywgcmVxKQogIG9uQ2xvc2Uod3MsIHJlcSkKICBvbkZkKGZkLCByZCwgd3IpCiAgZ2V0SlNPTigpCiAgbWFpbiguLi5hcmdzKQAAAAAAAAAAbgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG4BAAAgIHByaW50ID0gKC4uLmFyZ3MpID0+CkNyZWF0ZVNlcnZlcigpCihsZXZlbCwgLi4uYXJncykgPT4KICB0ZXN0KHJlcSwgcmVzcCkKICBvbkNvbm5lY3Q6IHNvY2tldCA9PgogIG9uTWVzc2FnZTogKHNvY2tldCwgbXNnKSA9PgogIG9uQ2xvc2U6IHdoeSA9PgogIG9uUG9uZzogKHNvY2tldCwgZGF0YSkgPT4KICBvbkZkKGZkLCByZCwgd3IpCkNyZWF0ZUNsaWVudCgpCihsZXZlbCwgLi4uYXJncykgPT4KICBvbk1lc3NhZ2Uod3MsIG1zZykKICBvbkNvbm5lY3Qod3MsIHJlcSkKKCkgPT4KKCkgPT4KICBvblBvbmcod3MsIHJlcSkKICBvbkNsb3NlKHdzLCByZXEpCiAgb25GZChmZCwgcmQsIHdyKQogIGdldEpTT04oKQogIG1haW4oLi4uYXJncykAAAAAAAAAAG4BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABuAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CiAgb25GZChmZCwgcmQsIHdyKQpDcmVhdGVDbGllbnQoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25Db25uZWN0KHdzLCByZXEpCigpID0+CigpID0+CiAgb25Qb25nKHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVxKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXRKU09OKCkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAABuAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					209,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAABuAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CiAgb25GZChmZCwgcmQsIHdyKQpDcmVhdGVDbGllbnQoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25Db25uZWN0KHdzLCByZXEpCigpID0+CigpID0+CiAgb25Qb25nKHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVxKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXRKU09OKCkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					210,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					211,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1566,
								1603
							],
							[
								1679,
								1684
							],
							[
								1807,
								1824
							],
							[
								2220,
								2258
							],
							[
								2490,
								2511
							],
							[
								2711,
								2741
							],
							[
								4300,
								4304
							],
							[
								4323,
								4351
							],
							[
								4363,
								4377
							],
							[
								4542,
								4547
							],
							[
								4698,
								4712
							],
							[
								5194,
								5198
							],
							[
								5258,
								5262
							],
							[
								5490,
								5497
							],
							[
								5539,
								5556
							],
							[
								5796,
								5843
							],
							[
								6330,
								6393
							],
							[
								6903,
								6926
							],
							[
								7866,
								7885
							],
							[
								8051,
								8098
							],
							[
								8145,
								8156
							],
							[
								8748,
								8766
							],
							[
								8867,
								8884
							],
							[
								9058,
								9062
							],
							[
								9137,
								9174
							],
							[
								9333,
								9337
							],
							[
								9677,
								9709
							],
							[
								9878,
								9902
							],
							[
								9916,
								9942
							],
							[
								10249,
								10253
							],
							[
								10373,
								10396
							],
							[
								10452,
								10470
							],
							[
								10647,
								10662
							],
							[
								11105,
								11120
							],
							[
								11504,
								11533
							],
							[
								11623,
								11636
							],
							[
								12355,
								12365
							],
							[
								12508,
								12526
							],
							[
								13007,
								13025
							],
							[
								13026,
								13033
							],
							[
								13066,
								13121
							],
							[
								13421,
								13432
							],
							[
								13566,
								13595
							],
							[
								13813,
								13835
							],
							[
								14149,
								14159
							],
							[
								14367,
								14381
							],
							[
								14435,
								14449
							],
							[
								15467,
								15510
							],
							[
								15696,
								15702
							],
							[
								15715,
								15731
							],
							[
								17305,
								17341
							],
							[
								17529,
								17564
							],
							[
								17704,
								17708
							],
							[
								17835,
								17853
							],
							[
								18007,
								18039
							],
							[
								18388,
								18399
							],
							[
								18554,
								18565
							],
							[
								18625,
								18645
							],
							[
								19234,
								19269
							],
							[
								19672,
								19691
							],
							[
								19792,
								19834
							],
							[
								20663,
								20686
							],
							[
								20724,
								20731
							],
							[
								21756,
								21761
							],
							[
								22952,
								22967
							],
							[
								23293,
								23299
							],
							[
								26465,
								26481
							],
							[
								26810,
								26816
							],
							[
								27221,
								27246
							],
							[
								27593,
								27610
							],
							[
								27662,
								27676
							],
							[
								28022,
								28032
							],
							[
								28156,
								28173
							],
							[
								28205,
								28220
							],
							[
								28263,
								28277
							],
							[
								28281,
								28296
							],
							[
								28439,
								28443
							],
							[
								28520,
								28527
							],
							[
								28953,
								28962
							],
							[
								29078,
								29084
							],
							[
								29142,
								29155
							],
							[
								29370,
								29387
							],
							[
								29540,
								29582
							],
							[
								29947,
								29978
							],
							[
								30060,
								30076
							],
							[
								30257,
								30265
							],
							[
								30397,
								30417
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(pid, status)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"a =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							"() =>",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"sendMessage: msg =>",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							" frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							"onFd(fd, rd, wr)",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							"daemon()",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAA1QUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					212,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADVBQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+CiAgc2lnbmFsTmFtZSA9IG4gPT4KICBjaGVja0NoaWxkRXhpdGVkKHBpZCwgc3RhdHVzKQpHZXRMb2Mobm9kZSkKTG9hZEFTVChzb3VyY2UpCiAgYSA9PgpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCigpID0+CiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2U6IG1zZyA9PgpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKICB2YWx1ZShuYW1lKQogIHYgPT4KUHJpbnRTdGFja0ZyYW1lKGZyYW1lKQogIGYgPT4KUHJpbnRTdGFjayhzdGFjaykKKG1lbWJlciwgb2JqLCBwcm9wKSA9PgogIGJyZWFrcG9pbnRzKC4uLmFyZ3MpCiAgYiA9PgogIHN0YWNrVHJhY2UoZnJhbWUpCmZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKICBtYWluKC4uLmFyZ3MpCihhLCB2KSA9PgoodiwgcHYsIG8pID0+Cih2LCBwdiwgbykgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKQooKSA9PgoobGV2ZWwsIHN0cikgPT4KICBjb25maWcocmVxLCByZXMpCiAgZmlsZXMocmVxLCByZXMpCiAgZiA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIHZhbHVlOiBmdW5jdGlvbiBzZW5kTWVzc2FnZShtc2cpCiAgb25DbG9zZSh3cykKICBvbkVycm9yKHdzKQogIG9uUmVxdWVzdChyZXEsIHJlc3ApCihtYXRjaCwgcDEsIHAwLCBwMiwgcDMsIG9mZnNldCkgPT4KICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICBmb3J3YXJkID0gKGZkLCBuYW1lKSA9PgpidWYgPT4KKCkgPT4KKGRiZywgc29jaykgPT4KICBtc2cgPT4KICBvbkZkKGZkLCByZCwgd3IpCigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSkKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgZGFlbW9uKCkKICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					213,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					214,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					215,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1566,
								1603
							],
							[
								1679,
								1684
							],
							[
								1807,
								1824
							],
							[
								2220,
								2258
							],
							[
								2490,
								2511
							],
							[
								2711,
								2741
							],
							[
								4300,
								4304
							],
							[
								4323,
								4351
							],
							[
								4363,
								4377
							],
							[
								4542,
								4547
							],
							[
								4698,
								4712
							],
							[
								5194,
								5198
							],
							[
								5258,
								5262
							],
							[
								5490,
								5497
							],
							[
								5539,
								5556
							],
							[
								5796,
								5843
							],
							[
								6330,
								6393
							],
							[
								6903,
								6926
							],
							[
								7866,
								7885
							],
							[
								8051,
								8098
							],
							[
								8145,
								8156
							],
							[
								8748,
								8766
							],
							[
								8867,
								8884
							],
							[
								9058,
								9062
							],
							[
								9137,
								9174
							],
							[
								9333,
								9337
							],
							[
								9677,
								9709
							],
							[
								9878,
								9902
							],
							[
								9916,
								9942
							],
							[
								10249,
								10253
							],
							[
								10373,
								10396
							],
							[
								10452,
								10470
							],
							[
								10647,
								10662
							],
							[
								11105,
								11120
							],
							[
								11504,
								11533
							],
							[
								11623,
								11636
							],
							[
								12355,
								12365
							],
							[
								12508,
								12526
							],
							[
								13007,
								13025
							],
							[
								13026,
								13033
							],
							[
								13066,
								13121
							],
							[
								13421,
								13432
							],
							[
								13566,
								13595
							],
							[
								13813,
								13835
							],
							[
								14149,
								14159
							],
							[
								14367,
								14381
							],
							[
								14435,
								14449
							],
							[
								15467,
								15510
							],
							[
								15696,
								15702
							],
							[
								15715,
								15731
							],
							[
								17305,
								17341
							],
							[
								17529,
								17564
							],
							[
								17704,
								17708
							],
							[
								17835,
								17853
							],
							[
								18007,
								18039
							],
							[
								18388,
								18399
							],
							[
								18554,
								18565
							],
							[
								18625,
								18645
							],
							[
								19234,
								19269
							],
							[
								19672,
								19691
							],
							[
								19792,
								19834
							],
							[
								20663,
								20686
							],
							[
								20724,
								20731
							],
							[
								21756,
								21761
							],
							[
								22952,
								22967
							],
							[
								23293,
								23299
							],
							[
								26465,
								26481
							],
							[
								26810,
								26816
							],
							[
								27221,
								27246
							],
							[
								27593,
								27610
							],
							[
								27662,
								27676
							],
							[
								28022,
								28032
							],
							[
								28156,
								28173
							],
							[
								28205,
								28220
							],
							[
								28263,
								28277
							],
							[
								28281,
								28296
							],
							[
								28439,
								28443
							],
							[
								28520,
								28527
							],
							[
								28953,
								28962
							],
							[
								29078,
								29084
							],
							[
								29142,
								29155
							],
							[
								29370,
								29387
							],
							[
								29540,
								29582
							],
							[
								29947,
								29978
							],
							[
								30060,
								30076
							],
							[
								30257,
								30265
							],
							[
								30397,
								30417
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(pid, status)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"a =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							"() =>",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"sendMessage: msg =>",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							" frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							"onFd(fd, rd, wr)",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							"daemon()",
							" function quit(why)"
						]
					},
					"AwAAAAAAAAAAAAAA1QUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANUFAAAgIHNjcmlwdE5hbWUgPSAoYXJnID0gc2NyaXB0QXJnc1swXSkgPT4KKCkgPT4KICBzaWduYWxOYW1lID0gbiA9PgogIGNoZWNrQ2hpbGRFeGl0ZWQocGlkLCBzdGF0dXMpCkdldExvYyhub2RlKQpMb2FkQVNUKHNvdXJjZSkKICBhID0+ClN0YXJ0UkVQTChwcmVmaXggPSAKLCBzdWZmaXggPSAnJykKKCkgPT4KICAuc2hvdyA9IGFyZyA9PgogIGsgPT4KICBrID0+CiAgaXRlbSA9PgooYWNjLCBrZXlzLCBpKSA9PgpTdGFydERlYnVnZ2VyKGFyZ3MsIGNvbm5lY3QsIGFkZHJlc3MpCkNvbm5lY3REZWJ1Z2dlcihhZGRyZXNzLCBza2lwVG9NYWluID0gdHJ1ZSwgY2FsbGJhY2spCiAgcHJvY2VzcyhjYWxsYmFjaykKICBzZW5kTWVzc2FnZTogbXNnID0+CkxhdW5jaERlYnVnZ2VyKGRiZywgc2tpcFRvTWFpbiA9IHRydWUpCigpID0+CkRlYnVnZ2VyRGlzcGF0Y2hlcgogIHZhbHVlKG5hbWUpCiAgdiA9PgpQcmludFN0YWNrRnJhbWUoZnJhbWUpCiAgZiA9PgpQcmludFN0YWNrKHN0YWNrKQoobWVtYmVyLCBvYmosIHByb3ApID0+CiAgYnJlYWtwb2ludHMoLi4uYXJncykKICBiID0+CiAgc3RhY2tUcmFjZShmcmFtZSkKZnJhbWUgPT4KICBzY29wZXMobikKICB3YWl0UnVuKCkKICB2YXJpYWJsZXMobiwgZGVwdGggPSAwKQogIGFkZCA9IGl0ZW0gPT4KICB0b1N0cmluZygpCkRlYnVnZ2VyRGlzcGF0Y2hlcgoocG9ydCA9IDg3NzcpID0+CigpID0+Ck5ld0RlYnVnZ2VyKGFyZ3MsIHNraXBUb01haW4gPSBmYWxzZSwgYWRkcmVzcykKICBraWxsOiAoKSA9PgpPblN0b3BwZWQobXNnKQogIG1haW4oLi4uYXJncykKKGEsIHYpID0+Cih2LCBwdiwgbykgPT4KKHYsIHB2LCBvKSA9PgogIGNyZWF0ZVdTKHVybCwgY2FsbGJhY2tzLCBsaXN0ZW4pCigpID0+CihsZXZlbCwgc3RyKSA9PgogIGNvbmZpZyhyZXEsIHJlcykKICBmaWxlcyhyZXEsIHJlcykKICBmID0+CiAgb25Db25uZWN0KHdzLCByZXEpCiAgdmFsdWU6IGZ1bmN0aW9uIHNlbmRNZXNzYWdlKG1zZykKICBvbkNsb3NlKHdzKQogIG9uRXJyb3Iod3MpCiAgb25SZXF1ZXN0KHJlcSwgcmVzcCkKKG1hdGNoLCBwMSwgcDAsIHAyLCBwMywgb2Zmc2V0KSA9PgogIG9uTWVzc2FnZSh3cywgZGF0YSkKICBoYW5kbGVDb21tYW5kKHdzLCBkYXRhKQogIGZvcndhcmQgPSAoZmQsIG5hbWUpID0+CmJ1ZiA9PgooKSA9PgooZGJnLCBzb2NrKSA9PgogIG1zZyA9PgogIG9uRmQoZmQsIHJkLCB3cikKKCkgPT4KICBzaG93U2Vzc2lvbnMoKQogIGdldCBjb25uZWN0aW9ucygpCiAgZ2V0IHNvY2tsaXN0KCkKICBnZXQgZmlsZSgpCihmaWxlLCBzb3VyY2UpID0+CigpID0+CnMgPT4KKCkgPT4KICBtID0+CiAgbGluZShpKQogIG1hdGNoKHJlKQogIGZucyA9PgooeyBuYW1lIH0pID0+CiAgZnVuY3Rpb25zKCkKKFtuYW1lLCBsb2MsIHBhcmFtcywgZXhwcmVzc2lvbiwgcGF0aF0pID0+CiAgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKQogIGNvbmQgPSAociwgaSkgPT4KICBkYWVtb24oKQogIHF1aXQod2h5KQAAAAAAAAAA1QUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					216,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1566,
								1603
							],
							[
								1679,
								1684
							],
							[
								1807,
								1824
							],
							[
								2220,
								2258
							],
							[
								2490,
								2511
							],
							[
								2711,
								2741
							],
							[
								4300,
								4304
							],
							[
								4323,
								4351
							],
							[
								4363,
								4377
							],
							[
								4542,
								4547
							],
							[
								4698,
								4712
							],
							[
								5194,
								5198
							],
							[
								5258,
								5262
							],
							[
								5490,
								5497
							],
							[
								5539,
								5556
							],
							[
								5796,
								5843
							],
							[
								6330,
								6393
							],
							[
								6903,
								6926
							],
							[
								7866,
								7885
							],
							[
								8051,
								8098
							],
							[
								8145,
								8156
							],
							[
								8748,
								8766
							],
							[
								8867,
								8884
							],
							[
								9058,
								9062
							],
							[
								9137,
								9174
							],
							[
								9333,
								9337
							],
							[
								9677,
								9709
							],
							[
								9878,
								9902
							],
							[
								9916,
								9942
							],
							[
								10249,
								10253
							],
							[
								10373,
								10396
							],
							[
								10452,
								10470
							],
							[
								10647,
								10662
							],
							[
								11105,
								11120
							],
							[
								11504,
								11533
							],
							[
								11623,
								11636
							],
							[
								12355,
								12365
							],
							[
								12508,
								12526
							],
							[
								13007,
								13025
							],
							[
								13026,
								13033
							],
							[
								13066,
								13121
							],
							[
								13421,
								13432
							],
							[
								13566,
								13595
							],
							[
								13813,
								13835
							],
							[
								14149,
								14159
							],
							[
								14367,
								14381
							],
							[
								14435,
								14449
							],
							[
								15467,
								15510
							],
							[
								15696,
								15702
							],
							[
								15715,
								15731
							],
							[
								17305,
								17341
							],
							[
								17529,
								17564
							],
							[
								17704,
								17708
							],
							[
								17835,
								17853
							],
							[
								18007,
								18039
							],
							[
								18388,
								18399
							],
							[
								18554,
								18565
							],
							[
								18625,
								18645
							],
							[
								19234,
								19269
							],
							[
								19672,
								19691
							],
							[
								19792,
								19834
							],
							[
								20663,
								20686
							],
							[
								20724,
								20731
							],
							[
								21756,
								21761
							],
							[
								22952,
								22967
							],
							[
								23293,
								23299
							],
							[
								26465,
								26481
							],
							[
								26810,
								26816
							],
							[
								27221,
								27246
							],
							[
								27593,
								27610
							],
							[
								27662,
								27676
							],
							[
								28022,
								28032
							],
							[
								28156,
								28173
							],
							[
								28205,
								28220
							],
							[
								28263,
								28277
							],
							[
								28281,
								28296
							],
							[
								28439,
								28443
							],
							[
								28520,
								28527
							],
							[
								28953,
								28962
							],
							[
								29078,
								29084
							],
							[
								29142,
								29155
							],
							[
								29370,
								29387
							],
							[
								29540,
								29582
							],
							[
								29947,
								29978
							],
							[
								30060,
								30076
							],
							[
								30257,
								30265
							],
							[
								30397,
								30417
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(pid, status)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"a =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							"() =>",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"sendMessage: msg =>",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							" frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							"onFd(fd, rd, wr)",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							"daemon()",
							" function quit(why)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADVBQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+CiAgc2lnbmFsTmFtZSA9IG4gPT4KICBjaGVja0NoaWxkRXhpdGVkKHBpZCwgc3RhdHVzKQpHZXRMb2Mobm9kZSkKTG9hZEFTVChzb3VyY2UpCiAgYSA9PgpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCigpID0+CiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2U6IG1zZyA9PgpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKICB2YWx1ZShuYW1lKQogIHYgPT4KUHJpbnRTdGFja0ZyYW1lKGZyYW1lKQogIGYgPT4KUHJpbnRTdGFjayhzdGFjaykKKG1lbWJlciwgb2JqLCBwcm9wKSA9PgogIGJyZWFrcG9pbnRzKC4uLmFyZ3MpCiAgYiA9PgogIHN0YWNrVHJhY2UoZnJhbWUpCmZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKICBtYWluKC4uLmFyZ3MpCihhLCB2KSA9PgoodiwgcHYsIG8pID0+Cih2LCBwdiwgbykgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKQooKSA9PgoobGV2ZWwsIHN0cikgPT4KICBjb25maWcocmVxLCByZXMpCiAgZmlsZXMocmVxLCByZXMpCiAgZiA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIHZhbHVlOiBmdW5jdGlvbiBzZW5kTWVzc2FnZShtc2cpCiAgb25DbG9zZSh3cykKICBvbkVycm9yKHdzKQogIG9uUmVxdWVzdChyZXEsIHJlc3ApCihtYXRjaCwgcDEsIHAwLCBwMiwgcDMsIG9mZnNldCkgPT4KICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICBmb3J3YXJkID0gKGZkLCBuYW1lKSA9PgpidWYgPT4KKCkgPT4KKGRiZywgc29jaykgPT4KICBtc2cgPT4KICBvbkZkKGZkLCByZCwgd3IpCigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSkKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgZGFlbW9uKCkKICBxdWl0KHdoeSkAAAAAAAAAANUFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					217,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADVBQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+CiAgc2lnbmFsTmFtZSA9IG4gPT4KICBjaGVja0NoaWxkRXhpdGVkKHBpZCwgc3RhdHVzKQpHZXRMb2Mobm9kZSkKTG9hZEFTVChzb3VyY2UpCiAgYSA9PgpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCigpID0+CiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2U6IG1zZyA9PgpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKICB2YWx1ZShuYW1lKQogIHYgPT4KUHJpbnRTdGFja0ZyYW1lKGZyYW1lKQogIGYgPT4KUHJpbnRTdGFjayhzdGFjaykKKG1lbWJlciwgb2JqLCBwcm9wKSA9PgogIGJyZWFrcG9pbnRzKC4uLmFyZ3MpCiAgYiA9PgogIHN0YWNrVHJhY2UoZnJhbWUpCmZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKICBtYWluKC4uLmFyZ3MpCihhLCB2KSA9PgoodiwgcHYsIG8pID0+Cih2LCBwdiwgbykgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKQooKSA9PgoobGV2ZWwsIHN0cikgPT4KICBjb25maWcocmVxLCByZXMpCiAgZmlsZXMocmVxLCByZXMpCiAgZiA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIHZhbHVlOiBmdW5jdGlvbiBzZW5kTWVzc2FnZShtc2cpCiAgb25DbG9zZSh3cykKICBvbkVycm9yKHdzKQogIG9uUmVxdWVzdChyZXEsIHJlc3ApCihtYXRjaCwgcDEsIHAwLCBwMiwgcDMsIG9mZnNldCkgPT4KICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICBmb3J3YXJkID0gKGZkLCBuYW1lKSA9PgpidWYgPT4KKCkgPT4KKGRiZywgc29jaykgPT4KICBtc2cgPT4KICBvbkZkKGZkLCByZCwgd3IpCigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSkKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgZGFlbW9uKCkKICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					218,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					219,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-sockets.js",
						"symkeys":
						[
							[
								521,
								549
							],
							[
								1190,
								1196
							]
						],
						"symlist":
						[
							"async function main(...args)",
							"err =>"
						]
					},
					"AQAAAAAAAAAAAAAAGAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					220,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAICBtYWluKC4uLmFyZ3MpCiAgZXJyID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					221,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-sockets.js",
						"symkeys":
						[
							[
								521,
								549
							],
							[
								1190,
								1196
							]
						],
						"symlist":
						[
							"async function main(...args)",
							"err =>"
						]
					},
					"AQAAAAAAAAAAAAAAGAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					222,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-sockets.js",
						"symkeys":
						[
							[
								521,
								549
							],
							[
								1229,
								1235
							]
						],
						"symlist":
						[
							"async function main(...args)",
							"err =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAICBtYWluKC4uLmFyZ3MpCiAgZXJyID0+AAAAAAAAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAACAgbWFpbiguLi5hcmdzKQogIGVyciA9PgAAAAAAAAAAGAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					223,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-sockets.js",
						"symkeys":
						[
							[
								521,
								549
							],
							[
								1274,
								1280
							]
						],
						"symlist":
						[
							"async function main(...args)",
							"err =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAICBtYWluKC4uLmFyZ3MpCiAgZXJyID0+AAAAAAAAAAAYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					224,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-sockets.js",
						"symkeys":
						[
							[
								521,
								549
							],
							[
								1274,
								1280
							]
						],
						"symlist":
						[
							"async function main(...args)",
							"err =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAICBtYWluKC4uLmFyZ3MpCiAgZXJyID0+AAAAAAAAAAAYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					225,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-sockets.js",
						"symkeys":
						[
							[
								534,
								562
							],
							[
								1287,
								1293
							]
						],
						"symlist":
						[
							"async function main(...args)",
							"err =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAICBtYWluKC4uLmFyZ3MpCiAgZXJyID0+AAAAAAAAAAAYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					226,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-sockets.js",
						"symkeys":
						[
							[
								534,
								562
							],
							[
								1292,
								1298
							]
						],
						"symlist":
						[
							"async function main(...args)",
							"err =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAICBtYWluKC4uLmFyZ3MpCiAgZXJyID0+AAAAAAAAAAAYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					227,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-sockets.js",
						"symkeys":
						[
							[
								534,
								562
							],
							[
								1292,
								1298
							]
						],
						"symlist":
						[
							"async function main(...args)",
							"err =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAICBtYWluKC4uLmFyZ3MpCiAgZXJyID0+AAAAAAAAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAACAgbWFpbiguLi5hcmdzKQogIGVyciA9PgAAAAAAAAAAGAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					228,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-sockets.js",
						"symkeys":
						[
							[
								534,
								562
							],
							[
								1292,
								1298
							]
						],
						"symlist":
						[
							"async function main(...args)",
							"err =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAICBtYWluKC4uLmFyZ3MpCiAgZXJyID0+AAAAAAAAAAAYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					229,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-sockets.js",
						"symkeys":
						[
							[
								510,
								538
							],
							[
								1268,
								1274
							]
						],
						"symlist":
						[
							"async function main(...args)",
							"err =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAICBtYWluKC4uLmFyZ3MpCiAgZXJyID0+AAAAAAAAAAAYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					230,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-sockets.js",
						"symkeys":
						[
							[
								510,
								538
							],
							[
								1268,
								1274
							]
						],
						"symlist":
						[
							"async function main(...args)",
							"err =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAICBtYWluKC4uLmFyZ3MpCiAgZXJyID0+AAAAAAAAAAAYAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAAAAAA"
				],
				[
					1,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAICBtYWluKC4uLmFyZ3MpCiAgZXJyID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-sockets.js",
						"symkeys":
						[
							[
								510,
								538
							],
							[
								1268,
								1274
							]
						],
						"symlist":
						[
							"async function main(...args)",
							"err =>"
						]
					},
					"AQAAAAAAAAAAAAAAGAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					3,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAICBtYWluKC4uLmFyZ3MpCiAgZXJyID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					4,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-sockets.js",
						"symkeys":
						[
							[
								510,
								538
							],
							[
								1268,
								1274
							]
						],
						"symlist":
						[
							"async function main(...args)",
							"err =>"
						]
					},
					"AQAAAAAAAAAAAAAAGAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					5,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAICBtYWluKC4uLmFyZ3MpCiAgZXJyID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					6,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					7,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					8,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					9,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-minnet.js",
						"symkeys":
						[
							[
								334,
								354
							],
							[
								378,
								401
							],
							[
								441,
								461
							],
							[
								946,
								977
							],
							[
								1070,
								1090
							],
							[
								1211,
								1238
							],
							[
								1284,
								1299
							],
							[
								1364,
								1389
							],
							[
								1432,
								1448
							],
							[
								1660,
								1683
							],
							[
								1737,
								1756
							],
							[
								1973,
								1991
							],
							[
								2120,
								2138
							],
							[
								2209,
								2215
							],
							[
								2603,
								2609
							],
							[
								2723,
								2738
							],
							[
								2790,
								2806
							],
							[
								2878,
								2894
							],
							[
								3031,
								3049
							],
							[
								3405,
								3427
							]
						],
						"symlist":
						[
							"print = (...args) =>",
							"function CreateServer()",
							" (level, ...args) =>",
							"async function* test(req, resp)",
							"onConnect: socket =>",
							"onMessage: (socket, msg) =>",
							"onClose: why =>",
							"onPong: (socket, data) =>",
							"onFd(fd, rd, wr)",
							"function CreateClient()",
							"(level, ...args) =>",
							"onMessage(ws, msg)",
							"onConnect(ws, req)",
							" () =>",
							" () =>",
							"onPong(ws, req)",
							"onClose(ws, req)",
							"onFd(fd, rd, wr)",
							"function getJSON()",
							"function main(...args)"
						]
					},
					"AQAAAAAAAAAAAAAAbgEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					10,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AwAAAAAAAAAAAAAAAAAAAAAAAABuAQAAICBwcmludCA9ICguLi5hcmdzKSA9PgpDcmVhdGVTZXJ2ZXIoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgdGVzdChyZXEsIHJlc3ApCiAgb25Db25uZWN0OiBzb2NrZXQgPT4KICBvbk1lc3NhZ2U6IChzb2NrZXQsIG1zZykgPT4KICBvbkNsb3NlOiB3aHkgPT4KICBvblBvbmc6IChzb2NrZXQsIGRhdGEpID0+CiAgb25GZChmZCwgcmQsIHdyKQpDcmVhdGVDbGllbnQoKQoobGV2ZWwsIC4uLmFyZ3MpID0+CiAgb25NZXNzYWdlKHdzLCBtc2cpCiAgb25Db25uZWN0KHdzLCByZXEpCigpID0+CigpID0+CiAgb25Qb25nKHdzLCByZXEpCiAgb25DbG9zZSh3cywgcmVxKQogIG9uRmQoZmQsIHJkLCB3cikKICBnZXRKU09OKCkKICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					11,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					12,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					13,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					14,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					15,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-opencv.js",
						"symkeys":
						[
							[
								786,
								808
							],
							[
								1593,
								1623
							],
							[
								1713,
								1743
							],
							[
								1809,
								1820
							],
							[
								2074,
								2095
							],
							[
								2269,
								2280
							],
							[
								2304,
								2315
							],
							[
								2425,
								2449
							],
							[
								2565,
								2587
							],
							[
								2681,
								2711
							],
							[
								2745,
								2773
							],
							[
								2933,
								2942
							],
							[
								2991,
								2999
							],
							[
								3047,
								3053
							],
							[
								3184,
								3191
							],
							[
								3269,
								3297
							],
							[
								5779,
								5803
							],
							[
								6171,
								6209
							],
							[
								6363,
								6403
							],
							[
								6553,
								6591
							],
							[
								6687,
								6712
							],
							[
								7492,
								7499
							],
							[
								9234,
								9271
							],
							[
								9343,
								9377
							],
							[
								9585,
								9614
							],
							[
								9718,
								9752
							],
							[
								9830,
								9865
							],
							[
								10158,
								10198
							],
							[
								10293,
								10333
							],
							[
								11297,
								11301
							],
							[
								11363,
								11374
							],
							[
								11461,
								11475
							],
							[
								11532,
								11536
							],
							[
								11836,
								11880
							],
							[
								13459,
								13501
							],
							[
								13952,
								13988
							],
							[
								14945,
								14949
							],
							[
								14998,
								15013
							],
							[
								15087,
								15091
							],
							[
								15160,
								15169
							],
							[
								15322,
								15341
							],
							[
								15402,
								15418
							],
							[
								15485,
								15489
							],
							[
								15523,
								15527
							],
							[
								15560,
								15569
							],
							[
								15602,
								15610
							],
							[
								15656,
								15660
							],
							[
								15693,
								15697
							],
							[
								15730,
								15739
							],
							[
								15772,
								15780
							],
							[
								15903,
								15921
							],
							[
								16972,
								17009
							],
							[
								17958,
								17966
							],
							[
								18604,
								18629
							],
							[
								19198,
								19212
							],
							[
								19596,
								19624
							],
							[
								19942,
								19967
							],
							[
								20189,
								20208
							],
							[
								20663,
								20679
							],
							[
								20780,
								20792
							],
							[
								20831,
								20846
							],
							[
								20948,
								20962
							],
							[
								21175,
								21203
							]
						],
						"symlist":
						[
							"function GLFW(...args)",
							"function WriteImage(name, mat)",
							"function SaveConfig(configObj)",
							"([k, v]) =>",
							"function LoadConfig()",
							"([k, v]) =>",
							"([k, v]) =>",
							"function InspectMat(mat)",
							"function ToHex(number)",
							"function Accumulator(callback)",
							"self = function(name, value)",
							"entries()",
							"values()",
							"keys()",
							"clear()",
							"async function main(...args)",
							" (event, x, y, flags) =>",
							" function TransformSize(matrix, size)",
							" function TransformPoint(matrix, point)",
							" function TransformRect(matrix, rect)",
							" function Dragging(drag)",
							"file =>",
							" function AcquireFrame(src, dst)",
							" function Grayscale(src, dst)",
							" function Blur(src, dst)",
							" function Threshold(src, dst)",
							" function Morphology(src, dst)",
							" function Skeletonization(src, dst)",
							" function SkeletonTracing(src, dst)",
							"n =>",
							"([n, m]) =>",
							"([h, s, l]) =>",
							"c =>",
							" function LineSegmentDetector(src, dst)",
							" function PixelNeighborhood(src, dst)",
							" function HoughLinesP(src, dst)",
							"l =>",
							"GetAngle = l =>",
							"l =>",
							"(a, b) =>",
							"isHorizontal = l =>",
							"firstLast = a =>",
							"l =>",
							"l =>",
							"(a, b) =>",
							"([l]) =>",
							"l =>",
							"l =>",
							"(a, b) =>",
							"([l]) =>",
							"angle2Color = a =>",
							" function HoughCircles(src, dst)",
							" i =>",
							" function RedrawStatus()",
							"(name, idx) =>",
							" function Scale(mat, f = 1)",
							" function RedrawWindow()",
							" function Recalc()",
							"(name, param) =>",
							"processor =>",
							".before = () =>",
							".after = () =>",
							" function keyhandler(event)"
						]
					},
					"AQAAAAAAAAAAAAAA8QMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					16,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADxAwAAR0xGVyguLi5hcmdzKQpXcml0ZUltYWdlKG5hbWUsIG1hdCkKU2F2ZUNvbmZpZyhjb25maWdPYmopCihbaywgdl0pID0+CkxvYWRDb25maWcoKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgpJbnNwZWN0TWF0KG1hdCkKVG9IZXgobnVtYmVyKQpBY2N1bXVsYXRvcihjYWxsYmFjaykKICBzZWxmID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpCiAgZW50cmllcygpCiAgdmFsdWVzKCkKICBrZXlzKCkKICBjbGVhcigpCiAgbWFpbiguLi5hcmdzKQooZXZlbnQsIHgsIHksIGZsYWdzKSA9PgpUcmFuc2Zvcm1TaXplKG1hdHJpeCwgc2l6ZSkKVHJhbnNmb3JtUG9pbnQobWF0cml4LCBwb2ludCkKVHJhbnNmb3JtUmVjdChtYXRyaXgsIHJlY3QpCkRyYWdnaW5nKGRyYWcpCiAgZmlsZSA9PgpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKVGhyZXNob2xkKHNyYywgZHN0KQpNb3JwaG9sb2d5KHNyYywgZHN0KQpTa2VsZXRvbml6YXRpb24oc3JjLCBkc3QpClNrZWxldG9uVHJhY2luZyhzcmMsIGRzdCkKICBuID0+CihbbiwgbV0pID0+CihbaCwgcywgbF0pID0+CiAgYyA9PgpMaW5lU2VnbWVudERldGVjdG9yKHNyYywgZHN0KQpQaXhlbE5laWdoYm9yaG9vZChzcmMsIGRzdCkKSG91Z2hMaW5lc1Aoc3JjLCBkc3QpCiAgbCA9PgpHZXRBbmdsZSA9IGwgPT4KICBsID0+CihhLCBiKSA9PgogIGlzSG9yaXpvbnRhbCA9IGwgPT4KICBmaXJzdExhc3QgPSBhID0+CiAgbCA9PgogIGwgPT4KKGEsIGIpID0+CihbbF0pID0+CiAgbCA9PgogIGwgPT4KKGEsIGIpID0+CihbbF0pID0+CiAgYW5nbGUyQ29sb3IgPSBhID0+CkhvdWdoQ2lyY2xlcyhzcmMsIGRzdCkKaSA9PgpSZWRyYXdTdGF0dXMoKQoobmFtZSwgaWR4KSA9PgpTY2FsZShtYXQsIGYgPSAxKQpSZWRyYXdXaW5kb3coKQpSZWNhbGMoKQoobmFtZSwgcGFyYW0pID0+CiAgcHJvY2Vzc29yID0+CiAgLmJlZm9yZSA9ICgpID0+CiAgLmFmdGVyID0gKCkgPT4KICBrZXloYW5kbGVyKGV2ZW50KQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					17,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/test-opencv.js",
						"symkeys":
						[
							[
								786,
								808
							],
							[
								1593,
								1623
							],
							[
								1713,
								1743
							],
							[
								1809,
								1820
							],
							[
								2074,
								2095
							],
							[
								2269,
								2280
							],
							[
								2304,
								2315
							],
							[
								2425,
								2449
							],
							[
								2565,
								2587
							],
							[
								2681,
								2711
							],
							[
								2745,
								2773
							],
							[
								2933,
								2942
							],
							[
								2991,
								2999
							],
							[
								3047,
								3053
							],
							[
								3184,
								3191
							],
							[
								3269,
								3297
							],
							[
								5779,
								5803
							],
							[
								6171,
								6209
							],
							[
								6363,
								6403
							],
							[
								6553,
								6591
							],
							[
								6687,
								6712
							],
							[
								7492,
								7499
							],
							[
								9234,
								9271
							],
							[
								9343,
								9377
							],
							[
								9585,
								9614
							],
							[
								9718,
								9752
							],
							[
								9830,
								9865
							],
							[
								10158,
								10198
							],
							[
								10293,
								10333
							],
							[
								11297,
								11301
							],
							[
								11363,
								11374
							],
							[
								11461,
								11475
							],
							[
								11532,
								11536
							],
							[
								11836,
								11880
							],
							[
								13459,
								13501
							],
							[
								13952,
								13988
							],
							[
								14945,
								14949
							],
							[
								14998,
								15013
							],
							[
								15087,
								15091
							],
							[
								15160,
								15169
							],
							[
								15322,
								15341
							],
							[
								15402,
								15418
							],
							[
								15485,
								15489
							],
							[
								15523,
								15527
							],
							[
								15560,
								15569
							],
							[
								15602,
								15610
							],
							[
								15656,
								15660
							],
							[
								15693,
								15697
							],
							[
								15730,
								15739
							],
							[
								15772,
								15780
							],
							[
								15903,
								15921
							],
							[
								16972,
								17009
							],
							[
								17958,
								17966
							],
							[
								18604,
								18629
							],
							[
								19198,
								19212
							],
							[
								19596,
								19624
							],
							[
								19942,
								19967
							],
							[
								20189,
								20208
							],
							[
								20663,
								20679
							],
							[
								20780,
								20792
							],
							[
								20831,
								20846
							],
							[
								20948,
								20962
							],
							[
								21175,
								21203
							]
						],
						"symlist":
						[
							"function GLFW(...args)",
							"function WriteImage(name, mat)",
							"function SaveConfig(configObj)",
							"([k, v]) =>",
							"function LoadConfig()",
							"([k, v]) =>",
							"([k, v]) =>",
							"function InspectMat(mat)",
							"function ToHex(number)",
							"function Accumulator(callback)",
							"self = function(name, value)",
							"entries()",
							"values()",
							"keys()",
							"clear()",
							"async function main(...args)",
							" (event, x, y, flags) =>",
							" function TransformSize(matrix, size)",
							" function TransformPoint(matrix, point)",
							" function TransformRect(matrix, rect)",
							" function Dragging(drag)",
							"file =>",
							" function AcquireFrame(src, dst)",
							" function Grayscale(src, dst)",
							" function Blur(src, dst)",
							" function Threshold(src, dst)",
							" function Morphology(src, dst)",
							" function Skeletonization(src, dst)",
							" function SkeletonTracing(src, dst)",
							"n =>",
							"([n, m]) =>",
							"([h, s, l]) =>",
							"c =>",
							" function LineSegmentDetector(src, dst)",
							" function PixelNeighborhood(src, dst)",
							" function HoughLinesP(src, dst)",
							"l =>",
							"GetAngle = l =>",
							"l =>",
							"(a, b) =>",
							"isHorizontal = l =>",
							"firstLast = a =>",
							"l =>",
							"l =>",
							"(a, b) =>",
							"([l]) =>",
							"l =>",
							"l =>",
							"(a, b) =>",
							"([l]) =>",
							"angle2Color = a =>",
							" function HoughCircles(src, dst)",
							" i =>",
							" function RedrawStatus()",
							"(name, idx) =>",
							" function Scale(mat, f = 1)",
							" function RedrawWindow()",
							" function Recalc()",
							"(name, param) =>",
							"processor =>",
							".before = () =>",
							".after = () =>",
							" function keyhandler(event)"
						]
					},
					"AQAAAAAAAAAAAAAA8QMAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					18,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADxAwAAR0xGVyguLi5hcmdzKQpXcml0ZUltYWdlKG5hbWUsIG1hdCkKU2F2ZUNvbmZpZyhjb25maWdPYmopCihbaywgdl0pID0+CkxvYWRDb25maWcoKQooW2ssIHZdKSA9PgooW2ssIHZdKSA9PgpJbnNwZWN0TWF0KG1hdCkKVG9IZXgobnVtYmVyKQpBY2N1bXVsYXRvcihjYWxsYmFjaykKICBzZWxmID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpCiAgZW50cmllcygpCiAgdmFsdWVzKCkKICBrZXlzKCkKICBjbGVhcigpCiAgbWFpbiguLi5hcmdzKQooZXZlbnQsIHgsIHksIGZsYWdzKSA9PgpUcmFuc2Zvcm1TaXplKG1hdHJpeCwgc2l6ZSkKVHJhbnNmb3JtUG9pbnQobWF0cml4LCBwb2ludCkKVHJhbnNmb3JtUmVjdChtYXRyaXgsIHJlY3QpCkRyYWdnaW5nKGRyYWcpCiAgZmlsZSA9PgpBY3F1aXJlRnJhbWUoc3JjLCBkc3QpCkdyYXlzY2FsZShzcmMsIGRzdCkKQmx1cihzcmMsIGRzdCkKVGhyZXNob2xkKHNyYywgZHN0KQpNb3JwaG9sb2d5KHNyYywgZHN0KQpTa2VsZXRvbml6YXRpb24oc3JjLCBkc3QpClNrZWxldG9uVHJhY2luZyhzcmMsIGRzdCkKICBuID0+CihbbiwgbV0pID0+CihbaCwgcywgbF0pID0+CiAgYyA9PgpMaW5lU2VnbWVudERldGVjdG9yKHNyYywgZHN0KQpQaXhlbE5laWdoYm9yaG9vZChzcmMsIGRzdCkKSG91Z2hMaW5lc1Aoc3JjLCBkc3QpCiAgbCA9PgpHZXRBbmdsZSA9IGwgPT4KICBsID0+CihhLCBiKSA9PgogIGlzSG9yaXpvbnRhbCA9IGwgPT4KICBmaXJzdExhc3QgPSBhID0+CiAgbCA9PgogIGwgPT4KKGEsIGIpID0+CihbbF0pID0+CiAgbCA9PgogIGwgPT4KKGEsIGIpID0+CihbbF0pID0+CiAgYW5nbGUyQ29sb3IgPSBhID0+CkhvdWdoQ2lyY2xlcyhzcmMsIGRzdCkKaSA9PgpSZWRyYXdTdGF0dXMoKQoobmFtZSwgaWR4KSA9PgpTY2FsZShtYXQsIGYgPSAxKQpSZWRyYXdXaW5kb3coKQpSZWNhbGMoKQoobmFtZSwgcGFyYW0pID0+CiAgcHJvY2Vzc29yID0+CiAgLmJlZm9yZSA9ICgpID0+CiAgLmFmdGVyID0gKCkgPT4KICBrZXloYW5kbGVyKGV2ZW50KQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					19,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					20,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								51,
								75
							]
						],
						"symlist":
						[
							" function main(...args)"
						]
					},
					"AQAAAAAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					21,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								75,
								99
							]
						],
						"symlist":
						[
							" function main(...args)"
						]
					},
					"CAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAACAgbWFpbiguLi5hcmdzKQAAAAAAAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAgIG1haW4oLi4uYXJncykAAAAAAAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					22,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								75,
								99
							]
						],
						"symlist":
						[
							" function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					23,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								92,
								116
							]
						],
						"symlist":
						[
							" function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAACAgbWFpbiguLi5hcmdzKQAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					24,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								92,
								116
							]
						],
						"symlist":
						[
							" function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					25,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								92,
								116
							]
						],
						"symlist":
						[
							" function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAACAgbWFpbiguLi5hcmdzKQAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					26,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								92,
								116
							]
						],
						"symlist":
						[
							" function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					27,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								92,
								116
							]
						],
						"symlist":
						[
							" function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAACAgbWFpbiguLi5hcmdzKQAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					28,
					4,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								107,
								131
							]
						],
						"symlist":
						[
							" function main(...args)"
						]
					},
					"CAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAACAgbWFpbiguLi5hcmdzKQAAAAAAAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAgIG1haW4oLi4uYXJncykAAAAAAAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					29,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								122,
								146
							]
						],
						"symlist":
						[
							" function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAACAgbWFpbiguLi5hcmdzKQAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					30,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								122,
								146
							]
						],
						"symlist":
						[
							" function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAACAgbWFpbiguLi5hcmdzKQAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					31,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								122,
								146
							]
						],
						"symlist":
						[
							" function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAACAgbWFpbiguLi5hcmdzKQAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					32,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								122,
								146
							]
						],
						"symlist":
						[
							" function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					33,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								125,
								147
							]
						],
						"symlist":
						[
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAACAgbWFpbiguLi5hcmdzKQAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					34,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								125,
								147
							]
						],
						"symlist":
						[
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					35,
					5,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								125,
								147
							]
						],
						"symlist":
						[
							"function main(...args)"
						]
					},
					"CgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAACAgbWFpbiguLi5hcmdzKQAAAAAAAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAgIG1haW4oLi4uYXJncykAAAAAAAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAACAgbWFpbiguLi5hcmdzKQAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					36,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								125,
								147
							]
						],
						"symlist":
						[
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAACAgbWFpbiguLi5hcmdzKQAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					37,
					3,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								133,
								155
							]
						],
						"symlist":
						[
							"function main(...args)"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAACAgbWFpbiguLi5hcmdzKQAAAAAAAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAgIG1haW4oLi4uYXJncykAAAAAAAAAAA8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					38,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								133,
								155
							]
						],
						"symlist":
						[
							"function main(...args)"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAAACAgbWFpbiguLi5hcmdzKQAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					39,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								133,
								155
							]
						],
						"symlist":
						[
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					40,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								133,
								155
							]
						],
						"symlist":
						[
							"function main(...args)"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAPAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					41,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					42,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					43,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					44,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								133,
								155
							]
						],
						"symlist":
						[
							"function main(...args)"
						]
					},
					"AQAAAAAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					45,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					46,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/compile_commands.js",
						"symkeys":
						[
							[
								598,
								605
							],
							[
								606,
								620
							],
							[
								677,
								696
							],
							[
								817,
								824
							],
							[
								825,
								839
							],
							[
								1083,
								1110
							],
							[
								1201,
								1207
							],
							[
								1228,
								1232
							],
							[
								1302,
								1324
							],
							[
								1363,
								1382
							],
							[
								1575,
								1614
							],
							[
								1654,
								1667
							],
							[
								1844,
								1865
							],
							[
								1948,
								1961
							],
							[
								2064,
								2077
							],
							[
								2128,
								2151
							],
							[
								2299,
								2334
							],
							[
								2510,
								2526
							],
							[
								2597,
								2601
							],
							[
								2633,
								2641
							],
							[
								2671,
								2688
							],
							[
								2767,
								2809
							],
							[
								2969,
								2994
							],
							[
								3914,
								3932
							],
							[
								4123,
								4138
							],
							[
								4620,
								4632
							],
							[
								4664,
								4668
							],
							[
								4700,
								4704
							],
							[
								4783,
								4789
							],
							[
								4824,
								4841
							],
							[
								5310,
								5328
							]
						],
						"symlist":
						[
							" fn =>",
							" (...args) =>",
							"function* iter(arr)",
							" fn =>",
							" (...args) =>",
							".sourcesMap = outputFile =>",
							"dep =>",
							"s =>",
							".depMap = inputFile =>",
							" (acc, cmd) =>",
							".transformMap = (input, output, map) =>",
							" (...args) =>",
							".workDir = workDir =>",
							"toAbsolute(p)",
							"toRelative(p)",
							" function toRel(p)",
							".relativeMap = (relativeTo, map) =>",
							"nm: (...args) =>",
							"m =>",
							"entry =>",
							"([file, data]) =>",
							" (acc, [file, addr, type, name]) =>",
							"function main(...arglist)",
							"get dependencies()",
							" (arg, i) =>",
							"get CFLAGS()",
							"d =>",
							"i =>",
							"dir =>",
							" (entry, file) =>",
							"get dependencies()"
						]
					},
					"AQAAAAAAAAAAAAAAAAIAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					47,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAZm4gPT4KKC4uLmFyZ3MpID0+CiAgaXRlcihhcnIpCmZuID0+CiguLi5hcmdzKSA9PgogIC5zb3VyY2VzTWFwID0gb3V0cHV0RmlsZSA9PgogIGRlcCA9PgogIHMgPT4KICAuZGVwTWFwID0gaW5wdXRGaWxlID0+CihhY2MsIGNtZCkgPT4KICAudHJhbnNmb3JtTWFwID0gKGlucHV0LCBvdXRwdXQsIG1hcCkgPT4KKC4uLmFyZ3MpID0+CiAgLndvcmtEaXIgPSB3b3JrRGlyID0+CiAgdG9BYnNvbHV0ZShwKQogIHRvUmVsYXRpdmUocCkKICB0b1JlbChwKQogIC5yZWxhdGl2ZU1hcCA9IChyZWxhdGl2ZVRvLCBtYXApID0+CiAgbm06ICguLi5hcmdzKSA9PgogIG0gPT4KICBlbnRyeSA9PgooW2ZpbGUsIGRhdGFdKSA9PgooYWNjLCBbZmlsZSwgYWRkciwgdHlwZSwgbmFtZV0pID0+CiAgbWFpbiguLi5hcmdsaXN0KQogIGdldCBkZXBlbmRlbmNpZXMoKQooYXJnLCBpKSA9PgogIGdldCBDRkxBR1MoKQogIGQgPT4KICBpID0+CiAgZGlyID0+CihlbnRyeSwgZmlsZSkgPT4KICBnZXQgZGVwZW5kZW5jaWVzKCkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					48,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					49,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					50,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					51,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/count-neighbours.js",
						"symkeys":
						[
							[
								133,
								155
							]
						],
						"symlist":
						[
							"function main(...args)"
						]
					},
					"AQAAAAAAAAAAAAAADwAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					52,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAICBtYWluKC4uLmFyZ3MpAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					53,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1566,
								1603
							],
							[
								1679,
								1684
							],
							[
								1807,
								1824
							],
							[
								2220,
								2258
							],
							[
								2490,
								2511
							],
							[
								2711,
								2741
							],
							[
								4300,
								4304
							],
							[
								4323,
								4351
							],
							[
								4363,
								4377
							],
							[
								4542,
								4547
							],
							[
								4698,
								4712
							],
							[
								5194,
								5198
							],
							[
								5258,
								5262
							],
							[
								5490,
								5497
							],
							[
								5539,
								5556
							],
							[
								5796,
								5843
							],
							[
								6330,
								6393
							],
							[
								6903,
								6926
							],
							[
								7866,
								7885
							],
							[
								8051,
								8098
							],
							[
								8145,
								8156
							],
							[
								8748,
								8766
							],
							[
								8867,
								8884
							],
							[
								9058,
								9062
							],
							[
								9137,
								9174
							],
							[
								9333,
								9337
							],
							[
								9677,
								9709
							],
							[
								9878,
								9902
							],
							[
								9916,
								9942
							],
							[
								10249,
								10253
							],
							[
								10373,
								10396
							],
							[
								10452,
								10470
							],
							[
								10647,
								10662
							],
							[
								11105,
								11120
							],
							[
								11504,
								11533
							],
							[
								11623,
								11636
							],
							[
								12355,
								12365
							],
							[
								12508,
								12526
							],
							[
								13007,
								13025
							],
							[
								13026,
								13033
							],
							[
								13066,
								13121
							],
							[
								13421,
								13432
							],
							[
								13566,
								13595
							],
							[
								13813,
								13835
							],
							[
								14149,
								14159
							],
							[
								14367,
								14381
							],
							[
								14435,
								14449
							],
							[
								15467,
								15510
							],
							[
								15696,
								15702
							],
							[
								15715,
								15731
							],
							[
								17305,
								17341
							],
							[
								17529,
								17564
							],
							[
								17704,
								17708
							],
							[
								17835,
								17853
							],
							[
								18007,
								18039
							],
							[
								18388,
								18399
							],
							[
								18554,
								18565
							],
							[
								18625,
								18645
							],
							[
								19234,
								19269
							],
							[
								19672,
								19691
							],
							[
								19792,
								19834
							],
							[
								20663,
								20686
							],
							[
								20724,
								20731
							],
							[
								21756,
								21761
							],
							[
								22952,
								22967
							],
							[
								23293,
								23299
							],
							[
								26465,
								26481
							],
							[
								26810,
								26816
							],
							[
								27221,
								27246
							],
							[
								27593,
								27610
							],
							[
								27662,
								27676
							],
							[
								28022,
								28032
							],
							[
								28156,
								28173
							],
							[
								28205,
								28220
							],
							[
								28263,
								28277
							],
							[
								28281,
								28296
							],
							[
								28439,
								28443
							],
							[
								28520,
								28527
							],
							[
								28953,
								28962
							],
							[
								29078,
								29084
							],
							[
								29142,
								29155
							],
							[
								29370,
								29387
							],
							[
								29540,
								29582
							],
							[
								29947,
								29978
							],
							[
								30060,
								30076
							],
							[
								30257,
								30265
							],
							[
								30397,
								30417
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(pid, status)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"a =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							"() =>",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"sendMessage: msg =>",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							" frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							"onFd(fd, rd, wr)",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							"daemon()",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAA1QUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					54,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADVBQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+CiAgc2lnbmFsTmFtZSA9IG4gPT4KICBjaGVja0NoaWxkRXhpdGVkKHBpZCwgc3RhdHVzKQpHZXRMb2Mobm9kZSkKTG9hZEFTVChzb3VyY2UpCiAgYSA9PgpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCigpID0+CiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2U6IG1zZyA9PgpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKICB2YWx1ZShuYW1lKQogIHYgPT4KUHJpbnRTdGFja0ZyYW1lKGZyYW1lKQogIGYgPT4KUHJpbnRTdGFjayhzdGFjaykKKG1lbWJlciwgb2JqLCBwcm9wKSA9PgogIGJyZWFrcG9pbnRzKC4uLmFyZ3MpCiAgYiA9PgogIHN0YWNrVHJhY2UoZnJhbWUpCmZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKICBtYWluKC4uLmFyZ3MpCihhLCB2KSA9PgoodiwgcHYsIG8pID0+Cih2LCBwdiwgbykgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKQooKSA9PgoobGV2ZWwsIHN0cikgPT4KICBjb25maWcocmVxLCByZXMpCiAgZmlsZXMocmVxLCByZXMpCiAgZiA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIHZhbHVlOiBmdW5jdGlvbiBzZW5kTWVzc2FnZShtc2cpCiAgb25DbG9zZSh3cykKICBvbkVycm9yKHdzKQogIG9uUmVxdWVzdChyZXEsIHJlc3ApCihtYXRjaCwgcDEsIHAwLCBwMiwgcDMsIG9mZnNldCkgPT4KICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICBmb3J3YXJkID0gKGZkLCBuYW1lKSA9PgpidWYgPT4KKCkgPT4KKGRiZywgc29jaykgPT4KICBtc2cgPT4KICBvbkZkKGZkLCByZCwgd3IpCigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSkKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgZGFlbW9uKCkKICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					55,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1566,
								1603
							],
							[
								1679,
								1684
							],
							[
								1807,
								1824
							],
							[
								2220,
								2258
							],
							[
								2490,
								2511
							],
							[
								2711,
								2741
							],
							[
								4300,
								4304
							],
							[
								4323,
								4351
							],
							[
								4363,
								4377
							],
							[
								4542,
								4547
							],
							[
								4698,
								4712
							],
							[
								5194,
								5198
							],
							[
								5258,
								5262
							],
							[
								5490,
								5497
							],
							[
								5539,
								5556
							],
							[
								5796,
								5843
							],
							[
								6330,
								6393
							],
							[
								6903,
								6926
							],
							[
								7866,
								7885
							],
							[
								8051,
								8098
							],
							[
								8145,
								8156
							],
							[
								8748,
								8766
							],
							[
								8867,
								8884
							],
							[
								9058,
								9062
							],
							[
								9137,
								9174
							],
							[
								9333,
								9337
							],
							[
								9677,
								9709
							],
							[
								9878,
								9902
							],
							[
								9916,
								9942
							],
							[
								10249,
								10253
							],
							[
								10373,
								10396
							],
							[
								10452,
								10470
							],
							[
								10647,
								10662
							],
							[
								11105,
								11120
							],
							[
								11504,
								11533
							],
							[
								11623,
								11636
							],
							[
								12355,
								12365
							],
							[
								12508,
								12526
							],
							[
								13007,
								13025
							],
							[
								13026,
								13033
							],
							[
								13066,
								13121
							],
							[
								13421,
								13432
							],
							[
								13566,
								13595
							],
							[
								13813,
								13835
							],
							[
								14149,
								14159
							],
							[
								14367,
								14381
							],
							[
								14435,
								14449
							],
							[
								15467,
								15510
							],
							[
								15696,
								15702
							],
							[
								15715,
								15731
							],
							[
								17305,
								17341
							],
							[
								17529,
								17564
							],
							[
								17704,
								17708
							],
							[
								17835,
								17853
							],
							[
								18007,
								18039
							],
							[
								18388,
								18399
							],
							[
								18554,
								18565
							],
							[
								18625,
								18645
							],
							[
								19234,
								19269
							],
							[
								19672,
								19691
							],
							[
								19792,
								19834
							],
							[
								20663,
								20686
							],
							[
								20724,
								20731
							],
							[
								21756,
								21761
							],
							[
								22952,
								22967
							],
							[
								23293,
								23299
							],
							[
								26465,
								26481
							],
							[
								26810,
								26816
							],
							[
								27221,
								27246
							],
							[
								27593,
								27610
							],
							[
								27662,
								27676
							],
							[
								28022,
								28032
							],
							[
								28156,
								28173
							],
							[
								28205,
								28220
							],
							[
								28263,
								28277
							],
							[
								28281,
								28296
							],
							[
								28439,
								28443
							],
							[
								28520,
								28527
							],
							[
								28953,
								28962
							],
							[
								29078,
								29084
							],
							[
								29142,
								29155
							],
							[
								29370,
								29387
							],
							[
								29540,
								29582
							],
							[
								29947,
								29978
							],
							[
								30060,
								30076
							],
							[
								30257,
								30265
							],
							[
								30397,
								30417
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(pid, status)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"a =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							"() =>",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"sendMessage: msg =>",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							" frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							"onFd(fd, rd, wr)",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							"daemon()",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAA1QUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					56,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADVBQAAICBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+CigpID0+CiAgc2lnbmFsTmFtZSA9IG4gPT4KICBjaGVja0NoaWxkRXhpdGVkKHBpZCwgc3RhdHVzKQpHZXRMb2Mobm9kZSkKTG9hZEFTVChzb3VyY2UpCiAgYSA9PgpTdGFydFJFUEwocHJlZml4ID0gCiwgc3VmZml4ID0gJycpCigpID0+CiAgLnNob3cgPSBhcmcgPT4KICBrID0+CiAgayA9PgogIGl0ZW0gPT4KKGFjYywga2V5cywgaSkgPT4KU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKQpDb25uZWN0RGVidWdnZXIoYWRkcmVzcywgc2tpcFRvTWFpbiA9IHRydWUsIGNhbGxiYWNrKQogIHByb2Nlc3MoY2FsbGJhY2spCiAgc2VuZE1lc3NhZ2U6IG1zZyA9PgpMYXVuY2hEZWJ1Z2dlcihkYmcsIHNraXBUb01haW4gPSB0cnVlKQooKSA9PgpEZWJ1Z2dlckRpc3BhdGNoZXIKICB2YWx1ZShuYW1lKQogIHYgPT4KUHJpbnRTdGFja0ZyYW1lKGZyYW1lKQogIGYgPT4KUHJpbnRTdGFjayhzdGFjaykKKG1lbWJlciwgb2JqLCBwcm9wKSA9PgogIGJyZWFrcG9pbnRzKC4uLmFyZ3MpCiAgYiA9PgogIHN0YWNrVHJhY2UoZnJhbWUpCmZyYW1lID0+CiAgc2NvcGVzKG4pCiAgd2FpdFJ1bigpCiAgdmFyaWFibGVzKG4sIGRlcHRoID0gMCkKICBhZGQgPSBpdGVtID0+CiAgdG9TdHJpbmcoKQpEZWJ1Z2dlckRpc3BhdGNoZXIKKHBvcnQgPSA4Nzc3KSA9PgooKSA9PgpOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpCiAga2lsbDogKCkgPT4KT25TdG9wcGVkKG1zZykKICBtYWluKC4uLmFyZ3MpCihhLCB2KSA9PgoodiwgcHYsIG8pID0+Cih2LCBwdiwgbykgPT4KICBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKQooKSA9PgoobGV2ZWwsIHN0cikgPT4KICBjb25maWcocmVxLCByZXMpCiAgZmlsZXMocmVxLCByZXMpCiAgZiA9PgogIG9uQ29ubmVjdCh3cywgcmVxKQogIHZhbHVlOiBmdW5jdGlvbiBzZW5kTWVzc2FnZShtc2cpCiAgb25DbG9zZSh3cykKICBvbkVycm9yKHdzKQogIG9uUmVxdWVzdChyZXEsIHJlc3ApCihtYXRjaCwgcDEsIHAwLCBwMiwgcDMsIG9mZnNldCkgPT4KICBvbk1lc3NhZ2Uod3MsIGRhdGEpCiAgaGFuZGxlQ29tbWFuZCh3cywgZGF0YSkKICBmb3J3YXJkID0gKGZkLCBuYW1lKSA9PgpidWYgPT4KKCkgPT4KKGRiZywgc29jaykgPT4KICBtc2cgPT4KICBvbkZkKGZkLCByZCwgd3IpCigpID0+CiAgc2hvd1Nlc3Npb25zKCkKICBnZXQgY29ubmVjdGlvbnMoKQogIGdldCBzb2NrbGlzdCgpCiAgZ2V0IGZpbGUoKQooZmlsZSwgc291cmNlKSA9PgooKSA9PgpzID0+CigpID0+CiAgbSA9PgogIGxpbmUoaSkKICBtYXRjaChyZSkKICBmbnMgPT4KKHsgbmFtZSB9KSA9PgogIGZ1bmN0aW9ucygpCihbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogIHJlcGVhdChjb25kLCBmbiwgLi4uYXJncykKICBjb25kID0gKHIsIGkpID0+CiAgZGFlbW9uKCkKICBxdWl0KHdoeSkAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					57,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					58,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					59,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					60,
					2,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					61,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					62,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					63,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					64,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					65,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/debugger-server.js",
						"symkeys":
						[
							[
								1566,
								1603
							],
							[
								1679,
								1684
							],
							[
								1807,
								1824
							],
							[
								2220,
								2258
							],
							[
								2490,
								2511
							],
							[
								2711,
								2741
							],
							[
								4300,
								4304
							],
							[
								4323,
								4351
							],
							[
								4363,
								4377
							],
							[
								4542,
								4547
							],
							[
								4698,
								4712
							],
							[
								5194,
								5198
							],
							[
								5258,
								5262
							],
							[
								5490,
								5497
							],
							[
								5539,
								5556
							],
							[
								5796,
								5843
							],
							[
								6330,
								6393
							],
							[
								6903,
								6926
							],
							[
								7866,
								7885
							],
							[
								8051,
								8098
							],
							[
								8145,
								8156
							],
							[
								8748,
								8766
							],
							[
								8867,
								8884
							],
							[
								9058,
								9062
							],
							[
								9137,
								9174
							],
							[
								9333,
								9337
							],
							[
								9677,
								9709
							],
							[
								9878,
								9902
							],
							[
								9916,
								9942
							],
							[
								10249,
								10253
							],
							[
								10373,
								10396
							],
							[
								10452,
								10470
							],
							[
								10647,
								10662
							],
							[
								11105,
								11120
							],
							[
								11504,
								11533
							],
							[
								11623,
								11636
							],
							[
								12355,
								12365
							],
							[
								12508,
								12526
							],
							[
								13007,
								13025
							],
							[
								13026,
								13033
							],
							[
								13066,
								13121
							],
							[
								13421,
								13432
							],
							[
								13566,
								13595
							],
							[
								13813,
								13835
							],
							[
								14149,
								14159
							],
							[
								14367,
								14381
							],
							[
								14435,
								14449
							],
							[
								15467,
								15510
							],
							[
								15696,
								15702
							],
							[
								15715,
								15731
							],
							[
								17305,
								17341
							],
							[
								17529,
								17564
							],
							[
								17704,
								17708
							],
							[
								17835,
								17853
							],
							[
								18007,
								18039
							],
							[
								18388,
								18399
							],
							[
								18554,
								18565
							],
							[
								18625,
								18645
							],
							[
								19234,
								19269
							],
							[
								19672,
								19691
							],
							[
								19792,
								19834
							],
							[
								20663,
								20686
							],
							[
								20724,
								20731
							],
							[
								21756,
								21761
							],
							[
								22952,
								22967
							],
							[
								23293,
								23299
							],
							[
								26465,
								26481
							],
							[
								26810,
								26816
							],
							[
								27221,
								27246
							],
							[
								27593,
								27610
							],
							[
								27662,
								27676
							],
							[
								28022,
								28032
							],
							[
								28156,
								28173
							],
							[
								28205,
								28220
							],
							[
								28263,
								28277
							],
							[
								28281,
								28296
							],
							[
								28439,
								28443
							],
							[
								28520,
								28527
							],
							[
								28953,
								28962
							],
							[
								29078,
								29084
							],
							[
								29142,
								29155
							],
							[
								29370,
								29387
							],
							[
								29540,
								29582
							],
							[
								29947,
								29978
							],
							[
								30060,
								30076
							],
							[
								30257,
								30265
							],
							[
								30397,
								30417
							]
						],
						"symlist":
						[
							"scriptName = (arg = scriptArgs[0]) =>",
							"() =>",
							"signalName = n =>",
							"function checkChildExited(pid, status)",
							"function GetLoc(node)",
							"async function LoadAST(source)",
							"a =>",
							"function StartREPL(prefix = ",
							", suffix = '')",
							"() =>",
							".show = arg =>",
							"k =>",
							"k =>",
							"item =>",
							"(acc, keys, i) =>",
							" function StartDebugger(args, connect, address)",
							" function ConnectDebugger(address, skipToMain = true, callback)",
							"async process(callback)",
							"sendMessage: msg =>",
							"function LaunchDebugger(dbg, skipToMain = true)",
							"async () =>",
							"DebuggerDispatcher",
							"async value(name)",
							"v =>",
							"async function PrintStackFrame(frame)",
							"f =>",
							"async function PrintStack(stack)",
							" (member, obj, prop) =>",
							"async breakpoints(...args)",
							"b =>",
							"async stackTrace(frame)",
							" frame =>",
							"async scopes(n)",
							"async waitRun()",
							"async variables(n, depth = 0)",
							"add = item =>",
							"toString()",
							"DebuggerDispatcher",
							" (port = 8777) =>",
							" () =>",
							"function NewDebugger(args, skipToMain = false, address)",
							"kill: () =>",
							"async function OnStopped(msg)",
							"function main(...args)",
							" (a, v) =>",
							" (v, pv, o) =>",
							" (v, pv, o) =>",
							" function createWS(url, callbacks, listen)",
							" () =>",
							" (level, str) =>",
							" function* config(req, res)",
							" function* files(req, res)",
							"f =>",
							"onConnect(ws, req)",
							"value: function sendMessage(msg)",
							"onClose(ws)",
							"onError(ws)",
							"onRequest(req, resp)",
							" (match, p1, p0, p2, p3, offset) =>",
							"onMessage(ws, data)",
							" function handleCommand(ws, data)",
							"forward = (fd, name) =>",
							" buf =>",
							"() =>",
							" (dbg, sock) =>",
							"msg =>",
							"onFd(fd, rd, wr)",
							" () =>",
							" function showSessions()",
							"get connections()",
							"get socklist()",
							"get file()",
							"(file, source) =>",
							" () =>",
							" s =>",
							" () =>",
							"m =>",
							"line(i)",
							"match(re)",
							"fns =>",
							"({ name }) =>",
							"async functions()",
							"([name, loc, params, expression, path]) =>",
							"async repeat(cond, fn, ...args)",
							"cond = (r, i) =>",
							"daemon()",
							" function quit(why)"
						]
					},
					"AQAAAAAAAAAAAAAA1QUAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "test-matshared.js",
			"settings":
			{
				"buffer_size": 404,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"cut",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAnAAAAaW1wb3J0IHsgTWF0LCBDVl84VUM0IH0gZnJvbSAnb3BlbmN2JzsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAJwAAAAAAAAAAAAAAAAAAAA"
				],
				[
					5,
					2,
					"paste",
					null,
					"AgAAAAAAAAAAAAAAJwAAAAAAAAAAAAAAJwAAAAAAAABOAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "toPointer"
					},
					"CgAAADAAAAAAAAAAMQAAAAAAAAAAAAAAMQAAAAAAAAAxAAAAAAAAAAwAAABNYXQsIENWXzhVQzQxAAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADUAAAAAAAAAAAAAADUAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA3AAAAAAAAAAAAAAA3AAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOQAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAAAAAAAAAAPAAAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "util"
					},
					"BQAAAEIAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAABDAAAAAAAAAAYAAABvcGVuY3ZDAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAAARQAAAAAAAAAAAAAARQAAAAAAAABGAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIAAAAAAAAASAAAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					1,
					"cut",
					null,
					"AQAAAMgAAAAAAAAAyAAAAAAAAAAVAAAAY29uc29sZS5sb2coJ20nLCBtKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgAAAAAAAAA3QAAAAAAAAAAAAAAAAAAAA"
				],
				[
					26,
					2,
					"paste",
					null,
					"AgAAAMgAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADyAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMgAAAAAAAAAyAAAAAAAAAAAAAAAAADwvw"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": ".buffer"
					},
					"BwAAAO8AAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAADxAAAAAAAAAAAAAADxAAAAAAAAAPIAAAAAAAAAAAAAAPIAAAAAAAAA8wAAAAAAAAAAAAAA8wAAAAAAAAD0AAAAAAAAAAAAAAD0AAAAAAAAAPUAAAAAAAAAAAAAAPUAAAAAAAAA9gAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAO8AAAAAAAAA7wAAAAAAAAAAAAAAAADwvw"
				],
				[
					32,
					1,
					"left_delete",
					null,
					"AQAAAOoAAAAAAAAA6gAAAAAAAAABAAAAbQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsAAAAAAAAA6wAAAAAAAAAAAAAAAADwvw"
				],
				[
					33,
					1,
					"paste",
					null,
					"AQAAAOoAAAAAAAAA8gAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOoAAAAAAAAA6gAAAAAAAAAAAAAAAADwvw"
				],
				[
					41,
					1,
					"cut",
					null,
					"AQAAAN0AAAAAAAAA3QAAAAAAAAAjAAAAY29uc29sZS5sb2coJ20uYnVmZmVyJywgbS5idWZmZXIpOwo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0AAAAAAAAAAAEAAAAAAAAAAAAAAAAAAA"
				],
				[
					42,
					2,
					"paste",
					null,
					"AgAAAN0AAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAjAQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0AAAAAAAAA3QAAAAAAAAAAAAAAAADwvw"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "toPointer("
					},
					"CgAAAA0BAAAAAAAADgEAAAAAAAAAAAAADgEAAAAAAAAPAQAAAAAAAAAAAAAPAQAAAAAAABABAAAAAAAAAAAAABABAAAAAAAAEQEAAAAAAAAAAAAAEQEAAAAAAAASAQAAAAAAAAAAAAASAQAAAAAAABMBAAAAAAAAAAAAABMBAAAAAAAAFAEAAAAAAAAAAAAAFAEAAAAAAAAVAQAAAAAAAAAAAAAVAQAAAAAAABYBAAAAAAAAAAAAABYBAAAAAAAAFwEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0BAAAAAAAADQEAAAAAAAAAAAAAAADwvw"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAB8BAAAAAAAAIAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB8BAAAAAAAAHwEAAAAAAAAAAAAAAADwvw"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": "toPointer("
					},
					"CgAAACMBAAAAAAAAJAEAAAAAAAAAAAAAJAEAAAAAAAAlAQAAAAAAAAAAAAAlAQAAAAAAACYBAAAAAAAAAAAAACYBAAAAAAAAJwEAAAAAAAAAAAAAJwEAAAAAAAAoAQAAAAAAAAAAAAAoAQAAAAAAACkBAAAAAAAAAAAAACkBAAAAAAAAKgEAAAAAAAAAAAAAKgEAAAAAAAArAQAAAAAAAAAAAAArAQAAAAAAACwBAAAAAAAAAAAAACwBAAAAAAAALQEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMBAAAAAAAAIwEAAAAAAAAAAAAAAADwvw"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": ")="
					},
					"AgAAADYBAAAAAAAANwEAAAAAAAAAAAAANwEAAAAAAAA4AQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYBAAAAAAAANgEAAAAAAAAAAAAAAADwvw"
				],
				[
					53,
					1,
					"left_delete",
					null,
					"AQAAADcBAAAAAAAANwEAAAAAAAABAAAAPQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgBAAAAAAAAOAEAAAAAAAAAAAAAAADwvw"
				],
				[
					57,
					1,
					"cut",
					null,
					"AQAAAAABAAAAAAAAAAEAAAAAAAA5AAAAY29uc29sZS5sb2coJ3RvUG9pbnRlcihtLmJ1ZmZlciknLCB0b1BvaW50ZXIobS5idWZmZXIpKTsK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAABAAAAAAAAOQEAAAAAAAAAAAAAAAAAAA"
				],
				[
					58,
					1,
					"paste",
					null,
					"AQAAAAABAAAAAAAAOQEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAABAAAAAAAAAAEAAAAAAAAAAAAAAADwvw"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHoAAAAAAAAAewAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHoAAAAAAAAAegAAAAAAAAAAAAAAAAAAAA"
				],
				[
					61,
					1,
					"paste",
					null,
					"AQAAAHsAAAAAAAAAtAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsAAAAAAAAAewAAAAAAAAAAAAAAAADwvw"
				],
				[
					72,
					1,
					"",
					null,
					"AQAAAJIAAAAAAAAAlQAAAAAAAAAIAAAAbS5idWZmZXI",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJIAAAAAAAAAmgAAAAAAAAAAAAAAAADwvw"
				],
				[
					73,
					1,
					"",
					null,
					"AQAAAKMAAAAAAAAApgAAAAAAAAAIAAAAbS5idWZmZXI",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMAAAAAAAAAqwAAAAAAAAAAAAAAAADwvw"
				],
				[
					1,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAACUAQAAaW1wb3J0IHsgTWF0LCBDVl84VUM0IH0gZnJvbSAnb3BlbmN2JzsKaW1wb3J0IHsgdG9Qb2ludGVyIH0gZnJvbSAndXRpbCc7CgpsZXQgYnVmID0gbmV3IFNoYXJlZEFycmF5QnVmZmVyKDY0MCAqIDQ4MCAqIDQpOwoKY29uc29sZS5sb2coJ3RvUG9pbnRlcihidWYpJywgdG9Qb2ludGVyKGJ1ZikpOwoKbGV0IG0gPSBuZXcgTWF0KDQ4MCwgNjQwLCBDVl84VUM0LCBidWYpOwpjb25zdCB7IGVsZW1TaXplLCBlbGVtU2l6ZTEgfSA9IG07Cgpjb25zb2xlLmxvZygnbScsIG0pOwpjb25zb2xlLmxvZygnbS5idWZmZXInLCBtLmJ1ZmZlcik7CmNvbnNvbGUubG9nKCd0b1BvaW50ZXIobS5idWZmZXIpJywgdG9Qb2ludGVyKG0uYnVmZmVyKSk7CmNvbnNvbGUubG9nKCdtJywgeyBlbGVtU2l6ZSwgZWxlbVNpemUxIH0pOwoAAAAAAAAAAJQBAAAAAAAAAAAAAAAAAAAAAAAAlAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpAQAAAAAAAGkBAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "test-opencv.js",
			"settings":
			{
				"buffer_size": 24136,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					90,
					1,
					"paste",
					null,
					"AQAAAFIvAAAAAAAAui8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABSLwAAAAAAAFIvAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"paste",
					null,
					"AgAAAK0vAAAAAAAAvS8AAAAAAAAAAAAAvS8AAAAAAAC9LwAAAAAAAAgAAABzcmMsIGRzdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtLwAAAAAAALUvAAAAAAAAAAAAAAAA8L8"
				],
				[
					137,
					1,
					"paste",
					null,
					"AgAAAA0vAAAAAAAAFy8AAAAAAAAAAAAAFy8AAAAAAAAXLwAAAAAAAA8AAABTa2VsZXRvbml6YXRpb24",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANLwAAAAAAABwvAAAAAAAAAAAAAAAA8L8"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": "Gray"
					},
					"BQAAAA0vAAAAAAAADi8AAAAAAAAAAAAADi8AAAAAAAAOLwAAAAAAAAoAAABNb3JwaG9sb2d5Di8AAAAAAAAPLwAAAAAAAAAAAAAPLwAAAAAAABAvAAAAAAAAAAAAABAvAAAAAAAAES8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANLwAAAAAAABcvAAAAAAAAAAAAAAAA8L8"
				],
				[
					147,
					1,
					"insert_completion",
					{
						"completion": "Grayscale",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Grayscale"
					},
					"AgAAAA0vAAAAAAAADS8AAAAAAAAEAAAAR3JheQ0vAAAAAAAAFi8AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARLwAAAAAAABEvAAAAAAAAAAAAAAAA8L8"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AgAAALICAAAAAAAAswIAAAAAAAAAAAAAswIAAAAAAACzAgAAAAAAAAoAAABfX2ZpbGVuYW1l",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyAgAAAAAAALwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					173,
					1,
					"left_delete",
					null,
					"AQAAALICAAAAAAAAsgIAAAAAAAABAAAAYw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzAgAAAAAAALMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "scriptArt"
					},
					"CQAAALICAAAAAAAAswIAAAAAAAAAAAAAswIAAAAAAAC0AgAAAAAAAAAAAAC0AgAAAAAAALUCAAAAAAAAAAAAALUCAAAAAAAAtgIAAAAAAAAAAAAAtgIAAAAAAAC3AgAAAAAAAAAAAAC3AgAAAAAAALgCAAAAAAAAAAAAALgCAAAAAAAAuQIAAAAAAAAAAAAAuQIAAAAAAAC6AgAAAAAAAAAAAAC6AgAAAAAAALsCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyAgAAAAAAALICAAAAAAAAAAAAAAAA8L8"
				],
				[
					175,
					1,
					"left_delete",
					null,
					"AQAAALoCAAAAAAAAugIAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC7AgAAAAAAALsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "gs[0]]"
					},
					"BgAAALoCAAAAAAAAuwIAAAAAAAAAAAAAuwIAAAAAAAC8AgAAAAAAAAAAAAC8AgAAAAAAAL0CAAAAAAAAAAAAAL0CAAAAAAAAvgIAAAAAAAAAAAAAvgIAAAAAAAC/AgAAAAAAAAAAAAC/AgAAAAAAAMACAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6AgAAAAAAALoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					177,
					1,
					"left_delete",
					null,
					"AQAAAL8CAAAAAAAAvwIAAAAAAAABAAAAXQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAAgAAAAAAAMACAAAAAAAAAAAAAAAA8L8"
				],
				[
					210,
					1,
					"cut",
					null,
					"AQAAAJsAAAAAAAAAmwAAAAAAAAAeAAAAaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJzsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbAAAAAAAAALkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					211,
					2,
					"paste",
					null,
					"AgAAAJsAAAAAAAAAuQAAAAAAAAAAAAAAuQAAAAAAAADXAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbAAAAAAAAAJsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "std"
					},
					"BAAAAMUAAAAAAAAAxgAAAAAAAAAAAAAAxgAAAAAAAADGAAAAAAAAAAQAAABwYXRoxgAAAAAAAADHAAAAAAAAAAAAAADHAAAAAAAAAMgAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFAAAAAAAAAMkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "std"
					},
					"BAAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADQAAAAAAAAAAQAAABwYXRo0AAAAAAAAADRAAAAAAAAAAAAAADRAAAAAAAAANIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPAAAAAAAAANMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					237,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSAAAAAAAAANIAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "quickjs/quickjs-libc.c",
			"settings":
			{
				"buffer_size": 99786,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "test-minnet.js",
			"settings":
			{
				"buffer_size": 3856,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"insert",
					{
						"characters": "create"
					},
					"BgAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABcAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAARAAAAAAAAABEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"right_delete",
					null,
					"AQAAABcAAAAAAAAAFwAAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXAAAAAAAAABcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "S"
					},
					"AQAAABcAAAAAAAAAGAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXAAAAAAAAABcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"paste",
					null,
					"AgAAAPsBAAAAAAAABwIAAAAAAAAAAAAABwIAAAAAAAAHAgAAAAAAAAYAAABzZXJ2ZXI",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD7AQAAAAAAAAECAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAXDQAAaW1wb3J0IHsgY2xpZW50LCBjcmVhdGVTZXJ2ZXIsIGZldGNoLCBzZXRMb2csIExMTF9BTEwgfSBmcm9tICduZXQnOwppbXBvcnQgeyBjb25jYXQsIGVzY2FwZSwgcXVvdGUsIHRvU3RyaW5nLCB0b0FycmF5QnVmZmVyIH0gZnJvbSAnLi9saWIvbWlzYy5qcyc7CmltcG9ydCB7IENvbnNvbGUgfSBmcm9tICdjb25zb2xlJzsKCmNvbnN0IHByaW50ID0gKC4uLmFyZ3MpID0+IGNvbnNvbGUubG9nKC4uLmFyZ3MpOwoKZnVuY3Rpb24gQ3JlYXRlU2VydmVyKCkgewogIHByaW50KCdTRVJWRVInKTsKCiAgc2V0TG9nKExMTF9BTEwsIChsZXZlbCwgLi4uYXJncykgPT4KICAgIGNvbnNvbGUubG9nKChbJ0VSUicsICdXQVJOJywgJ05PVElDRScsICdJTkZPJywgJ0RFQlVHJywgJ1BBUlNFUicsICdIRUFERVInLCAnRVhUJywgJ0NMSUVOVCcsICdMQVRFTkNZJywgJ01JTk5FVCcsICdUSFJFQUQnXVtNYXRoLmxvZzIobGV2ZWwpXSA/PyBsZXZlbCArICcnKS5wYWRFbmQoOCksIC4uLmFyZ3MpCiAgKTsKCiAgY3JlYXRlU2VydmVyKHsKICAgIHBvcnQ6IDMzMDAsCiAgICBtb3VudHM6IFsKICAgICAgWycvJywgJy4nLCAnaW5kZXguaHRtbCddLAogICAgICBhc3luYyBmdW5jdGlvbiogdGVzdChyZXEsIHJlc3ApIHsKICAgICAgICBjb25zb2xlLmxvZygnKnRlc3QnLCB7IHJlcSwgcmVzcCB9KTsKICAgICAgICB5aWVsZCAndGVzdFxyXG4nOwogICAgICB9CiAgICBdLAogICAgb25Db25uZWN0OiBzb2NrZXQgPT4gewogICAgICBwcmludCgnQ2xpZW50IGNvbm5lY3RlZCcpOwogICAgICBwcmludCgnU29ja2V0OiAnICsgc29ja2V0KTsKICAgICAgc29ja2V0LnNlbmQoJ0hlbGxvIGZyb20gc2VydmVyJyk7CiAgICB9LAogICAgb25NZXNzYWdlOiAoc29ja2V0LCBtc2cpID0+IHsKICAgICAgcHJpbnQoJ1JlY2VpdmVkOiAnLCBtc2cpOwogICAgfSwKICAgIG9uQ2xvc2U6IHdoeSA9PiB7CiAgICAgIHByaW50KCdDbGllbnQgZGlzY29ubmVjdGVkLiBSZWFzb246ICcsIHdoeSk7CiAgICB9LAogICAgb25Qb25nOiAoc29ja2V0LCBkYXRhKSA9PiB7CiAgICAgIHByaW50KCdQb25nOiAnLCBkYXRhKTsKICAgIH0KICB9KTsKfQoKZnVuY3Rpb24gQ3JlYXRlQ2xpZW50KCkgewogIHByaW50KCdDTElFTlQnKTsKICAvLyBzZXRMb2coKCkgPT4ge30pOwogIHNldExvZygobGV2ZWwsIC4uLmFyZ3MpID0+IChsZXZlbCA+IDI1NiA/IGNvbnNvbGUubG9nKCdXU0knLCAuLi5hcmdzKSA6IG51bGwpKTsKCiAgbGV0IHVybDsKICB1cmwgPSAnaHR0cHM6Ly8xMjcuMC4wLjE6OTAwMC9kZWJ1Z2dlci1jbGllbnQuanMnOwogIHVybCA9ICd3czovLzEyNy4wLjAuMTo5MDAwLyc7CiAgbGV0IGNsOwoKICBjbCA9IGNsaWVudCh1cmwsIHsKICAgIHNzbENBOiAnd2FybWNhdC5jb20uY2VyJywKICAgIG9uTWVzc2FnZSh3cywgbXNnKSB7CiAgICAgIC8qICAgIGNvbnNvbGUubG9nKCdvbk1lc3NhZ2UnLCB3cywgZXNjYXBlKG1zZy5zbGljZSgwLCAzMCkpKTsqLwogICAgICBjb25zb2xlLmxvZygnZGF0YTonLCBxdW90ZShtc2csICInIikpOwogICAgfSwKICAgIG9uQ29ubmVjdCh3cywgcmVxKSB7CiAgICAgIGNvbnNvbGUubG9nKCdvbkNvbm5lY3QnLCB3cywgcmVxKTsKCiAgICAgIG9zLnNldFJlYWRIYW5kbGVyKDAsICgpID0+IHsKICAgICAgICBsZXQgcmJ1ZiA9IG5ldyBBcnJheUJ1ZmZlcigxMDI0KTsKICAgICAgICBsZXQgcmV0ID0gb3MucmVhZCgwLCByYnVmLCAwLCAxMDI0KTsKICAgICAgICBjb25zb2xlLmxvZygnb3MucmVhZCgpID0nLCByZXQpOwogICAgICAgIGlmKHJldCA9PT0gMCkgewogICAgICAgICAgb3Muc2V0UmVhZEhhbmRsZXIoMCwgbnVsbCk7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICAgIGxldCBkYXRhID0gdG9TdHJpbmcocmJ1ZiwgMCwgcmV0KTsKICAgICAgICBjb25zb2xlLmxvZygnUmVhZDonLCBkYXRhLnRyaW1SaWdodCgpKTsKICAgICAgICB3cy5zZW5kKGRhdGEpOwogICAgICB9KTsKICAgICAgbGV0IG4gPSAwOwogICAgICBvcy5zaWduYWwob3MuU0lHSU5ULCAoKSA9PiB7CiAgICAgICAgaWYobisrIDwgMSkgY29uc29sZS5sb2coJyhQcmVzcyBDdHJsLUMgYWdhaW4gdG8gcXVpdCknKTsKICAgICAgICBlbHNlIHdzLmNsb3NlKCk7CiAgICAgIH0pOwogICAgfSwKICAgIG9uUG9uZyh3cywgcmVxKSB7CiAgICAgIGNvbnNvbGUubG9nKCdvblBvbmcnLCB3cywgcmVxKTsKICAgIH0sCiAgICBvbkNsb3NlKHdzLCByZXEpIHsKICAgICAgY29uc29sZS5sb2coJ29uQ2xvc2UnLCB3cywgcmVxKTsKICAgICAgc3RkLmV4aXQoMCk7CiAgICB9LAogICAgb25GZChmZCwgcmQsIHdyKSB7CiAgICAgIC8vY29uc29sZS5sb2coJ29uRmQnLCBmZCwgcmQsIHdyKTsKICAgICAgb3Muc2V0UmVhZEhhbmRsZXIoZmQsIHJkKTsKICAgICAgb3Muc2V0V3JpdGVIYW5kbGVyKGZkLCB3cik7CiAgICB9CiAgfSk7CiAgcmV0dXJuIGNsOwp9CgpmdW5jdGlvbiBnZXRKU09OKCkgewogIGNvbnNvbGUubG9nKCdnZXRKU09OJyk7CiAgY29uc3QgcmVzID0gZmV0Y2goJ2h0dHBzOi8vYXBpLmdpdGh1Yi5jb20vcmVwb3MvcnNlbm4vcGxvdC1jdicsIHsKICAgIG1ldGhvZDogJ2hlYWQnCiAgfSk7CiAgY29uc3QgeyBvaywgc3RhdHVzLCB0eXBlIH0gPSByZXM7CiAgY29uc29sZS5sb2coJ3JlczonLCB7IG9rLCBzdGF0dXMsIHR5cGUgfSk7CgogIGNvbnN0IGpzb24gPSByZXMuanNvbigpOwogIGNvbnNvbGUubG9nKCdqc29uOicsIGpzb24pOwoKICBjb25zdCBkYXRhID0gbmV3IE1hcChPYmplY3QuZW50cmllcyhqc29uKSk7CiAgY29uc29sZS5sb2coJ2RhdGE6JywgZGF0YSk7CiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIG1haW4oLi4uYXJncykgewogIGdsb2JhbFRoaXMuY29uc29sZSA9IG5ldyBDb25zb2xlKHsgaW5zcGVjdE9wdGlvbnM6IHsgY29tcGFjdDogMCwgY3VzdG9tSW5zcGVjdDogdHJ1ZSB9IH0pOwogIGxldCB3czsKCiAgc3dpdGNoIChhcmdzWzBdKSB7CiAgICBjYXNlICdzJzoKICAgICAgd3MgPSBDcmVhdGVTZXJ2ZXIoKTsKICAgICAgYnJlYWs7CiAgICBjYXNlICdjJzoKICAgICAgd3MgPSBDcmVhdGVDbGllbnQoKTsKICAgICAgYnJlYWs7CiAgICBjYXNlICdmJzoKICAgICAgd3MgPSBnZXRKU09OKCk7CiAgICAgIGJyZWFrOwogIH0KICBjb25zb2xlLmxvZygnd3MnLCB3cyk7Cn0KCnRyeSB7CiAgbWFpbiguLi5zY3JpcHRBcmdzLnNsaWNlKDEpKTsKfSBjYXRjaChlcnJvcikgewogIGNvbnNvbGUubG9nKGBGQUlMOiAke2Vycm9yPy5tZXNzYWdlID8/IGVycm9yfVxuJHtlcnJvcj8uc3RhY2t9YCk7CiAgMTsKICBzdGQuZXhpdCgxKTsKfSBmaW5hbGx5IHsKICAvL2NvbnNvbGUubG9nKCdTVUNDRVNTJyk7Cn0KAAAAAAAAAAAcDgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4AQAAAAAAAPgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"cut",
					null,
					"AQAAABUMAAAAAAAAFQwAAAAAAABdAAAAICBnbG9iYWxUaGlzLmNvbnNvbGUgPSBuZXcgQ29uc29sZSh7IGluc3BlY3RPcHRpb25zOiB7IGNvbXBhY3Q6IDAsIGN1c3RvbUluc3BlY3Q6IHRydWUgfSB9KTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVDAAAAAAAAHIMAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAgBAAAAAAAACQEAAAAAAAAAAAAACQEAAAAAAAAKAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIAQAAAAAAAAgBAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					1,
					"paste",
					null,
					"AQAAAAoBAAAAAAAAZwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKAQAAAAAAAAoBAAAAAAAAAAAAAAAA8L8"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": "\nimport"
					},
					"BwAAAAkBAAAAAAAACgEAAAAAAAAAAAAACgEAAAAAAAALAQAAAAAAAAAAAAALAQAAAAAAAAwBAAAAAAAAAAAAAAwBAAAAAAAADQEAAAAAAAAAAAAADQEAAAAAAAAOAQAAAAAAAAAAAAAOAQAAAAAAAA8BAAAAAAAAAAAAAA8BAAAAAAAAEAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAQAAAAAAAAkBAAAAAAAAAAAAAABAcUA"
				],
				[
					133,
					1,
					"left_delete",
					null,
					"AQAAAA8BAAAAAAAADwEAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQAQAAAAAAABABAAAAAAAAAAAAAAAA8L8"
				],
				[
					136,
					1,
					"cut",
					null,
					"AQAAAAoBAAAAAAAACgEAAAAAAAAGAAAAaW1wb3IK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKAQAAAAAAABABAAAAAAAAAAAAAAAAAAA"
				],
				[
					142,
					1,
					"left_delete",
					null,
					"AQAAAAoBAAAAAAAACgEAAAAAAAACAAAAICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMAQAAAAAAAAwBAAAAAAAAAAAAAAAAOEA"
				],
				[
					146,
					1,
					"cut",
					null,
					"AQAAAAoBAAAAAAAACgEAAAAAAABcAAAAZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoeyBpbnNwZWN0T3B0aW9uczogeyBjb21wYWN0OiAwLCBjdXN0b21JbnNwZWN0OiB0cnVlIH0gfSk7Cgo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKAQAAAAAAAGYBAAAAAAAAAAAAAAAAAAA"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANcAAAAAAAAA2AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXAAAAAAAAANcAAAAAAAAAAAAAAAAAAAA"
				],
				[
					150,
					1,
					"paste",
					null,
					"AQAAANcAAAAAAAAAMwEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXAAAAAAAAANcAAAAAAAAAAAAAAAAAAAA"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BgAAANcAAAAAAAAA2AAAAAAAAAAAAAAA2AAAAAAAAADYAAAAAAAAAAsAAABnbG9iYWxUaGlzLtgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADaAAAAAAAAAAAAAADaAAAAAAAAANsAAAAAAAAAAAAAANsAAAAAAAAA3AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXAAAAAAAAAOIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANwAAAAAAAAA3QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcAAAAAAAAANwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					161,
					1,
					"left_delete",
					null,
					"AQAAACwBAAAAAAAALAEAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtAQAAAAAAAC0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					195,
					1,
					"paste",
					null,
					"AQAAAHkFAAAAAAAAAQYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5BQAAAAAAAHkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					206,
					1,
					"cut",
					null,
					"AQAAAJIFAAAAAAAAkgUAAAAAAAAnAAAAICAgICAgY29uc29sZS5sb2coJ29uRmQnLCBmZCwgcmQsIHdyKTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSBQAAAAAAALkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					207,
					2,
					"paste",
					null,
					"AgAAAJIFAAAAAAAAuQUAAAAAAAAAAAAAuQUAAAAAAADgBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSBQAAAAAAAJIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					215,
					1,
					"paste",
					null,
					"AgAAAMwFAAAAAAAA3QUAAAAAAAAAAAAA3QUAAAAAAADdBQAAAAAAAAQAAABvbkZk",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMBQAAAAAAANAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					218,
					1,
					"paste",
					null,
					"AgAAAOAFAAAAAAAA8QUAAAAAAAAAAAAA8QUAAAAAAADxBQAAAAAAAAoAAABmZCwgcmQsIHdy",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgBQAAAAAAAOoFAAAAAAAAAAAAAAAA8L8"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAOIFAAAAAAAA4wUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiBQAAAAAAAOIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					240,
					1,
					"insert",
					{
						"characters": "os,m"
					},
					"BAAAAN8FAAAAAAAA4AUAAAAAAAAAAAAA4AUAAAAAAADhBQAAAAAAAAAAAADhBQAAAAAAAOIFAAAAAAAAAAAAAOIFAAAAAAAA4wUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfBQAAAAAAAN8FAAAAAAAAAAAAAACAfEA"
				],
				[
					241,
					4,
					"left_delete",
					null,
					"BAAAAOIFAAAAAAAA4gUAAAAAAAABAAAAbeEFAAAAAAAA4QUAAAAAAAABAAAALOAFAAAAAAAA4AUAAAAAAAABAAAAc98FAAAAAAAA3wUAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjBQAAAAAAAOMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					245,
					1,
					"cut",
					null,
					"AQAAALkFAAAAAAAAuQUAAAAAAAA8AAAAICAgICAgY29uc29sZS5sb2coJ29zLnNldFJlYWRIYW5kbGVyJywgb3M/LnNldFJlYWRIYW5kbGVyKTsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5BQAAAAAAAPUFAAAAAAAAAAAAAAAAAAA"
				],
				[
					246,
					2,
					"paste",
					null,
					"AgAAALkFAAAAAAAA9QUAAAAAAAAAAAAA9QUAAAAAAAAxBgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC5BQAAAAAAALkFAAAAAAAAAAAAAAAA8L8"
				],
				[
					254,
					1,
					"insert_snippet",
					{
						"contents": "'${0:$SELECTION}'"
					},
					"AgAAAM4FAAAAAAAAzgUAAAAAAAAkAAAALnNldFJlYWRIYW5kbGVyJywgb3M/LnNldFJlYWRIYW5kbGVyzgUAAAAAAAD0BQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADOBQAAAAAAAPIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					255,
					1,
					"insert",
					{
						"characters": ",0"
					},
					"AwAAAM8FAAAAAAAA0AUAAAAAAAAAAAAA0AUAAAAAAADQBQAAAAAAACQAAAAuc2V0UmVhZEhhbmRsZXInLCBvcz8uc2V0UmVhZEhhbmRsZXLQBQAAAAAAANEFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPBQAAAAAAAPMFAAAAAAAAAAAAAAAA8L8"
				],
				[
					256,
					1,
					"left_delete",
					null,
					"AQAAANAFAAAAAAAA0AUAAAAAAAABAAAAMA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRBQAAAAAAANEFAAAAAAAAAAAAAAAA8L8"
				],
				[
					257,
					1,
					"insert",
					{
						"characters": "os"
					},
					"AgAAANAFAAAAAAAA0QUAAAAAAAAAAAAA0QUAAAAAAADSBQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQBQAAAAAAANAFAAAAAAAAAAAAAAAA8L8"
				],
				[
					258,
					1,
					"right_delete",
					null,
					"AQAAANIFAAAAAAAA0gUAAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSBQAAAAAAANIFAAAAAAAAAAAAAAAA8L8"
				],
				[
					285,
					1,
					"left_delete",
					null,
					"AQAAAGABAAAAAAAAYAEAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhAQAAAAAAAGEBAAAAAAAAAAAAAAAAAAA"
				],
				[
					332,
					1,
					"insert",
					{
						"characters": "\ntry"
					},
					"BAAAAGoNAAAAAAAAaw0AAAAAAAAAAAAAaw0AAAAAAABsDQAAAAAAAAAAAABsDQAAAAAAAG0NAAAAAAAAAAAAAG0NAAAAAAAAbg0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqDQAAAAAAAGoNAAAAAAAAAAAAAAAA8L8"
				],
				[
					333,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG4NAAAAAAAAbw0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABuDQAAAAAAAG4NAAAAAAAAAAAAAAAA8L8"
				],
				[
					334,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAG8NAAAAAAAAcQ0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABvDQAAAAAAAG8NAAAAAAAAAAAAAAAA8L8"
				],
				[
					335,
					1,
					"right_delete",
					null,
					"AQAAAHANAAAAAAAAcA0AAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABwDQAAAAAAAHANAAAAAAAAAAAAAAAA8L8"
				],
				[
					341,
					1,
					"right_delete",
					null,
					"AQAAAGsNAAAAAAAAaw0AAAAAAAAGAAAAdHJ5IHsK",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABrDQAAAAAAAHENAAAAAAAAAAAAAAAAAAA"
				],
				[
					358,
					1,
					"cut",
					null,
					"AQAAALMAAAAAAAAAswAAAAAAAAAjAAAAaW1wb3J0IHsgQ29uc29sZSB9IGZyb20gJ2NvbnNvbGUnOwo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzAAAAAAAAANYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					359,
					2,
					"paste",
					null,
					"AgAAALMAAAAAAAAA1gAAAAAAAAAAAAAA1gAAAAAAAAD5AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzAAAAAAAAALMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					362,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AgAAAN0AAAAAAAAA3gAAAAAAAAAAAAAA3gAAAAAAAADeAAAAAAAAAAsAAAB7IENvbnNvbGUgfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdAAAAAAAAAOgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					363,
					1,
					"insert",
					{
						"characters": " aso"
					},
					"BAAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA3wAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOEAAAAAAAAAAAAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeAAAAAAAAAN4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					364,
					1,
					"left_delete",
					null,
					"AQAAAOEAAAAAAAAA4QAAAAAAAAABAAAAbw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiAAAAAAAAAOIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					365,
					1,
					"insert",
					{
						"characters": " ois"
					},
					"BAAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA4gAAAAAAAADjAAAAAAAAAAAAAADjAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhAAAAAAAAAOEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					366,
					2,
					"left_delete",
					null,
					"AgAAAOQAAAAAAAAA5AAAAAAAAAABAAAAc+MAAAAAAAAA4wAAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlAAAAAAAAAOUAAAAAAAAAAAAAAAAA8L8"
				],
				[
					367,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjAAAAAAAAAOMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					371,
					1,
					"insert",
					{
						"characters": "os"
					},
					"AwAAAOsAAAAAAAAA7AAAAAAAAAAAAAAA7AAAAAAAAADsAAAAAAAAAAcAAABjb25zb2xl7AAAAAAAAADtAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrAAAAAAAAAPIAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "debugger-server.js",
			"settings":
			{
				"buffer_size": 30744,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "test-sockets.js",
			"settings":
			{
				"buffer_size": 1209,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					26,
					1,
					"paste",
					null,
					"AQAAAMkCAAAAAAAA+AIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJAgAAAAAAAMkCAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "nbew"
					},
					"BQAAANgCAAAAAAAA2QIAAAAAAAAAAAAA2QIAAAAAAADZAgAAAAAAAAcAAABjb25uZWN02QIAAAAAAADaAgAAAAAAAAAAAADaAgAAAAAAANsCAAAAAAAAAAAAANsCAAAAAAAA3AIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYAgAAAAAAAN8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANwCAAAAAAAA3QIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcAgAAAAAAANwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					3,
					"left_delete",
					null,
					"AwAAANwCAAAAAAAA3AIAAAAAAAABAAAAINsCAAAAAAAA2wIAAAAAAAABAAAAd9oCAAAAAAAA2gIAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdAgAAAAAAAN0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "ew"
					},
					"AgAAANoCAAAAAAAA2wIAAAAAAAAAAAAA2wIAAAAAAADcAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaAgAAAAAAANoCAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					3,
					"left_delete",
					null,
					"AwAAANsCAAAAAAAA2wIAAAAAAAABAAAAd9oCAAAAAAAA2gIAAAAAAAABAAAAZdkCAAAAAAAA2QIAAAAAAAABAAAAYg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcAgAAAAAAANwCAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "ew"
					},
					"AgAAANkCAAAAAAAA2gIAAAAAAAAAAAAA2gIAAAAAAADbAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZAgAAAAAAANkCAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " Sic"
					},
					"BAAAANsCAAAAAAAA3AIAAAAAAAAAAAAA3AIAAAAAAADdAgAAAAAAAAAAAADdAgAAAAAAAN4CAAAAAAAAAAAAAN4CAAAAAAAA3wIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbAgAAAAAAANsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					2,
					"left_delete",
					null,
					"AgAAAN4CAAAAAAAA3gIAAAAAAAABAAAAY90CAAAAAAAA3QIAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfAgAAAAAAAN8CAAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "ocket"
					},
					"BQAAAN0CAAAAAAAA3gIAAAAAAAAAAAAA3gIAAAAAAADfAgAAAAAAAAAAAADfAgAAAAAAAOACAAAAAAAAAAAAAOACAAAAAAAA4QIAAAAAAAAAAAAA4QIAAAAAAADiAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdAgAAAAAAAN0CAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "sock"
					},
					"BQAAAOkCAAAAAAAA6gIAAAAAAAAAAAAA6gIAAAAAAADqAgAAAAAAAA8AAAByZXQsIHNvY2suZXJybm/qAgAAAAAAAOsCAAAAAAAAAAAAAOsCAAAAAAAA7AIAAAAAAAAAAAAA7AIAAAAAAADtAgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpAgAAAAAAAPgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					63,
					1,
					"cut",
					null,
					"AQAAAMgCAAAAAAAAyAIAAAAAAAAoAAAAICAgY29uc29sZS5sb2coJ25ldyBTb2NrZXQoKSA9Jywgc29jayk7Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIAgAAAAAAAPACAAAAAAAAAAAAAAAA8L8"
				],
				[
					64,
					2,
					"paste",
					null,
					"AgAAAMgCAAAAAAAA8AIAAAAAAAAAAAAA8AIAAAAAAAAYAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADIAgAAAAAAAMgCAAAAAAAAAAAAAAAA8L8"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": "sock.ndelay"
					},
					"DAAAAAADAAAAAAAAAQMAAAAAAAAAAAAAAQMAAAAAAAABAwAAAAAAAA4AAABuZXcgU29ja2V0KCkgPQEDAAAAAAAAAgMAAAAAAAAAAAAAAgMAAAAAAAADAwAAAAAAAAAAAAADAwAAAAAAAAQDAAAAAAAAAAAAAAQDAAAAAAAABQMAAAAAAAAAAAAABQMAAAAAAAAGAwAAAAAAAAAAAAAGAwAAAAAAAAcDAAAAAAAAAAAAAAcDAAAAAAAACAMAAAAAAAAAAAAACAMAAAAAAAAJAwAAAAAAAAAAAAAJAwAAAAAAAAoDAAAAAAAAAAAAAAoDAAAAAAAACwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAwAAAAAAAA4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAAsDAAAAAAAADAMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALAwAAAAAAAAsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": ".ndelay"
					},
					"BwAAABMDAAAAAAAAFAMAAAAAAAAAAAAAFAMAAAAAAAAVAwAAAAAAAAAAAAAVAwAAAAAAABYDAAAAAAAAAAAAABYDAAAAAAAAFwMAAAAAAAAAAAAAFwMAAAAAAAAYAwAAAAAAAAAAAAAYAwAAAAAAABkDAAAAAAAAAAAAABkDAAAAAAAAGgMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATAwAAAAAAABMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"cut",
					null,
					"AQAAAG0BAAAAAAAAbQEAAAAAAAAIAAAAU29ja2V0LCA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtAQAAAAAAAHUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					2,
					"paste",
					null,
					"AgAAAG0BAAAAAAAAdQEAAAAAAAAAAAAAdQEAAAAAAAB9AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtAQAAAAAAAG0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "Async"
					},
					"BQAAAHUBAAAAAAAAdgEAAAAAAAAAAAAAdgEAAAAAAAB3AQAAAAAAAAAAAAB3AQAAAAAAAHgBAAAAAAAAAAAAAHgBAAAAAAAAeQEAAAAAAAAAAAAAeQEAAAAAAAB6AQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1AQAAAAAAAHUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					112,
					1,
					"paste",
					null,
					"AgAAAKoCAAAAAAAAtQIAAAAAAAAAAAAAtQIAAAAAAAC1AgAAAAAAAAYAAABTb2NrZXQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqAgAAAAAAALACAAAAAAAAAAAAAAAA8L8"
				],
				[
					141,
					1,
					"left_delete",
					null,
					"AQAAALYBAAAAAAAAtgEAAAAAAAAfAAAALi9xdWlja2pzL3Fqcy1mZmkvbGliL3NvY2tldC5qcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2AQAAAAAAANUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "sockets"
					},
					"BwAAALYBAAAAAAAAtwEAAAAAAAAAAAAAtwEAAAAAAAC4AQAAAAAAAAAAAAC4AQAAAAAAALkBAAAAAAAAAAAAALkBAAAAAAAAugEAAAAAAAAAAAAAugEAAAAAAAC7AQAAAAAAAAAAAAC7AQAAAAAAALwBAAAAAAAAAAAAALwBAAAAAAAAvQEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC2AQAAAAAAALYBAAAAAAAAAAAAAAAA8L8"
				],
				[
					3,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAArBQAAaW1wb3J0ICogYXMgc3RkIGZyb20gJ3N0ZCc7CmltcG9ydCAqIGFzIG9zIGZyb20gJ29zJzsKaW1wb3J0ICogYXMgZGVlcCBmcm9tICcuL2xpYi9kZWVwLmpzJzsKaW1wb3J0ICogYXMgcGF0aCBmcm9tICcuL2xpYi9wYXRoLmpzJzsKaW1wb3J0IHsgdG9BcnJheUJ1ZmZlciwgdG9TdHJpbmcsIHF1b3RlLCBlc2NhcGUgfSBmcm9tICcuL2xpYi9taXNjLmpzJzsKaW1wb3J0IHsgQ29uc29sZSB9IGZyb20gJ2NvbnNvbGUnOwppbXBvcnQgaW5zcGVjdCBmcm9tICcuL2xpYi9vYmplY3RJbnNwZWN0LmpzJzsKaW1wb3J0ICogYXMgZnMgZnJvbSAnLi9saWIvZmlsZXN5c3RlbS5qcyc7CmltcG9ydCAqIGFzIG5ldCBmcm9tICduZXQnOwppbXBvcnQgeyBTb2NrZXQsIEFzeW5jU29ja2V0LCBTb2NrQWRkciwgQUZfSU5FVCwgU09DS19TVFJFQU0sIElQUFJPVE9fVENQIH0gZnJvbSAnc29ja2V0cyc7CmltcG9ydCB7IGRlZmluZSB9IGZyb20gJy4vbGliL21pc2MuanMnOwoKZ2xvYmFsVGhpcy5mcyA9IGZzOwoKYXN5bmMgZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoewogICAgaW5zcGVjdE9wdGlvbnM6IHsgY29tcGFjdDogMiwgY3VzdG9tSW5zcGVjdDogdHJ1ZSB9CiAgfSk7CgogIGxldCBzb2NrID0gbmV3IEFzeW5jU29ja2V0KEFGX0lORVQsIFNPQ0tfU1RSRUFNLCBJUFBST1RPX1RDUCk7CiAgIGNvbnNvbGUubG9nKCduZXcgU29ja2V0KCkgPScsIHNvY2spOwogICBjb25zb2xlLmxvZygnc29jay5uZGVsYXk6Jywgc29jay5uZGVsYXkpOwogc29jay5uZGVsYXkodHJ1ZSk7CgogIGxldCBhZGRyID0gbmV3IFNvY2tBZGRyKEFGX0lORVQsICcxMjcuMC4wLjEnLCAyMik7CgogIGxldCByZXQgPSBzb2NrLmNvbm5lY3QoYWRkcik7CiAgY29uc29sZS5sb2coJ2Nvbm5lY3QoKSA9JywgcmV0LCBzb2NrLmVycm5vKTsKCiAgLy9hd2FpdCBzb2NrLndhaXRXcml0ZSgpOwogIC8qcmV0ID0gYXdhaXQgc29jay5zZW5kKCdURVNUXG4nKTsKCiBjb25zb2xlLmxvZygnY29ubmVjdGVkJyxyZXQsc29jayk7Ki8KCiAgLy9hd2FpdCBzb2NrLndhaXRSZWFkKCk7CiAgbGV0IGJ1ZiA9IG5ldyBBcnJheUJ1ZmZlcigxMDI0KTsKICByZXQgPSBhd2FpdCBzb2NrLnJlY3YoYnVmKTsKICBjb25zb2xlLmxvZygnc29jay5yZWN2KCkgPScsIHJldCk7CiAgY29uc29sZS5sb2coJ2J1ZiA9JywgZXNjYXBlKHRvU3RyaW5nKGJ1ZiwgMCwgcmV0KSkpOwoKICBzb2NrLmNsb3NlKCk7Cn0KCm1haW4oKS5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coJ2Vycm9yOicsIGVyci5tZXNzYWdlLCBlcnIuc3RhY2spKTsKAAAAAAAAAAC5BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQQAAAAAAAAZBAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "count-neighbours.js",
			"settings":
			{
				"buffer_size": 466,
				"line_ending": "Unix",
				"name": "import { filter2D,Mat,imread } from 'opencv';"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "import"
					},
					"BgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					2,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAYAAAAAAAAABwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"",
					null,
					"AQAAAAcAAAAAAAAAuzEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwAAAAAAAAAHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAYAAABpbXBvcnQ",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"cut",
					null,
					"AQAAAJosAAAAAAAAmiwAAAAAAAAIAAAAZmlsdGVyMkQ",
					"AQAAAAAAAAABAAAAmiwAAAAAAACiLAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"paste",
					null,
					"",
					"AQAAAAAAAAABAAAACwAAAAAAAACdMQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": ",Mat,imra"
					},
					"CQAAABMAAAAAAAAAFAAAAAAAAAAAAAAAFAAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABYAAAAAAAAAAAAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwAAAAAAAAATAAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"left_delete",
					null,
					"AQAAABsAAAAAAAAAGwAAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "ead"
					},
					"AwAAABsAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGwAAAAAAAAAbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAC8AAAAAAAAAMAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwAAAAAAAAAvAAAAAAAAAAAAAAAAgHZA"
				],
				[
					43,
					2,
					"left_delete",
					null,
					"AgAAAC8AAAAAAAAALwAAAAAAAAABAAAACi4AAAAAAAAALgAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAC4AAAAAAAAALwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgAAAAAAAAAuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"CAAAAC8AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAyAAAAAAAAAAAAAAAyAAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAANQAAAAAAAAAAAAAAMAAAAAAAAAAwAAAAAAAAAAIAAAAgIDMAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA2AAAAAAAAAAAAAAAxAAAAAAAAADEAAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAALwAAAAAAAAAvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAADQAAAAAAAAANQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAAAAAAAAAA0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "\nfunction"
					},
					"CwAAADQAAAAAAAAANQAAAAAAAAAAAAAANQAAAAAAAAA3AAAAAAAAAAAAAAAyAAAAAAAAADIAAAAAAAAAAgAAACAgNQAAAAAAAAA2AAAAAAAAAAAAAAA2AAAAAAAAADcAAAAAAAAAAAAAADcAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA5AAAAAAAAAAAAAAA5AAAAAAAAADoAAAAAAAAAAAAAADoAAAAAAAAAOwAAAAAAAAAAAAAAOwAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAD0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANAAAAAAAAAA0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": " main"
					},
					"BQAAAD0AAAAAAAAAPgAAAAAAAAAAAAAAPgAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABCAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPQAAAAAAAAA9AAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEIAAAAAAAAARAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgAAAAAAAABCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "...args"
					},
					"BwAAAEMAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABFAAAAAAAAAAAAAABFAAAAAAAAAEYAAAAAAAAAAAAAAEYAAAAAAAAARwAAAAAAAAAAAAAARwAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEkAAAAAAAAAAAAAAEkAAAAAAAAASgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwAAAAAAAABDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEsAAAAAAAAATAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwAAAAAAAABLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEwAAAAAAAAATgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATAAAAAAAAABMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAE0AAAAAAAAATgAAAAAAAAAAAAAATgAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFEAAAAAAAAAAAAAAFEAAAAAAAAAUwAAAAAAAAAAAAAATgAAAAAAAABOAAAAAAAAAAIAAAAgIE4AAAAAAAAAUgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQAAAAAAAABNAAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAFIAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAABXAAAAAAAAAAAAAABOAAAAAAAAAE4AAAAAAAAABAAAACAgICA",
					"AQAAAAAAAAABAAAAUgAAAAAAAABSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "\n\n\nfm"
					},
					"CwAAAFcAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABaAAAAAAAAAAAAAABPAAAAAAAAAE8AAAAAAAAABAAAACAgICBWAAAAAAAAAFcAAAAAAAAAAAAAAFcAAAAAAAAAWQAAAAAAAAAAAAAAVAAAAAAAAABUAAAAAAAAAAIAAAAgIFcAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABaAAAAAAAAAAAAAABVAAAAAAAAAFUAAAAAAAAAAgAAACAgWAAAAAAAAABZAAAAAAAAAAAAAABZAAAAAAAAAFoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwAAAAAAAABXAAAAAAAAAAAAAAAAAEhA"
				],
				[
					59,
					2,
					"left_delete",
					null,
					"AgAAAFkAAAAAAAAAWQAAAAAAAAABAAAAbVgAAAAAAAAAWAAAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAWgAAAAAAAABaAAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "main"
					},
					"BAAAAFgAAAAAAAAAWQAAAAAAAAAAAAAAWQAAAAAAAABaAAAAAAAAAAAAAABaAAAAAAAAAFsAAAAAAAAAAAAAAFsAAAAAAAAAXAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAAAAAAAAABYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFwAAAAAAAAAXgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAAAAAAAAABcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "...scriptArgs.slice"
					},
					"EwAAAF0AAAAAAAAAXgAAAAAAAAAAAAAAXgAAAAAAAABfAAAAAAAAAAAAAABfAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAYQAAAAAAAAAAAAAAYQAAAAAAAABiAAAAAAAAAAAAAABiAAAAAAAAAGMAAAAAAAAAAAAAAGMAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAABlAAAAAAAAAAAAAABlAAAAAAAAAGYAAAAAAAAAAAAAAGYAAAAAAAAAZwAAAAAAAAAAAAAAZwAAAAAAAABoAAAAAAAAAAAAAABoAAAAAAAAAGkAAAAAAAAAAAAAAGkAAAAAAAAAagAAAAAAAAAAAAAAagAAAAAAAABrAAAAAAAAAAAAAABrAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAbQAAAAAAAAAAAAAAbQAAAAAAAABuAAAAAAAAAAAAAABuAAAAAAAAAG8AAAAAAAAAAAAAAG8AAAAAAAAAcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXQAAAAAAAABdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHAAAAAAAAAAcgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAHEAAAAAAAAAcgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQAAAAAAAABxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHQAAAAAAAAAdQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAAAAAAAAAB0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"paste",
					null,
					"AQAAAE8AAAAAAAAAcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwAAAAAAAABPAAAAAAAAAAAAAAAAQHdA"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAE8AAAAAAAAAUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwAAAAAAAABPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"left_delete",
					null,
					"AQAAAE8AAAAAAAAATwAAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAUAAAAAAAAABQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE8AAAAAAAAAUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwAAAAAAAABPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAE8AAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABRAAAAAAAAAAAAAABRAAAAAAAAAFIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwAAAAAAAABPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " m=imread"
					},
					"CQAAAFIAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFUAAAAAAAAAAAAAAFUAAAAAAAAAVgAAAAAAAAAAAAAAVgAAAAAAAABXAAAAAAAAAAAAAABXAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAWQAAAAAAAAAAAAAAWQAAAAAAAABaAAAAAAAAAAAAAABaAAAAAAAAAFsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgAAAAAAAABSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFsAAAAAAAAAXQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwAAAAAAAABbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					2,
					"right_delete",
					null,
					"AgAAAFwAAAAAAAAAXAAAAAAAAAABAAAAKVwAAAAAAAAAXAAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAXAAAAAAAAABcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAAH0AAAAAAAAAfgAAAAAAAAAAAAAAfgAAAAAAAAB/AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfQAAAAAAAAB9AAAAAAAAAP///////+9/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "\n\n\ncv"
					},
					"BQAAAH8AAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACBAAAAAAAAAAAAAACBAAAAAAAAAIIAAAAAAAAAAAAAAIIAAAAAAAAAgwAAAAAAAAAAAAAAgwAAAAAAAACEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwAAAAAAAAB/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					2,
					"left_delete",
					null,
					"AgAAAIMAAAAAAAAAgwAAAAAAAAABAAAAdoIAAAAAAAAAggAAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAB4AAAAAAAAAHwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgAAAAAAAAAeAAAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"",
					null,
					"AQAAAB8AAAAAAAAALQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": ",cvtColor"
					},
					"CQAAAC0AAAAAAAAALgAAAAAAAAAAAAAALgAAAAAAAAAvAAAAAAAAAAAAAAAvAAAAAAAAADAAAAAAAAAAAAAAADAAAAAAAAAAMQAAAAAAAAAAAAAAMQAAAAAAAAAyAAAAAAAAAAAAAAAyAAAAAAAAADMAAAAAAAAAAAAAADMAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA1AAAAAAAAAAAAAAA1AAAAAAAAADYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQAAAAAAAAAtAAAAAAAAAAAAAAAA4IBA"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "cvtColor"
					},
					"CAAAAJgAAAAAAAAAmQAAAAAAAAAAAAAAmQAAAAAAAACaAAAAAAAAAAAAAACaAAAAAAAAAJsAAAAAAAAAAAAAAJsAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACdAAAAAAAAAAAAAACdAAAAAAAAAJ4AAAAAAAAAAAAAAJ4AAAAAAAAAnwAAAAAAAAAAAAAAnwAAAAAAAACgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAQIRA"
				],
				[
					99,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKAAAAAAAAAAogAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoAAAAAAAAACgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "m,"
					},
					"AgAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoQAAAAAAAAChAAAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " m,"
					},
					"AwAAAKMAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAAClAAAAAAAAAAAAAAClAAAAAAAAAKYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAowAAAAAAAACjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": " COLOR_BGR"
					},
					"CgAAAKYAAAAAAAAApwAAAAAAAAAAAAAApwAAAAAAAACoAAAAAAAAAAAAAACoAAAAAAAAAKkAAAAAAAAAAAAAAKkAAAAAAAAAqgAAAAAAAAAAAAAAqgAAAAAAAACrAAAAAAAAAAAAAACrAAAAAAAAAKwAAAAAAAAAAAAAAKwAAAAAAAAArQAAAAAAAAAAAAAArQAAAAAAAACuAAAAAAAAAAAAAACuAAAAAAAAAK8AAAAAAAAAAAAAAK8AAAAAAAAAsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApgAAAAAAAACmAAAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert_completion",
					{
						"completion": "COLOR_BGR2GRAY",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "COLOR_BGR2GRAY"
					},
					"AgAAAKcAAAAAAAAApwAAAAAAAAAJAAAAQ09MT1JfQkdSpwAAAAAAAAC1AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsAAAAAAAAACwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALYAAAAAAAAAtwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtgAAAAAAAAC2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJgAAAAAAAAAmQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAAAAAAAAACYAAAAAAAAAAAAAAAAAAAA"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAALgAAAAAAAAAuQAAAAAAAAAAAAAAuQAAAAAAAAC6AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAAAAAAAAAC4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADYAAAAAAAAANwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgAAAAAAAAA2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADcAAAAAAAAAOAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwAAAAAAAAA3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"",
					null,
					"AQAAADgAAAAAAAAARwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOAAAAAAAAAA4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAMwAAAAAAAAAzQAAAAAAAAAAAAAAzQAAAAAAAADOAAAAAAAAAAAAAADOAAAAAAAAAM8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAAAAAAAAADMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": " skeleton=new"
					},
					"DQAAAM8AAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADRAAAAAAAAAAAAAADRAAAAAAAAANIAAAAAAAAAAAAAANIAAAAAAAAA0wAAAAAAAAAAAAAA0wAAAAAAAADUAAAAAAAAAAAAAADUAAAAAAAAANUAAAAAAAAAAAAAANUAAAAAAAAA1gAAAAAAAAAAAAAA1gAAAAAAAADXAAAAAAAAAAAAAADXAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA2QAAAAAAAAAAAAAA2QAAAAAAAADaAAAAAAAAAAAAAADaAAAAAAAAANsAAAAAAAAAAAAAANsAAAAAAAAA3AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwAAAAAAAADPAAAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": " Mat)"
					},
					"BQAAANwAAAAAAAAA3QAAAAAAAAAAAAAA3QAAAAAAAADeAAAAAAAAAAAAAADeAAAAAAAAAN8AAAAAAAAAAAAAAN8AAAAAAAAA4AAAAAAAAAAAAAAA4AAAAAAAAADhAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3AAAAAAAAADcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOEAAAAAAAAA4wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QAAAAAAAADhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAOEAAAAAAAAA4QAAAAAAAAABAAAAKOEAAAAAAAAA4QAAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA4gAAAAAAAADiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"left_delete",
					null,
					"AQAAAOAAAAAAAAAA4AAAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA4QAAAAAAAADhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOAAAAAAAAAA4gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AAAAAAAAADgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gAAAAAAAADiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": "\nskel"
					},
					"BQAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA5AAAAAAAAADlAAAAAAAAAAAAAADlAAAAAAAAAOYAAAAAAAAAAAAAAOYAAAAAAAAA5wAAAAAAAAAAAAAA5wAAAAAAAADoAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wAAAAAAAADjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"insert_completion",
					{
						"completion": "skeletonization",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "skeletonization"
					},
					"AgAAAOQAAAAAAAAA5AAAAAAAAAAEAAAAc2tlbOQAAAAAAAAA8wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AAAAAAAAADoAAAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPMAAAAAAAAA9QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wAAAAAAAADzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "sk"
					},
					"AgAAAPQAAAAAAAAA9QAAAAAAAAAAAAAA9QAAAAAAAAD2AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AAAAAAAAAD0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					2,
					"left_delete",
					null,
					"AgAAAPUAAAAAAAAA9QAAAAAAAAABAAAAa/QAAAAAAAAA9AAAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA9gAAAAAAAAD2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": "m.s"
					},
					"AwAAAPQAAAAAAAAA9QAAAAAAAAAAAAAA9QAAAAAAAAD2AAAAAAAAAAAAAAD2AAAAAAAAAPcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AAAAAAAAAD0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					2,
					"left_delete",
					null,
					"AgAAAPYAAAAAAAAA9gAAAAAAAAABAAAAc/UAAAAAAAAA9QAAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAA9wAAAAAAAAD3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": ",skeleton"
					},
					"CQAAAPUAAAAAAAAA9gAAAAAAAAAAAAAA9gAAAAAAAAD3AAAAAAAAAAAAAAD3AAAAAAAAAPgAAAAAAAAAAAAAAPgAAAAAAAAA+QAAAAAAAAAAAAAA+QAAAAAAAAD6AAAAAAAAAAAAAAD6AAAAAAAAAPsAAAAAAAAAAAAAAPsAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAAD9AAAAAAAAAAAAAAD9AAAAAAAAAP4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QAAAAAAAAD1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAP8AAAAAAAAAAAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"insert",
					{
						"characters": "\n\nimw"
					},
					"BQAAAAEBAAAAAAAAAgEAAAAAAAAAAAAAAgEAAAAAAAADAQAAAAAAAAAAAAADAQAAAAAAAAQBAAAAAAAAAAAAAAQBAAAAAAAABQEAAAAAAAAAAAAABQEAAAAAAAAGAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQEAAAAAAAABAQAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"left_delete",
					null,
					"AQAAAAUBAAAAAAAABQEAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAABgEAAAAAAAAGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "show"
					},
					"BAAAAAUBAAAAAAAABgEAAAAAAAAAAAAABgEAAAAAAAAHAQAAAAAAAAAAAAAHAQAAAAAAAAgBAAAAAAAAAAAAAAgBAAAAAAAACQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQEAAAAAAAAFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAkBAAAAAAAACwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQEAAAAAAAAJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAAoBAAAAAAAADAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgEAAAAAAAAKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": "output"
					},
					"BgAAAAsBAAAAAAAADAEAAAAAAAAAAAAADAEAAAAAAAANAQAAAAAAAAAAAAANAQAAAAAAAA4BAAAAAAAAAAAAAA4BAAAAAAAADwEAAAAAAAAAAAAADwEAAAAAAAAQAQAAAAAAAAAAAAAQAQAAAAAAABEBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwEAAAAAAAALAQAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"insert",
					{
						"characters": ",skeleton"
					},
					"CQAAABIBAAAAAAAAEwEAAAAAAAAAAAAAEwEAAAAAAAAUAQAAAAAAAAAAAAAUAQAAAAAAABUBAAAAAAAAAAAAABUBAAAAAAAAFgEAAAAAAAAAAAAAFgEAAAAAAAAXAQAAAAAAAAAAAAAXAQAAAAAAABgBAAAAAAAAAAAAABgBAAAAAAAAGQEAAAAAAAAAAAAAGQEAAAAAAAAaAQAAAAAAAAAAAAAaAQAAAAAAABsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgEAAAAAAAASAQAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABwBAAAAAAAAHQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHAEAAAAAAAAcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BAAAAAIBAAAAAAAAAwEAAAAAAAAAAAAAAwEAAAAAAAAEAQAAAAAAAAAAAAAEAQAAAAAAAAUBAAAAAAAAAAAAAAUBAAAAAAAABgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgEAAAAAAAACAQAAAAAAAAAAAAAAgHNA"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": " out"
					},
					"BAAAAAYBAAAAAAAABwEAAAAAAAAAAAAABwEAAAAAAAAIAQAAAAAAAAAAAAAIAQAAAAAAAAkBAAAAAAAAAAAAAAkBAAAAAAAACgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgEAAAAAAAAGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					206,
					1,
					"insert",
					{
						"characters": " =new"
					},
					"BQAAAAoBAAAAAAAACwEAAAAAAAAAAAAACwEAAAAAAAAMAQAAAAAAAAAAAAAMAQAAAAAAAA0BAAAAAAAAAAAAAA0BAAAAAAAADgEAAAAAAAAAAAAADgEAAAAAAAAPAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgEAAAAAAAAKAQAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": " Mat"
					},
					"BAAAAA8BAAAAAAAAEAEAAAAAAAAAAAAAEAEAAAAAAAARAQAAAAAAAAAAAAARAQAAAAAAABIBAAAAAAAAAAAAABIBAAAAAAAAEwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADwEAAAAAAAAPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABMBAAAAAAAAFQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwEAAAAAAAATAQAAAAAAAAAAAAAAAPC/"
				],
				[
					210,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABUBAAAAAAAAFgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQEAAAAAAAAVAQAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABYBAAAAAAAAFwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgEAAAAAAAAWAQAAAAAAAAAAAAAAAPC/"
				],
				[
					223,
					1,
					"paste",
					null,
					"AQAAABcBAAAAAAAANwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwEAAAAAAAAXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					2,
					"left_delete",
					null,
					"AgAAAC0BAAAAAAAALQEAAAAAAAADAAAAR1IyLAEAAAAAAAAsAQAAAAAAAAEAAABC",
					"AQAAAAAAAAABAAAALQEAAAAAAAAwAQAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					1,
					"insert",
					{
						"characters": "2BGR"
					},
					"BAAAADABAAAAAAAAMQEAAAAAAAAAAAAAMQEAAAAAAAAyAQAAAAAAAAAAAAAyAQAAAAAAADMBAAAAAAAAAAAAADMBAAAAAAAANAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAEAAAAAAAAwAQAAAAAAAAAAAAAAAPC/"
				],
				[
					240,
					1,
					"paste",
					null,
					"AQAAAC4AAAAAAAAAPAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgAAAAAAAAAuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAADwAAAAAAAAAPQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAAAAAAAAAA8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": "imshow,waitKey"
					},
					"DgAAAB8AAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACIAAAAAAAAAAAAAACIAAAAAAAAAIwAAAAAAAAAAAAAAIwAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJgAAAAAAAAAAAAAAJgAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAAqAAAAAAAAAAAAAAAqAAAAAAAAACsAAAAAAAAAAAAAACsAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAtAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					259,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAC0AAAAAAAAALgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQAAAAAAAAAtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					261,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHQBAAAAAAAAdQEAAAAAAAAAAAAAdQEAAAAAAAB3AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAEAAAAAAAB0AQAAAAAAAAAAAAAAQIFA"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAHMBAAAAAAAAdAEAAAAAAAAAAAAAdAEAAAAAAAB2AQAAAAAAAAAAAAB4AQAAAAAAAHgBAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAcwEAAAAAAABzAQAAAAAAAAAAAAAAADhA"
				],
				[
					265,
					1,
					"insert",
					{
						"characters": "wy"
					},
					"AgAAAHMBAAAAAAAAdAEAAAAAAAAAAAAAdAEAAAAAAAB1AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcwEAAAAAAABzAQAAAAAAAAAAAAAAADhA"
				],
				[
					266,
					1,
					"left_delete",
					null,
					"AQAAAHQBAAAAAAAAdAEAAAAAAAABAAAAeQ",
					"AQAAAAAAAAABAAAAdQEAAAAAAAB1AQAAAAAAAAAAAAAAAPC/"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": "aitKey"
					},
					"BgAAAHQBAAAAAAAAdQEAAAAAAAAAAAAAdQEAAAAAAAB2AQAAAAAAAAAAAAB2AQAAAAAAAHcBAAAAAAAAAAAAAHcBAAAAAAAAeAEAAAAAAAAAAAAAeAEAAAAAAAB5AQAAAAAAAAAAAAB5AQAAAAAAAHoBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAEAAAAAAAB0AQAAAAAAAAAAAAAAAPC/"
				],
				[
					268,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHoBAAAAAAAAfAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAegEAAAAAAAB6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					269,
					1,
					"insert",
					{
						"characters": "1000"
					},
					"BAAAAHsBAAAAAAAAfAEAAAAAAAAAAAAAfAEAAAAAAAB9AQAAAAAAAAAAAAB9AQAAAAAAAH4BAAAAAAAAAAAAAH4BAAAAAAAAfwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAewEAAAAAAAB7AQAAAAAAAAAAAAAAAPC/"
				],
				[
					271,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIABAAAAAAAAgQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAEAAAAAAACAAQAAAAAAAAAAAAAAAPC/"
				],
				[
					325,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACpAQAAICBpbXBvcnQgeyBmaWx0ZXIyRCxNYXQsaW1yZWFkLGltc2hvdyx3YWl0S2V5LENPTE9SX0JHUjJHUkFZLENPTE9SX0dSQVkyQkdSLGN2dENvbG9yLCBza2VsZXRvbml6YXRpb24gfSBmcm9tICdvcGVuY3YnOwoKCgogIGZ1bmN0aW9uIG1haW4oLi4uYXJncykgewoKbGV0IG09aW1yZWFkKCcuLi9hbi10cm9uaWNzL2ltYWdlcy9mbS80dHIuanBnJyk7CgpjdnRDb2xvcihtLCBtLCBDT0xPUl9CR1IyR1JBWSk7CgoKbGV0IHNrZWxldG9uPW5ldyBNYXQoKTsKc2tlbGV0b25pemF0aW9uKG0sc2tlbGV0b24pOwoKCmxldCBvdXQgPW5ldyBNYXQoKTsKY3Z0Q29sb3IobSwgbSwgQ09MT1JfR1JBWTJCR1IpOwoKaW1zaG93KCdvdXRwdXQnLHNrZWxldG9uKTsKICB3YWl0S2V5KDEwMDApOwogIH0KCgoKICBtYWluKC4uLnNjcmlwdEFyZ3Muc2xpY2UoMSkpOwoAAAAAAAAAALYBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQEAAAAAAAABAQAAAAAAAAAAAAAAAPC/"
				],
				[
					363,
					1,
					"left_delete",
					null,
					"AQAAAE4BAAAAAAAATgEAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAATwEAAAAAAABPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					1,
					"insert",
					{
						"characters": "skeleton"
					},
					"CAAAAE4BAAAAAAAATwEAAAAAAAAAAAAATwEAAAAAAABQAQAAAAAAAAAAAABQAQAAAAAAAFEBAAAAAAAAAAAAAFEBAAAAAAAAUgEAAAAAAAAAAAAAUgEAAAAAAABTAQAAAAAAAAAAAABTAQAAAAAAAFQBAAAAAAAAAAAAAFQBAAAAAAAAVQEAAAAAAAAAAAAAVQEAAAAAAABWAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgEAAAAAAABOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					366,
					1,
					"right_delete",
					null,
					"AQAAAFgBAAAAAAAAWAEAAAAAAAABAAAAbQ",
					"AQAAAAAAAAABAAAAWAEAAAAAAABYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					367,
					1,
					"insert",
					{
						"characters": "out"
					},
					"AwAAAFgBAAAAAAAAWQEAAAAAAAAAAAAAWQEAAAAAAABaAQAAAAAAAAAAAABaAQAAAAAAAFsBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAEAAAAAAABYAQAAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"paste",
					null,
					"AQAAAIgBAAAAAAAAiwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAEAAAAAAACIAQAAAAAAAAAAAAAAAPC/"
				],
				[
					383,
					1,
					"paste",
					null,
					"AgAAAIIBAAAAAAAAhQEAAAAAAAAAAAAAhQEAAAAAAACFAQAAAAAAAAsAAABza2VsZXRvdXRvbg",
					"AQAAAAAAAAABAAAAggEAAAAAAACNAQAAAAAAAAAAAAAAAPC/"
				],
				[
					407,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAO4AAAAAAAAA7wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gAAAAAAAADuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					409,
					1,
					"insert",
					{
						"characters": "invert"
					},
					"BgAAAO4AAAAAAAAA7wAAAAAAAAAAAAAA7wAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAPEAAAAAAAAAAAAAAPEAAAAAAAAA8gAAAAAAAAAAAAAA8gAAAAAAAADzAAAAAAAAAAAAAADzAAAAAAAAAPQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7gAAAAAAAADuAAAAAAAAAAAAAAAAAAAA"
				],
				[
					410,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPQAAAAAAAAA9gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AAAAAAAAAD0AAAAAAAAAAAAAAAAAPC/"
				],
				[
					411,
					1,
					"insert",
					{
						"characters": "m,"
					},
					"AgAAAPUAAAAAAAAA9gAAAAAAAAAAAAAA9gAAAAAAAAD3AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QAAAAAAAAD1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					412,
					1,
					"insert",
					{
						"characters": " m"
					},
					"AgAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD5AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wAAAAAAAAD3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					414,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gAAAAAAAAD6AAAAAAAAAAAAAAAAAPC/"
				],
				[
					421,
					1,
					"insert",
					{
						"characters": "invert,"
					},
					"BwAAABgAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAdAAAAAAAAAAAAAAAdAAAAAAAAAB4AAAAAAAAAAAAAAB4AAAAAAAAAHwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGAAAAAAAAAAYAAAAAAAAAAAAAAAAAPC/"
				],
				[
					422,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB8AAAAAAAAAIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwAAAAAAAAAfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					454,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADQAQAAaW1wb3J0IHsgZmlsdGVyMkQsIE1hdCwgaW52ZXJ0LCBpbXJlYWQsIGltc2hvdywgd2FpdEtleSwgQ09MT1JfQkdSMkdSQVksIENPTE9SX0dSQVkyQkdSLCBjdnRDb2xvciwgc2tlbGV0b25pemF0aW9uIH0gZnJvbSAnb3BlbmN2JzsKCmZ1bmN0aW9uIG1haW4oLi4uYXJncykgewogIGxldCBtID0gaW1yZWFkKCcuLi9hbi10cm9uaWNzL2ltYWdlcy9mbS80dHIuanBnJyk7CgogIGN2dENvbG9yKG0sIG0sIENPTE9SX0JHUjJHUkFZKTsKaW52ZXJ0KG0sIG0pOwoKICBsZXQgc2tlbGV0b24gPSBuZXcgTWF0KCk7CiAgc2tlbGV0b25pemF0aW9uKG0sIHNrZWxldG9uKTsKCiAgbGV0IG91dCA9IG5ldyBNYXQoKTsKICBjdnRDb2xvcihza2VsZXRvbiwgb3V0LCBDT0xPUl9HUkFZMkJHUik7CgogIGltc2hvdygnb3V0cHV0Jywgb3V0KTsKICB3YWl0S2V5KDEwMDApOwp9CgptYWluKC4uLnNjcmlwdEFyZ3Muc2xpY2UoMSkpOwoAAAAAAAAAANIBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAAAAAAAAACEAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "compile_commands.js",
			"settings":
			{
				"buffer_size": 5757,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"contents": "Searching 4293 files for \"\\balloca\\b\" (regex, case sensitive)\n\n~/Projects/plot-cv/data/qjs.functions.js:\n  164  }\n  165  \n  166: define('alloca', dlsym(RTLD_DEFAULT, 'alloca'), null, 'void *', 'long', 'void *');\n  167: export function alloca(size, arg1) {\n  168:   return call('alloca', size, arg1);\n  169  }\n  170  \n\n~/Projects/plot-cv/data/ffi.js:\n  959  }\n  960  \n  961: define('alloca', dlsym(RTLD_DEFAULT, 'alloca'), null, 'void *', 'long', 'void *');\n  962: export function alloca(size, arg1) {\n  963:   return call('alloca', size, arg1);\n  964  }\n  965  \n\n~/Projects/plot-cv/data/aio_passwd.functions.js:\n  454  }\n  455  \n  456: define('alloca', dlsym(RTLD_DEFAULT, 'alloca'), null, 'void *', 'long', 'void *');\n  457: export function alloca(size, arg1) {\n  458:   return call('alloca', size, arg1);\n  459  }\n  460  \n\n~/Projects/plot-cv/data/test-websocket.functions.js:\n  424  }\n  425  \n  426: define('alloca', dlsym(RTLD_DEFAULT, 'alloca'), null, 'void *', 'long', 'void *');\n  427: export function alloca(size, arg1) {\n  428:   return call('alloca', size, arg1);\n  429  }\n  430  \n\n~/Projects/plot-cv/data/mplab.functions.js:\n 1139  }\n 1140  \n 1141: define('alloca', dlsym(RTLD_DEFAULT, 'alloca'), null, 'void *', 'long', 'void *');\n 1142: export function alloca(size, arg1) {\n 1143:   return call('alloca', size, arg1);\n 1144  }\n 1145  \n\n~/Projects/plot-cv/data/ar-wrap.functions.js:\n 1632  }\n 1633  \n 1634: define('alloca', dlsym(RTLD_DEFAULT, 'alloca'), null, 'void *', 'long', 'void *');\n 1635: export function alloca(size, arg1) {\n 1636:   return call('alloca', size, arg1);\n 1637  }\n 1638  \n\n~/Projects/plot-cv/data/getdents.functions.js:\n  959  }\n  960  \n  961: define('alloca', dlsym(RTLD_DEFAULT, 'alloca'), null, 'void *', 'long', 'void *');\n  962: export function alloca(size, arg1) {\n  963:   return call('alloca', size, arg1);\n  964  }\n  965  \n\n~/Projects/plot-cv/quickjs/libregexp.c:\n 2436    for(i = 0; i < s->capture_count * 2; i++) capture[i] = NULL;\n 2437    alloca_size = s->stack_size_max * sizeof(stack_buf[0]);\n 2438:   stack_buf = alloca(alloca_size);\n 2439    ret = lre_exec_backtrack(s, capture, stack_buf, 0, bc_buf + RE_HEADER_LEN, cbuf + (cindex << cbuf_type), FALSE);\n 2440    lre_realloc(s->opaque, s->state_stack, 0);\n\n~/Projects/plot-cv/quickjs/quickjs.c:\n 5144      /* XXX: could add the function on the stack for debug */\n 5145      if (unlikely(argc < s->length)) {\n 5146:         arg_buf = alloca(sizeof(arg_buf[0]) * s->length);\n 5147          for(i = 0; i < argc; i++)\n 5148              arg_buf[i] = argv[i];\n ....\n 16198      if (unlikely(argc < arg_count)) {\n 16199          /* ensure that at least argc_count arguments are readable */\n 16200:         arg_buf = alloca(sizeof(arg_buf[0]) * arg_count);\n 16201          for(i = 0; i < argc; i++)\n 16202              arg_buf[i] = argv[i];\n .....\n 16309      if (js_check_stack_overflow(ctx->rt, sizeof(JSValue) * arg_count))\n 16310          return JS_ThrowStackOverflow(ctx);\n 16311:     arg_buf = alloca(sizeof(JSValue) * arg_count);\n 16312      for(i = 0; i < bf->argc; i++) {\n 16313          arg_buf[i] = bf->argv[i];\n .....\n 16461      var_refs = p->u.func.var_refs;\n 16462  \n 16463:     local_buf = alloca(alloca_size);\n 16464      if (unlikely(arg_allocated_size)) {\n 16465          int n = min_int(argc, b->arg_count);\n\n~/Projects/plot-cv/quickjs/poll.c:\n   29  #endif\n   30  \n   31: /*#include <alloca.h>*/\n   32  \n   33  #include <sys/types.h>\n\n~/Projects/plot-cv/quickjs/qjs-net/lib/poll.c:\n   29  #endif\n   30  \n   31: /*#include <alloca.h>*/\n   32  \n   33  #include <sys/types.h>\n\n~/Projects/plot-cv/quickjs/qjs-net/lib/js-utils.c:\n 1088    /* XXX: could add the function on the stack for debug */\n 1089    if(unlikely(argc < ccr->length)) {\n 1090:     arg_buf = alloca(sizeof(arg_buf[0]) * ccr->length);\n 1091      for(i = 0; i < argc; i++)\n 1092        arg_buf[i] = argv[i];\n\n~/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c:\n 1071  \n 1072    name = js_object_classname(ctx, closure->proto);\n 1073:   new_name = alloca(strlen(name) + sizeof(\"Immutable\"));\n 1074  \n 1075    str_copy(&new_name[str_copy(new_name, \"Immutable\")], name);\n\n~/Projects/plot-cv/quickjs/qjs-modules/src/utils.c:\n 3045    /* XXX: could add the function on the stack for debug */\n 3046    if(unlikely(argc < ccr->length)) {\n 3047:     arg_buf = alloca(sizeof(arg_buf[0]) * ccr->length);\n 3048      for(i = 0; i < argc; i++)\n 3049        arg_buf[i] = argv[i];\n\n~/Projects/plot-cv/quickjs/qjs-modules/src/ringbuffer.c:\n   83    if(r->head < r->tail) {\n   84      size_t n = r->size - r->tail;\n   85:     void* x = alloca(r->head);\n   86      memcpy(x, r->data, r->head);\n   87      memmove(r->data, &r->data[r->tail], n);\n\n~/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c:\n   11  #include <signal.h>\n   12  #ifdef HAVE_ALLOCA_H\n   13: #include <alloca.h>\n   14  #endif\n   15  /*#include <sys/poll.h>*/\n\n40 matches across 16 files\n\n\nSearching 1921 files for \"\\balloca\\b\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/libregexp.c:\n 2436    for(i = 0; i < s->capture_count * 2; i++) capture[i] = NULL;\n 2437    alloca_size = s->stack_size_max * sizeof(stack_buf[0]);\n 2438:   stack_buf = alloca(alloca_size);\n 2439    ret = lre_exec_backtrack(s, capture, stack_buf, 0, bc_buf + RE_HEADER_LEN, cbuf + (cindex << cbuf_type), FALSE);\n 2440    lre_realloc(s->opaque, s->state_stack, 0);\n\n~/Projects/plot-cv/quickjs/quickjs.c:\n 5144      /* XXX: could add the function on the stack for debug */\n 5145      if (unlikely(argc < s->length)) {\n 5146:         arg_buf = alloca(sizeof(arg_buf[0]) * s->length);\n 5147          for(i = 0; i < argc; i++)\n 5148              arg_buf[i] = argv[i];\n ....\n 16198      if (unlikely(argc < arg_count)) {\n 16199          /* ensure that at least argc_count arguments are readable */\n 16200:         arg_buf = alloca(sizeof(arg_buf[0]) * arg_count);\n 16201          for(i = 0; i < argc; i++)\n 16202              arg_buf[i] = argv[i];\n .....\n 16309      if (js_check_stack_overflow(ctx->rt, sizeof(JSValue) * arg_count))\n 16310          return JS_ThrowStackOverflow(ctx);\n 16311:     arg_buf = alloca(sizeof(JSValue) * arg_count);\n 16312      for(i = 0; i < bf->argc; i++) {\n 16313          arg_buf[i] = bf->argv[i];\n .....\n 16461      var_refs = p->u.func.var_refs;\n 16462  \n 16463:     local_buf = alloca(alloca_size);\n 16464      if (unlikely(arg_allocated_size)) {\n 16465          int n = min_int(argc, b->arg_count);\n\n~/Projects/plot-cv/quickjs/poll.c:\n   29  #endif\n   30  \n   31: /*#include <alloca.h>*/\n   32  \n   33  #include <sys/types.h>\n\n~/Projects/plot-cv/quickjs/qjs-net/lib/poll.c:\n   29  #endif\n   30  \n   31: /*#include <alloca.h>*/\n   32  \n   33  #include <sys/types.h>\n\n~/Projects/plot-cv/quickjs/qjs-net/lib/js-utils.c:\n 1088    /* XXX: could add the function on the stack for debug */\n 1089    if(unlikely(argc < ccr->length)) {\n 1090:     arg_buf = alloca(sizeof(arg_buf[0]) * ccr->length);\n 1091      for(i = 0; i < argc; i++)\n 1092        arg_buf[i] = argv[i];\n\n~/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c:\n 1071  \n 1072    name = js_object_classname(ctx, closure->proto);\n 1073:   new_name = alloca(strlen(name) + sizeof(\"Immutable\"));\n 1074  \n 1075    str_copy(&new_name[str_copy(new_name, \"Immutable\")], name);\n\n~/Projects/plot-cv/quickjs/qjs-modules/src/utils.c:\n 3045    /* XXX: could add the function on the stack for debug */\n 3046    if(unlikely(argc < ccr->length)) {\n 3047:     arg_buf = alloca(sizeof(arg_buf[0]) * ccr->length);\n 3048      for(i = 0; i < argc; i++)\n 3049        arg_buf[i] = argv[i];\n\n~/Projects/plot-cv/quickjs/qjs-modules/src/ringbuffer.c:\n   83    if(r->head < r->tail) {\n   84      size_t n = r->size - r->tail;\n   85:     void* x = alloca(r->head);\n   86      memcpy(x, r->data, r->head);\n   87      memmove(r->data, &r->data[r->tail], n);\n\n~/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c:\n   11  #include <signal.h>\n   12  #ifdef HAVE_ALLOCA_H\n   13: #include <alloca.h>\n   14  #endif\n   15  /*#include <sys/poll.h>*/\n\n12 matches across 9 files\n\n\nSearching 1921 files for \"\\balloca\\.h\\b\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/poll.c:\n   29  #endif\n   30  \n   31: /*#include <alloca.h>*/\n   32  \n   33  #include <sys/types.h>\n\n~/Projects/plot-cv/quickjs/qjs-net/lib/poll.c:\n   29  #endif\n   30  \n   31: /*#include <alloca.h>*/\n   32  \n   33  #include <sys/types.h>\n\n~/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c:\n   11  #include <signal.h>\n   12  #ifdef HAVE_ALLOCA_H\n   13: #include <alloca.h>\n   14  #endif\n   15  /*#include <sys/poll.h>*/\n\n3 matches across 3 files\n\n\nSearching 1921 files for \"\\balloca\\b\" (regex, case sensitive)\n\n~/Projects/plot-cv/quickjs/libregexp.c:\n 2436    for(i = 0; i < s->capture_count * 2; i++) capture[i] = NULL;\n 2437    alloca_size = s->stack_size_max * sizeof(stack_buf[0]);\n 2438:   stack_buf = alloca(alloca_size);\n 2439    ret = lre_exec_backtrack(s, capture, stack_buf, 0, bc_buf + RE_HEADER_LEN, cbuf + (cindex << cbuf_type), FALSE);\n 2440    lre_realloc(s->opaque, s->state_stack, 0);\n\n~/Projects/plot-cv/quickjs/quickjs.c:\n 5144      /* XXX: could add the function on the stack for debug */\n 5145      if (unlikely(argc < s->length)) {\n 5146:         arg_buf = alloca(sizeof(arg_buf[0]) * s->length);\n 5147          for(i = 0; i < argc; i++)\n 5148              arg_buf[i] = argv[i];\n ....\n 16198      if (unlikely(argc < arg_count)) {\n 16199          /* ensure that at least argc_count arguments are readable */\n 16200:         arg_buf = alloca(sizeof(arg_buf[0]) * arg_count);\n 16201          for(i = 0; i < argc; i++)\n 16202              arg_buf[i] = argv[i];\n .....\n 16309      if (js_check_stack_overflow(ctx->rt, sizeof(JSValue) * arg_count))\n 16310          return JS_ThrowStackOverflow(ctx);\n 16311:     arg_buf = alloca(sizeof(JSValue) * arg_count);\n 16312      for(i = 0; i < bf->argc; i++) {\n 16313          arg_buf[i] = bf->argv[i];\n .....\n 16461      var_refs = p->u.func.var_refs;\n 16462  \n 16463:     local_buf = alloca(alloca_size);\n 16464      if (unlikely(arg_allocated_size)) {\n 16465          int n = min_int(argc, b->arg_count);\n\n~/Projects/plot-cv/quickjs/poll.c:\n   29  #endif\n   30  \n   31: /*#include <alloca.h>*/\n   32  \n   33  #include <sys/types.h>\n\n~/Projects/plot-cv/quickjs/qjs-net/lib/poll.c:\n   29  #endif\n   30  \n   31: /*#include <alloca.h>*/\n   32  \n   33  #include <sys/types.h>\n\n~/Projects/plot-cv/quickjs/qjs-net/lib/js-utils.c:\n 1088    /* XXX: could add the function on the stack for debug */\n 1089    if(unlikely(argc < ccr->length)) {\n 1090:     arg_buf = alloca(sizeof(arg_buf[0]) * ccr->length);\n 1091      for(i = 0; i < argc; i++)\n 1092        arg_buf[i] = argv[i];\n\n~/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c:\n 1071  \n 1072    name = js_object_classname(ctx, closure->proto);\n 1073:   new_name = alloca(strlen(name) + sizeof(\"Immutable\"));\n 1074  \n 1075    str_copy(&new_name[str_copy(new_name, \"Immutable\")], name);\n\n~/Projects/plot-cv/quickjs/qjs-modules/src/utils.c:\n 3045    /* XXX: could add the function on the stack for debug */\n 3046    if(unlikely(argc < ccr->length)) {\n 3047:     arg_buf = alloca(sizeof(arg_buf[0]) * ccr->length);\n 3048      for(i = 0; i < argc; i++)\n 3049        arg_buf[i] = argv[i];\n\n~/Projects/plot-cv/quickjs/qjs-modules/src/ringbuffer.c:\n   83    if(r->head < r->tail) {\n   84      size_t n = r->size - r->tail;\n   85:     void* x = alloca(r->head);\n   86      memcpy(x, r->data, r->head);\n   87      memmove(r->data, &r->data[r->tail], n);\n\n~/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c:\n   11  #include <signal.h>\n   12  #ifdef HAVE_ALLOCA_H\n   13: #include <alloca.h>\n   14  #endif\n   15  /*#include <sys/poll.h>*/\n\n12 matches across 9 files\n",
			"settings":
			{
				"buffer_size": 11685,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "quickjs/qjs-modules/src/ringbuffer.c",
			"settings":
			{
				"buffer_size": 2688,
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs/libregexp.c",
			"settings":
			{
				"buffer_size": 68667,
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs/quickjs.c",
			"settings":
			{
				"buffer_size": 1786229,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "qjs-opencv/js/cvUtils.js",
			"settings":
			{
				"buffer_size": 6031,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					11,
					1,
					"paste",
					null,
					"AQAAAHUVAAAAAAAAqBYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1FQAAAAAAAHUVAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "L90"
					},
					"BAAAAIYVAAAAAAAAhxUAAAAAAAAAAAAAhxUAAAAAAACHFQAAAAAAAAwAAABsb29rdXBPYmplY3SHFQAAAAAAAIgVAAAAAAAAAAAAAIgVAAAAAAAAiRUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGFQAAAAAAAJIVAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					2,
					"left_delete",
					null,
					"AgAAAIgVAAAAAAAAiBUAAAAAAAABAAAAMIcVAAAAAAAAhxUAAAAAAAABAAAAOQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJFQAAAAAAAIkVAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAIcVAAAAAAAAiBUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHFQAAAAAAAIcVAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"left_delete",
					null,
					"AQAAAIcVAAAAAAAAhxUAAAAAAAABAAAAcA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIFQAAAAAAAIgVAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "ookup"
					},
					"BQAAAIcVAAAAAAAAiBUAAAAAAAAAAAAAiBUAAAAAAACJFQAAAAAAAAAAAACJFQAAAAAAAIoVAAAAAAAAAAAAAIoVAAAAAAAAixUAAAAAAAAAAAAAixUAAAAAAACMFQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHFQAAAAAAAIcVAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJAVAAAAAAAAkRUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQFQAAAAAAAJAVAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJEVAAAAAAAAkhUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRFQAAAAAAAJEVAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"cut",
					null,
					"AQAAAJUVAAAAAAAAlRUAAAAAAAAeAAAALCBpbnN0YW5jZSA9IHt9LCBoYW5kbGVycyA9IHt9",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVFQAAAAAAALMVAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " ..."
					},
					"BAAAACMWAAAAAAAAJBYAAAAAAAAAAAAAJBYAAAAAAAAlFgAAAAAAAAAAAAAlFgAAAAAAACYWAAAAAAAAAAAAACYWAAAAAAAAJxYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjFgAAAAAAACMWAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACcWAAAAAAAAKRYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnFgAAAAAAACcWAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACgWAAAAAAAAKRYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoFgAAAAAAACgWAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"right_delete",
					null,
					"AQAAACkWAAAAAAAAKRYAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApFgAAAAAAACkWAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"left_delete",
					null,
					"AQAAACgWAAAAAAAAKBYAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApFgAAAAAAACkWAAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAACgWAAAAAAAAKhYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoFgAAAAAAACgWAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACkWAAAAAAAAKhYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApFgAAAAAAACkWAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					2,
					"right_delete",
					null,
					"AgAAACoWAAAAAAAAKhYAAAAAAAABAAAAfSoWAAAAAAAAKhYAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqFgAAAAAAACoWAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " })"
					},
					"AwAAAH0WAAAAAAAAfhYAAAAAAAAAAAAAfhYAAAAAAAB/FgAAAAAAAAAAAAB/FgAAAAAAAIAWAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9FgAAAAAAAH0WAAAAAAAAAAAAAACAZkA"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "set"
					},
					"AwAAACgWAAAAAAAAKRYAAAAAAAAAAAAAKRYAAAAAAAAqFgAAAAAAAAAAAAAqFgAAAAAAACsWAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoFgAAAAAAACgWAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAACsWAAAAAAAALBYAAAAAAAAAAAAALBYAAAAAAAAtFgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArFgAAAAAAACsWAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC0WAAAAAAAALhYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtFgAAAAAAAC0WAAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "er"
					},
					"AgAAAJUVAAAAAAAAlhUAAAAAAAAAAAAAlhUAAAAAAACXFQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVFQAAAAAAAJUVAAAAAAAAAAAAAAAA8L8"
				],
				[
					63,
					2,
					"left_delete",
					null,
					"AgAAAJYVAAAAAAAAlhUAAAAAAAABAAAAcpUVAAAAAAAAlRUAAAAAAAABAAAAZQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXFQAAAAAAAJcVAAAAAAAAAAAAAAAA8L8"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": "ter"
					},
					"AwAAAJUVAAAAAAAAlhUAAAAAAAAAAAAAlhUAAAAAAACXFQAAAAAAAAAAAACXFQAAAAAAAJgVAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVFQAAAAAAAJUVAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "ter"
					},
					"AwAAAJAVAAAAAAAAkRUAAAAAAAAAAAAAkRUAAAAAAACSFQAAAAAAAAAAAACSFQAAAAAAAJMVAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQFQAAAAAAAJAVAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAIsWAAAAAAAAjBYAAAAAAAAAAAAAjBYAAAAAAACNFgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLFgAAAAAAAIsWAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI0WAAAAAAAAjhYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNFgAAAAAAAI0WAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAI4WAAAAAAAAkBYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOFgAAAAAAAI4WAAAAAAAAAAAAAAAA8L8"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJEWAAAAAAAAkhYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRFgAAAAAAAJEWAAAAAAAAAAAAAAAA8L8"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAOIVAAAAAAAA4xUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiFQAAAAAAAOIVAAAAAAAAAAAAAAAAUkA"
				],
				[
					84,
					1,
					"left_delete",
					null,
					"AQAAAOIVAAAAAAAA4hUAAAAAAAABAAAAKA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjFQAAAAAAAOMVAAAAAAAAAAAAAAAA8L8"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "...(get"
					},
					"BwAAAOIVAAAAAAAA4xUAAAAAAAAAAAAA4xUAAAAAAADkFQAAAAAAAAAAAADkFQAAAAAAAOUVAAAAAAAAAAAAAOUVAAAAAAAA5hUAAAAAAAAAAAAA5hUAAAAAAADnFQAAAAAAAAAAAADnFQAAAAAAAOgVAAAAAAAAAAAAAOgVAAAAAAAA6RUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiFQAAAAAAAOIVAAAAAAAAAAAAAAAA8L8"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "ter"
					},
					"AwAAAOkVAAAAAAAA6hUAAAAAAAAAAAAA6hUAAAAAAADrFQAAAAAAAAAAAADrFQAAAAAAAOwVAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpFQAAAAAAAOkVAAAAAAAAAAAAAAAA8L8"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": " =?"
					},
					"AwAAAOwVAAAAAAAA7RUAAAAAAAAAAAAA7RUAAAAAAADuFQAAAAAAAAAAAADuFQAAAAAAAO8VAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsFQAAAAAAAOwVAAAAAAAAAAAAAAAA8L8"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO8VAAAAAAAA8BUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvFQAAAAAAAO8VAAAAAAAAAAAAAAAA8L8"
				],
				[
					89,
					3,
					"left_delete",
					null,
					"AwAAAO8VAAAAAAAA7xUAAAAAAAABAAAAIO4VAAAAAAAA7hUAAAAAAAABAAAAP+0VAAAAAAAA7RUAAAAAAAABAAAAPQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwFQAAAAAAAPAVAAAAAAAAAAAAAAAA8L8"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAO0VAAAAAAAA7hUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtFQAAAAAAAO0VAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": " {"
					},
					"AgAAAO4VAAAAAAAA7xUAAAAAAAAAAAAA7xUAAAAAAADwFQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuFQAAAAAAAO4VAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "  "
					},
					"AgAAAPAVAAAAAAAA8RUAAAAAAAAAAAAA8RUAAAAAAADyFQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwFQAAAAAAAPAVAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAADgWAAAAAAAAORYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4FgAAAAAAADgWAAAAAAAAAAAAAAAA8L8"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAADkWAAAAAAAAOhYAAAAAAAAAAAAAOhYAAAAAAAA7FgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5FgAAAAAAADkWAAAAAAAAAAAAAAAA8L8"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " {})"
					},
					"BAAAADsWAAAAAAAAPBYAAAAAAAAAAAAAPBYAAAAAAAA9FgAAAAAAAAAAAAA9FgAAAAAAAD4WAAAAAAAAAAAAAD4WAAAAAAAAPxYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7FgAAAAAAADsWAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "ter"
					},
					"AwAAAEgWAAAAAAAASRYAAAAAAAAAAAAASRYAAAAAAABKFgAAAAAAAAAAAABKFgAAAAAAAEsWAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIFgAAAAAAAEgWAAAAAAAAAAAAAAAA8L8"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "setter(prop"
					},
					"CwAAAHkWAAAAAAAAehYAAAAAAAAAAAAAehYAAAAAAAB7FgAAAAAAAAAAAAB7FgAAAAAAAHwWAAAAAAAAAAAAAHwWAAAAAAAAfRYAAAAAAAAAAAAAfRYAAAAAAAB+FgAAAAAAAAAAAAB+FgAAAAAAAH8WAAAAAAAAAAAAAH8WAAAAAAAAgBYAAAAAAAAAAAAAgBYAAAAAAACBFgAAAAAAAAAAAACBFgAAAAAAAIIWAAAAAAAAAAAAAIIWAAAAAAAAgxYAAAAAAAAAAAAAgxYAAAAAAACEFgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5FgAAAAAAAHkWAAAAAAAAAAAAAAAAWEA"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIQWAAAAAAAAhRYAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEFgAAAAAAAIQWAAAAAAAAAAAAAAAA8L8"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": " value);"
					},
					"CAAAAIUWAAAAAAAAhhYAAAAAAAAAAAAAhhYAAAAAAACHFgAAAAAAAAAAAACHFgAAAAAAAIgWAAAAAAAAAAAAAIgWAAAAAAAAiRYAAAAAAAAAAAAAiRYAAAAAAACKFgAAAAAAAAAAAACKFgAAAAAAAIsWAAAAAAAAAAAAAIsWAAAAAAAAjBYAAAAAAAAAAAAAjBYAAAAAAACNFgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACFFgAAAAAAAIUWAAAAAAAAAAAAAAAA8L8"
				],
				[
					113,
					1,
					"right_delete",
					null,
					"AQAAAI0WAAAAAAAAjRYAAAAAAAAiAAAAZ2V0c2V0KG51bWVyaWNJbmRleChwcm9wKSwgdmFsdWUpOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNFgAAAAAAAK8WAAAAAAAA////////738"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "getter"
					},
					"BwAAAA4WAAAAAAAADxYAAAAAAAAAAAAADxYAAAAAAAAPFgAAAAAAAA0AAAByZXR1cm4gZ2V0c2V0DxYAAAAAAAAQFgAAAAAAAAAAAAAQFgAAAAAAABEWAAAAAAAAAAAAABEWAAAAAAAAEhYAAAAAAAAAAAAAEhYAAAAAAAATFgAAAAAAAAAAAAATFgAAAAAAABQWAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAOFgAAAAAAABsWAAAAAAAAAAAAAAAA8L8"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "prop"
					},
					"BQAAABUWAAAAAAAAFhYAAAAAAAAAAAAAFhYAAAAAAAAWFgAAAAAAABIAAABudW1lcmljSW5kZXgocHJvcCkWFgAAAAAAABcWAAAAAAAAAAAAABcWAAAAAAAAGBYAAAAAAAAAAAAAGBYAAAAAAAAZFgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVFgAAAAAAACcWAAAAAAAAAAAAAAAA8L8"
				],
				[
					136,
					1,
					"left_delete",
					null,
					"AQAAAMUVAAAAAAAAxRUAAAAAAAABAAAAdw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGFQAAAAAAAMYVAAAAAAAAAAAAAAAA8L8"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "W"
					},
					"AQAAAMUVAAAAAAAAxhUAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADFFQAAAAAAAMUVAAAAAAAAAAAAAAAA8L8"
				],
				[
					141,
					1,
					"cut",
					null,
					"AQAAAMUVAAAAAAAAxRUAAAAAAAAEAAAAV2Vhaw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADJFQAAAAAAAMUVAAAAAAAAAAAAAAAASEA"
				],
				[
					177,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAACUFgAAZXhwb3J0IGNvbnN0IE1vZHVsbyA9IChhLCBiKSA9PiAoKGEgJSBiKSArIGIpICUgYjsKCmV4cG9ydCBjb25zdCBXZWFrTWFwcGVyID0gKGNyZWF0ZUZuLCBtYXAgPSBuZXcgV2Vha01hcCgpLCBoaXRGbikgPT4gewogIGxldCBzZWxmID0gZnVuY3Rpb24ob2JqLCAuLi5hcmdzKSB7CiAgICBsZXQgcmV0OwogICAgaWYobWFwLmhhcyhvYmopKSB7CiAgICAgIHJldCA9IG1hcC5nZXQob2JqKTsKICAgICAgaWYodHlwZW9mIGhpdEZuID09ICdmdW5jdGlvbicpIGhpdEZuKG9iaiwgcmV0KTsKICAgIH0gZWxzZSB7CiAgICAgIHJldCA9IGNyZWF0ZUZuKG9iaiwgLi4uYXJncyk7CiAgICAgIC8vaWYocmV0ICE9PSB1bmRlZmluZWQpCiAgICAgIG1hcC5zZXQob2JqLCByZXQpOwogICAgfQogICAgcmV0dXJuIHJldDsKICB9OwogIHNlbGYuc2V0ID0gKGssIHYpID0+IG1hcC5zZXQoaywgdik7CiAgc2VsZi5nZXQgPSBrID0+IG1hcC5nZXQoayk7CiAgc2VsZi5tYXAgPSBtYXA7CiAgcmV0dXJuIHNlbGY7Cn07CgpleHBvcnQgZnVuY3Rpb24gV2Vha0Fzc2lnbiguLi5hcmdzKSB7CiAgbGV0IG9iaiA9IGFyZ3Muc2hpZnQoKTsKICBhcmdzLmZvckVhY2gob3RoZXIgPT4gewogICAgZm9yKGxldCBrZXkgaW4gb3RoZXIpIHsKICAgICAgaWYob2JqW2tleV0gPT09IHVuZGVmaW5lZCAmJiBvdGhlcltrZXldICE9PSB1bmRlZmluZWQpIG9ialtrZXldID0gb3RoZXJba2V5XTsKICAgIH0KICB9KTsKICByZXR1cm4gb2JqOwp9CgpleHBvcnQgZnVuY3Rpb24qIEdldE1ldGhvZE5hbWVzKG9iaiwgZGVwdGggPSAxLCBzdGFydCA9IDApIHsKICBjb25zdCBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMob2JqKTsKICBmb3IobGV0IG5hbWUgaW4gZGVzYykgewogICAgaWYoJ3ZhbHVlJyBpbiBkZXNjW25hbWVdKSBpZiAodHlwZW9mIGRlc2NbbmFtZV0udmFsdWUgPT0gJ2Z1bmN0aW9uJykgeWllbGQgbmFtZTsKICB9CiAgLy8gIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG9iaikuZmlsdGVyKG5hbWUgPT4gdHlwZW9mIG9ialtuYW1lXSA9PSAnZnVuY3Rpb24nKTsKfQoKZXhwb3J0IGNvbnN0IEJpbmRNZXRob2RzID0gKG9iaiwgbWV0aG9kcykgPT4gQmluZE1ldGhvZHNUbyh7fSwgb2JqLCBtZXRob2RzIHx8IG9iaik7CgpleHBvcnQgZnVuY3Rpb24gQmluZE1ldGhvZHNUbyhkZXN0LCBvYmosIG1ldGhvZHMpIHsKICBpZihBcnJheS5pc0FycmF5KG1ldGhvZHMpKSB7CiAgICBmb3IobGV0IG5hbWUgb2YgbWV0aG9kcykgaWYodHlwZW9mIG9ialtuYW1lXSA9PSAnZnVuY3Rpb24nKSBkZXN0W25hbWVdID0gb2JqW25hbWVdLmJpbmQob2JqKTsKICAgIHJldHVybiBkZXN0OwogIH0KICBsZXQgbmFtZXMgPSBbLi4uR2V0TWV0aG9kTmFtZXMobWV0aG9kcyldOwoKICBmb3IobGV0IG5hbWUgb2YgbmFtZXMpIGlmKHR5cGVvZiBtZXRob2RzW25hbWVdID09ICdmdW5jdGlvbicpIGRlc3RbbmFtZV0gPSBtZXRob2RzW25hbWVdLmJpbmQob2JqKTsKICByZXR1cm4gZGVzdDsKfQoKZXhwb3J0IGZ1bmN0aW9uIEZpbmRLZXkob2JqLCBwcmVkLCB0aGlzVmFsKSB7CiAgbGV0IGZuID0gdHlwZW9mIHByZWQgPT0gJ2Z1bmN0aW9uJyA/IHZhbHVlIDogdiA9PiB2ID09PSBwcmVkOwogIGZvcihsZXQgayBpbiBvYmopIGlmKGZuLmNhbGwodGhpc1ZhbCwgb2JqW2tdLCBrKSkgcmV0dXJuIGs7Cn0KCmV4cG9ydCBjb25zdCBEZWZpbmUgPSAob2JqLCAuLi5hcmdzKSA9PiB7CiAgaWYodHlwZW9mIGFyZ3NbMF0gPT0gJ29iamVjdCcpIHsKICAgIGNvbnN0IFthcmcsIG92ZXJ3cml0ZSA9IHRydWVdID0gYXJnczsKICAgIGxldCBhZGVjbCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKGFyZyk7CiAgICBsZXQgb2RlY2wgPSB7fTsKICAgIGZvcihsZXQgcHJvcCBpbiBhZGVjbCkgewogICAgICBpZihwcm9wIGluIG9iaikgewogICAgICAgIGlmKCFvdmVyd3JpdGUpIGNvbnRpbnVlOwogICAgICAgIGVsc2UgZGVsZXRlIG9ialtwcm9wXTsKICAgICAgfQogICAgICBpZihPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwgcHJvcCkpIGRlbGV0ZSBvZGVjbFtwcm9wXTsKICAgICAgZWxzZQogICAgICAgIG9kZWNsW3Byb3BdID0gewogICAgICAgICAgLi4uYWRlY2xbcHJvcF0sCiAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSwKICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgICAgICAgIHdyaXRlYWJsZTogdHJ1ZQogICAgICAgIH07CiAgICB9CiAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhvYmosIG9kZWNsKTsKICAgIHJldHVybiBvYmo7CiAgfQogIGNvbnN0IFtrZXksIHZhbHVlLCBlbnVtZXJhYmxlID0gZmFsc2VdID0gYXJnczsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsKICAgIGVudW1lcmFibGUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB3cml0YWJsZTogdHJ1ZSwKICAgIHZhbHVlCiAgfSk7CiAgcmV0dXJuIG9iajsKfTsKCmV4cG9ydCBjb25zdCBPbmNlID0gKGZuLCB0aGlzQXJnLCBtZW1vRm4pID0+IHsKICBsZXQgcmFuID0gZmFsc2U7CiAgbGV0IHJldDsKCiAgcmV0dXJuIGZ1bmN0aW9uKC4uLmFyZ3MpIHsKICAgIGlmKCFyYW4pIHsKICAgICAgcmFuID0gdHJ1ZTsKICAgICAgcmV0ID0gZm4uY2FsbCh0aGlzQXJnIHx8IHRoaXMsIC4uLmFyZ3MpOwogICAgfSBlbHNlIGlmKHR5cGVvZiBtZW1vRm4gPT0gJ2Z1bmN0aW9uJykgewogICAgICByZXQgPSBtZW1vRm4ocmV0KTsKICAgIH0KICAgIHJldHVybiByZXQ7CiAgfTsKfTsKCmV4cG9ydCBjb25zdCBHZXRPcHQgPSAob3B0aW9ucyA9IHt9LCBhcmdzKSA9PiB7CiAgbGV0IHNob3J0LCBsb25nOwogIGxldCByZXN1bHQgPSB7fTsKICBsZXQgcG9zaXRpb25hbCA9IChyZXN1bHRbJ0AnXSA9IFtdKTsKICBpZighKG9wdGlvbnMgaW5zdGFuY2VvZiBBcnJheSkpIG9wdGlvbnMgPSBPYmplY3QuZW50cmllcyhvcHRpb25zKTsKICBjb25zdCBmaW5kT3B0ID0gYXJnID0+IG9wdGlvbnMuZmluZCgoW29wdG5hbWUsIG9wdGlvbl0pID0+IChBcnJheS5pc0FycmF5KG9wdGlvbikgPyBvcHRpb24uaW5kZXhPZihhcmcpICE9IC0xIDogZmFsc2UpIHx8IGFyZyA9PSBvcHRuYW1lKTsKICBsZXQgWywgcGFyYW1zXSA9IG9wdGlvbnMuZmluZChvcHQgPT4gb3B0WzBdID09ICdAJykgfHwgW107CiAgaWYodHlwZW9mIHBhcmFtcyA9PSAnc3RyaW5nJykgcGFyYW1zID0gcGFyYW1zLnNwbGl0KCcsJyk7CiAgZm9yKGxldCBpID0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHsKICAgIGNvbnN0IGFyZyA9IGFyZ3NbaV07CiAgICBsZXQgb3B0OwogICAgaWYoYXJnWzBdID09ICctJykgewogICAgICBsZXQgbmFtZSwgdmFsdWUsIHN0YXJ0LCBlbmQ7CiAgICAgIGlmKGFyZ1sxXSA9PSAnLScpIGxvbmcgPSB0cnVlOwogICAgICBlbHNlIHNob3J0ID0gdHJ1ZTsKICAgICAgc3RhcnQgPSBzaG9ydCA/IDEgOiAyOwogICAgICBpZihzaG9ydCkgZW5kID0gMjsKICAgICAgZWxzZSBpZigoZW5kID0gYXJnLmluZGV4T2YoJz0nKSkgPT0gLTEpIGVuZCA9IGFyZy5sZW5ndGg7CiAgICAgIG5hbWUgPSBhcmcuc3Vic3RyaW5nKHN0YXJ0LCBlbmQpOwogICAgICBpZigob3B0ID0gZmluZE9wdChuYW1lKSkpIHsKICAgICAgICBjb25zdCBbLCBbaGFzX2FyZywgaGFuZGxlcl1dID0gb3B0OwogICAgICAgIGNvbnNvbGUubG9nKGBuYW1lOiAke25hbWV9IGhhc19hcmc6ICR7aGFzX2FyZ30gb3B0WzBdOiAke29wdFswXX1gKTsKICAgICAgICBpZihoYXNfYXJnKSB7CiAgICAgICAgICBpZihhcmcubGVuZ3RoID4gZW5kKSB2YWx1ZSA9IGFyZy5zdWJzdHJpbmcoZW5kICsgKGFyZ1tlbmRdID09ICc9JykpOwogICAgICAgICAgZWxzZSB2YWx1ZSA9IGFyZ3NbKytpXTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdmFsdWUgPSB0cnVlOwogICAgICAgIH0KICAgICAgICBjb25zb2xlLmxvZyhgdmFsdWU6ICR7dmFsdWV9YCk7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIC8vICAgICAgICAgIHZhbHVlID0gbnVsbDsKICAgICAgICAgIGxldCB0bXA7CiAgICAgICAgICBpZigodG1wID0gaGFuZGxlcih2YWx1ZSwgcmVzdWx0W29wdFswXV0sIG9wdGlvbnMsIHJlc3VsdCkpICE9PSB1bmRlZmluZWQpIHZhbHVlID0gdG1wOwogICAgICAgIH0gY2F0Y2goZSkge30KICAgICAgICByZXN1bHRbb3B0WzBdXSA9IHZhbHVlOwogICAgICAgIGNvbnRpbnVlOwogICAgICB9CiAgICB9CiAgICBpZihwYXJhbXMubGVuZ3RoKSB7CiAgICAgIGNvbnN0IHBhcmFtID0gcGFyYW1zLnNoaWZ0KCk7CiAgICAgIGlmKChvcHQgPSBmaW5kT3B0KHBhcmFtKSkpIHsKICAgICAgICBjb25zdCBbbmFtZSwgWywgaGFuZGxlcl1dID0gb3B0OwogICAgICAgIGNvbnNvbGUubG9nKGBwYXJhbTogJHtwYXJhbX0gbmFtZTogJHtuYW1lfWApOwogICAgICAgIGxldCB2YWx1ZSA9IGFyZzsKICAgICAgICBpZih0eXBlb2YgaGFuZGxlciA9PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICB0cnkgewogICAgICAgICAgICBsZXQgdG1wOwogICAgICAgICAgICBpZigodG1wID0gaGFuZGxlcih2YWx1ZSwgcmVzdWx0W25hbWVdLCBvcHRpb25zLCByZXN1bHQpKSAhPT0gdW5kZWZpbmVkKSB2YWx1ZSA9IHRtcDsKICAgICAgICAgIH0gY2F0Y2goZSkge30KICAgICAgICB9CiAgICAgICAgcmVzdWx0W25hbWVdID0gdmFsdWU7CiAgICAgICAgY29udGludWU7CiAgICAgIH0KICAgIH0KICAgIHJlc3VsdFsnQCddID0gcmVzdWx0WydAJ10uY29uY2F0KFthcmddKTsKICB9CiAgcmV0dXJuIHJlc3VsdDsKfTsKCmV4cG9ydCBmdW5jdGlvbiBSb3VuZFRvKHZhbHVlLCBwcmVjKSB7CiAgaWYoIWlzRmluaXRlKHZhbHVlKSkgcmV0dXJuIHZhbHVlOwogIHJldHVybiBNYXRoLnJvdW5kKHZhbHVlICogcHJlYykgLyBwcmVjOwp9CgpleHBvcnQgZnVuY3Rpb24gUmFuZ2UoLi4uYXJncykgewogIGxldCBbc3RhcnQsIGVuZCwgc3RlcCA9IDFdID0gYXJnczsKICBsZXQgcmV0OwogIHN0YXJ0IC89IHN0ZXA7CiAgZW5kIC89IHN0ZXA7CiAgaWYoc3RhcnQgPiBlbmQpIHsKICAgIHJldCA9IFtdOwogICAgd2hpbGUoc3RhcnQgPj0gZW5kKSByZXQucHVzaChzdGFydC0tKTsKICB9IGVsc2UgewogICAgcmV0ID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogZW5kIC0gc3RhcnQgKyAxIH0sICh2LCBrKSA9PiBrICsgc3RhcnQpOwogIH0KICBpZihzdGVwICE9IDEpIHJldCA9IHJldC5tYXAobiA9PiBuICogc3RlcCk7CiAgcmV0dXJuIHJldDsKfQoKZXhwb3J0IGNvbnN0IEJpdHNUb05hbWVzID0gKGZsYWdzLCBtYXAgPSAobmFtZSwgZmxhZykgPT4gbmFtZSkgPT4gewogIGNvbnN0IGVudHJpZXMgPSBbLi4uT2JqZWN0LmVudHJpZXMoZmxhZ3MpXTsKCiAgcmV0dXJuIGZ1bmN0aW9uKiAodmFsdWUpIHsKICAgIGZvcihsZXQgW25hbWUsIGZsYWddIG9mIGVudHJpZXMpIGlmKHZhbHVlICYgZmxhZyAmJiAodmFsdWUgJiBmbGFnKSA9PSBmbGFnKSB5aWVsZCBtYXAobmFtZSwgZmxhZyk7CiAgfTsKfTsKCmV4cG9ydCBmdW5jdGlvbiBMb29rdXAoZ2V0dGVyLCBzZXR0ZXIpIHsKICByZXR1cm4gbmV3IFByb3h5KAogICAgaW5zdGFuY2UsCiAgICBEZWZpbmUoaGFuZGxlcnMsIHsKICAgICAgLi4uKGdldHRlciA/IHsgIGdldCh0YXJnZXQsIHByb3ApIHsKICAgICAgICBnZXR0ZXIocHJvcCk7CiAgICAgIH19IDoge30pLCAuLi4oc2V0dGVyID8geyAgICAgICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkgewogICAgICAgIHNldHRlcihwcm9wLCB2YWx1ZSk7CiAgICAgIH0gfSA6IHt9KSAKICAgIH0pCiAgKTsKfQoAAAAAAAAAABkXAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGFQAAAAAAAIwVAAAAAAAAAAAAAAAA8L8"
				],
				[
					236,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAZFwAAZXhwb3J0IGNvbnN0IE1vZHVsbyA9IChhLCBiKSA9PiAoKGEgJSBiKSArIGIpICUgYjsKCmV4cG9ydCBjb25zdCBXZWFrTWFwcGVyID0gKGNyZWF0ZUZuLCBtYXAgPSBuZXcgV2Vha01hcCgpLCBoaXRGbikgPT4gewogIGxldCBzZWxmID0gZnVuY3Rpb24ob2JqLCAuLi5hcmdzKSB7CiAgICBsZXQgcmV0OwogICAgaWYobWFwLmhhcyhvYmopKSB7CiAgICAgIHJldCA9IG1hcC5nZXQob2JqKTsKICAgICAgaWYodHlwZW9mIGhpdEZuID09ICdmdW5jdGlvbicpIGhpdEZuKG9iaiwgcmV0KTsKICAgIH0gZWxzZSB7CiAgICAgIHJldCA9IGNyZWF0ZUZuKG9iaiwgLi4uYXJncyk7CiAgICAgIC8vaWYocmV0ICE9PSB1bmRlZmluZWQpCiAgICAgIG1hcC5zZXQob2JqLCByZXQpOwogICAgfQogICAgcmV0dXJuIHJldDsKICB9OwogIHNlbGYuc2V0ID0gKGssIHYpID0+IG1hcC5zZXQoaywgdik7CiAgc2VsZi5nZXQgPSBrID0+IG1hcC5nZXQoayk7CiAgc2VsZi5tYXAgPSBtYXA7CiAgcmV0dXJuIHNlbGY7Cn07CgpleHBvcnQgZnVuY3Rpb24gV2Vha0Fzc2lnbiguLi5hcmdzKSB7CiAgbGV0IG9iaiA9IGFyZ3Muc2hpZnQoKTsKICBhcmdzLmZvckVhY2gob3RoZXIgPT4gewogICAgZm9yKGxldCBrZXkgaW4gb3RoZXIpIHsKICAgICAgaWYob2JqW2tleV0gPT09IHVuZGVmaW5lZCAmJiBvdGhlcltrZXldICE9PSB1bmRlZmluZWQpIG9ialtrZXldID0gb3RoZXJba2V5XTsKICAgIH0KICB9KTsKICByZXR1cm4gb2JqOwp9CgpleHBvcnQgZnVuY3Rpb24qIEdldE1ldGhvZE5hbWVzKG9iaiwgZGVwdGggPSAxLCBzdGFydCA9IDApIHsKICBjb25zdCBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMob2JqKTsKICBmb3IobGV0IG5hbWUgaW4gZGVzYykgewogICAgaWYoJ3ZhbHVlJyBpbiBkZXNjW25hbWVdKSBpZiAodHlwZW9mIGRlc2NbbmFtZV0udmFsdWUgPT0gJ2Z1bmN0aW9uJykgeWllbGQgbmFtZTsKICB9CiAgLy8gIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG9iaikuZmlsdGVyKG5hbWUgPT4gdHlwZW9mIG9ialtuYW1lXSA9PSAnZnVuY3Rpb24nKTsKfQoKZXhwb3J0IGNvbnN0IEJpbmRNZXRob2RzID0gKG9iaiwgbWV0aG9kcykgPT4gQmluZE1ldGhvZHNUbyh7fSwgb2JqLCBtZXRob2RzIHx8IG9iaik7CgpleHBvcnQgZnVuY3Rpb24gQmluZE1ldGhvZHNUbyhkZXN0LCBvYmosIG1ldGhvZHMpIHsKICBpZihBcnJheS5pc0FycmF5KG1ldGhvZHMpKSB7CiAgICBmb3IobGV0IG5hbWUgb2YgbWV0aG9kcykgaWYodHlwZW9mIG9ialtuYW1lXSA9PSAnZnVuY3Rpb24nKSBkZXN0W25hbWVdID0gb2JqW25hbWVdLmJpbmQob2JqKTsKICAgIHJldHVybiBkZXN0OwogIH0KICBsZXQgbmFtZXMgPSBbLi4uR2V0TWV0aG9kTmFtZXMobWV0aG9kcyldOwoKICBmb3IobGV0IG5hbWUgb2YgbmFtZXMpCiAgICBpZih0eXBlb2YgbWV0aG9kc1tuYW1lXSA9PSAnZnVuY3Rpb24nKSBkZXN0W25hbWVdID0gbWV0aG9kc1tuYW1lXS5iaW5kKG9iaik7CiAgcmV0dXJuIGRlc3Q7Cn0KCmV4cG9ydCBmdW5jdGlvbiBGaW5kS2V5KG9iaiwgcHJlZCwgdGhpc1ZhbCkgewogIGxldCBmbiA9IHR5cGVvZiBwcmVkID09ICdmdW5jdGlvbicgPyB2YWx1ZSA6IHYgPT4gdiA9PT0gcHJlZDsKICBmb3IobGV0IGsgaW4gb2JqKSBpZihmbi5jYWxsKHRoaXNWYWwsIG9ialtrXSwgaykpIHJldHVybiBrOwp9CgpleHBvcnQgY29uc3QgRGVmaW5lID0gKG9iaiwgLi4uYXJncykgPT4gewogIGlmKHR5cGVvZiBhcmdzWzBdID09ICdvYmplY3QnKSB7CiAgICBjb25zdCBbYXJnLCBvdmVyd3JpdGUgPSB0cnVlXSA9IGFyZ3M7CiAgICBsZXQgYWRlY2wgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhhcmcpOwogICAgbGV0IG9kZWNsID0ge307CiAgICBmb3IobGV0IHByb3AgaW4gYWRlY2wpIHsKICAgICAgaWYocHJvcCBpbiBvYmopIHsKICAgICAgICBpZighb3ZlcndyaXRlKSBjb250aW51ZTsKICAgICAgICBlbHNlIGRlbGV0ZSBvYmpbcHJvcF07CiAgICAgIH0KICAgICAgaWYoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIHByb3ApKSBkZWxldGUgb2RlY2xbcHJvcF07CiAgICAgIGVsc2UKICAgICAgICBvZGVjbFtwcm9wXSA9IHsKICAgICAgICAgIC4uLmFkZWNsW3Byb3BdLAogICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsCiAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICAgICAgICB3cml0ZWFibGU6IHRydWUKICAgICAgICB9OwogICAgfQogICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMob2JqLCBvZGVjbCk7CiAgICByZXR1cm4gb2JqOwogIH0KICBjb25zdCBba2V5LCB2YWx1ZSwgZW51bWVyYWJsZSA9IGZhbHNlXSA9IGFyZ3M7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7CiAgICBlbnVtZXJhYmxlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgd3JpdGFibGU6IHRydWUsCiAgICB2YWx1ZQogIH0pOwogIHJldHVybiBvYmo7Cn07CgpleHBvcnQgY29uc3QgT25jZSA9IChmbiwgdGhpc0FyZywgbWVtb0ZuKSA9PiB7CiAgbGV0IHJhbiA9IGZhbHNlOwogIGxldCByZXQ7CgogIHJldHVybiBmdW5jdGlvbiguLi5hcmdzKSB7CiAgICBpZighcmFuKSB7CiAgICAgIHJhbiA9IHRydWU7CiAgICAgIHJldCA9IGZuLmNhbGwodGhpc0FyZyB8fCB0aGlzLCAuLi5hcmdzKTsKICAgIH0gZWxzZSBpZih0eXBlb2YgbWVtb0ZuID09ICdmdW5jdGlvbicpIHsKICAgICAgcmV0ID0gbWVtb0ZuKHJldCk7CiAgICB9CiAgICByZXR1cm4gcmV0OwogIH07Cn07CgpleHBvcnQgY29uc3QgR2V0T3B0ID0gKG9wdGlvbnMgPSB7fSwgYXJncykgPT4gewogIGxldCBzaG9ydCwgbG9uZzsKICBsZXQgcmVzdWx0ID0ge307CiAgbGV0IHBvc2l0aW9uYWwgPSAocmVzdWx0WydAJ10gPSBbXSk7CiAgaWYoIShvcHRpb25zIGluc3RhbmNlb2YgQXJyYXkpKSBvcHRpb25zID0gT2JqZWN0LmVudHJpZXMob3B0aW9ucyk7CiAgY29uc3QgZmluZE9wdCA9IGFyZyA9PgogICAgb3B0aW9ucy5maW5kKAogICAgICAoW29wdG5hbWUsIG9wdGlvbl0pID0+CiAgICAgICAgKEFycmF5LmlzQXJyYXkob3B0aW9uKSA/IG9wdGlvbi5pbmRleE9mKGFyZykgIT0gLTEgOiBmYWxzZSkgfHwgYXJnID09IG9wdG5hbWUKICAgICk7CiAgbGV0IFssIHBhcmFtc10gPSBvcHRpb25zLmZpbmQob3B0ID0+IG9wdFswXSA9PSAnQCcpIHx8IFtdOwogIGlmKHR5cGVvZiBwYXJhbXMgPT0gJ3N0cmluZycpIHBhcmFtcyA9IHBhcmFtcy5zcGxpdCgnLCcpOwogIGZvcihsZXQgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7CiAgICBjb25zdCBhcmcgPSBhcmdzW2ldOwogICAgbGV0IG9wdDsKICAgIGlmKGFyZ1swXSA9PSAnLScpIHsKICAgICAgbGV0IG5hbWUsIHZhbHVlLCBzdGFydCwgZW5kOwogICAgICBpZihhcmdbMV0gPT0gJy0nKSBsb25nID0gdHJ1ZTsKICAgICAgZWxzZSBzaG9ydCA9IHRydWU7CiAgICAgIHN0YXJ0ID0gc2hvcnQgPyAxIDogMjsKICAgICAgaWYoc2hvcnQpIGVuZCA9IDI7CiAgICAgIGVsc2UgaWYoKGVuZCA9IGFyZy5pbmRleE9mKCc9JykpID09IC0xKSBlbmQgPSBhcmcubGVuZ3RoOwogICAgICBuYW1lID0gYXJnLnN1YnN0cmluZyhzdGFydCwgZW5kKTsKICAgICAgaWYoKG9wdCA9IGZpbmRPcHQobmFtZSkpKSB7CiAgICAgICAgY29uc3QgWywgW2hhc19hcmcsIGhhbmRsZXJdXSA9IG9wdDsKICAgICAgICBjb25zb2xlLmxvZyhgbmFtZTogJHtuYW1lfSBoYXNfYXJnOiAke2hhc19hcmd9IG9wdFswXTogJHtvcHRbMF19YCk7CiAgICAgICAgaWYoaGFzX2FyZykgewogICAgICAgICAgaWYoYXJnLmxlbmd0aCA+IGVuZCkgdmFsdWUgPSBhcmcuc3Vic3RyaW5nKGVuZCArIChhcmdbZW5kXSA9PSAnPScpKTsKICAgICAgICAgIGVsc2UgdmFsdWUgPSBhcmdzWysraV07CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHZhbHVlID0gdHJ1ZTsKICAgICAgICB9CiAgICAgICAgY29uc29sZS5sb2coYHZhbHVlOiAke3ZhbHVlfWApOwogICAgICAgIHRyeSB7CiAgICAgICAgICAvLyAgICAgICAgICB2YWx1ZSA9IG51bGw7CiAgICAgICAgICBsZXQgdG1wOwogICAgICAgICAgaWYoKHRtcCA9IGhhbmRsZXIodmFsdWUsIHJlc3VsdFtvcHRbMF1dLCBvcHRpb25zLCByZXN1bHQpKSAhPT0gdW5kZWZpbmVkKSB2YWx1ZSA9IHRtcDsKICAgICAgICB9IGNhdGNoKGUpIHt9CiAgICAgICAgcmVzdWx0W29wdFswXV0gPSB2YWx1ZTsKICAgICAgICBjb250aW51ZTsKICAgICAgfQogICAgfQogICAgaWYocGFyYW1zLmxlbmd0aCkgewogICAgICBjb25zdCBwYXJhbSA9IHBhcmFtcy5zaGlmdCgpOwogICAgICBpZigob3B0ID0gZmluZE9wdChwYXJhbSkpKSB7CiAgICAgICAgY29uc3QgW25hbWUsIFssIGhhbmRsZXJdXSA9IG9wdDsKICAgICAgICBjb25zb2xlLmxvZyhgcGFyYW06ICR7cGFyYW19IG5hbWU6ICR7bmFtZX1gKTsKICAgICAgICBsZXQgdmFsdWUgPSBhcmc7CiAgICAgICAgaWYodHlwZW9mIGhhbmRsZXIgPT0gJ2Z1bmN0aW9uJykgewogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgbGV0IHRtcDsKICAgICAgICAgICAgaWYoKHRtcCA9IGhhbmRsZXIodmFsdWUsIHJlc3VsdFtuYW1lXSwgb3B0aW9ucywgcmVzdWx0KSkgIT09IHVuZGVmaW5lZCkgdmFsdWUgPSB0bXA7CiAgICAgICAgICB9IGNhdGNoKGUpIHt9CiAgICAgICAgfQogICAgICAgIHJlc3VsdFtuYW1lXSA9IHZhbHVlOwogICAgICAgIGNvbnRpbnVlOwogICAgICB9CiAgICB9CiAgICByZXN1bHRbJ0AnXSA9IHJlc3VsdFsnQCddLmNvbmNhdChbYXJnXSk7CiAgfQogIHJldHVybiByZXN1bHQ7Cn07CgpleHBvcnQgZnVuY3Rpb24gUm91bmRUbyh2YWx1ZSwgcHJlYykgewogIGlmKCFpc0Zpbml0ZSh2YWx1ZSkpIHJldHVybiB2YWx1ZTsKICByZXR1cm4gTWF0aC5yb3VuZCh2YWx1ZSAqIHByZWMpIC8gcHJlYzsKfQoKZXhwb3J0IGZ1bmN0aW9uIFJhbmdlKC4uLmFyZ3MpIHsKICBsZXQgW3N0YXJ0LCBlbmQsIHN0ZXAgPSAxXSA9IGFyZ3M7CiAgbGV0IHJldDsKICBzdGFydCAvPSBzdGVwOwogIGVuZCAvPSBzdGVwOwogIGlmKHN0YXJ0ID4gZW5kKSB7CiAgICByZXQgPSBbXTsKICAgIHdoaWxlKHN0YXJ0ID49IGVuZCkgcmV0LnB1c2goc3RhcnQtLSk7CiAgfSBlbHNlIHsKICAgIHJldCA9IEFycmF5LmZyb20oeyBsZW5ndGg6IGVuZCAtIHN0YXJ0ICsgMSB9LCAodiwgaykgPT4gayArIHN0YXJ0KTsKICB9CiAgaWYoc3RlcCAhPSAxKSByZXQgPSByZXQubWFwKG4gPT4gbiAqIHN0ZXApOwogIHJldHVybiByZXQ7Cn0KCmV4cG9ydCBjb25zdCBCaXRzVG9OYW1lcyA9IChmbGFncywgbWFwID0gKG5hbWUsIGZsYWcpID0+IG5hbWUpID0+IHsKICBjb25zdCBlbnRyaWVzID0gWy4uLk9iamVjdC5lbnRyaWVzKGZsYWdzKV07CgogIHJldHVybiBmdW5jdGlvbiogKHZhbHVlKSB7CiAgICBmb3IobGV0IFtuYW1lLCBmbGFnXSBvZiBlbnRyaWVzKQogICAgICBpZih2YWx1ZSAmIGZsYWcgJiYgKHZhbHVlICYgZmxhZykgPT0gZmxhZykgeWllbGQgbWFwKG5hbWUsIGZsYWcpOwogIH07Cn07CgpleHBvcnQgZnVuY3Rpb24gTG9va3VwKGdldHRlciwgc2V0dGVyKSB7CiAgcmV0dXJuIG5ldyBQcm94eSgKICAgIGluc3RhbmNlLAogICAgRGVmaW5lKGhhbmRsZXJzLCB7CiAgICAgIC4uLihnZXR0ZXIKICAgICAgICA/IHsKICAgICAgICAgICAgZ2V0KHRhcmdldCwgcHJvcCkgewogICAgICAgICAgICAgIGdldHRlcihwcm9wKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIDoge30pLAogICAgICAuLi4oc2V0dGVyCiAgICAgICAgPyB7CiAgICAgICAgICAgIHNldCh0YXJnZXQsIHByb3AsIHZhbHVlKSB7CiAgICAgICAgICAgICAgc2V0dGVyKHByb3AsIHZhbHVlKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIDoge30pCiAgICB9KQogICk7Cn0KAAAAAAAAAAC/FgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoFQAAAAAAAK4VAAAAAAAAAAAAAAAA8L8"
				],
				[
					237,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAC/FgAAZXhwb3J0IGNvbnN0IE1vZHVsbyA9IChhLCBiKSA9PiAoKGEgJSBiKSArIGIpICUgYjsKCmV4cG9ydCBjb25zdCBXZWFrTWFwcGVyID0gKGNyZWF0ZUZuLCBtYXAgPSBuZXcgV2Vha01hcCgpLCBoaXRGbikgPT4gewogIGxldCBzZWxmID0gZnVuY3Rpb24ob2JqLCAuLi5hcmdzKSB7CiAgICBsZXQgcmV0OwogICAgaWYobWFwLmhhcyhvYmopKSB7CiAgICAgIHJldCA9IG1hcC5nZXQob2JqKTsKICAgICAgaWYodHlwZW9mIGhpdEZuID09ICdmdW5jdGlvbicpIGhpdEZuKG9iaiwgcmV0KTsKICAgIH0gZWxzZSB7CiAgICAgIHJldCA9IGNyZWF0ZUZuKG9iaiwgLi4uYXJncyk7CiAgICAgIC8vaWYocmV0ICE9PSB1bmRlZmluZWQpCiAgICAgIG1hcC5zZXQob2JqLCByZXQpOwogICAgfQogICAgcmV0dXJuIHJldDsKICB9OwogIHNlbGYuc2V0ID0gKGssIHYpID0+IG1hcC5zZXQoaywgdik7CiAgc2VsZi5nZXQgPSBrID0+IG1hcC5nZXQoayk7CiAgc2VsZi5tYXAgPSBtYXA7CiAgcmV0dXJuIHNlbGY7Cn07CgpleHBvcnQgZnVuY3Rpb24gV2Vha0Fzc2lnbiguLi5hcmdzKSB7CiAgbGV0IG9iaiA9IGFyZ3Muc2hpZnQoKTsKICBhcmdzLmZvckVhY2gob3RoZXIgPT4gewogICAgZm9yKGxldCBrZXkgaW4gb3RoZXIpIHsKICAgICAgaWYob2JqW2tleV0gPT09IHVuZGVmaW5lZCAmJiBvdGhlcltrZXldICE9PSB1bmRlZmluZWQpIG9ialtrZXldID0gb3RoZXJba2V5XTsKICAgIH0KICB9KTsKICByZXR1cm4gb2JqOwp9CgpleHBvcnQgZnVuY3Rpb24qIEdldE1ldGhvZE5hbWVzKG9iaiwgZGVwdGggPSAxLCBzdGFydCA9IDApIHsKICBjb25zdCBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMob2JqKTsKICBmb3IobGV0IG5hbWUgaW4gZGVzYykgewogICAgaWYoJ3ZhbHVlJyBpbiBkZXNjW25hbWVdKSBpZiAodHlwZW9mIGRlc2NbbmFtZV0udmFsdWUgPT0gJ2Z1bmN0aW9uJykgeWllbGQgbmFtZTsKICB9CiAgLy8gIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKG9iaikuZmlsdGVyKG5hbWUgPT4gdHlwZW9mIG9ialtuYW1lXSA9PSAnZnVuY3Rpb24nKTsKfQoKZXhwb3J0IGNvbnN0IEJpbmRNZXRob2RzID0gKG9iaiwgbWV0aG9kcykgPT4gQmluZE1ldGhvZHNUbyh7fSwgb2JqLCBtZXRob2RzIHx8IG9iaik7CgpleHBvcnQgZnVuY3Rpb24gQmluZE1ldGhvZHNUbyhkZXN0LCBvYmosIG1ldGhvZHMpIHsKICBpZihBcnJheS5pc0FycmF5KG1ldGhvZHMpKSB7CiAgICBmb3IobGV0IG5hbWUgb2YgbWV0aG9kcykgaWYodHlwZW9mIG9ialtuYW1lXSA9PSAnZnVuY3Rpb24nKSBkZXN0W25hbWVdID0gb2JqW25hbWVdLmJpbmQob2JqKTsKICAgIHJldHVybiBkZXN0OwogIH0KICBsZXQgbmFtZXMgPSBbLi4uR2V0TWV0aG9kTmFtZXMobWV0aG9kcyldOwoKICBmb3IobGV0IG5hbWUgb2YgbmFtZXMpCiAgICBpZih0eXBlb2YgbWV0aG9kc1tuYW1lXSA9PSAnZnVuY3Rpb24nKSBkZXN0W25hbWVdID0gbWV0aG9kc1tuYW1lXS5iaW5kKG9iaik7CiAgcmV0dXJuIGRlc3Q7Cn0KCmV4cG9ydCBmdW5jdGlvbiBGaW5kS2V5KG9iaiwgcHJlZCwgdGhpc1ZhbCkgewogIGxldCBmbiA9IHR5cGVvZiBwcmVkID09ICdmdW5jdGlvbicgPyB2YWx1ZSA6IHYgPT4gdiA9PT0gcHJlZDsKICBmb3IobGV0IGsgaW4gb2JqKSBpZihmbi5jYWxsKHRoaXNWYWwsIG9ialtrXSwgaykpIHJldHVybiBrOwp9CgpleHBvcnQgY29uc3QgRGVmaW5lID0gKG9iaiwgLi4uYXJncykgPT4gewogIGlmKHR5cGVvZiBhcmdzWzBdID09ICdvYmplY3QnKSB7CiAgICBjb25zdCBbYXJnLCBvdmVyd3JpdGUgPSB0cnVlXSA9IGFyZ3M7CiAgICBsZXQgYWRlY2wgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhhcmcpOwogICAgbGV0IG9kZWNsID0ge307CiAgICBmb3IobGV0IHByb3AgaW4gYWRlY2wpIHsKICAgICAgaWYocHJvcCBpbiBvYmopIHsKICAgICAgICBpZighb3ZlcndyaXRlKSBjb250aW51ZTsKICAgICAgICBlbHNlIGRlbGV0ZSBvYmpbcHJvcF07CiAgICAgIH0KICAgICAgaWYoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIHByb3ApKSBkZWxldGUgb2RlY2xbcHJvcF07CiAgICAgIGVsc2UKICAgICAgICBvZGVjbFtwcm9wXSA9IHsKICAgICAgICAgIC4uLmFkZWNsW3Byb3BdLAogICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsCiAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICAgICAgICB3cml0ZWFibGU6IHRydWUKICAgICAgICB9OwogICAgfQogICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMob2JqLCBvZGVjbCk7CiAgICByZXR1cm4gb2JqOwogIH0KICBjb25zdCBba2V5LCB2YWx1ZSwgZW51bWVyYWJsZSA9IGZhbHNlXSA9IGFyZ3M7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7CiAgICBlbnVtZXJhYmxlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgd3JpdGFibGU6IHRydWUsCiAgICB2YWx1ZQogIH0pOwogIHJldHVybiBvYmo7Cn07CgpleHBvcnQgY29uc3QgT25jZSA9IChmbiwgdGhpc0FyZywgbWVtb0ZuKSA9PiB7CiAgbGV0IHJhbiA9IGZhbHNlOwogIGxldCByZXQ7CgogIHJldHVybiBmdW5jdGlvbiguLi5hcmdzKSB7CiAgICBpZighcmFuKSB7CiAgICAgIHJhbiA9IHRydWU7CiAgICAgIHJldCA9IGZuLmNhbGwodGhpc0FyZyB8fCB0aGlzLCAuLi5hcmdzKTsKICAgIH0gZWxzZSBpZih0eXBlb2YgbWVtb0ZuID09ICdmdW5jdGlvbicpIHsKICAgICAgcmV0ID0gbWVtb0ZuKHJldCk7CiAgICB9CiAgICByZXR1cm4gcmV0OwogIH07Cn07CgpleHBvcnQgY29uc3QgR2V0T3B0ID0gKG9wdGlvbnMgPSB7fSwgYXJncykgPT4gewogIGxldCBzaG9ydCwgbG9uZzsKICBsZXQgcmVzdWx0ID0ge307CiAgbGV0IHBvc2l0aW9uYWwgPSAocmVzdWx0WydAJ10gPSBbXSk7CiAgaWYoIShvcHRpb25zIGluc3RhbmNlb2YgQXJyYXkpKSBvcHRpb25zID0gT2JqZWN0LmVudHJpZXMob3B0aW9ucyk7CiAgY29uc3QgZmluZE9wdCA9IGFyZyA9PgogICAgb3B0aW9ucy5maW5kKAogICAgICAoW29wdG5hbWUsIG9wdGlvbl0pID0+CiAgICAgICAgKEFycmF5LmlzQXJyYXkob3B0aW9uKSA/IG9wdGlvbi5pbmRleE9mKGFyZykgIT0gLTEgOiBmYWxzZSkgfHwgYXJnID09IG9wdG5hbWUKICAgICk7CiAgbGV0IFssIHBhcmFtc10gPSBvcHRpb25zLmZpbmQob3B0ID0+IG9wdFswXSA9PSAnQCcpIHx8IFtdOwogIGlmKHR5cGVvZiBwYXJhbXMgPT0gJ3N0cmluZycpIHBhcmFtcyA9IHBhcmFtcy5zcGxpdCgnLCcpOwogIGZvcihsZXQgaSA9IDA7IGkgPCBhcmdzLmxlbmd0aDsgaSsrKSB7CiAgICBjb25zdCBhcmcgPSBhcmdzW2ldOwogICAgbGV0IG9wdDsKICAgIGlmKGFyZ1swXSA9PSAnLScpIHsKICAgICAgbGV0IG5hbWUsIHZhbHVlLCBzdGFydCwgZW5kOwogICAgICBpZihhcmdbMV0gPT0gJy0nKSBsb25nID0gdHJ1ZTsKICAgICAgZWxzZSBzaG9ydCA9IHRydWU7CiAgICAgIHN0YXJ0ID0gc2hvcnQgPyAxIDogMjsKICAgICAgaWYoc2hvcnQpIGVuZCA9IDI7CiAgICAgIGVsc2UgaWYoKGVuZCA9IGFyZy5pbmRleE9mKCc9JykpID09IC0xKSBlbmQgPSBhcmcubGVuZ3RoOwogICAgICBuYW1lID0gYXJnLnN1YnN0cmluZyhzdGFydCwgZW5kKTsKICAgICAgaWYoKG9wdCA9IGZpbmRPcHQobmFtZSkpKSB7CiAgICAgICAgY29uc3QgWywgW2hhc19hcmcsIGhhbmRsZXJdXSA9IG9wdDsKICAgICAgICBjb25zb2xlLmxvZyhgbmFtZTogJHtuYW1lfSBoYXNfYXJnOiAke2hhc19hcmd9IG9wdFswXTogJHtvcHRbMF19YCk7CiAgICAgICAgaWYoaGFzX2FyZykgewogICAgICAgICAgaWYoYXJnLmxlbmd0aCA+IGVuZCkgdmFsdWUgPSBhcmcuc3Vic3RyaW5nKGVuZCArIChhcmdbZW5kXSA9PSAnPScpKTsKICAgICAgICAgIGVsc2UgdmFsdWUgPSBhcmdzWysraV07CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHZhbHVlID0gdHJ1ZTsKICAgICAgICB9CiAgICAgICAgY29uc29sZS5sb2coYHZhbHVlOiAke3ZhbHVlfWApOwogICAgICAgIHRyeSB7CiAgICAgICAgICAvLyAgICAgICAgICB2YWx1ZSA9IG51bGw7CiAgICAgICAgICBsZXQgdG1wOwogICAgICAgICAgaWYoKHRtcCA9IGhhbmRsZXIodmFsdWUsIHJlc3VsdFtvcHRbMF1dLCBvcHRpb25zLCByZXN1bHQpKSAhPT0gdW5kZWZpbmVkKSB2YWx1ZSA9IHRtcDsKICAgICAgICB9IGNhdGNoKGUpIHt9CiAgICAgICAgcmVzdWx0W29wdFswXV0gPSB2YWx1ZTsKICAgICAgICBjb250aW51ZTsKICAgICAgfQogICAgfQogICAgaWYocGFyYW1zLmxlbmd0aCkgewogICAgICBjb25zdCBwYXJhbSA9IHBhcmFtcy5zaGlmdCgpOwogICAgICBpZigob3B0ID0gZmluZE9wdChwYXJhbSkpKSB7CiAgICAgICAgY29uc3QgW25hbWUsIFssIGhhbmRsZXJdXSA9IG9wdDsKICAgICAgICBjb25zb2xlLmxvZyhgcGFyYW06ICR7cGFyYW19IG5hbWU6ICR7bmFtZX1gKTsKICAgICAgICBsZXQgdmFsdWUgPSBhcmc7CiAgICAgICAgaWYodHlwZW9mIGhhbmRsZXIgPT0gJ2Z1bmN0aW9uJykgewogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgbGV0IHRtcDsKICAgICAgICAgICAgaWYoKHRtcCA9IGhhbmRsZXIodmFsdWUsIHJlc3VsdFtuYW1lXSwgb3B0aW9ucywgcmVzdWx0KSkgIT09IHVuZGVmaW5lZCkgdmFsdWUgPSB0bXA7CiAgICAgICAgICB9IGNhdGNoKGUpIHt9CiAgICAgICAgfQogICAgICAgIHJlc3VsdFtuYW1lXSA9IHZhbHVlOwogICAgICAgIGNvbnRpbnVlOwogICAgICB9CiAgICB9CiAgICByZXN1bHRbJ0AnXSA9IHJlc3VsdFsnQCddLmNvbmNhdChbYXJnXSk7CiAgfQogIHJldHVybiByZXN1bHQ7Cn07CgpleHBvcnQgZnVuY3Rpb24gUm91bmRUbyh2YWx1ZSwgcHJlYykgewogIGlmKCFpc0Zpbml0ZSh2YWx1ZSkpIHJldHVybiB2YWx1ZTsKICByZXR1cm4gTWF0aC5yb3VuZCh2YWx1ZSAqIHByZWMpIC8gcHJlYzsKfQoKZXhwb3J0IGZ1bmN0aW9uIFJhbmdlKC4uLmFyZ3MpIHsKICBsZXQgW3N0YXJ0LCBlbmQsIHN0ZXAgPSAxXSA9IGFyZ3M7CiAgbGV0IHJldDsKICBzdGFydCAvPSBzdGVwOwogIGVuZCAvPSBzdGVwOwogIGlmKHN0YXJ0ID4gZW5kKSB7CiAgICByZXQgPSBbXTsKICAgIHdoaWxlKHN0YXJ0ID49IGVuZCkgcmV0LnB1c2goc3RhcnQtLSk7CiAgfSBlbHNlIHsKICAgIHJldCA9IEFycmF5LmZyb20oeyBsZW5ndGg6IGVuZCAtIHN0YXJ0ICsgMSB9LCAodiwgaykgPT4gayArIHN0YXJ0KTsKICB9CiAgaWYoc3RlcCAhPSAxKSByZXQgPSByZXQubWFwKG4gPT4gbiAqIHN0ZXApOwogIHJldHVybiByZXQ7Cn0KCmV4cG9ydCBjb25zdCBCaXRzVG9OYW1lcyA9IChmbGFncywgbWFwID0gKG5hbWUsIGZsYWcpID0+IG5hbWUpID0+IHsKICBjb25zdCBlbnRyaWVzID0gWy4uLk9iamVjdC5lbnRyaWVzKGZsYWdzKV07CgogIHJldHVybiBmdW5jdGlvbiogKHZhbHVlKSB7CiAgICBmb3IobGV0IFtuYW1lLCBmbGFnXSBvZiBlbnRyaWVzKQogICAgICBpZih2YWx1ZSAmIGZsYWcgJiYgKHZhbHVlICYgZmxhZykgPT0gZmxhZykgeWllbGQgbWFwKG5hbWUsIGZsYWcpOwogIH07Cn07CgpleHBvcnQgZnVuY3Rpb24gTG9va3VwKGdldHRlciwgc2V0dGVyKSB7CiAgcmV0dXJuIG5ldyBQcm94eSgKICAgIHt9LAogICAgewogICAgICBnZXQodGFyZ2V0LCBwcm9wKSB7CiAgICAgICAgcmV0dXJuIGdldHRlcihwcm9wKTsKICAgICAgfSwKICAgICAgLi4uKHNldHRlcgogICAgICAgID8gewogICAgICAgICAgICBzZXQodGFyZ2V0LCBwcm9wLCB2YWx1ZSkgewogICAgICAgICAgICAgIHNldHRlcihwcm9wLCB2YWx1ZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICA6IHt9KQogICAgfQogICk7Cn0KAAAAAAAAAACPFwAAAAAAAAAAAAAAAAAAAAAAAI8XAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACoFQAAAAAAAK4VAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "test-nanovg.js",
			"settings":
			{
				"buffer_size": 6915,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					31,
					1,
					"revert",
					null,
					"AwAAAAAAAAAAAAAAAAAAAAAAAAADGwAAaW1wb3J0ICogYXMgZ2xmdyBmcm9tICdnbGZ3JzsKaW1wb3J0IHsgY29udGV4dCwgcG9sbCwgUG9zaXRpb24sIFdpbmRvdywgQ09OVEVYVF9WRVJTSU9OX01BSk9SLCBDT05URVhUX1ZFUlNJT05fTUlOT1IsIE9QRU5HTF9QUk9GSUxFLCBPUEVOR0xfQ09SRV9QUk9GSUxFLCBPUEVOR0xfRk9SV0FSRF9DT01QQVQsIFJFU0laQUJMRSwgU0FNUExFUyB9IGZyb20gJ2dsZncnOwppbXBvcnQgeyBnbENsZWFyLCBnbENsZWFyQ29sb3IsIGdsVmlld3BvcnQsIEdMX0NPTE9SX0JVRkZFUl9CSVQsIEdMX0RFUFRIX0JVRkZFUl9CSVQsIEdMX1NURU5DSUxfQlVGRkVSX0JJVCB9IGZyb20gJy4vZ2wuanMnOwppbXBvcnQgeyBIU0xBIH0gZnJvbSAnLi9saWIvY29sb3IuanMnOwppbXBvcnQgeyBNYXQsIFBvaW50LCBTaXplLCBSZWN0LCBpbXJlYWQgfSBmcm9tICdvcGVuY3YnOwppbXBvcnQgKiBhcyBjdiBmcm9tICdvcGVuY3YnOwppbXBvcnQgKiBhcyBudmcgZnJvbSAnbmFub3ZnJzsKaW1wb3J0IENvbnNvbGUgZnJvbSAnY29uc29sZSc7CmltcG9ydCB7IEdMRlcsIE1hdDJJbWFnZSwgRHJhd0ltYWdlLCBEcmF3Q2lyY2xlIH0gZnJvbSAnLi9kcmF3LXV0aWxzLmpzJzsKaW1wb3J0ICogYXMgSW1HdWkgZnJvbSAnaW1ndWknOwoKZnVuY3Rpb24gQ2xlYXIoY29sb3IgPSBudmcuUkdCKDAsIDAsIDApKSB7CiAgY29uc3QgeyBzaXplIH0gPSBjb250ZXh0LmN1cnJlbnQ7CgogIG52Zy5TYXZlKCk7CiAgbnZnLkJlZ2luUGF0aCgpOwogIG52Zy5SZWN0KDAsIDAsIC4uLnNpemUpOwogIG52Zy5GaWxsQ29sb3IoY29sb3IpOwogIG52Zy5GaWxsKCk7CiAgbnZnLlJlc3RvcmUoKTsKfQoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoewogICAgaW5zcGVjdE9wdGlvbnM6IHsKICAgICAgbWF4U3RyaW5nTGVuZ3RoOiAyMDAsCiAgICAgIG1heEFycmF5TGVuZ3RoOiAxMCwKICAgICAgYnJlYWtMZW5ndGg6IEluZmluaXR5LAogICAgICBjb21wYWN0OiAyLAogICAgICBkZXB0aDogMTAKICAgIH0KICB9KTsKCiAgbGV0IGkgPSAwOwogIGxldCBydW5uaW5nID0gdHJ1ZTsKCiAgbGV0IGNvbnRleHQsIHdpbmRvdywgcG9zaXRpb24sIHNpemU7CgogIGlmKHRydWUpIHsKICAgIGZvcihsZXQgW3Byb3AsIHZhbHVlXSBvZiBbCiAgICAgIFtDT05URVhUX1ZFUlNJT05fTUFKT1IsIDNdLAogICAgICBbQ09OVEVYVF9WRVJTSU9OX01JTk9SLCAyXSwKICAgICAgW09QRU5HTF9QUk9GSUxFLCBPUEVOR0xfQ09SRV9QUk9GSUxFXSwKICAgICAgW09QRU5HTF9GT1JXQVJEX0NPTVBBVCwgdHJ1ZV0sCiAgICAgIFtSRVNJWkFCTEUsIHRydWVdLAogICAgICBbU0FNUExFUywgNF0KICAgIF0pCiAgICAgIFdpbmRvdy5oaW50KHByb3AsIHZhbHVlKTsKCiAgICB3aW5kb3cgPSBnbGZ3LmNvbnRleHQuY3VycmVudCA9IG5ldyBXaW5kb3coMTI4MCwgOTAwLCAnSW1HdWkgdGVzdCcpOwoKICAgIGNvbnRleHQgPSB7CiAgICAgIGJlZ2luKCkge30sCiAgICAgIGVuZCgpIHsKICAgICAgICB3aW5kb3cuc3dhcEJ1ZmZlcnMoKTsKICAgICAgICBwb2xsKCk7CiAgICAgIH0KICAgIH07CgogICAgd2luZG93LmhhbmRsZUNoYXJNb2RzID0gKGNoYXIsIG1vZHMpID0+IHsKICAgICAgY29uc29sZS5sb2coYGhhbmRsZUNoYXJNb2RzYCwgeyBjaGFyLCBtb2RzIH0pOwogICAgfTsKICB9IGVsc2UgewogICAgY29udGV4dCA9IG5ldyBHTEZXKDEyODAsIDkwMCwgewogICAgICB0aXRsZTogc2NyaXB0QXJnc1swXSwKICAgICAgcmVzaXphYmxlOiB0cnVlLAogICAgICBoYW5kbGVTaXplKHdpZHRoLCBoZWlnaHQpIHsKICAgICAgICBjb25zb2xlLmxvZygncmVzaXplZCcsIHsgd2lkdGgsIGhlaWdodCB9KTsKICAgICAgfSwKICAgICAgaGFuZGxlS2V5KGtleUNvZGUpIHsKICAgICAgICBsZXQgY2hhckNvZGUgPSBrZXlDb2RlICYgMHhmZjsKICAgICAgICBjb25zb2xlLmxvZyhgaGFuZGxlS2V5YCwgewogICAgICAgICAga2V5Q29kZTogJzB4JyArIGtleUNvZGUudG9TdHJpbmcoMTYpLAogICAgICAgICAgY2hhckNvZGUsCiAgICAgICAgICBjaGFyOiBTdHJpbmcuZnJvbUNoYXJDb2RlKGNoYXJDb2RlKQogICAgICAgIH0pOwogICAgICAgIGxldCBjaGFyID0gU3RyaW5nLmZyb21Db2RlUG9pbnQoY2hhckNvZGUpOwoKICAgICAgICBsZXQgaGFuZGxlciA9IHsgJ1x4MDAnOiAoKSA9PiAocnVubmluZyA9IGZhbHNlKSwgUTogKCkgPT4gKHJ1bm5pbmcgPSBmYWxzZSkgfVtjaGFyXTsKICAgICAgICBpZihoYW5kbGVyKSBoYW5kbGVyKCk7CiAgICAgIH0sCiAgICAgIGhhbmRsZUNoYXJNb2RzKGNoYXIsIG1vZHMpIHsKICAgICAgICBjb25zb2xlLmxvZyhgaGFuZGxlQ2hhck1vZHNgLCB7IGNoYXIsIG1vZHMgfSk7CiAgICAgIH0sCiAgICAgIGhhbmRsZU1vdXNlQnV0dG9uKGJ1dHRvbiwgYWN0aW9uLCBtb2RzKSB7CiAgICAgICAgY29uc29sZS5sb2coYGhhbmRsZU1vdXNlQnV0dG9uYCwgeyBidXR0b24sIGFjdGlvbiwgbW9kcyB9KTsKICAgICAgfSwKICAgICAgaGFuZGxlQ3Vyc29yUG9zKHgsIHkpIHsKICAgICAgICAvL2NvbnNvbGUubG9nKGBoYW5kbGVDdXJzb3JQb3NgLCB7IHgsIHkgfSk7CiAgICAgIH0KICAgIH0pOwogICAgd2luZG93ID0gY29udGV4dC53aW5kb3c7CiAgfQoKICBwb3NpdGlvbiA9IHdpbmRvdy5wb3NpdGlvbjsKICBzaXplID0gd2luZG93LnNpemU7CgogIG52Zy5DcmVhdGVHTDMobnZnLlNURU5DSUxfU1RST0tFUyB8IG52Zy5BTlRJQUxJQVMgfCBudmcuREVCVUcpOwoKICBJbUd1aS5Jbml0KEltR3VpLkltcGxHbGZ3LCBJbUd1aS5JbXBsT3BlbkdMMyk7CiAgSW1HdWkuQ3JlYXRlQ29udGV4dCh3aW5kb3cpOwoKICBjb25zdCB7IHdpZHRoLCBoZWlnaHQgfSA9IHNpemU7CiAgY29uc3QgeyB4LCB5IH0gPSBwb3NpdGlvbjsKCiAgLy9jb25zb2xlLmxvZyhgd2lkdGg6ICR7d2lkdGh9LCBoZWlnaHQ6ICR7aGVpZ2h0fSwgeDogJHt4fSwgeTogJHt5fWApOwoKICBsZXQgbWF0ID0gbmV3IE1hdChuZXcgU2l6ZSh3aWR0aCwgaGVpZ2h0KSwgY3YuQ1ZfOFVDNCk7CgogIG1hdC5zZXRUbyhbMTEsIDIyLCAzMywgMjU1XSk7CgogIGxldCBpbWFnZTIgPSBjdi5pbXJlYWQoJ0FyY2hpdGVrdHVyLnBuZycpOwoKICBjdi5jdnRDb2xvcihpbWFnZTIsIGltYWdlMiwgY3YuQ09MT1JfQkdSMkJHUkEpOwoKICBpbWFnZTIuY29weVRvKG1hdChuZXcgUmVjdChpbWFnZTIuc2l6ZSkpKTsKCiAgY3YuZHJhd0xpbmUobWF0LCBuZXcgUG9pbnQoMTAsIDEwKSwgbmV3IFBvaW50KHNpemUud2lkdGggLSAxMCwgc2l6ZS5oZWlnaHQgLSAxMCksIFsyNTUsIDI1NSwgMCwgMjU1XSwgNCwgY3YuTElORV9BQSk7CiAgY3YuZHJhd0xpbmUobWF0LCBuZXcgUG9pbnQoc2l6ZS53aWR0aCAtIDEwLCAxMCksIG5ldyBQb2ludCgxMCwgc2l6ZS5oZWlnaHQgLSAxMCksIFsyNTUsIDAsIDAsIDI1NV0sIDQsIGN2LkxJTkVfQUEpOwoKICBsZXQgeyBidWZmZXIgfSA9IG1hdDsKCiAgbGV0IHBpeGVsczsKICBsZXQgaW1nSWQgPSBNYXQySW1hZ2UobWF0KTsKICBsZXQgaW1nMklkID0gbnZnLkNyZWF0ZUltYWdlKCdNdWVobGViZXJnLnBuZycsIDApOwoKICBjb25zb2xlLmxvZyhgYCwgeyBpbWdJZCwgaW1nMklkIH0pOwoKICBsZXQgaW1nMlN6ID0gbnZnLkltYWdlU2l6ZShpbWcySWQpOwogIGxldCBpbWdTeiA9IG52Zy5JbWFnZVNpemUoaW1nSWQpOwoKICBjb25zdCB0aW1lciA9IHsKICAgIHRpY2tzKHJhdGUgPSAxMDAwKSB7CiAgICAgIGNvbnN0IHQgPSBEYXRlLm5vdygpOwoKICAgICAgcmV0dXJuICgodCAtICh0aGlzLnN0YXJ0ID8/PSB0KSkgKiByYXRlKSAvIDEwMDA7CiAgICB9LAogICAgZnJhbWUoKSB7CiAgICAgIGNvbnN0IHQgPSBEYXRlLm5vdygpOwogICAgICBjb25zdCB7IHByZXYgPSB0aGlzLnN0YXJ0IH0gPSB0aGlzOwogICAgICB0aGlzLnByZXYgPSB0OwogICAgICByZXR1cm4gKHRoaXMuZnBzID0gKygxMDAwIC8gKHQgLSBwcmV2KSkudG9GaXhlZCgxKSk7CiAgICB9CiAgfTsKCiAgY29uc29sZS5sb2coJ0ZQUzonKTsKCiAgbGV0IGZsb2F0VmFsdWUgPSAwLjAsCiAgICBhbHBoYVZhbHVlID0gMTI3OwoKICB3aGlsZSgocnVubmluZyAmJj0gIXdpbmRvdy5zaG91bGRDbG9zZSkpIHsKICAgIGxldCBpbmRleCA9IE1hdGguZmxvb3IodGltZXIudGlja3MoMzYwKSAvIDMwKTsKCiAgICBsZXQgY29sb3IgPSBuZXcgSFNMQShpbmRleCAlIDM2MCwgMTAwLCA1MCArIDI1ICogTWF0aC5zaW4odGltZXIudGlja3MoMC4xKSAqIE1hdGguUEkpKS50b1JHQkEoKTsKCiAgICBjb250ZXh0LmJlZ2luKGNvbG9yKTsKCiAgICBudmcuQmVnaW5GcmFtZSh3aWR0aCwgaGVpZ2h0LCAxKTsKCiAgICBDbGVhcihudmcuUkdCKC4uLmNvbG9yKSk7CgogICAgbGV0IG07CiAgICBudmcuQ3VycmVudFRyYW5zZm9ybSgobSA9IFtdKSk7CgogICAgbGV0IHAsIGE7CiAgICBwID0gbnZnLlRyYW5zZm9ybUlkZW50aXR5KCk7CgogICAgLy8gICBudmcuU2NhbGUoMiwxKTsKCiAgICBudmcuVHJhbnNmb3JtTXVsdGlwbHkoCiAgICAgIHAsCiAgICAgIG52Zy5UcmFuc2Zvcm1UcmFuc2xhdGUoMCwgMTAwKSwKICAgICAgbnZnLlRyYW5zZm9ybVJvdGF0ZSgoKHRpbWVyLnRpY2tzKDIwMCkgJSAzNjApICogTWF0aC5QSSkgLyAxODApLAogICAgICBudmcuVHJhbnNmb3JtUm90YXRlKG52Zy5EZWdUb1JhZCg0NSkpLAogICAgICBudmcuVHJhbnNmb3JtU2NhbGUoMiwgMC41KSwKICAgICAgbnZnLlRyYW5zZm9ybVJvdGF0ZShudmcuRGVnVG9SYWQoLTQ1KSkKICAgICk7CiAgICAvL2NvbnNvbGUubG9nKCdUcmFuc2Zvcm0nLCBwKTsKCiAgICBudmcuVHJhbnNmb3JtUG9pbnQoKGEgPSBbXSksIHAsIDAsIDApOwoKICAgIC8vIGxldCBwYXR0ZXJuID0gbnZnLkltYWdlUGF0dGVybigwLCAwLCAuLi5pbWcyU3osIDAsIGltZzJJZCwgMSk7CgogICAgbGV0IGNlbnRlciA9IG5ldyBQb3NpdGlvbihzaXplLndpZHRoIC8gMiwgc2l6ZS5oZWlnaHQgLyAyKTsKICAgIGxldCBpbWdTel8yID0gbmV3IFBvc2l0aW9uKGltZzJTei53aWR0aCAqIC0wLjUsIGltZzJTei5oZWlnaHQgKiAtMC41KTsKCiAgICBudmcuU2F2ZSgpOwoKICAgIG52Zy5UcmFuc2xhdGUoLi4uY2VudGVyKTsKICAgIG52Zy5TY2FsZSgwLjUsIDAuNSk7CiAgICBudmcuVHJhbnNsYXRlKC4uLmltZ1N6XzIpOwoKICAgIGxldCBwaGkgPSAoKHRpbWVyLnRpY2tzKDYwKSAlIDM2MCkgLyAxODApICogTWF0aC5QSTsKICAgIGxldCB2ZWMgPSBbTWF0aC5jb3MocGhpKSwgTWF0aC5zaW4ocGhpKV0ubWFwKG4gPT4gbiAqIDEwMCk7CgogICAgRHJhd0ltYWdlKGltZ0lkLCB2ZWMpOwogICAgLy8gIG52Zy5UcmFuc2xhdGUoaW1nU3pfMi53aWR0aCAqIC0xLCBpbWdTel8yLmhlaWdodCAqIC0xKTsKICAgIG52Zy5SZXN0b3JlKCk7CiAgICBudmcuU2F2ZSgpOwoKICAgIG52Zy5UcmFuc2xhdGUoc2l6ZS53aWR0aCAvIDQsIHNpemUuaGVpZ2h0IC8gNCk7CiAgICAvKiAgIG52Zy5TY2FsZSgyLDEpOwogICAgbnZnLlJvdGF0ZSgoKHRpbWVyLnRpY2tzKDE4MCkgJSAzNjApICogTWF0aC5QSSkgLyAxODApOwogIG52Zy5TY2FsZSgwLjUsMSk7CiAqLwogICAgRHJhd0NpcmNsZShhLCA0MCwgMiwgWzAsIDAsIDBdLCBbMjU1LCAyNTUsIDAsIDE5Ml0pOwoKICAgIG52Zy5SZXN0b3JlKCk7CgogICAgRHJhd0NpcmNsZShjZW50ZXIsIDEwMCk7CgogICAgbnZnLkVuZEZyYW1lKCk7CgogICAgSW1HdWkuTmV3RnJhbWUoKTsKCiAgICBJbUd1aS5CZWdpbignUGFyYW1ldGVycycsIG51bGwsIEltR3VpLldpbmRvd0ZsYWdzLk1lbnVCYXIpOwoKICAgIEltR3VpLlNldFdpbmRvd1NpemUoWzQwMCwgMzAwXSk7CiAgICBJbUd1aS5QdXNoSXRlbVdpZHRoKEltR3VpLkdldEZvbnRTaXplKCkgKiAtMTIpOwoKICAgIEltR3VpLlRleHQoJ0FkanVzdCB2YWx1ZXMgZm9yIHRoaXMgcHJvY2Vzc2luZyBzdGVwOicpOwoKICAgIEltR3VpLkRyYWdGbG9hdCgnVmFsdWUnLCB2YWwgPT4gKHZhbCA9PT0gdW5kZWZpbmVkID8gZmxvYXRWYWx1ZSA6IChmbG9hdFZhbHVlID0gdmFsKSksIDAuMCwgMS4wLCAnJS4zZicpOwogICAgSW1HdWkuU2xpZGVyRmxvYXQoJ1ZhbHVlJywgdmFsID0+ICh2YWwgPT09IHVuZGVmaW5lZCA/IGZsb2F0VmFsdWUgOiAoZmxvYXRWYWx1ZSA9IHZhbCkpLCAwLjAsIDEuMCwgJyUuM2YnKTsKICAgIEltR3VpLlNsaWRlckludCgnQWxwaGEnLCB2YWwgPT4gKHZhbCA9PT0gdW5kZWZpbmVkID8gTWF0aC5mbG9vcihhbHBoYVZhbHVlKSA6IChhbHBoYVZhbHVlID0gTWF0aC5mbG9vcih2YWwpKSksIDAsIDI1NSk7CgogICAgSW1HdWkuRW5kKCk7CgogICAgSW1HdWkuUmVuZGVyKCk7CgogICAgbGV0IGRhdGEgPSBJbUd1aS5HZXREcmF3RGF0YSgpOwoKICAgIEltR3VpLlJlbmRlckRyYXdEYXRhKGRhdGEpOwoKICAgIC8qIGxldCB7IGlkLFZhbGlkLCBDbWRMaXN0c0NvdW50LCBUb3RhbElkeENvdW50LCBUb3RhbFZ0eENvdW50LCBEaXNwbGF5UG9zLCBEaXNwbGF5U2l6ZSwgRnJhbWVidWZmZXJTY2FsZSB9ID0gZGF0YTsKICAgIGNvbnNvbGUubG9nKCdkYXRhJywgaWQsIHtWYWxpZCwgQ21kTGlzdHNDb3VudCwgVG90YWxJZHhDb3VudCwgVG90YWxWdHhDb3VudCwgRGlzcGxheVBvcywgRGlzcGxheVNpemUsIEZyYW1lYnVmZmVyU2NhbGUgfSk7CiovCiAgICBjb250ZXh0LmVuZCgpOwogICAgLyp3aW5kb3cuc3dhcEJ1ZmZlcnMoKTsKICAgIGdsZncucG9sbCgpOyovCiAgICBpKys7CgogICAgdGltZXIuZnJhbWUoKTsKICB9Cn0KCnRyeSB7CiAgbWFpbiguLi5zY3JpcHRBcmdzLnNsaWNlKDEpKTsKfSBjYXRjaChlcnJvcikgewogIGNvbnNvbGUubG9nKGVycm9yID8gJ0ZBSUw6ICcgKyBlcnJvci5tZXNzYWdlICsgJ1xuJyArIGVycm9yLnN0YWNrIDogJ0ZBSUw6ICcgKyBlcnJvcik7CiAgc3RkLmV4aXQoMSk7Cn0KAAAAAAAAAAADGwAAAAAAAAAAAAAAAAAAAAAAAAMbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC6DgAAAAAAALoOAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "qjs-opencv/js/cvHighGUI.js",
			"settings":
			{
				"buffer_size": 5923,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAMsIAAAAAAAAzAgAAAAAAAAAAAAAzAgAAAAAAADNCAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLCAAAAAAAAMsIAAAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"book",
				"Bookmarks: Toggle"
			],
			[
				"json",
				"Pretty JSON: Minify JSON"
			],
			[
				"jspr",
				"JsPrettier: Format Code"
			],
			[
				"outline",
				"Browse Mode: Outline (Right)"
			],
			[
				"color",
				"Color Highlight: Reset"
			],
			[
				"scheme",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit cu",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"edit ",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"edit",
				"Color Scheme Editor: Edit current color scheme"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"outli",
				"Browse Mode: Outline (Right)"
			],
			[
				"debugger",
				"Preferences: Debugger Settings"
			],
			[
				"add re",
				"Package Control: Add Repository"
			],
			[
				"outlin",
				"Browse Mode: Outline (Right)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"",
				"Arithmetic"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: disable",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"adap",
				"Debugger: Install Adapters"
			],
			[
				"install ada",
				"Debugger: Install Adapters"
			],
			[
				"adapter",
				"Debugger: Install Adapters"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"Package Control: remove",
				"Package Control: Remove Package"
			],
			[
				"debu",
				"Debugger: Install Adapters"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 289.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv",
		"/home/roman/Projects/plot-cv/uploads"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/qjs-opencv/js/cvVideo.js",
		"/home/roman/Projects/plot-cv/upload-server.js",
		"/home/roman/Projects/plot-cv/test-worker.js",
		"/home/roman/Projects/plot-cv/test-umat.js",
		"/home/roman/Projects/plot-cv/lib/iterator/helpers.js",
		"/home/roman/Projects/plot-cv/json-iterator.js",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.ts",
		"/home/roman/Projects/plot-cv/debugger.js",
		"/home/roman/Projects/plot-cv/param.js",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Projects/plot-cv/cli-helpers.js",
		"/home/roman/Projects/plot-cv/test-nanovg.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/qjsval.c",
		"/home/roman/Dokumente/bookmarks_26.05.23.html",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-xml.c",
		"/home/roman/Projects/plot-cv/events.js",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/require.js",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/lib/iterator/event.js",
		"/home/roman/Projects/plot-cv/lib/events.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/test-asynciterator.js",
		"/home/roman/Projects/plot-cv/test-repeater.js",
		"/home/roman/Projects/plot-cv/lib/parse-diff.js",
		"/home/roman/Projects/plot-cv/compile_commands.js",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/dir-helpers.js",
		"/home/roman/Projects/plot-cv/lib/path.js",
		"/home/roman/Projects/plot-cv/lib/compileCommand.js",
		"/home/roman/Projects/plot-cv/lib/util.js",
		"/home/roman/Projects/plot-cv/fire.js",
		"/home/roman/Projects/plot-cv/lib/filesystem.js",
		"/home/roman/Projects/plot-cv/os-helpers.js",
		"/home/roman/Projects/plot-cv/static/debugger.css",
		"/home/roman/Projects/plot-cv/lib/dom/preactComponent.js",
		"/home/roman/Projects/plot-cv/debugger-client.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/assemblyscript/util/terminal.js",
		"/home/roman/Projects/plot-cv/quickjs-misc.c.ast.bjson",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/quickjs/qjscalc.js",
		"/home/roman/Projects/plot-cv/quickjs/core",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/console.js",
		"/home/roman/Projects/plot-cv/core.qjsm.33358.VivoBook-X512FA.1684377984",
		"/home/roman/Projects/plot-cv/core.qjsm.33302.VivoBook-X512FA.1684377956",
		"/home/roman/Projects/plot-cv/core.qjsm.33122.VivoBook-X512FA.1684377931",
		"/home/roman/Projects/plot-cv/core.qjsm.115379.VivoBook-X512FA.1684385395",
		"/home/roman/Projects/plot-cv/terminal.js",
		"/home/roman/Projects/plot-cv/quickjs/qjsc.c",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-location.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-deep.c",
		"/home/roman/Projects/plot-cv/qjs-opencv/jsbindings.hpp",
		"/home/roman/.config/sublime-text/Packages/Outline/common.py",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_object.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_subdiv2d.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/jsbindings.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/util.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/opencv/modules/core/include/opencv2/core/mat.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_mat.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_cv.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_umat.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_rect.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_contour.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/geometry.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_point.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_array.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_line.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_line.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/line.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/trace_skeleton.hpp",
		"/opt/opencv-4.5.5-x86_64/include/opencv4/opencv2/imgproc.hpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_draw.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_line_segment_detector.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/lsd/src/lsd_opencv.cpp",
		"/home/roman/Projects/plot-cv/qjs-opencv/line_segment_detector.js",
		"/home/roman/Projects/plot-cv/qjs-opencv/js_contour.cpp",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/TODO",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/tests/test_dom.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/queue.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/getdents.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/path.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-blob.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/modules.sublime-project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-inspect.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mysql.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/property-enumeration.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/vector.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/vector.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/process.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-tree-walker.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/property-enumeration.c",
		"/home/roman/Projects/assemblyscript/butterchurn/src/utils.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/repl.js",
		"/home/roman/Projects/plot-cv/fire.es",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/asynciterator.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-asynciterator.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/remove-functions.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/jsutils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/jsutils.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-asynciterator.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-client.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/session.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/buffer.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/lib/generator.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/js/rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/include/libwebsockets/lws-ws-state.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/minimal-examples/ws-client/minimal-ws-client-spam-tx-rx/minimal-ws-client.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-server-ws.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-request.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/src/minnet-response.c",
		"/home/roman/Projects/plot-cv/fire/.prettierrc"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 146.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.c,*.h,*.jsx,-*/libwebsockets/*,-*/node_modules/*",
			"/home/roman/Projects/plot-cv,*.c,*.h,*.js,-*/libwebsockets/*,-*/node_modules/*",
			"/home/roman/Projects/plot-cv,*.c,*.h,*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"WNOHANG",
			"'os'",
			"setReadHandler",
			"setReadHandler$",
			"setReadHandler",
			"poll\\(",
			"^js_os_pol",
			"js_os_pol",
			"\\balloca\\b",
			"\\balloca\\.h\\b",
			"\\balloca\\b",
			"alloca\\(",
			"alloca",
			"USE_WORKER",
			"handle_posted_message",
			"js_os_poll",
			"propId",
			"Proxy",
			"}\\n(  |)([^ ])",
			"}\\n  ([^ ])",
			"^export",
			"std\\.",
			"__filename",
			"Window.up",
			"LineSegment",
			"opts",
			"xml_read",
			"pr0n",
			"<p>",
			"new REPL",
			"m.buffer",
			"\\bdepth\\b",
			"depth",
			"delta",
			"null'",
			"nl\\(",
			"' '",
			"source",
			"LoadAST",
			"FindFunc",
			"SharedArrayBuffer",
			"process\\.",
			"prevTime",
			"Symbol.toString",
			"toStringTag",
			"new Console",
			"Console ",
			"hideKeys",
			"Pipeline",
			"debug",
			"DEBUG",
			"pipeline",
			"atexit",
			"rectangle",
			"font",
			"Font",
			"print",
			"variables",
			"Table",
			"saveC",
			"kill\\(",
			"atexit",
			"StartDebugger",
			"child =",
			"Table",
			"FindFunction",
			"\\bfiles\\b",
			"callback",
			"LaunchDebu",
			"NewDebugger",
			"skipToMain",
			"ConnectDebugger",
			"parseFiles",
			"fileNameDiffRegex",
			"push",
			"JS_DefineProperty",
			"req\\.(url|method|body)",
			"error.css",
			"404",
			"new Directory",
			"extendGenerator",
			"Directory",
			"keys\\(",
			"logFile",
			"\\bout\\b",
			"\\bERR\\b",
			"net\\.",
			"import net",
			"'net'",
			"'net'0'",
			"debug\\(`(.*)`, ([^\\s)]*)\\)",
			"packagePaths",
			"fnmatch",
			"\\b(Emitter|EventIterator|EventEmitter|EventTarget)\\b",
			"StartDebugger",
			"get flags",
			"ArgumentType",
			"get flags",
			"commands",
			"assert",
			"\\bstd\\b",
			"std\\.",
			"FdReader",
			"ReadBJSON",
			"ReadJSON",
			"ReadFile",
			"io-helper",
			"strerror",
			"startInteractive",
			"getScreenSize",
			"valuePointer",
			"fromFile",
			"readFileSync",
			"collapse",
			"isRelative",
			"isAbsolute",
			"isAbsolutge",
			"isRelative",
			"glob\\b",
			"glob",
			"\\bglob\\b",
			"exec",
			"'start'",
			"Initiate",
			"process",
			"Reconnec",
			"'connect'",
			"Connect"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"}\\n\\n\\1\\2",
			"}\\n\\n  \\1",
			"buf",
			"\\1",
			"debug(`\\1 ${\\2}`)",
			"fs.readFileSync",
			", ",
			"strOrRegex",
			"argumentsOfType",
			"valuePointer",
			"file",
			"arrayOrString",
			"",
			"\\1//console.",
			"obj[name]"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1493,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/debugger-server.js",
							"function_name_status_row": 18,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									1566,
									1603
								],
								[
									1679,
									1684
								],
								[
									1807,
									1824
								],
								[
									2220,
									2258
								],
								[
									2490,
									2511
								],
								[
									2711,
									2741
								],
								[
									4300,
									4304
								],
								[
									4323,
									4351
								],
								[
									4363,
									4377
								],
								[
									4542,
									4547
								],
								[
									4698,
									4712
								],
								[
									5194,
									5198
								],
								[
									5258,
									5262
								],
								[
									5490,
									5497
								],
								[
									5539,
									5556
								],
								[
									5796,
									5843
								],
								[
									6330,
									6393
								],
								[
									6903,
									6926
								],
								[
									7866,
									7885
								],
								[
									8051,
									8098
								],
								[
									8145,
									8156
								],
								[
									8748,
									8766
								],
								[
									8867,
									8884
								],
								[
									9058,
									9062
								],
								[
									9137,
									9174
								],
								[
									9333,
									9337
								],
								[
									9677,
									9709
								],
								[
									9878,
									9902
								],
								[
									9916,
									9942
								],
								[
									10249,
									10253
								],
								[
									10373,
									10396
								],
								[
									10452,
									10470
								],
								[
									10647,
									10662
								],
								[
									11105,
									11120
								],
								[
									11504,
									11533
								],
								[
									11623,
									11636
								],
								[
									12355,
									12365
								],
								[
									12508,
									12526
								],
								[
									13007,
									13025
								],
								[
									13026,
									13033
								],
								[
									13066,
									13121
								],
								[
									13421,
									13432
								],
								[
									13566,
									13595
								],
								[
									13813,
									13835
								],
								[
									14149,
									14159
								],
								[
									14367,
									14381
								],
								[
									14435,
									14449
								],
								[
									15467,
									15510
								],
								[
									15696,
									15702
								],
								[
									15715,
									15731
								],
								[
									17305,
									17341
								],
								[
									17529,
									17564
								],
								[
									17704,
									17708
								],
								[
									17835,
									17853
								],
								[
									18007,
									18039
								],
								[
									18388,
									18399
								],
								[
									18554,
									18565
								],
								[
									18625,
									18645
								],
								[
									19234,
									19269
								],
								[
									19672,
									19691
								],
								[
									19792,
									19834
								],
								[
									20663,
									20686
								],
								[
									20724,
									20731
								],
								[
									21756,
									21761
								],
								[
									22952,
									22967
								],
								[
									23293,
									23299
								],
								[
									26465,
									26481
								],
								[
									26810,
									26816
								],
								[
									27221,
									27246
								],
								[
									27593,
									27610
								],
								[
									27662,
									27676
								],
								[
									28022,
									28032
								],
								[
									28156,
									28173
								],
								[
									28205,
									28220
								],
								[
									28263,
									28277
								],
								[
									28281,
									28296
								],
								[
									28439,
									28443
								],
								[
									28520,
									28527
								],
								[
									28953,
									28962
								],
								[
									29078,
									29084
								],
								[
									29142,
									29155
								],
								[
									29370,
									29387
								],
								[
									29540,
									29582
								],
								[
									29947,
									29978
								],
								[
									30060,
									30076
								],
								[
									30257,
									30265
								],
								[
									30397,
									30417
								]
							],
							"symlist":
							[
								"  scriptName = (arg = scriptArgs[0]) =>",
								"() =>",
								"  signalName = n =>",
								"  checkChildExited(pid, status)",
								"GetLoc(node)",
								"LoadAST(source)",
								"  a =>",
								"StartREPL(prefix = ",
								", suffix = '')",
								"() =>",
								"  .show = arg =>",
								"  k =>",
								"  k =>",
								"  item =>",
								"(acc, keys, i) =>",
								"StartDebugger(args, connect, address)",
								"ConnectDebugger(address, skipToMain = true, callback)",
								"  process(callback)",
								"  sendMessage: msg =>",
								"LaunchDebugger(dbg, skipToMain = true)",
								"() =>",
								"DebuggerDispatcher",
								"  value(name)",
								"  v =>",
								"PrintStackFrame(frame)",
								"  f =>",
								"PrintStack(stack)",
								"(member, obj, prop) =>",
								"  breakpoints(...args)",
								"  b =>",
								"  stackTrace(frame)",
								"frame =>",
								"  scopes(n)",
								"  waitRun()",
								"  variables(n, depth = 0)",
								"  add = item =>",
								"  toString()",
								"DebuggerDispatcher",
								"(port = 8777) =>",
								"() =>",
								"NewDebugger(args, skipToMain = false, address)",
								"  kill: () =>",
								"OnStopped(msg)",
								"  main(...args)",
								"(a, v) =>",
								"(v, pv, o) =>",
								"(v, pv, o) =>",
								"  createWS(url, callbacks, listen)",
								"() =>",
								"(level, str) =>",
								"  config(req, res)",
								"  files(req, res)",
								"  f =>",
								"  onConnect(ws, req)",
								"  value: function sendMessage(msg)",
								"  onClose(ws)",
								"  onError(ws)",
								"  onRequest(req, resp)",
								"(match, p1, p0, p2, p3, offset) =>",
								"  onMessage(ws, data)",
								"  handleCommand(ws, data)",
								"  forward = (fd, name) =>",
								"buf =>",
								"() =>",
								"(dbg, sock) =>",
								"  msg =>",
								"  onFd(fd, rd, wr)",
								"() =>",
								"  showSessions()",
								"  get connections()",
								"  get socklist()",
								"  get file()",
								"(file, source) =>",
								"() =>",
								"s =>",
								"() =>",
								"  m =>",
								"  line(i)",
								"  match(re)",
								"  fns =>",
								"({ name }) =>",
								"  functions()",
								"([name, loc, params, expression, path]) =>",
								"  repeat(cond, fn, ...args)",
								"  cond = (r, i) =>",
								"  daemon()",
								"  quit(why)"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1685224958.36,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "test-matshared.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 404,
						"regions":
						{
						},
						"selection":
						[
							[
								361,
								361
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 13,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tabs_extra_last_activated": 1685114146.26,
							"tabs_extra_last_activated_sheet_index": 0
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "test-opencv.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24136,
						"regions":
						{
						},
						"selection":
						[
							[
								3967,
								4000
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 134,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1685236884.34,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2822.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "quickjs/quickjs-libc.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 99786,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1685224929.88,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 51734.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "test-minnet.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3856,
						"regions":
						{
						},
						"selection":
						[
							[
								40,
								40
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1685236845.13,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "debugger-server.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 30744,
						"regions":
						{
						},
						"selection":
						[
							[
								1889,
								1889
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 42,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1685259447.38,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "test-sockets.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1209,
						"regions":
						{
						},
						"selection":
						[
							[
								1049,
								1049
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 32,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1685236825.99,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 62.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "count-neighbours.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 466,
						"regions":
						{
						},
						"selection":
						[
							[
								278,
								278
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"auto_name": "import { filter2D,Mat,imread } from 'opencv';",
							"function_name_status_row": 8,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1685254960.14,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 152.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "compile_commands.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5757,
						"regions":
						{
						},
						"selection":
						[
							[
								4157,
								4159
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 141,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1685240341.15,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2966.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11685,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										137,
										143
									],
									[
										167,
										173
									],
									[
										235,
										241
									],
									[
										278,
										284
									],
									[
										382,
										388
									],
									[
										412,
										418
									],
									[
										480,
										486
									],
									[
										523,
										529
									],
									[
										644,
										650
									],
									[
										674,
										680
									],
									[
										742,
										748
									],
									[
										785,
										791
									],
									[
										910,
										916
									],
									[
										940,
										946
									],
									[
										1008,
										1014
									],
									[
										1051,
										1057
									],
									[
										1167,
										1173
									],
									[
										1197,
										1203
									],
									[
										1265,
										1271
									],
									[
										1308,
										1314
									],
									[
										1426,
										1432
									],
									[
										1456,
										1462
									],
									[
										1524,
										1530
									],
									[
										1567,
										1573
									],
									[
										1686,
										1692
									],
									[
										1716,
										1722
									],
									[
										1784,
										1790
									],
									[
										1827,
										1833
									],
									[
										2063,
										2069
									],
									[
										2435,
										2441
									],
									[
										2712,
										2718
									],
									[
										2995,
										3001
									],
									[
										3201,
										3207
									],
									[
										3400,
										3406
									],
									[
										3539,
										3545
									],
									[
										3772,
										3778
									],
									[
										4028,
										4034
									],
									[
										4333,
										4339
									],
									[
										4600,
										4606
									],
									[
										4832,
										4838
									],
									[
										5178,
										5184
									],
									[
										5550,
										5556
									],
									[
										5827,
										5833
									],
									[
										6110,
										6116
									],
									[
										6316,
										6322
									],
									[
										6515,
										6521
									],
									[
										6654,
										6660
									],
									[
										6887,
										6893
									],
									[
										7143,
										7149
									],
									[
										7448,
										7454
									],
									[
										7715,
										7721
									],
									[
										7947,
										7953
									],
									[
										8175,
										8183
									],
									[
										8314,
										8322
									],
									[
										8488,
										8496
									],
									[
										8832,
										8838
									],
									[
										9204,
										9210
									],
									[
										9481,
										9487
									],
									[
										9764,
										9770
									],
									[
										9970,
										9976
									],
									[
										10169,
										10175
									],
									[
										10308,
										10314
									],
									[
										10541,
										10547
									],
									[
										10797,
										10803
									],
									[
										11102,
										11108
									],
									[
										11369,
										11375
									],
									[
										11601,
										11607
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								11374,
								11374
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"detect_indentation": false,
							"function_name_status_row": 333,
							"line_numbers": false,
							"output_tag": 4,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1685223897.93,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7968.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "quickjs/qjs-modules/src/ringbuffer.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2688,
						"regions":
						{
						},
						"selection":
						[
							[
								1564,
								1564
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 84,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1685223898.43,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1575.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "quickjs/libregexp.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 68667,
						"regions":
						{
						},
						"selection":
						[
							[
								66794,
								66794
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 2437,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1685223901.1,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 58839.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "quickjs/quickjs.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1786229,
						"regions":
						{
						},
						"selection":
						[
							[
								163768,
								163768
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 4,
							"tabs_extra_last_activated": 1685223877.56,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 124791.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "qjs-opencv/js/cvUtils.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6031,
						"regions":
						{
						},
						"selection":
						[
							[
								5544,
								5550
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 197,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1685157715.96,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4348.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "test-nanovg.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6915,
						"regions":
						{
						},
						"selection":
						[
							[
								3770,
								3770
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 134,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1685156884.42,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2520.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "qjs-opencv/js/cvHighGUI.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5923,
						"regions":
						{
						},
						"selection":
						[
							[
								2253,
								2253
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 72,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1685114627.16,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1310.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 0.0
	},
	"output.Debugger Console":
	{
		"height": 0.0
	},
	"output.coffeecompile_output":
	{
		"height": 162.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"debugger-server",
				"debugger-server.js"
			],
			[
				"compile_c",
				"compile_commands.js"
			],
			[
				"count",
				"count-neighbours.js"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"test-sock",
				"test-sockets.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"test-minn",
				"test-minnet.js"
			],
			[
				"quickjs-libc.c",
				"quickjs/quickjs-libc.c"
			],
			[
				"cvutil",
				"qjs-opencv/js/cvUtils.js"
			],
			[
				"cvVide",
				"qjs-opencv/js/cvVideo.js"
			],
			[
				"test-opencv.",
				"test-opencv.js"
			],
			[
				"test-nano",
				"test-nanovg.js"
			],
			[
				"cvHi",
				"qjs-opencv/js/cvHighGUI.js"
			],
			[
				"quickjs-xml",
				"quickjs/qjs-modules/quickjs-xml.c"
			],
			[
				"qjsval.c",
				"qjsval.c"
			],
			[
				"test-mat",
				"test-matshared.js"
			],
			[
				"quickjs-misc",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"matsha",
				"test-matshared.js"
			],
			[
				"debugger.js",
				"debugger.js"
			],
			[
				"json-i",
				"json-iterator.js"
			],
			[
				"iterator/help",
				"lib/iterator/helpers.js"
			],
			[
				"repeater.ts",
				"lib/repeater/repeater.ts"
			],
			[
				"upload-server",
				"upload-server.js"
			],
			[
				"test-work",
				"test-worker.js"
			],
			[
				"test-uma",
				"test-umat.js"
			],
			[
				"param.",
				"param.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"cli-helper",
				"cli-helpers.js"
			],
			[
				"test-vide",
				"test-video.js"
			],
			[
				"upload-ser",
				"upload-server.js"
			],
			[
				"test-repeat",
				"test-repeater.js"
			],
			[
				"quickjs.h",
				"quickjs/quickjs.h"
			],
			[
				"require.js",
				"quickjs/qjs-modules/lib/require.js"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"events.js",
				"events.js"
			],
			[
				"lib/events",
				"lib/events.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"dir-help",
				"dir-helpers.js"
			],
			[
				"io-helpe",
				"io-helpers.js"
			],
			[
				"lib/util",
				"lib/util.js"
			],
			[
				"io-help",
				"io-helpers.js"
			],
			[
				"path.js",
				"lib/path.js"
			],
			[
				"lib/misc",
				"lib/misc.js"
			],
			[
				"lib/filesys",
				"lib/filesystem.js"
			],
			[
				"lib/path",
				"lib/path.js"
			],
			[
				"compileComm",
				"lib/compileCommand.js"
			],
			[
				"qjsm",
				"quickjs/qjs-modules/src/qjsm.c"
			],
			[
				"io-he",
				"io-helpers.js"
			],
			[
				"fire",
				"fire.js"
			],
			[
				"debugger-cie",
				"debugger-client.js"
			],
			[
				"debugger-cli",
				"debugger-client.js"
			],
			[
				"preactC",
				"lib/dom/preactComponent.js"
			],
			[
				"debugger.css",
				"static/debugger.css"
			],
			[
				"debugger-clie",
				"debugger-client.js"
			],
			[
				"os-help",
				"os-helpers.js"
			],
			[
				"termin",
				"assemblyscript/util/terminal.js"
			],
			[
				"util.js",
				"lib/util.js"
			],
			[
				"lib/compi",
				"lib/compileCommand.js"
			],
			[
				"compile_comm",
				"compile_commands.js"
			],
			[
				"commands",
				"lib/compileCommand.js"
			],
			[
				"dir-he",
				"dir-helpers.js"
			],
			[
				"compileCom",
				"lib/compileCommand.js"
			],
			[
				"compile_",
				"compile_commands.js"
			],
			[
				"console.js",
				"quickjs/qjs-modules/lib/console.js"
			],
			[
				"compile_com",
				"compile_commands.js"
			],
			[
				"misc",
				"lib/misc.js"
			],
			[
				"debugger",
				"debugger.js"
			],
			[
				"find-",
				"quickjs-find-module.c"
			],
			[
				"qjsc.c",
				"qjsc.c"
			],
			[
				"cmakelists",
				"CMakeLists.txt"
			],
			[
				"quickjs-lib",
				"quickjs-libc.h"
			],
			[
				"quickjs-libc",
				"quickjs-libc.c"
			],
			[
				"quickjs-loc",
				"qjs-modules/quickjs-location.c"
			],
			[
				"quickjs-deep",
				"qjs-modules/quickjs-deep.c"
			],
			[
				"quickjs.c",
				"quickjs.c"
			],
			[
				"js_img",
				"js_imgproc.cpp"
			],
			[
				"js_imgpr",
				"js_imgproc.cpp"
			],
			[
				"trace",
				"trace_skeleton.hpp"
			],
			[
				"js_imgp",
				"js_imgproc.cpp"
			],
			[
				"umat.hpp",
				"js_umat.hpp"
			],
			[
				"js_line_seg",
				"js_line_segment_detector.cpp"
			],
			[
				"js_cv",
				"js_cv.cpp"
			],
			[
				"util.hpp",
				"util.hpp"
			],
			[
				"mat.hpp",
				"opencv/modules/core/include/opencv2/core/mat.hpp"
			],
			[
				"line.hpp",
				"line.hpp"
			],
			[
				"js_Draw",
				"js_draw.cpp"
			],
			[
				"js_Dr",
				"js_draw.cpp"
			],
			[
				"",
				"js_line_segment_detector.cpp"
			],
			[
				"line_seg",
				"js_line_segment_detector.cpp"
			],
			[
				"geom",
				"geometry.hpp"
			],
			[
				"geomtry",
				"geometry.hpp"
			],
			[
				"quickjs-ins",
				"quickjs-inspect.c"
			],
			[
				"repl.j",
				"lib/repl.js"
			],
			[
				"qjsm.c",
				"src/qjsm.c"
			],
			[
				"repl.js",
				"lib/repl.js"
			],
			[
				"quickjs-inp",
				"quickjs-inspect.c"
			],
			[
				"quickjs-sock",
				"quickjs-sockets.c"
			],
			[
				"test_Sock",
				"tests/test_sockets.js"
			],
			[
				"repl",
				"lib/repl.js"
			],
			[
				"resolve-impo",
				"resolve-imports.js"
			],
			[
				"console",
				"lib/console.js"
			],
			[
				"utils.c",
				"src/utils.c"
			],
			[
				"utils.h",
				"include/utils.h"
			],
			[
				"sockets.c",
				"quickjs-sockets.c"
			],
			[
				"quickjs-my",
				"quickjs-mysql.c"
			],
			[
				"vector.c",
				"src/vector.c"
			],
			[
				"proper",
				"src/property-enumeration.c"
			],
			[
				"deep",
				"quickjs-deep.c"
			],
			[
				"process.j",
				"lib/process.js"
			],
			[
				"vect",
				"src/vector.c"
			],
			[
				"inspect.c",
				"quickjs-inspect.c"
			],
			[
				"wscli",
				"wscli.js"
			],
			[
				"fire.js",
				"fire.js"
			],
			[
				"rpc.js",
				"js/rpc.js"
			],
			[
				"asynciter",
				"lib/asynciterator.c"
			],
			[
				"asyn",
				"lib/asynciterator.c"
			],
			[
				"minnet-asy",
				"src/minnet-asynciterator.c"
			],
			[
				"asynciterat",
				"lib/asynciterator.c"
			],
			[
				"minnet-clie",
				"src/minnet-client.c"
			],
			[
				"async",
				"lib/asynciterator.c"
			],
			[
				"minnet-as",
				"src/minnet-asynciterator.h"
			],
			[
				"jsutils",
				"lib/jsutils.c"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"minnet-cli",
				"src/minnet-client.c"
			],
			[
				"minnet-req",
				"src/minnet-request.c"
			],
			[
				"minnet-resp",
				"src/minnet-response.c"
			],
			[
				"index",
				"assembly/index.ts"
			],
			[
				"fire-debu",
				"~/Projects/plot-cv/fire/build/fire-debug.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Projects/plot-cv/plot-cv.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 271.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"WS"
			]
		],
		"width": 1017.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 437.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
