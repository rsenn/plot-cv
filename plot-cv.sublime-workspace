{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "Circle = ({ data, opts = {}, ...props }) =>\n()\n  i =>",
			"settings":
			{
				"buffer_size": 53,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					19,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/geom/transformation.js",
						"symkeys":
						[
							[
								275,
								289
							],
							[
								316,
								343
							],
							[
								799,
								809
							],
							[
								1119,
								1137
							],
							[
								1220,
								1230
							],
							[
								1307,
								1314
							],
							[
								1336,
								1347
							],
							[
								1403,
								1409
							],
							[
								1432,
								1441
							],
							[
								1535,
								1545
							],
							[
								1581,
								1590
							],
							[
								1619,
								1626
							],
							[
								1655,
								1663
							],
							[
								1720,
								1732
							],
							[
								1844,
								1852
							],
							[
								1872,
								1880
							],
							[
								1901,
								1916
							],
							[
								2010,
								2017
							],
							[
								2109,
								2123
							],
							[
								2232,
								2254
							],
							[
								2488,
								2494
							],
							[
								2537,
								2543
							],
							[
								3785,
								3806
							],
							[
								3836,
								3860
							],
							[
								3893,
								3913
							],
							[
								3942,
								3961
							],
							[
								4132,
								4143
							],
							[
								4253,
								4260
							],
							[
								4292,
								4296
							],
							[
								4403,
								4411
							],
							[
								4475,
								4499
							],
							[
								4777,
								4785
							],
							[
								4844,
								4856
							],
							[
								4913,
								4923
							],
							[
								4962,
								4970
							],
							[
								5008,
								5023
							],
							[
								5296,
								5304
							],
							[
								5344,
								5354
							],
							[
								5576,
								5584
							],
							[
								5727,
								5744
							],
							[
								5937,
								5969
							],
							[
								6201,
								6209
							],
							[
								6358,
								6369
							],
							[
								6435,
								6455
							],
							[
								6732,
								6736
							],
							[
								6975,
								6987
							],
							[
								7076,
								7084
							],
							[
								7434,
								7442
							],
							[
								7612,
								7629
							],
							[
								7915,
								7926
							],
							[
								8084,
								8091
							],
							[
								8157,
								8177
							],
							[
								8570,
								8582
							],
							[
								8775,
								8783
							],
							[
								8895,
								8905
							],
							[
								9174,
								9182
							],
							[
								9313,
								9330
							],
							[
								9608,
								9615
							],
							[
								9761,
								9781
							],
							[
								9838,
								9855
							],
							[
								10047,
								10059
							],
							[
								10193,
								10203
							],
							[
								10250,
								10258
							],
							[
								10327,
								10335
							],
							[
								10382,
								10399
							],
							[
								10598,
								10618
							],
							[
								10807,
								10825
							],
							[
								10844,
								10875
							],
							[
								11264,
								11280
							],
							[
								11400,
								11418
							],
							[
								11493,
								11511
							],
							[
								11895,
								11910
							],
							[
								12179,
								12193
							],
							[
								12495,
								12516
							],
							[
								12605,
								12631
							],
							[
								12736,
								12754
							],
							[
								12837,
								12860
							],
							[
								12958,
								12980
							],
							[
								13043,
								13064
							],
							[
								13126,
								13151
							],
							[
								13327,
								13336
							],
							[
								13434,
								13443
							],
							[
								13711,
								13724
							],
							[
								13966,
								13973
							],
							[
								13996,
								14000
							],
							[
								14037,
								14044
							],
							[
								14105,
								14119
							],
							[
								14187,
								14202
							],
							[
								14271,
								14286
							],
							[
								14475,
								14487
							],
							[
								14553,
								14586
							],
							[
								14599,
								14612
							],
							[
								14785,
								14801
							],
							[
								14989,
								15004
							],
							[
								15143,
								15158
							],
							[
								15189,
								15193
							],
							[
								15607,
								15621
							],
							[
								15756,
								15771
							],
							[
								15958,
								15980
							],
							[
								16119,
								16123
							],
							[
								16283,
								16290
							],
							[
								16405,
								16415
							],
							[
								16482,
								16486
							],
							[
								16541,
								16553
							],
							[
								16580,
								16584
							],
							[
								16608,
								16618
							],
							[
								16684,
								16690
							],
							[
								16854,
								16868
							],
							[
								16980,
								16998
							],
							[
								17062,
								17114
							],
							[
								17548,
								17577
							],
							[
								17648,
								17672
							],
							[
								17811,
								17830
							],
							[
								17911,
								17925
							],
							[
								17953,
								17960
							],
							[
								18020,
								18039
							],
							[
								18077,
								18084
							],
							[
								18249,
								18262
							],
							[
								18290,
								18297
							],
							[
								18356,
								18374
							],
							[
								18412,
								18419
							],
							[
								18581,
								18598
							],
							[
								18626,
								18633
							],
							[
								18729,
								18751
							],
							[
								18789,
								18796
							],
							[
								19078,
								19088
							],
							[
								19121,
								19132
							],
							[
								19165,
								19172
							],
							[
								19240,
								19250
							],
							[
								19614,
								19627
							],
							[
								19696,
								19707
							],
							[
								19866,
								19874
							],
							[
								19992,
								20003
							],
							[
								20039,
								20054
							],
							[
								20113,
								20120
							],
							[
								20202,
								20226
							],
							[
								20390,
								20408
							],
							[
								20704,
								20722
							],
							[
								21236,
								21300
							],
							[
								21363,
								21430
							],
							[
								21496,
								21559
							],
							[
								21678,
								21684
							]
						],
						"symlist":
						[
							"Transformation",
							"constructor(transformation)",
							"get type()",
							"TransformationList",
							"get axes()",
							"axis =>",
							"get props()",
							"key =>",
							"has(axis)",
							"get is3D()",
							"entries()",
							"prop =>",
							"toJSON()",
							"vector(unit)",
							" axis =>",
							" axis =>",
							"toString(tUnit)",
							"clone()",
							"(acc, prop) =>",
							"static fromString(arg)",
							"arg =>",
							"arg =>",
							"static get rotation()",
							"static get translation()",
							"static get scaling()",
							"static get matrix()",
							"value(inst)",
							"ctor =>",
							"ctor",
							"Rotation",
							"constructor(angle, x, y)",
							"invert()",
							"get values()",
							"get is3D()",
							"isZero()",
							"toString(rUnit)",
							"coord =>",
							"toSource()",
							"coord =>",
							"accumulate(other)",
							"static convertAngle(angle, unit)",
							"Rotation",
							"Translation",
							"constructor(...args)",
							"a =>",
							"get values()",
							"isZero()",
							"invert()",
							"accumulate(other)",
							"Translation",
							"Scaling",
							"constructor(...args)",
							"get values()",
							"isZero()",
							"toString()",
							"invert()",
							"accumulate(other)",
							"Scaling",
							"MatrixTransformation",
							"constructor(init)",
							"get values()",
							"toString()",
							"invert()",
							"isZero()",
							"accumulate(other)",
							"MatrixTransformation",
							"TransformationList",
							"constructor(init, tUnit, rUnit)",
							"initialize(init)",
							"TransformationList",
							"TransformationList",
							"fromString(str)",
							"fromArray(arr)",
							"get translationUnit()",
							"set translationUnit(value)",
							"get rotationUnit()",
							"set rotationUnit(value)",
							"static fromString(str)",
							"static fromArray(arr)",
							"static fromMatrix(matrix)",
							"toArray()",
							"toArray()",
							"push(...args)",
							"clone()",
							"t =>",
							"map(fn)",
							"slice(...args)",
							"splice(...args)",
							"concat(...args)",
							"filter(pred)",
							"baseCall(c = Array.prototype.map)",
							" (...args) =>",
							"unshift(...args)",
							"rotate(...args)",
							"translate(x, y)",
							"t =>",
							"scale(...args)",
							"matrix(...args)",
							"toString(tUnit, rUnit)",
							"t =>",
							"toDOM()",
							"toSource()",
							"t =>",
							"toMatrices()",
							"t =>",
							"toMatrix()",
							"undo()",
							"merge(...args)",
							"TransformationList",
							"decompose(degrees = true, transformationList = true)",
							".toArray = function toArray()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"get rotation()",
							"item =>",
							"set rotation(value)",
							"item =>",
							"get scaling()",
							"item =>",
							"set scaling(value)",
							"item =>",
							"get translation()",
							"item =>",
							"set translation(value)",
							"item =>",
							"get last()",
							"get first()",
							"at(pos)",
							"collapse()",
							"collapseAll()",
							"get angle()",
							"invert()",
							"(acc, t) =>",
							"join(sep = ' ')",
							"clear()",
							"apply(obj, round = true)",
							"TransformationList",
							"TransformationList",
							"ImmutableTransformationList.prototype.rotate = function(...args)",
							"ImmutableTransformationList.prototype.translate = function(...args)",
							"ImmutableTransformationList.prototype.scale = function(...args)",
							" () =>"
						]
					},
					"AQAAAAAAAAAAAAAAkAkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					20,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/geom/transformation.js",
						"symkeys":
						[
							[
								275,
								289
							],
							[
								316,
								343
							],
							[
								799,
								809
							],
							[
								1119,
								1137
							],
							[
								1220,
								1230
							],
							[
								1307,
								1314
							],
							[
								1336,
								1347
							],
							[
								1403,
								1409
							],
							[
								1432,
								1441
							],
							[
								1535,
								1545
							],
							[
								1581,
								1590
							],
							[
								1619,
								1626
							],
							[
								1655,
								1663
							],
							[
								1720,
								1732
							],
							[
								1844,
								1852
							],
							[
								1872,
								1880
							],
							[
								1901,
								1916
							],
							[
								2010,
								2017
							],
							[
								2109,
								2123
							],
							[
								2232,
								2254
							],
							[
								2488,
								2494
							],
							[
								2537,
								2543
							],
							[
								3785,
								3806
							],
							[
								3836,
								3860
							],
							[
								3893,
								3913
							],
							[
								3942,
								3961
							],
							[
								4132,
								4143
							],
							[
								4253,
								4260
							],
							[
								4292,
								4296
							],
							[
								4403,
								4411
							],
							[
								4475,
								4499
							],
							[
								4777,
								4785
							],
							[
								4844,
								4856
							],
							[
								4913,
								4923
							],
							[
								4962,
								4970
							],
							[
								5008,
								5023
							],
							[
								5296,
								5304
							],
							[
								5344,
								5354
							],
							[
								5576,
								5584
							],
							[
								5727,
								5744
							],
							[
								5937,
								5969
							],
							[
								6201,
								6209
							],
							[
								6358,
								6369
							],
							[
								6435,
								6455
							],
							[
								6732,
								6736
							],
							[
								6975,
								6987
							],
							[
								7076,
								7084
							],
							[
								7434,
								7442
							],
							[
								7612,
								7629
							],
							[
								7915,
								7926
							],
							[
								8084,
								8091
							],
							[
								8157,
								8177
							],
							[
								8570,
								8582
							],
							[
								8775,
								8783
							],
							[
								8895,
								8905
							],
							[
								9174,
								9182
							],
							[
								9313,
								9330
							],
							[
								9608,
								9615
							],
							[
								9761,
								9781
							],
							[
								9838,
								9855
							],
							[
								10047,
								10059
							],
							[
								10193,
								10203
							],
							[
								10250,
								10258
							],
							[
								10327,
								10335
							],
							[
								10382,
								10399
							],
							[
								10598,
								10618
							],
							[
								10807,
								10825
							],
							[
								10844,
								10875
							],
							[
								11264,
								11280
							],
							[
								11400,
								11418
							],
							[
								11493,
								11511
							],
							[
								11895,
								11910
							],
							[
								12179,
								12193
							],
							[
								12518,
								12539
							],
							[
								12628,
								12654
							],
							[
								12759,
								12777
							],
							[
								12860,
								12883
							],
							[
								12981,
								13003
							],
							[
								13066,
								13087
							],
							[
								13149,
								13174
							],
							[
								13350,
								13359
							],
							[
								13457,
								13466
							],
							[
								13734,
								13747
							],
							[
								13989,
								13996
							],
							[
								14019,
								14023
							],
							[
								14060,
								14067
							],
							[
								14128,
								14142
							],
							[
								14210,
								14225
							],
							[
								14294,
								14309
							],
							[
								14498,
								14510
							],
							[
								14576,
								14609
							],
							[
								14622,
								14635
							],
							[
								14808,
								14824
							],
							[
								15012,
								15027
							],
							[
								15166,
								15181
							],
							[
								15212,
								15216
							],
							[
								15630,
								15644
							],
							[
								15779,
								15794
							],
							[
								15981,
								16003
							],
							[
								16142,
								16146
							],
							[
								16306,
								16313
							],
							[
								16428,
								16438
							],
							[
								16505,
								16509
							],
							[
								16564,
								16576
							],
							[
								16603,
								16607
							],
							[
								16631,
								16641
							],
							[
								16707,
								16713
							],
							[
								16877,
								16891
							],
							[
								17003,
								17021
							],
							[
								17085,
								17137
							],
							[
								17571,
								17600
							],
							[
								17671,
								17695
							],
							[
								17834,
								17853
							],
							[
								17934,
								17948
							],
							[
								17976,
								17983
							],
							[
								18043,
								18062
							],
							[
								18100,
								18107
							],
							[
								18272,
								18285
							],
							[
								18313,
								18320
							],
							[
								18379,
								18397
							],
							[
								18435,
								18442
							],
							[
								18604,
								18621
							],
							[
								18649,
								18656
							],
							[
								18752,
								18774
							],
							[
								18812,
								18819
							],
							[
								19101,
								19111
							],
							[
								19144,
								19155
							],
							[
								19188,
								19195
							],
							[
								19263,
								19273
							],
							[
								19637,
								19650
							],
							[
								19719,
								19730
							],
							[
								19889,
								19897
							],
							[
								20015,
								20026
							],
							[
								20062,
								20077
							],
							[
								20136,
								20143
							],
							[
								20225,
								20249
							],
							[
								20413,
								20431
							],
							[
								20727,
								20745
							],
							[
								21259,
								21323
							],
							[
								21386,
								21453
							],
							[
								21519,
								21582
							],
							[
								21701,
								21707
							]
						],
						"symlist":
						[
							"Transformation",
							"constructor(transformation)",
							"get type()",
							"TransformationList",
							"get axes()",
							"axis =>",
							"get props()",
							"key =>",
							"has(axis)",
							"get is3D()",
							"entries()",
							"prop =>",
							"toJSON()",
							"vector(unit)",
							" axis =>",
							" axis =>",
							"toString(tUnit)",
							"clone()",
							"(acc, prop) =>",
							"static fromString(arg)",
							"arg =>",
							"arg =>",
							"static get rotation()",
							"static get translation()",
							"static get scaling()",
							"static get matrix()",
							"value(inst)",
							"ctor =>",
							"ctor",
							"Rotation",
							"constructor(angle, x, y)",
							"invert()",
							"get values()",
							"get is3D()",
							"isZero()",
							"toString(rUnit)",
							"coord =>",
							"toSource()",
							"coord =>",
							"accumulate(other)",
							"static convertAngle(angle, unit)",
							"Rotation",
							"Translation",
							"constructor(...args)",
							"a =>",
							"get values()",
							"isZero()",
							"invert()",
							"accumulate(other)",
							"Translation",
							"Scaling",
							"constructor(...args)",
							"get values()",
							"isZero()",
							"toString()",
							"invert()",
							"accumulate(other)",
							"Scaling",
							"MatrixTransformation",
							"constructor(init)",
							"get values()",
							"toString()",
							"invert()",
							"isZero()",
							"accumulate(other)",
							"MatrixTransformation",
							"TransformationList",
							"constructor(init, tUnit, rUnit)",
							"initialize(init)",
							"TransformationList",
							"TransformationList",
							"fromString(str)",
							"fromArray(arr)",
							"get translationUnit()",
							"set translationUnit(value)",
							"get rotationUnit()",
							"set rotationUnit(value)",
							"static fromString(str)",
							"static fromArray(arr)",
							"static fromMatrix(matrix)",
							"toArray()",
							"toArray()",
							"push(...args)",
							"clone()",
							"t =>",
							"map(fn)",
							"slice(...args)",
							"splice(...args)",
							"concat(...args)",
							"filter(pred)",
							"baseCall(c = Array.prototype.map)",
							" (...args) =>",
							"unshift(...args)",
							"rotate(...args)",
							"translate(x, y)",
							"t =>",
							"scale(...args)",
							"matrix(...args)",
							"toString(tUnit, rUnit)",
							"t =>",
							"toDOM()",
							"toSource()",
							"t =>",
							"toMatrices()",
							"t =>",
							"toMatrix()",
							"undo()",
							"merge(...args)",
							"TransformationList",
							"decompose(degrees = true, transformationList = true)",
							".toArray = function toArray()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"get rotation()",
							"item =>",
							"set rotation(value)",
							"item =>",
							"get scaling()",
							"item =>",
							"set scaling(value)",
							"item =>",
							"get translation()",
							"item =>",
							"set translation(value)",
							"item =>",
							"get last()",
							"get first()",
							"at(pos)",
							"collapse()",
							"collapseAll()",
							"get angle()",
							"invert()",
							"(acc, t) =>",
							"join(sep = ' ')",
							"clear()",
							"apply(obj, round = true)",
							"TransformationList",
							"TransformationList",
							"ImmutableTransformationList.prototype.rotate = function(...args)",
							"ImmutableTransformationList.prototype.translate = function(...args)",
							"ImmutableTransformationList.prototype.scale = function(...args)",
							" () =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACQCQAAVHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm1hdGlvbikKICBnZXQgdHlwZSgpClRyYW5zZm9ybWF0aW9uTGlzdAogIGdldCBheGVzKCkKICBheGlzID0+CiAgZ2V0IHByb3BzKCkKICBrZXkgPT4KICBoYXMoYXhpcykKICBnZXQgaXMzRCgpCiAgZW50cmllcygpCiAgcHJvcCA9PgogIHRvSlNPTigpCiAgdmVjdG9yKHVuaXQpCiAgYXhpcyA9PgogIGF4aXMgPT4KICB0b1N0cmluZyh0VW5pdCkKICBjbG9uZSgpCihhY2MsIHByb3ApID0+CiAgc3RhdGljIGZyb21TdHJpbmcoYXJnKQogIGFyZyA9PgogIGFyZyA9PgogIHN0YXRpYyBnZXQgcm90YXRpb24oKQogIHN0YXRpYyBnZXQgdHJhbnNsYXRpb24oKQogIHN0YXRpYyBnZXQgc2NhbGluZygpCiAgc3RhdGljIGdldCBtYXRyaXgoKQogIHZhbHVlKGluc3QpCiAgY3RvciA9PgogIGN0b3IKUm90YXRpb24KICBjb25zdHJ1Y3RvcihhbmdsZSwgeCwgeSkKICBpbnZlcnQoKQogIGdldCB2YWx1ZXMoKQogIGdldCBpczNEKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKHJVbml0KQogIGNvb3JkID0+CiAgdG9Tb3VyY2UoKQogIGNvb3JkID0+CiAgYWNjdW11bGF0ZShvdGhlcikKICBzdGF0aWMgY29udmVydEFuZ2xlKGFuZ2xlLCB1bml0KQpSb3RhdGlvbgpUcmFuc2xhdGlvbgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgYSA9PgogIGdldCB2YWx1ZXMoKQogIGlzWmVybygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpUcmFuc2xhdGlvbgpTY2FsaW5nCiAgY29uc3RydWN0b3IoLi4uYXJncykKICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGFjY3VtdWxhdGUob3RoZXIpClNjYWxpbmcKTWF0cml4VHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcihpbml0KQogIGdldCB2YWx1ZXMoKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGlzWmVybygpCiAgYWNjdW11bGF0ZShvdGhlcikKTWF0cml4VHJhbnNmb3JtYXRpb24KVHJhbnNmb3JtYXRpb25MaXN0CiAgY29uc3RydWN0b3IoaW5pdCwgdFVuaXQsIHJVbml0KQogIGluaXRpYWxpemUoaW5pdCkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdAogIGZyb21TdHJpbmcoc3RyKQogIGZyb21BcnJheShhcnIpCiAgZ2V0IHRyYW5zbGF0aW9uVW5pdCgpCiAgc2V0IHRyYW5zbGF0aW9uVW5pdCh2YWx1ZSkKICBnZXQgcm90YXRpb25Vbml0KCkKICBzZXQgcm90YXRpb25Vbml0KHZhbHVlKQogIHN0YXRpYyBmcm9tU3RyaW5nKHN0cikKICBzdGF0aWMgZnJvbUFycmF5KGFycikKICBzdGF0aWMgZnJvbU1hdHJpeChtYXRyaXgpCiAgdG9BcnJheSgpCiAgdG9BcnJheSgpCiAgcHVzaCguLi5hcmdzKQogIGNsb25lKCkKICB0ID0+CiAgbWFwKGZuKQogIHNsaWNlKC4uLmFyZ3MpCiAgc3BsaWNlKC4uLmFyZ3MpCiAgY29uY2F0KC4uLmFyZ3MpCiAgZmlsdGVyKHByZWQpCiAgYmFzZUNhbGwoYyA9IEFycmF5LnByb3RvdHlwZS5tYXApCiAgKC4uLmFyZ3MpID0+CiAgdW5zaGlmdCguLi5hcmdzKQogIHJvdGF0ZSguLi5hcmdzKQogIHRyYW5zbGF0ZSh4LCB5KQogIHQgPT4KICBzY2FsZSguLi5hcmdzKQogIG1hdHJpeCguLi5hcmdzKQogIHRvU3RyaW5nKHRVbml0LCByVW5pdCkKICB0ID0+CiAgdG9ET00oKQogIHRvU291cmNlKCkKICB0ID0+CiAgdG9NYXRyaWNlcygpCiAgdCA9PgogIHRvTWF0cml4KCkKICB1bmRvKCkKICBtZXJnZSguLi5hcmdzKQpUcmFuc2Zvcm1hdGlvbkxpc3QKICBkZWNvbXBvc2UoZGVncmVlcyA9IHRydWUsIHRyYW5zZm9ybWF0aW9uTGlzdCA9IHRydWUpCiAgLnRvQXJyYXkgPSBmdW5jdGlvbiB0b0FycmF5KCkKICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICBmaW5kTGFzdChwcmVkaWNhdGUpCiAgZ2V0IHJvdGF0aW9uKCkKICBpdGVtID0+CiAgc2V0IHJvdGF0aW9uKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgc2NhbGluZygpCiAgaXRlbSA9PgogIHNldCBzY2FsaW5nKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgdHJhbnNsYXRpb24oKQogIGl0ZW0gPT4KICBzZXQgdHJhbnNsYXRpb24odmFsdWUpCiAgaXRlbSA9PgogIGdldCBsYXN0KCkKICBnZXQgZmlyc3QoKQogIGF0KHBvcykKICBjb2xsYXBzZSgpCiAgY29sbGFwc2VBbGwoKQogIGdldCBhbmdsZSgpCiAgaW52ZXJ0KCkKKGFjYywgdCkgPT4KICBqb2luKHNlcCA9ICcgJykKICBjbGVhcigpCiAgYXBwbHkob2JqLCByb3VuZCA9IHRydWUpClRyYW5zZm9ybWF0aW9uTGlzdApUcmFuc2Zvcm1hdGlvbkxpc3QKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS5yb3RhdGUgPSBmdW5jdGlvbiguLi5hcmdzKQpJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUuc2NhbGUgPSBmdW5jdGlvbiguLi5hcmdzKQogICgpID0+AAAAAAAAAACQCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAkAAFRyYW5zZm9ybWF0aW9uCiAgY29uc3RydWN0b3IodHJhbnNmb3JtYXRpb24pCiAgZ2V0IHR5cGUoKQpUcmFuc2Zvcm1hdGlvbkxpc3QKICBnZXQgYXhlcygpCiAgYXhpcyA9PgogIGdldCBwcm9wcygpCiAga2V5ID0+CiAgaGFzKGF4aXMpCiAgZ2V0IGlzM0QoKQogIGVudHJpZXMoKQogIHByb3AgPT4KICB0b0pTT04oKQogIHZlY3Rvcih1bml0KQogIGF4aXMgPT4KICBheGlzID0+CiAgdG9TdHJpbmcodFVuaXQpCiAgY2xvbmUoKQooYWNjLCBwcm9wKSA9PgogIHN0YXRpYyBmcm9tU3RyaW5nKGFyZykKICBhcmcgPT4KICBhcmcgPT4KICBzdGF0aWMgZ2V0IHJvdGF0aW9uKCkKICBzdGF0aWMgZ2V0IHRyYW5zbGF0aW9uKCkKICBzdGF0aWMgZ2V0IHNjYWxpbmcoKQogIHN0YXRpYyBnZXQgbWF0cml4KCkKICB2YWx1ZShpbnN0KQogIGN0b3IgPT4KICBjdG9yClJvdGF0aW9uCiAgY29uc3RydWN0b3IoYW5nbGUsIHgsIHkpCiAgaW52ZXJ0KCkKICBnZXQgdmFsdWVzKCkKICBnZXQgaXMzRCgpCiAgaXNaZXJvKCkKICB0b1N0cmluZyhyVW5pdCkKICBjb29yZCA9PgogIHRvU291cmNlKCkKICBjb29yZCA9PgogIGFjY3VtdWxhdGUob3RoZXIpCiAgc3RhdGljIGNvbnZlcnRBbmdsZShhbmdsZSwgdW5pdCkKUm90YXRpb24KVHJhbnNsYXRpb24KICBjb25zdHJ1Y3RvciguLi5hcmdzKQogIGEgPT4KICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIGludmVydCgpCiAgYWNjdW11bGF0ZShvdGhlcikKVHJhbnNsYXRpb24KU2NhbGluZwogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgZ2V0IHZhbHVlcygpCiAgaXNaZXJvKCkKICB0b1N0cmluZygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpTY2FsaW5nCk1hdHJpeFRyYW5zZm9ybWF0aW9uCiAgY29uc3RydWN0b3IoaW5pdCkKICBnZXQgdmFsdWVzKCkKICB0b1N0cmluZygpCiAgaW52ZXJ0KCkKICBpc1plcm8oKQogIGFjY3VtdWxhdGUob3RoZXIpCk1hdHJpeFRyYW5zZm9ybWF0aW9uClRyYW5zZm9ybWF0aW9uTGlzdAogIGNvbnN0cnVjdG9yKGluaXQsIHRVbml0LCByVW5pdCkKICBpbml0aWFsaXplKGluaXQpClRyYW5zZm9ybWF0aW9uTGlzdApUcmFuc2Zvcm1hdGlvbkxpc3QKICBmcm9tU3RyaW5nKHN0cikKICBmcm9tQXJyYXkoYXJyKQogIGdldCB0cmFuc2xhdGlvblVuaXQoKQogIHNldCB0cmFuc2xhdGlvblVuaXQodmFsdWUpCiAgZ2V0IHJvdGF0aW9uVW5pdCgpCiAgc2V0IHJvdGF0aW9uVW5pdCh2YWx1ZSkKICBzdGF0aWMgZnJvbVN0cmluZyhzdHIpCiAgc3RhdGljIGZyb21BcnJheShhcnIpCiAgc3RhdGljIGZyb21NYXRyaXgobWF0cml4KQogIHRvQXJyYXkoKQogIHRvQXJyYXkoKQogIHB1c2goLi4uYXJncykKICBjbG9uZSgpCiAgdCA9PgogIG1hcChmbikKICBzbGljZSguLi5hcmdzKQogIHNwbGljZSguLi5hcmdzKQogIGNvbmNhdCguLi5hcmdzKQogIGZpbHRlcihwcmVkKQogIGJhc2VDYWxsKGMgPSBBcnJheS5wcm90b3R5cGUubWFwKQogICguLi5hcmdzKSA9PgogIHVuc2hpZnQoLi4uYXJncykKICByb3RhdGUoLi4uYXJncykKICB0cmFuc2xhdGUoeCwgeSkKICB0ID0+CiAgc2NhbGUoLi4uYXJncykKICBtYXRyaXgoLi4uYXJncykKICB0b1N0cmluZyh0VW5pdCwgclVuaXQpCiAgdCA9PgogIHRvRE9NKCkKICB0b1NvdXJjZSgpCiAgdCA9PgogIHRvTWF0cmljZXMoKQogIHQgPT4KICB0b01hdHJpeCgpCiAgdW5kbygpCiAgbWVyZ2UoLi4uYXJncykKVHJhbnNmb3JtYXRpb25MaXN0CiAgZGVjb21wb3NlKGRlZ3JlZXMgPSB0cnVlLCB0cmFuc2Zvcm1hdGlvbkxpc3QgPSB0cnVlKQogIC50b0FycmF5ID0gZnVuY3Rpb24gdG9BcnJheSgpCiAgZmluZExhc3RJbmRleChwcmVkaWNhdGUpCiAgZmluZExhc3QocHJlZGljYXRlKQogIGdldCByb3RhdGlvbigpCiAgaXRlbSA9PgogIHNldCByb3RhdGlvbih2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IHNjYWxpbmcoKQogIGl0ZW0gPT4KICBzZXQgc2NhbGluZyh2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IHRyYW5zbGF0aW9uKCkKICBpdGVtID0+CiAgc2V0IHRyYW5zbGF0aW9uKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgbGFzdCgpCiAgZ2V0IGZpcnN0KCkKICBhdChwb3MpCiAgY29sbGFwc2UoKQogIGNvbGxhcHNlQWxsKCkKICBnZXQgYW5nbGUoKQogIGludmVydCgpCihhY2MsIHQpID0+CiAgam9pbihzZXAgPSAnICcpCiAgY2xlYXIoKQogIGFwcGx5KG9iaiwgcm91bmQgPSB0cnVlKQpUcmFuc2Zvcm1hdGlvbkxpc3QKVHJhbnNmb3JtYXRpb25MaXN0CkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUucm90YXRlID0gZnVuY3Rpb24oLi4uYXJncykKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS50cmFuc2xhdGUgPSBmdW5jdGlvbiguLi5hcmdzKQpJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnNjYWxlID0gZnVuY3Rpb24oLi4uYXJncykKICAoKSA9PgAAAAAAAAAAkAkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					21,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACQCQAAVHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm1hdGlvbikKICBnZXQgdHlwZSgpClRyYW5zZm9ybWF0aW9uTGlzdAogIGdldCBheGVzKCkKICBheGlzID0+CiAgZ2V0IHByb3BzKCkKICBrZXkgPT4KICBoYXMoYXhpcykKICBnZXQgaXMzRCgpCiAgZW50cmllcygpCiAgcHJvcCA9PgogIHRvSlNPTigpCiAgdmVjdG9yKHVuaXQpCiAgYXhpcyA9PgogIGF4aXMgPT4KICB0b1N0cmluZyh0VW5pdCkKICBjbG9uZSgpCihhY2MsIHByb3ApID0+CiAgc3RhdGljIGZyb21TdHJpbmcoYXJnKQogIGFyZyA9PgogIGFyZyA9PgogIHN0YXRpYyBnZXQgcm90YXRpb24oKQogIHN0YXRpYyBnZXQgdHJhbnNsYXRpb24oKQogIHN0YXRpYyBnZXQgc2NhbGluZygpCiAgc3RhdGljIGdldCBtYXRyaXgoKQogIHZhbHVlKGluc3QpCiAgY3RvciA9PgogIGN0b3IKUm90YXRpb24KICBjb25zdHJ1Y3RvcihhbmdsZSwgeCwgeSkKICBpbnZlcnQoKQogIGdldCB2YWx1ZXMoKQogIGdldCBpczNEKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKHJVbml0KQogIGNvb3JkID0+CiAgdG9Tb3VyY2UoKQogIGNvb3JkID0+CiAgYWNjdW11bGF0ZShvdGhlcikKICBzdGF0aWMgY29udmVydEFuZ2xlKGFuZ2xlLCB1bml0KQpSb3RhdGlvbgpUcmFuc2xhdGlvbgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgYSA9PgogIGdldCB2YWx1ZXMoKQogIGlzWmVybygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpUcmFuc2xhdGlvbgpTY2FsaW5nCiAgY29uc3RydWN0b3IoLi4uYXJncykKICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGFjY3VtdWxhdGUob3RoZXIpClNjYWxpbmcKTWF0cml4VHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcihpbml0KQogIGdldCB2YWx1ZXMoKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGlzWmVybygpCiAgYWNjdW11bGF0ZShvdGhlcikKTWF0cml4VHJhbnNmb3JtYXRpb24KVHJhbnNmb3JtYXRpb25MaXN0CiAgY29uc3RydWN0b3IoaW5pdCwgdFVuaXQsIHJVbml0KQogIGluaXRpYWxpemUoaW5pdCkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdAogIGZyb21TdHJpbmcoc3RyKQogIGZyb21BcnJheShhcnIpCiAgZ2V0IHRyYW5zbGF0aW9uVW5pdCgpCiAgc2V0IHRyYW5zbGF0aW9uVW5pdCh2YWx1ZSkKICBnZXQgcm90YXRpb25Vbml0KCkKICBzZXQgcm90YXRpb25Vbml0KHZhbHVlKQogIHN0YXRpYyBmcm9tU3RyaW5nKHN0cikKICBzdGF0aWMgZnJvbUFycmF5KGFycikKICBzdGF0aWMgZnJvbU1hdHJpeChtYXRyaXgpCiAgdG9BcnJheSgpCiAgdG9BcnJheSgpCiAgcHVzaCguLi5hcmdzKQogIGNsb25lKCkKICB0ID0+CiAgbWFwKGZuKQogIHNsaWNlKC4uLmFyZ3MpCiAgc3BsaWNlKC4uLmFyZ3MpCiAgY29uY2F0KC4uLmFyZ3MpCiAgZmlsdGVyKHByZWQpCiAgYmFzZUNhbGwoYyA9IEFycmF5LnByb3RvdHlwZS5tYXApCiAgKC4uLmFyZ3MpID0+CiAgdW5zaGlmdCguLi5hcmdzKQogIHJvdGF0ZSguLi5hcmdzKQogIHRyYW5zbGF0ZSh4LCB5KQogIHQgPT4KICBzY2FsZSguLi5hcmdzKQogIG1hdHJpeCguLi5hcmdzKQogIHRvU3RyaW5nKHRVbml0LCByVW5pdCkKICB0ID0+CiAgdG9ET00oKQogIHRvU291cmNlKCkKICB0ID0+CiAgdG9NYXRyaWNlcygpCiAgdCA9PgogIHRvTWF0cml4KCkKICB1bmRvKCkKICBtZXJnZSguLi5hcmdzKQpUcmFuc2Zvcm1hdGlvbkxpc3QKICBkZWNvbXBvc2UoZGVncmVlcyA9IHRydWUsIHRyYW5zZm9ybWF0aW9uTGlzdCA9IHRydWUpCiAgLnRvQXJyYXkgPSBmdW5jdGlvbiB0b0FycmF5KCkKICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICBmaW5kTGFzdChwcmVkaWNhdGUpCiAgZ2V0IHJvdGF0aW9uKCkKICBpdGVtID0+CiAgc2V0IHJvdGF0aW9uKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgc2NhbGluZygpCiAgaXRlbSA9PgogIHNldCBzY2FsaW5nKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgdHJhbnNsYXRpb24oKQogIGl0ZW0gPT4KICBzZXQgdHJhbnNsYXRpb24odmFsdWUpCiAgaXRlbSA9PgogIGdldCBsYXN0KCkKICBnZXQgZmlyc3QoKQogIGF0KHBvcykKICBjb2xsYXBzZSgpCiAgY29sbGFwc2VBbGwoKQogIGdldCBhbmdsZSgpCiAgaW52ZXJ0KCkKKGFjYywgdCkgPT4KICBqb2luKHNlcCA9ICcgJykKICBjbGVhcigpCiAgYXBwbHkob2JqLCByb3VuZCA9IHRydWUpClRyYW5zZm9ybWF0aW9uTGlzdApUcmFuc2Zvcm1hdGlvbkxpc3QKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS5yb3RhdGUgPSBmdW5jdGlvbiguLi5hcmdzKQpJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUuc2NhbGUgPSBmdW5jdGlvbiguLi5hcmdzKQogICgpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					22,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/geom/transformation.js",
						"symkeys":
						[
							[
								275,
								289
							],
							[
								316,
								343
							],
							[
								799,
								809
							],
							[
								1119,
								1137
							],
							[
								1220,
								1230
							],
							[
								1307,
								1314
							],
							[
								1336,
								1347
							],
							[
								1403,
								1409
							],
							[
								1432,
								1441
							],
							[
								1535,
								1545
							],
							[
								1581,
								1590
							],
							[
								1619,
								1626
							],
							[
								1655,
								1663
							],
							[
								1720,
								1732
							],
							[
								1844,
								1852
							],
							[
								1872,
								1880
							],
							[
								1901,
								1916
							],
							[
								2010,
								2017
							],
							[
								2109,
								2123
							],
							[
								2232,
								2254
							],
							[
								2488,
								2494
							],
							[
								2537,
								2543
							],
							[
								3785,
								3806
							],
							[
								3836,
								3860
							],
							[
								3893,
								3913
							],
							[
								3942,
								3961
							],
							[
								4132,
								4143
							],
							[
								4253,
								4260
							],
							[
								4292,
								4296
							],
							[
								4403,
								4411
							],
							[
								4475,
								4499
							],
							[
								4777,
								4785
							],
							[
								4844,
								4856
							],
							[
								4913,
								4923
							],
							[
								4962,
								4970
							],
							[
								5008,
								5023
							],
							[
								5296,
								5304
							],
							[
								5344,
								5354
							],
							[
								5576,
								5584
							],
							[
								5727,
								5744
							],
							[
								5937,
								5969
							],
							[
								6201,
								6209
							],
							[
								6358,
								6369
							],
							[
								6435,
								6455
							],
							[
								6732,
								6736
							],
							[
								6975,
								6987
							],
							[
								7076,
								7084
							],
							[
								7434,
								7442
							],
							[
								7612,
								7629
							],
							[
								7915,
								7926
							],
							[
								8084,
								8091
							],
							[
								8157,
								8177
							],
							[
								8570,
								8582
							],
							[
								8775,
								8783
							],
							[
								8895,
								8905
							],
							[
								9174,
								9182
							],
							[
								9313,
								9330
							],
							[
								9608,
								9615
							],
							[
								9761,
								9781
							],
							[
								9838,
								9855
							],
							[
								10047,
								10059
							],
							[
								10193,
								10203
							],
							[
								10250,
								10258
							],
							[
								10327,
								10335
							],
							[
								10382,
								10399
							],
							[
								10598,
								10618
							],
							[
								10807,
								10825
							],
							[
								10844,
								10875
							],
							[
								11264,
								11280
							],
							[
								11400,
								11418
							],
							[
								11493,
								11511
							],
							[
								11895,
								11910
							],
							[
								12179,
								12193
							],
							[
								12518,
								12539
							],
							[
								12628,
								12654
							],
							[
								12759,
								12777
							],
							[
								12860,
								12883
							],
							[
								12981,
								13003
							],
							[
								13066,
								13087
							],
							[
								13149,
								13174
							],
							[
								13350,
								13359
							],
							[
								13457,
								13466
							],
							[
								13734,
								13747
							],
							[
								13989,
								13996
							],
							[
								14019,
								14023
							],
							[
								14060,
								14067
							],
							[
								14128,
								14142
							],
							[
								14210,
								14225
							],
							[
								14294,
								14309
							],
							[
								14498,
								14510
							],
							[
								14576,
								14609
							],
							[
								14622,
								14635
							],
							[
								14808,
								14824
							],
							[
								15012,
								15027
							],
							[
								15166,
								15181
							],
							[
								15212,
								15216
							],
							[
								15630,
								15644
							],
							[
								15779,
								15794
							],
							[
								15981,
								16003
							],
							[
								16142,
								16146
							],
							[
								16306,
								16313
							],
							[
								16428,
								16438
							],
							[
								16505,
								16509
							],
							[
								16564,
								16576
							],
							[
								16603,
								16607
							],
							[
								16631,
								16641
							],
							[
								16707,
								16713
							],
							[
								16877,
								16891
							],
							[
								17003,
								17021
							],
							[
								17085,
								17137
							],
							[
								17571,
								17600
							],
							[
								17671,
								17695
							],
							[
								17834,
								17853
							],
							[
								17934,
								17948
							],
							[
								17976,
								17983
							],
							[
								18043,
								18062
							],
							[
								18100,
								18107
							],
							[
								18272,
								18285
							],
							[
								18313,
								18320
							],
							[
								18379,
								18397
							],
							[
								18435,
								18442
							],
							[
								18604,
								18621
							],
							[
								18649,
								18656
							],
							[
								18752,
								18774
							],
							[
								18812,
								18819
							],
							[
								19101,
								19111
							],
							[
								19144,
								19155
							],
							[
								19188,
								19195
							],
							[
								19263,
								19273
							],
							[
								19637,
								19650
							],
							[
								19719,
								19730
							],
							[
								19889,
								19897
							],
							[
								20015,
								20026
							],
							[
								20062,
								20077
							],
							[
								20136,
								20143
							],
							[
								20225,
								20249
							],
							[
								20413,
								20431
							],
							[
								20727,
								20745
							],
							[
								21259,
								21323
							],
							[
								21386,
								21453
							],
							[
								21519,
								21582
							],
							[
								21701,
								21707
							]
						],
						"symlist":
						[
							"Transformation",
							"constructor(transformation)",
							"get type()",
							"TransformationList",
							"get axes()",
							"axis =>",
							"get props()",
							"key =>",
							"has(axis)",
							"get is3D()",
							"entries()",
							"prop =>",
							"toJSON()",
							"vector(unit)",
							" axis =>",
							" axis =>",
							"toString(tUnit)",
							"clone()",
							"(acc, prop) =>",
							"static fromString(arg)",
							"arg =>",
							"arg =>",
							"static get rotation()",
							"static get translation()",
							"static get scaling()",
							"static get matrix()",
							"value(inst)",
							"ctor =>",
							"ctor",
							"Rotation",
							"constructor(angle, x, y)",
							"invert()",
							"get values()",
							"get is3D()",
							"isZero()",
							"toString(rUnit)",
							"coord =>",
							"toSource()",
							"coord =>",
							"accumulate(other)",
							"static convertAngle(angle, unit)",
							"Rotation",
							"Translation",
							"constructor(...args)",
							"a =>",
							"get values()",
							"isZero()",
							"invert()",
							"accumulate(other)",
							"Translation",
							"Scaling",
							"constructor(...args)",
							"get values()",
							"isZero()",
							"toString()",
							"invert()",
							"accumulate(other)",
							"Scaling",
							"MatrixTransformation",
							"constructor(init)",
							"get values()",
							"toString()",
							"invert()",
							"isZero()",
							"accumulate(other)",
							"MatrixTransformation",
							"TransformationList",
							"constructor(init, tUnit, rUnit)",
							"initialize(init)",
							"TransformationList",
							"TransformationList",
							"fromString(str)",
							"fromArray(arr)",
							"get translationUnit()",
							"set translationUnit(value)",
							"get rotationUnit()",
							"set rotationUnit(value)",
							"static fromString(str)",
							"static fromArray(arr)",
							"static fromMatrix(matrix)",
							"toArray()",
							"toArray()",
							"push(...args)",
							"clone()",
							"t =>",
							"map(fn)",
							"slice(...args)",
							"splice(...args)",
							"concat(...args)",
							"filter(pred)",
							"baseCall(c = Array.prototype.map)",
							" (...args) =>",
							"unshift(...args)",
							"rotate(...args)",
							"translate(x, y)",
							"t =>",
							"scale(...args)",
							"matrix(...args)",
							"toString(tUnit, rUnit)",
							"t =>",
							"toDOM()",
							"toSource()",
							"t =>",
							"toMatrices()",
							"t =>",
							"toMatrix()",
							"undo()",
							"merge(...args)",
							"TransformationList",
							"decompose(degrees = true, transformationList = true)",
							".toArray = function toArray()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"get rotation()",
							"item =>",
							"set rotation(value)",
							"item =>",
							"get scaling()",
							"item =>",
							"set scaling(value)",
							"item =>",
							"get translation()",
							"item =>",
							"set translation(value)",
							"item =>",
							"get last()",
							"get first()",
							"at(pos)",
							"collapse()",
							"collapseAll()",
							"get angle()",
							"invert()",
							"(acc, t) =>",
							"join(sep = ' ')",
							"clear()",
							"apply(obj, round = true)",
							"TransformationList",
							"TransformationList",
							"ImmutableTransformationList.prototype.rotate = function(...args)",
							"ImmutableTransformationList.prototype.translate = function(...args)",
							"ImmutableTransformationList.prototype.scale = function(...args)",
							" () =>"
						]
					},
					"AQAAAAAAAAAAAAAAkAkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					23,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/geom/transformation.js",
						"symkeys":
						[
							[
								275,
								289
							],
							[
								316,
								343
							],
							[
								799,
								809
							],
							[
								1119,
								1137
							],
							[
								1220,
								1230
							],
							[
								1307,
								1314
							],
							[
								1336,
								1347
							],
							[
								1403,
								1409
							],
							[
								1432,
								1441
							],
							[
								1535,
								1545
							],
							[
								1581,
								1590
							],
							[
								1619,
								1626
							],
							[
								1655,
								1663
							],
							[
								1720,
								1732
							],
							[
								1844,
								1852
							],
							[
								1872,
								1880
							],
							[
								1901,
								1916
							],
							[
								2010,
								2017
							],
							[
								2109,
								2123
							],
							[
								2232,
								2254
							],
							[
								2488,
								2494
							],
							[
								2537,
								2543
							],
							[
								3785,
								3806
							],
							[
								3836,
								3860
							],
							[
								3893,
								3913
							],
							[
								3942,
								3961
							],
							[
								4132,
								4143
							],
							[
								4253,
								4260
							],
							[
								4293,
								4297
							],
							[
								4428,
								4436
							],
							[
								4500,
								4524
							],
							[
								4802,
								4810
							],
							[
								4869,
								4881
							],
							[
								4938,
								4948
							],
							[
								4987,
								4995
							],
							[
								5033,
								5048
							],
							[
								5321,
								5329
							],
							[
								5369,
								5379
							],
							[
								5601,
								5609
							],
							[
								5752,
								5769
							],
							[
								5962,
								5994
							],
							[
								6226,
								6234
							],
							[
								6383,
								6394
							],
							[
								6460,
								6480
							],
							[
								6757,
								6761
							],
							[
								7000,
								7012
							],
							[
								7101,
								7109
							],
							[
								7459,
								7467
							],
							[
								7637,
								7654
							],
							[
								7940,
								7951
							],
							[
								8109,
								8116
							],
							[
								8182,
								8202
							],
							[
								8595,
								8607
							],
							[
								8800,
								8808
							],
							[
								8920,
								8930
							],
							[
								9199,
								9207
							],
							[
								9338,
								9355
							],
							[
								9633,
								9640
							],
							[
								9786,
								9806
							],
							[
								9863,
								9880
							],
							[
								10072,
								10084
							],
							[
								10218,
								10228
							],
							[
								10275,
								10283
							],
							[
								10352,
								10360
							],
							[
								10407,
								10424
							],
							[
								10623,
								10643
							],
							[
								10832,
								10850
							],
							[
								10869,
								10900
							],
							[
								11289,
								11305
							],
							[
								11425,
								11443
							],
							[
								11518,
								11536
							],
							[
								11920,
								11935
							],
							[
								12204,
								12218
							],
							[
								12543,
								12564
							],
							[
								12653,
								12679
							],
							[
								12784,
								12802
							],
							[
								12885,
								12908
							],
							[
								13006,
								13028
							],
							[
								13091,
								13112
							],
							[
								13174,
								13199
							],
							[
								13375,
								13384
							],
							[
								13482,
								13491
							],
							[
								13759,
								13772
							],
							[
								14014,
								14021
							],
							[
								14044,
								14048
							],
							[
								14085,
								14092
							],
							[
								14153,
								14167
							],
							[
								14235,
								14250
							],
							[
								14319,
								14334
							],
							[
								14523,
								14535
							],
							[
								14601,
								14634
							],
							[
								14647,
								14660
							],
							[
								14833,
								14849
							],
							[
								15037,
								15052
							],
							[
								15191,
								15206
							],
							[
								15237,
								15241
							],
							[
								15655,
								15669
							],
							[
								15804,
								15819
							],
							[
								16006,
								16028
							],
							[
								16167,
								16171
							],
							[
								16331,
								16338
							],
							[
								16453,
								16463
							],
							[
								16530,
								16534
							],
							[
								16589,
								16601
							],
							[
								16628,
								16632
							],
							[
								16656,
								16666
							],
							[
								16732,
								16738
							],
							[
								16902,
								16916
							],
							[
								17028,
								17046
							],
							[
								17110,
								17162
							],
							[
								17596,
								17625
							],
							[
								17696,
								17720
							],
							[
								17859,
								17878
							],
							[
								17959,
								17973
							],
							[
								18001,
								18008
							],
							[
								18068,
								18087
							],
							[
								18125,
								18132
							],
							[
								18297,
								18310
							],
							[
								18338,
								18345
							],
							[
								18404,
								18422
							],
							[
								18460,
								18467
							],
							[
								18629,
								18646
							],
							[
								18674,
								18681
							],
							[
								18777,
								18799
							],
							[
								18837,
								18844
							],
							[
								19126,
								19136
							],
							[
								19169,
								19180
							],
							[
								19213,
								19220
							],
							[
								19288,
								19298
							],
							[
								19662,
								19675
							],
							[
								19744,
								19755
							],
							[
								19914,
								19922
							],
							[
								20040,
								20051
							],
							[
								20087,
								20102
							],
							[
								20161,
								20168
							],
							[
								20250,
								20274
							],
							[
								20438,
								20456
							],
							[
								20752,
								20770
							],
							[
								21284,
								21348
							],
							[
								21411,
								21478
							],
							[
								21544,
								21607
							],
							[
								21726,
								21732
							]
						],
						"symlist":
						[
							"Transformation",
							"constructor(transformation)",
							"get type()",
							"TransformationList",
							"get axes()",
							"axis =>",
							"get props()",
							"key =>",
							"has(axis)",
							"get is3D()",
							"entries()",
							"prop =>",
							"toJSON()",
							"vector(unit)",
							" axis =>",
							" axis =>",
							"toString(tUnit)",
							"clone()",
							"(acc, prop) =>",
							"static fromString(arg)",
							"arg =>",
							"arg =>",
							"static get rotation()",
							"static get translation()",
							"static get scaling()",
							"static get matrix()",
							"value(inst)",
							"ctor =>",
							"ctor",
							"Rotation",
							"constructor(angle, x, y)",
							"invert()",
							"get values()",
							"get is3D()",
							"isZero()",
							"toString(rUnit)",
							"coord =>",
							"toSource()",
							"coord =>",
							"accumulate(other)",
							"static convertAngle(angle, unit)",
							"Rotation",
							"Translation",
							"constructor(...args)",
							"a =>",
							"get values()",
							"isZero()",
							"invert()",
							"accumulate(other)",
							"Translation",
							"Scaling",
							"constructor(...args)",
							"get values()",
							"isZero()",
							"toString()",
							"invert()",
							"accumulate(other)",
							"Scaling",
							"MatrixTransformation",
							"constructor(init)",
							"get values()",
							"toString()",
							"invert()",
							"isZero()",
							"accumulate(other)",
							"MatrixTransformation",
							"TransformationList",
							"constructor(init, tUnit, rUnit)",
							"initialize(init)",
							"TransformationList",
							"TransformationList",
							"fromString(str)",
							"fromArray(arr)",
							"get translationUnit()",
							"set translationUnit(value)",
							"get rotationUnit()",
							"set rotationUnit(value)",
							"static fromString(str)",
							"static fromArray(arr)",
							"static fromMatrix(matrix)",
							"toArray()",
							"toArray()",
							"push(...args)",
							"clone()",
							"t =>",
							"map(fn)",
							"slice(...args)",
							"splice(...args)",
							"concat(...args)",
							"filter(pred)",
							"baseCall(c = Array.prototype.map)",
							" (...args) =>",
							"unshift(...args)",
							"rotate(...args)",
							"translate(x, y)",
							"t =>",
							"scale(...args)",
							"matrix(...args)",
							"toString(tUnit, rUnit)",
							"t =>",
							"toDOM()",
							"toSource()",
							"t =>",
							"toMatrices()",
							"t =>",
							"toMatrix()",
							"undo()",
							"merge(...args)",
							"TransformationList",
							"decompose(degrees = true, transformationList = true)",
							".toArray = function toArray()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"get rotation()",
							"item =>",
							"set rotation(value)",
							"item =>",
							"get scaling()",
							"item =>",
							"set scaling(value)",
							"item =>",
							"get translation()",
							"item =>",
							"set translation(value)",
							"item =>",
							"get last()",
							"get first()",
							"at(pos)",
							"collapse()",
							"collapseAll()",
							"get angle()",
							"invert()",
							"(acc, t) =>",
							"join(sep = ' ')",
							"clear()",
							"apply(obj, round = true)",
							"TransformationList",
							"TransformationList",
							"ImmutableTransformationList.prototype.rotate = function(...args)",
							"ImmutableTransformationList.prototype.translate = function(...args)",
							"ImmutableTransformationList.prototype.scale = function(...args)",
							" () =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACQCQAAVHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm1hdGlvbikKICBnZXQgdHlwZSgpClRyYW5zZm9ybWF0aW9uTGlzdAogIGdldCBheGVzKCkKICBheGlzID0+CiAgZ2V0IHByb3BzKCkKICBrZXkgPT4KICBoYXMoYXhpcykKICBnZXQgaXMzRCgpCiAgZW50cmllcygpCiAgcHJvcCA9PgogIHRvSlNPTigpCiAgdmVjdG9yKHVuaXQpCiAgYXhpcyA9PgogIGF4aXMgPT4KICB0b1N0cmluZyh0VW5pdCkKICBjbG9uZSgpCihhY2MsIHByb3ApID0+CiAgc3RhdGljIGZyb21TdHJpbmcoYXJnKQogIGFyZyA9PgogIGFyZyA9PgogIHN0YXRpYyBnZXQgcm90YXRpb24oKQogIHN0YXRpYyBnZXQgdHJhbnNsYXRpb24oKQogIHN0YXRpYyBnZXQgc2NhbGluZygpCiAgc3RhdGljIGdldCBtYXRyaXgoKQogIHZhbHVlKGluc3QpCiAgY3RvciA9PgogIGN0b3IKUm90YXRpb24KICBjb25zdHJ1Y3RvcihhbmdsZSwgeCwgeSkKICBpbnZlcnQoKQogIGdldCB2YWx1ZXMoKQogIGdldCBpczNEKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKHJVbml0KQogIGNvb3JkID0+CiAgdG9Tb3VyY2UoKQogIGNvb3JkID0+CiAgYWNjdW11bGF0ZShvdGhlcikKICBzdGF0aWMgY29udmVydEFuZ2xlKGFuZ2xlLCB1bml0KQpSb3RhdGlvbgpUcmFuc2xhdGlvbgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgYSA9PgogIGdldCB2YWx1ZXMoKQogIGlzWmVybygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpUcmFuc2xhdGlvbgpTY2FsaW5nCiAgY29uc3RydWN0b3IoLi4uYXJncykKICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGFjY3VtdWxhdGUob3RoZXIpClNjYWxpbmcKTWF0cml4VHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcihpbml0KQogIGdldCB2YWx1ZXMoKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGlzWmVybygpCiAgYWNjdW11bGF0ZShvdGhlcikKTWF0cml4VHJhbnNmb3JtYXRpb24KVHJhbnNmb3JtYXRpb25MaXN0CiAgY29uc3RydWN0b3IoaW5pdCwgdFVuaXQsIHJVbml0KQogIGluaXRpYWxpemUoaW5pdCkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdAogIGZyb21TdHJpbmcoc3RyKQogIGZyb21BcnJheShhcnIpCiAgZ2V0IHRyYW5zbGF0aW9uVW5pdCgpCiAgc2V0IHRyYW5zbGF0aW9uVW5pdCh2YWx1ZSkKICBnZXQgcm90YXRpb25Vbml0KCkKICBzZXQgcm90YXRpb25Vbml0KHZhbHVlKQogIHN0YXRpYyBmcm9tU3RyaW5nKHN0cikKICBzdGF0aWMgZnJvbUFycmF5KGFycikKICBzdGF0aWMgZnJvbU1hdHJpeChtYXRyaXgpCiAgdG9BcnJheSgpCiAgdG9BcnJheSgpCiAgcHVzaCguLi5hcmdzKQogIGNsb25lKCkKICB0ID0+CiAgbWFwKGZuKQogIHNsaWNlKC4uLmFyZ3MpCiAgc3BsaWNlKC4uLmFyZ3MpCiAgY29uY2F0KC4uLmFyZ3MpCiAgZmlsdGVyKHByZWQpCiAgYmFzZUNhbGwoYyA9IEFycmF5LnByb3RvdHlwZS5tYXApCiAgKC4uLmFyZ3MpID0+CiAgdW5zaGlmdCguLi5hcmdzKQogIHJvdGF0ZSguLi5hcmdzKQogIHRyYW5zbGF0ZSh4LCB5KQogIHQgPT4KICBzY2FsZSguLi5hcmdzKQogIG1hdHJpeCguLi5hcmdzKQogIHRvU3RyaW5nKHRVbml0LCByVW5pdCkKICB0ID0+CiAgdG9ET00oKQogIHRvU291cmNlKCkKICB0ID0+CiAgdG9NYXRyaWNlcygpCiAgdCA9PgogIHRvTWF0cml4KCkKICB1bmRvKCkKICBtZXJnZSguLi5hcmdzKQpUcmFuc2Zvcm1hdGlvbkxpc3QKICBkZWNvbXBvc2UoZGVncmVlcyA9IHRydWUsIHRyYW5zZm9ybWF0aW9uTGlzdCA9IHRydWUpCiAgLnRvQXJyYXkgPSBmdW5jdGlvbiB0b0FycmF5KCkKICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICBmaW5kTGFzdChwcmVkaWNhdGUpCiAgZ2V0IHJvdGF0aW9uKCkKICBpdGVtID0+CiAgc2V0IHJvdGF0aW9uKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgc2NhbGluZygpCiAgaXRlbSA9PgogIHNldCBzY2FsaW5nKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgdHJhbnNsYXRpb24oKQogIGl0ZW0gPT4KICBzZXQgdHJhbnNsYXRpb24odmFsdWUpCiAgaXRlbSA9PgogIGdldCBsYXN0KCkKICBnZXQgZmlyc3QoKQogIGF0KHBvcykKICBjb2xsYXBzZSgpCiAgY29sbGFwc2VBbGwoKQogIGdldCBhbmdsZSgpCiAgaW52ZXJ0KCkKKGFjYywgdCkgPT4KICBqb2luKHNlcCA9ICcgJykKICBjbGVhcigpCiAgYXBwbHkob2JqLCByb3VuZCA9IHRydWUpClRyYW5zZm9ybWF0aW9uTGlzdApUcmFuc2Zvcm1hdGlvbkxpc3QKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS5yb3RhdGUgPSBmdW5jdGlvbiguLi5hcmdzKQpJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUuc2NhbGUgPSBmdW5jdGlvbiguLi5hcmdzKQogICgpID0+AAAAAAAAAACQCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAkAAFRyYW5zZm9ybWF0aW9uCiAgY29uc3RydWN0b3IodHJhbnNmb3JtYXRpb24pCiAgZ2V0IHR5cGUoKQpUcmFuc2Zvcm1hdGlvbkxpc3QKICBnZXQgYXhlcygpCiAgYXhpcyA9PgogIGdldCBwcm9wcygpCiAga2V5ID0+CiAgaGFzKGF4aXMpCiAgZ2V0IGlzM0QoKQogIGVudHJpZXMoKQogIHByb3AgPT4KICB0b0pTT04oKQogIHZlY3Rvcih1bml0KQogIGF4aXMgPT4KICBheGlzID0+CiAgdG9TdHJpbmcodFVuaXQpCiAgY2xvbmUoKQooYWNjLCBwcm9wKSA9PgogIHN0YXRpYyBmcm9tU3RyaW5nKGFyZykKICBhcmcgPT4KICBhcmcgPT4KICBzdGF0aWMgZ2V0IHJvdGF0aW9uKCkKICBzdGF0aWMgZ2V0IHRyYW5zbGF0aW9uKCkKICBzdGF0aWMgZ2V0IHNjYWxpbmcoKQogIHN0YXRpYyBnZXQgbWF0cml4KCkKICB2YWx1ZShpbnN0KQogIGN0b3IgPT4KICBjdG9yClJvdGF0aW9uCiAgY29uc3RydWN0b3IoYW5nbGUsIHgsIHkpCiAgaW52ZXJ0KCkKICBnZXQgdmFsdWVzKCkKICBnZXQgaXMzRCgpCiAgaXNaZXJvKCkKICB0b1N0cmluZyhyVW5pdCkKICBjb29yZCA9PgogIHRvU291cmNlKCkKICBjb29yZCA9PgogIGFjY3VtdWxhdGUob3RoZXIpCiAgc3RhdGljIGNvbnZlcnRBbmdsZShhbmdsZSwgdW5pdCkKUm90YXRpb24KVHJhbnNsYXRpb24KICBjb25zdHJ1Y3RvciguLi5hcmdzKQogIGEgPT4KICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIGludmVydCgpCiAgYWNjdW11bGF0ZShvdGhlcikKVHJhbnNsYXRpb24KU2NhbGluZwogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgZ2V0IHZhbHVlcygpCiAgaXNaZXJvKCkKICB0b1N0cmluZygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpTY2FsaW5nCk1hdHJpeFRyYW5zZm9ybWF0aW9uCiAgY29uc3RydWN0b3IoaW5pdCkKICBnZXQgdmFsdWVzKCkKICB0b1N0cmluZygpCiAgaW52ZXJ0KCkKICBpc1plcm8oKQogIGFjY3VtdWxhdGUob3RoZXIpCk1hdHJpeFRyYW5zZm9ybWF0aW9uClRyYW5zZm9ybWF0aW9uTGlzdAogIGNvbnN0cnVjdG9yKGluaXQsIHRVbml0LCByVW5pdCkKICBpbml0aWFsaXplKGluaXQpClRyYW5zZm9ybWF0aW9uTGlzdApUcmFuc2Zvcm1hdGlvbkxpc3QKICBmcm9tU3RyaW5nKHN0cikKICBmcm9tQXJyYXkoYXJyKQogIGdldCB0cmFuc2xhdGlvblVuaXQoKQogIHNldCB0cmFuc2xhdGlvblVuaXQodmFsdWUpCiAgZ2V0IHJvdGF0aW9uVW5pdCgpCiAgc2V0IHJvdGF0aW9uVW5pdCh2YWx1ZSkKICBzdGF0aWMgZnJvbVN0cmluZyhzdHIpCiAgc3RhdGljIGZyb21BcnJheShhcnIpCiAgc3RhdGljIGZyb21NYXRyaXgobWF0cml4KQogIHRvQXJyYXkoKQogIHRvQXJyYXkoKQogIHB1c2goLi4uYXJncykKICBjbG9uZSgpCiAgdCA9PgogIG1hcChmbikKICBzbGljZSguLi5hcmdzKQogIHNwbGljZSguLi5hcmdzKQogIGNvbmNhdCguLi5hcmdzKQogIGZpbHRlcihwcmVkKQogIGJhc2VDYWxsKGMgPSBBcnJheS5wcm90b3R5cGUubWFwKQogICguLi5hcmdzKSA9PgogIHVuc2hpZnQoLi4uYXJncykKICByb3RhdGUoLi4uYXJncykKICB0cmFuc2xhdGUoeCwgeSkKICB0ID0+CiAgc2NhbGUoLi4uYXJncykKICBtYXRyaXgoLi4uYXJncykKICB0b1N0cmluZyh0VW5pdCwgclVuaXQpCiAgdCA9PgogIHRvRE9NKCkKICB0b1NvdXJjZSgpCiAgdCA9PgogIHRvTWF0cmljZXMoKQogIHQgPT4KICB0b01hdHJpeCgpCiAgdW5kbygpCiAgbWVyZ2UoLi4uYXJncykKVHJhbnNmb3JtYXRpb25MaXN0CiAgZGVjb21wb3NlKGRlZ3JlZXMgPSB0cnVlLCB0cmFuc2Zvcm1hdGlvbkxpc3QgPSB0cnVlKQogIC50b0FycmF5ID0gZnVuY3Rpb24gdG9BcnJheSgpCiAgZmluZExhc3RJbmRleChwcmVkaWNhdGUpCiAgZmluZExhc3QocHJlZGljYXRlKQogIGdldCByb3RhdGlvbigpCiAgaXRlbSA9PgogIHNldCByb3RhdGlvbih2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IHNjYWxpbmcoKQogIGl0ZW0gPT4KICBzZXQgc2NhbGluZyh2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IHRyYW5zbGF0aW9uKCkKICBpdGVtID0+CiAgc2V0IHRyYW5zbGF0aW9uKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgbGFzdCgpCiAgZ2V0IGZpcnN0KCkKICBhdChwb3MpCiAgY29sbGFwc2UoKQogIGNvbGxhcHNlQWxsKCkKICBnZXQgYW5nbGUoKQogIGludmVydCgpCihhY2MsIHQpID0+CiAgam9pbihzZXAgPSAnICcpCiAgY2xlYXIoKQogIGFwcGx5KG9iaiwgcm91bmQgPSB0cnVlKQpUcmFuc2Zvcm1hdGlvbkxpc3QKVHJhbnNmb3JtYXRpb25MaXN0CkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUucm90YXRlID0gZnVuY3Rpb24oLi4uYXJncykKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS50cmFuc2xhdGUgPSBmdW5jdGlvbiguLi5hcmdzKQpJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnNjYWxlID0gZnVuY3Rpb24oLi4uYXJncykKICAoKSA9PgAAAAAAAAAAkAkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					24,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/geom/transformation.js",
						"symkeys":
						[
							[
								275,
								289
							],
							[
								316,
								343
							],
							[
								799,
								809
							],
							[
								1119,
								1137
							],
							[
								1220,
								1230
							],
							[
								1307,
								1314
							],
							[
								1336,
								1347
							],
							[
								1403,
								1409
							],
							[
								1432,
								1441
							],
							[
								1535,
								1545
							],
							[
								1581,
								1590
							],
							[
								1619,
								1626
							],
							[
								1655,
								1663
							],
							[
								1720,
								1732
							],
							[
								1844,
								1852
							],
							[
								1872,
								1880
							],
							[
								1901,
								1916
							],
							[
								2010,
								2017
							],
							[
								2109,
								2123
							],
							[
								2232,
								2254
							],
							[
								2488,
								2494
							],
							[
								2537,
								2543
							],
							[
								3785,
								3806
							],
							[
								3836,
								3860
							],
							[
								3893,
								3913
							],
							[
								3942,
								3961
							],
							[
								4132,
								4143
							],
							[
								4253,
								4260
							],
							[
								4292,
								4296
							],
							[
								4403,
								4411
							],
							[
								4475,
								4499
							],
							[
								4777,
								4785
							],
							[
								4844,
								4856
							],
							[
								4913,
								4923
							],
							[
								4962,
								4970
							],
							[
								5008,
								5023
							],
							[
								5296,
								5304
							],
							[
								5344,
								5354
							],
							[
								5576,
								5584
							],
							[
								5727,
								5744
							],
							[
								5937,
								5969
							],
							[
								6201,
								6209
							],
							[
								6358,
								6369
							],
							[
								6435,
								6455
							],
							[
								6732,
								6736
							],
							[
								6975,
								6987
							],
							[
								7076,
								7084
							],
							[
								7434,
								7442
							],
							[
								7612,
								7629
							],
							[
								7915,
								7926
							],
							[
								8084,
								8091
							],
							[
								8157,
								8177
							],
							[
								8570,
								8582
							],
							[
								8775,
								8783
							],
							[
								8895,
								8905
							],
							[
								9174,
								9182
							],
							[
								9313,
								9330
							],
							[
								9608,
								9615
							],
							[
								9761,
								9781
							],
							[
								9838,
								9855
							],
							[
								10047,
								10059
							],
							[
								10193,
								10203
							],
							[
								10250,
								10258
							],
							[
								10327,
								10335
							],
							[
								10382,
								10399
							],
							[
								10598,
								10618
							],
							[
								10807,
								10825
							],
							[
								10844,
								10875
							],
							[
								11264,
								11280
							],
							[
								11400,
								11418
							],
							[
								11493,
								11511
							],
							[
								11895,
								11910
							],
							[
								12179,
								12193
							],
							[
								12518,
								12539
							],
							[
								12628,
								12654
							],
							[
								12759,
								12777
							],
							[
								12860,
								12883
							],
							[
								12981,
								13003
							],
							[
								13066,
								13087
							],
							[
								13149,
								13174
							],
							[
								13350,
								13359
							],
							[
								13457,
								13466
							],
							[
								13734,
								13747
							],
							[
								13989,
								13996
							],
							[
								14019,
								14023
							],
							[
								14060,
								14067
							],
							[
								14128,
								14142
							],
							[
								14210,
								14225
							],
							[
								14294,
								14309
							],
							[
								14498,
								14510
							],
							[
								14576,
								14609
							],
							[
								14622,
								14635
							],
							[
								14808,
								14824
							],
							[
								15012,
								15027
							],
							[
								15166,
								15181
							],
							[
								15212,
								15216
							],
							[
								15630,
								15644
							],
							[
								15779,
								15794
							],
							[
								15981,
								16003
							],
							[
								16142,
								16146
							],
							[
								16306,
								16313
							],
							[
								16428,
								16438
							],
							[
								16505,
								16509
							],
							[
								16564,
								16576
							],
							[
								16603,
								16607
							],
							[
								16631,
								16641
							],
							[
								16707,
								16713
							],
							[
								16877,
								16891
							],
							[
								17003,
								17021
							],
							[
								17085,
								17137
							],
							[
								17571,
								17600
							],
							[
								17671,
								17695
							],
							[
								17834,
								17853
							],
							[
								17934,
								17948
							],
							[
								17976,
								17983
							],
							[
								18043,
								18062
							],
							[
								18100,
								18107
							],
							[
								18272,
								18285
							],
							[
								18313,
								18320
							],
							[
								18379,
								18397
							],
							[
								18435,
								18442
							],
							[
								18604,
								18621
							],
							[
								18649,
								18656
							],
							[
								18752,
								18774
							],
							[
								18812,
								18819
							],
							[
								19101,
								19111
							],
							[
								19144,
								19155
							],
							[
								19188,
								19195
							],
							[
								19263,
								19273
							],
							[
								19637,
								19650
							],
							[
								19719,
								19730
							],
							[
								19889,
								19897
							],
							[
								20015,
								20026
							],
							[
								20062,
								20077
							],
							[
								20136,
								20143
							],
							[
								20225,
								20249
							],
							[
								20413,
								20431
							],
							[
								20727,
								20745
							],
							[
								21259,
								21323
							],
							[
								21386,
								21453
							],
							[
								21519,
								21582
							],
							[
								21701,
								21707
							]
						],
						"symlist":
						[
							"Transformation",
							"constructor(transformation)",
							"get type()",
							"TransformationList",
							"get axes()",
							"axis =>",
							"get props()",
							"key =>",
							"has(axis)",
							"get is3D()",
							"entries()",
							"prop =>",
							"toJSON()",
							"vector(unit)",
							" axis =>",
							" axis =>",
							"toString(tUnit)",
							"clone()",
							"(acc, prop) =>",
							"static fromString(arg)",
							"arg =>",
							"arg =>",
							"static get rotation()",
							"static get translation()",
							"static get scaling()",
							"static get matrix()",
							"value(inst)",
							"ctor =>",
							"ctor",
							"Rotation",
							"constructor(angle, x, y)",
							"invert()",
							"get values()",
							"get is3D()",
							"isZero()",
							"toString(rUnit)",
							"coord =>",
							"toSource()",
							"coord =>",
							"accumulate(other)",
							"static convertAngle(angle, unit)",
							"Rotation",
							"Translation",
							"constructor(...args)",
							"a =>",
							"get values()",
							"isZero()",
							"invert()",
							"accumulate(other)",
							"Translation",
							"Scaling",
							"constructor(...args)",
							"get values()",
							"isZero()",
							"toString()",
							"invert()",
							"accumulate(other)",
							"Scaling",
							"MatrixTransformation",
							"constructor(init)",
							"get values()",
							"toString()",
							"invert()",
							"isZero()",
							"accumulate(other)",
							"MatrixTransformation",
							"TransformationList",
							"constructor(init, tUnit, rUnit)",
							"initialize(init)",
							"TransformationList",
							"TransformationList",
							"fromString(str)",
							"fromArray(arr)",
							"get translationUnit()",
							"set translationUnit(value)",
							"get rotationUnit()",
							"set rotationUnit(value)",
							"static fromString(str)",
							"static fromArray(arr)",
							"static fromMatrix(matrix)",
							"toArray()",
							"toArray()",
							"push(...args)",
							"clone()",
							"t =>",
							"map(fn)",
							"slice(...args)",
							"splice(...args)",
							"concat(...args)",
							"filter(pred)",
							"baseCall(c = Array.prototype.map)",
							" (...args) =>",
							"unshift(...args)",
							"rotate(...args)",
							"translate(x, y)",
							"t =>",
							"scale(...args)",
							"matrix(...args)",
							"toString(tUnit, rUnit)",
							"t =>",
							"toDOM()",
							"toSource()",
							"t =>",
							"toMatrices()",
							"t =>",
							"toMatrix()",
							"undo()",
							"merge(...args)",
							"TransformationList",
							"decompose(degrees = true, transformationList = true)",
							".toArray = function toArray()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"get rotation()",
							"item =>",
							"set rotation(value)",
							"item =>",
							"get scaling()",
							"item =>",
							"set scaling(value)",
							"item =>",
							"get translation()",
							"item =>",
							"set translation(value)",
							"item =>",
							"get last()",
							"get first()",
							"at(pos)",
							"collapse()",
							"collapseAll()",
							"get angle()",
							"invert()",
							"(acc, t) =>",
							"join(sep = ' ')",
							"clear()",
							"apply(obj, round = true)",
							"TransformationList",
							"TransformationList",
							"ImmutableTransformationList.prototype.rotate = function(...args)",
							"ImmutableTransformationList.prototype.translate = function(...args)",
							"ImmutableTransformationList.prototype.scale = function(...args)",
							" () =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACQCQAAVHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm1hdGlvbikKICBnZXQgdHlwZSgpClRyYW5zZm9ybWF0aW9uTGlzdAogIGdldCBheGVzKCkKICBheGlzID0+CiAgZ2V0IHByb3BzKCkKICBrZXkgPT4KICBoYXMoYXhpcykKICBnZXQgaXMzRCgpCiAgZW50cmllcygpCiAgcHJvcCA9PgogIHRvSlNPTigpCiAgdmVjdG9yKHVuaXQpCiAgYXhpcyA9PgogIGF4aXMgPT4KICB0b1N0cmluZyh0VW5pdCkKICBjbG9uZSgpCihhY2MsIHByb3ApID0+CiAgc3RhdGljIGZyb21TdHJpbmcoYXJnKQogIGFyZyA9PgogIGFyZyA9PgogIHN0YXRpYyBnZXQgcm90YXRpb24oKQogIHN0YXRpYyBnZXQgdHJhbnNsYXRpb24oKQogIHN0YXRpYyBnZXQgc2NhbGluZygpCiAgc3RhdGljIGdldCBtYXRyaXgoKQogIHZhbHVlKGluc3QpCiAgY3RvciA9PgogIGN0b3IKUm90YXRpb24KICBjb25zdHJ1Y3RvcihhbmdsZSwgeCwgeSkKICBpbnZlcnQoKQogIGdldCB2YWx1ZXMoKQogIGdldCBpczNEKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKHJVbml0KQogIGNvb3JkID0+CiAgdG9Tb3VyY2UoKQogIGNvb3JkID0+CiAgYWNjdW11bGF0ZShvdGhlcikKICBzdGF0aWMgY29udmVydEFuZ2xlKGFuZ2xlLCB1bml0KQpSb3RhdGlvbgpUcmFuc2xhdGlvbgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgYSA9PgogIGdldCB2YWx1ZXMoKQogIGlzWmVybygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpUcmFuc2xhdGlvbgpTY2FsaW5nCiAgY29uc3RydWN0b3IoLi4uYXJncykKICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGFjY3VtdWxhdGUob3RoZXIpClNjYWxpbmcKTWF0cml4VHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcihpbml0KQogIGdldCB2YWx1ZXMoKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGlzWmVybygpCiAgYWNjdW11bGF0ZShvdGhlcikKTWF0cml4VHJhbnNmb3JtYXRpb24KVHJhbnNmb3JtYXRpb25MaXN0CiAgY29uc3RydWN0b3IoaW5pdCwgdFVuaXQsIHJVbml0KQogIGluaXRpYWxpemUoaW5pdCkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdAogIGZyb21TdHJpbmcoc3RyKQogIGZyb21BcnJheShhcnIpCiAgZ2V0IHRyYW5zbGF0aW9uVW5pdCgpCiAgc2V0IHRyYW5zbGF0aW9uVW5pdCh2YWx1ZSkKICBnZXQgcm90YXRpb25Vbml0KCkKICBzZXQgcm90YXRpb25Vbml0KHZhbHVlKQogIHN0YXRpYyBmcm9tU3RyaW5nKHN0cikKICBzdGF0aWMgZnJvbUFycmF5KGFycikKICBzdGF0aWMgZnJvbU1hdHJpeChtYXRyaXgpCiAgdG9BcnJheSgpCiAgdG9BcnJheSgpCiAgcHVzaCguLi5hcmdzKQogIGNsb25lKCkKICB0ID0+CiAgbWFwKGZuKQogIHNsaWNlKC4uLmFyZ3MpCiAgc3BsaWNlKC4uLmFyZ3MpCiAgY29uY2F0KC4uLmFyZ3MpCiAgZmlsdGVyKHByZWQpCiAgYmFzZUNhbGwoYyA9IEFycmF5LnByb3RvdHlwZS5tYXApCiAgKC4uLmFyZ3MpID0+CiAgdW5zaGlmdCguLi5hcmdzKQogIHJvdGF0ZSguLi5hcmdzKQogIHRyYW5zbGF0ZSh4LCB5KQogIHQgPT4KICBzY2FsZSguLi5hcmdzKQogIG1hdHJpeCguLi5hcmdzKQogIHRvU3RyaW5nKHRVbml0LCByVW5pdCkKICB0ID0+CiAgdG9ET00oKQogIHRvU291cmNlKCkKICB0ID0+CiAgdG9NYXRyaWNlcygpCiAgdCA9PgogIHRvTWF0cml4KCkKICB1bmRvKCkKICBtZXJnZSguLi5hcmdzKQpUcmFuc2Zvcm1hdGlvbkxpc3QKICBkZWNvbXBvc2UoZGVncmVlcyA9IHRydWUsIHRyYW5zZm9ybWF0aW9uTGlzdCA9IHRydWUpCiAgLnRvQXJyYXkgPSBmdW5jdGlvbiB0b0FycmF5KCkKICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICBmaW5kTGFzdChwcmVkaWNhdGUpCiAgZ2V0IHJvdGF0aW9uKCkKICBpdGVtID0+CiAgc2V0IHJvdGF0aW9uKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgc2NhbGluZygpCiAgaXRlbSA9PgogIHNldCBzY2FsaW5nKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgdHJhbnNsYXRpb24oKQogIGl0ZW0gPT4KICBzZXQgdHJhbnNsYXRpb24odmFsdWUpCiAgaXRlbSA9PgogIGdldCBsYXN0KCkKICBnZXQgZmlyc3QoKQogIGF0KHBvcykKICBjb2xsYXBzZSgpCiAgY29sbGFwc2VBbGwoKQogIGdldCBhbmdsZSgpCiAgaW52ZXJ0KCkKKGFjYywgdCkgPT4KICBqb2luKHNlcCA9ICcgJykKICBjbGVhcigpCiAgYXBwbHkob2JqLCByb3VuZCA9IHRydWUpClRyYW5zZm9ybWF0aW9uTGlzdApUcmFuc2Zvcm1hdGlvbkxpc3QKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS5yb3RhdGUgPSBmdW5jdGlvbiguLi5hcmdzKQpJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUuc2NhbGUgPSBmdW5jdGlvbiguLi5hcmdzKQogICgpID0+AAAAAAAAAACQCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAkAAFRyYW5zZm9ybWF0aW9uCiAgY29uc3RydWN0b3IodHJhbnNmb3JtYXRpb24pCiAgZ2V0IHR5cGUoKQpUcmFuc2Zvcm1hdGlvbkxpc3QKICBnZXQgYXhlcygpCiAgYXhpcyA9PgogIGdldCBwcm9wcygpCiAga2V5ID0+CiAgaGFzKGF4aXMpCiAgZ2V0IGlzM0QoKQogIGVudHJpZXMoKQogIHByb3AgPT4KICB0b0pTT04oKQogIHZlY3Rvcih1bml0KQogIGF4aXMgPT4KICBheGlzID0+CiAgdG9TdHJpbmcodFVuaXQpCiAgY2xvbmUoKQooYWNjLCBwcm9wKSA9PgogIHN0YXRpYyBmcm9tU3RyaW5nKGFyZykKICBhcmcgPT4KICBhcmcgPT4KICBzdGF0aWMgZ2V0IHJvdGF0aW9uKCkKICBzdGF0aWMgZ2V0IHRyYW5zbGF0aW9uKCkKICBzdGF0aWMgZ2V0IHNjYWxpbmcoKQogIHN0YXRpYyBnZXQgbWF0cml4KCkKICB2YWx1ZShpbnN0KQogIGN0b3IgPT4KICBjdG9yClJvdGF0aW9uCiAgY29uc3RydWN0b3IoYW5nbGUsIHgsIHkpCiAgaW52ZXJ0KCkKICBnZXQgdmFsdWVzKCkKICBnZXQgaXMzRCgpCiAgaXNaZXJvKCkKICB0b1N0cmluZyhyVW5pdCkKICBjb29yZCA9PgogIHRvU291cmNlKCkKICBjb29yZCA9PgogIGFjY3VtdWxhdGUob3RoZXIpCiAgc3RhdGljIGNvbnZlcnRBbmdsZShhbmdsZSwgdW5pdCkKUm90YXRpb24KVHJhbnNsYXRpb24KICBjb25zdHJ1Y3RvciguLi5hcmdzKQogIGEgPT4KICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIGludmVydCgpCiAgYWNjdW11bGF0ZShvdGhlcikKVHJhbnNsYXRpb24KU2NhbGluZwogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgZ2V0IHZhbHVlcygpCiAgaXNaZXJvKCkKICB0b1N0cmluZygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpTY2FsaW5nCk1hdHJpeFRyYW5zZm9ybWF0aW9uCiAgY29uc3RydWN0b3IoaW5pdCkKICBnZXQgdmFsdWVzKCkKICB0b1N0cmluZygpCiAgaW52ZXJ0KCkKICBpc1plcm8oKQogIGFjY3VtdWxhdGUob3RoZXIpCk1hdHJpeFRyYW5zZm9ybWF0aW9uClRyYW5zZm9ybWF0aW9uTGlzdAogIGNvbnN0cnVjdG9yKGluaXQsIHRVbml0LCByVW5pdCkKICBpbml0aWFsaXplKGluaXQpClRyYW5zZm9ybWF0aW9uTGlzdApUcmFuc2Zvcm1hdGlvbkxpc3QKICBmcm9tU3RyaW5nKHN0cikKICBmcm9tQXJyYXkoYXJyKQogIGdldCB0cmFuc2xhdGlvblVuaXQoKQogIHNldCB0cmFuc2xhdGlvblVuaXQodmFsdWUpCiAgZ2V0IHJvdGF0aW9uVW5pdCgpCiAgc2V0IHJvdGF0aW9uVW5pdCh2YWx1ZSkKICBzdGF0aWMgZnJvbVN0cmluZyhzdHIpCiAgc3RhdGljIGZyb21BcnJheShhcnIpCiAgc3RhdGljIGZyb21NYXRyaXgobWF0cml4KQogIHRvQXJyYXkoKQogIHRvQXJyYXkoKQogIHB1c2goLi4uYXJncykKICBjbG9uZSgpCiAgdCA9PgogIG1hcChmbikKICBzbGljZSguLi5hcmdzKQogIHNwbGljZSguLi5hcmdzKQogIGNvbmNhdCguLi5hcmdzKQogIGZpbHRlcihwcmVkKQogIGJhc2VDYWxsKGMgPSBBcnJheS5wcm90b3R5cGUubWFwKQogICguLi5hcmdzKSA9PgogIHVuc2hpZnQoLi4uYXJncykKICByb3RhdGUoLi4uYXJncykKICB0cmFuc2xhdGUoeCwgeSkKICB0ID0+CiAgc2NhbGUoLi4uYXJncykKICBtYXRyaXgoLi4uYXJncykKICB0b1N0cmluZyh0VW5pdCwgclVuaXQpCiAgdCA9PgogIHRvRE9NKCkKICB0b1NvdXJjZSgpCiAgdCA9PgogIHRvTWF0cmljZXMoKQogIHQgPT4KICB0b01hdHJpeCgpCiAgdW5kbygpCiAgbWVyZ2UoLi4uYXJncykKVHJhbnNmb3JtYXRpb25MaXN0CiAgZGVjb21wb3NlKGRlZ3JlZXMgPSB0cnVlLCB0cmFuc2Zvcm1hdGlvbkxpc3QgPSB0cnVlKQogIC50b0FycmF5ID0gZnVuY3Rpb24gdG9BcnJheSgpCiAgZmluZExhc3RJbmRleChwcmVkaWNhdGUpCiAgZmluZExhc3QocHJlZGljYXRlKQogIGdldCByb3RhdGlvbigpCiAgaXRlbSA9PgogIHNldCByb3RhdGlvbih2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IHNjYWxpbmcoKQogIGl0ZW0gPT4KICBzZXQgc2NhbGluZyh2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IHRyYW5zbGF0aW9uKCkKICBpdGVtID0+CiAgc2V0IHRyYW5zbGF0aW9uKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgbGFzdCgpCiAgZ2V0IGZpcnN0KCkKICBhdChwb3MpCiAgY29sbGFwc2UoKQogIGNvbGxhcHNlQWxsKCkKICBnZXQgYW5nbGUoKQogIGludmVydCgpCihhY2MsIHQpID0+CiAgam9pbihzZXAgPSAnICcpCiAgY2xlYXIoKQogIGFwcGx5KG9iaiwgcm91bmQgPSB0cnVlKQpUcmFuc2Zvcm1hdGlvbkxpc3QKVHJhbnNmb3JtYXRpb25MaXN0CkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUucm90YXRlID0gZnVuY3Rpb24oLi4uYXJncykKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS50cmFuc2xhdGUgPSBmdW5jdGlvbiguLi5hcmdzKQpJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnNjYWxlID0gZnVuY3Rpb24oLi4uYXJncykKICAoKSA9PgAAAAAAAAAAkAkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					25,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/geom/transformation.js",
						"symkeys":
						[
							[
								275,
								289
							],
							[
								316,
								343
							],
							[
								799,
								809
							],
							[
								1119,
								1137
							],
							[
								1220,
								1230
							],
							[
								1307,
								1314
							],
							[
								1336,
								1347
							],
							[
								1403,
								1409
							],
							[
								1432,
								1441
							],
							[
								1535,
								1545
							],
							[
								1581,
								1590
							],
							[
								1619,
								1626
							],
							[
								1655,
								1663
							],
							[
								1720,
								1732
							],
							[
								1844,
								1852
							],
							[
								1872,
								1880
							],
							[
								1901,
								1916
							],
							[
								2010,
								2017
							],
							[
								2109,
								2123
							],
							[
								2232,
								2254
							],
							[
								2488,
								2494
							],
							[
								2537,
								2543
							],
							[
								3785,
								3806
							],
							[
								3836,
								3860
							],
							[
								3893,
								3913
							],
							[
								3942,
								3961
							],
							[
								4132,
								4143
							],
							[
								4253,
								4260
							],
							[
								4292,
								4296
							],
							[
								4403,
								4411
							],
							[
								4475,
								4499
							],
							[
								4777,
								4785
							],
							[
								4844,
								4856
							],
							[
								4913,
								4923
							],
							[
								4962,
								4970
							],
							[
								5008,
								5023
							],
							[
								5296,
								5304
							],
							[
								5344,
								5354
							],
							[
								5576,
								5584
							],
							[
								5727,
								5744
							],
							[
								5937,
								5969
							],
							[
								6201,
								6209
							],
							[
								6358,
								6369
							],
							[
								6435,
								6455
							],
							[
								6732,
								6736
							],
							[
								6975,
								6987
							],
							[
								7076,
								7084
							],
							[
								7434,
								7442
							],
							[
								7612,
								7629
							],
							[
								7915,
								7926
							],
							[
								8084,
								8091
							],
							[
								8157,
								8177
							],
							[
								8570,
								8582
							],
							[
								8775,
								8783
							],
							[
								8895,
								8905
							],
							[
								9174,
								9182
							],
							[
								9313,
								9330
							],
							[
								9608,
								9615
							],
							[
								9761,
								9781
							],
							[
								9838,
								9855
							],
							[
								10047,
								10059
							],
							[
								10193,
								10203
							],
							[
								10250,
								10258
							],
							[
								10327,
								10335
							],
							[
								10382,
								10399
							],
							[
								10598,
								10618
							],
							[
								10807,
								10825
							],
							[
								10844,
								10875
							],
							[
								11264,
								11280
							],
							[
								11400,
								11418
							],
							[
								11493,
								11511
							],
							[
								11895,
								11910
							],
							[
								12179,
								12193
							],
							[
								12545,
								12566
							],
							[
								12655,
								12681
							],
							[
								12786,
								12804
							],
							[
								12887,
								12910
							],
							[
								13008,
								13030
							],
							[
								13093,
								13114
							],
							[
								13176,
								13201
							],
							[
								13377,
								13386
							],
							[
								13484,
								13493
							],
							[
								13761,
								13774
							],
							[
								14016,
								14023
							],
							[
								14046,
								14050
							],
							[
								14087,
								14094
							],
							[
								14155,
								14169
							],
							[
								14237,
								14252
							],
							[
								14321,
								14336
							],
							[
								14525,
								14537
							],
							[
								14603,
								14636
							],
							[
								14649,
								14662
							],
							[
								14835,
								14851
							],
							[
								15039,
								15054
							],
							[
								15193,
								15208
							],
							[
								15239,
								15243
							],
							[
								15657,
								15671
							],
							[
								15806,
								15821
							],
							[
								16008,
								16030
							],
							[
								16169,
								16173
							],
							[
								16333,
								16340
							],
							[
								16455,
								16465
							],
							[
								16532,
								16536
							],
							[
								16591,
								16603
							],
							[
								16630,
								16634
							],
							[
								16658,
								16668
							],
							[
								16734,
								16740
							],
							[
								16904,
								16918
							],
							[
								17030,
								17048
							],
							[
								17112,
								17164
							],
							[
								17598,
								17627
							],
							[
								17698,
								17722
							],
							[
								17861,
								17880
							],
							[
								17961,
								17975
							],
							[
								18003,
								18010
							],
							[
								18070,
								18089
							],
							[
								18127,
								18134
							],
							[
								18299,
								18312
							],
							[
								18340,
								18347
							],
							[
								18406,
								18424
							],
							[
								18462,
								18469
							],
							[
								18631,
								18648
							],
							[
								18676,
								18683
							],
							[
								18779,
								18801
							],
							[
								18839,
								18846
							],
							[
								19128,
								19138
							],
							[
								19171,
								19182
							],
							[
								19215,
								19222
							],
							[
								19290,
								19300
							],
							[
								19664,
								19677
							],
							[
								19746,
								19757
							],
							[
								19916,
								19924
							],
							[
								20042,
								20053
							],
							[
								20089,
								20104
							],
							[
								20163,
								20170
							],
							[
								20252,
								20276
							],
							[
								20440,
								20458
							],
							[
								20754,
								20772
							],
							[
								21286,
								21350
							],
							[
								21413,
								21480
							],
							[
								21546,
								21609
							],
							[
								21728,
								21734
							]
						],
						"symlist":
						[
							"Transformation",
							"constructor(transformation)",
							"get type()",
							"TransformationList",
							"get axes()",
							"axis =>",
							"get props()",
							"key =>",
							"has(axis)",
							"get is3D()",
							"entries()",
							"prop =>",
							"toJSON()",
							"vector(unit)",
							" axis =>",
							" axis =>",
							"toString(tUnit)",
							"clone()",
							"(acc, prop) =>",
							"static fromString(arg)",
							"arg =>",
							"arg =>",
							"static get rotation()",
							"static get translation()",
							"static get scaling()",
							"static get matrix()",
							"value(inst)",
							"ctor =>",
							"ctor",
							"Rotation",
							"constructor(angle, x, y)",
							"invert()",
							"get values()",
							"get is3D()",
							"isZero()",
							"toString(rUnit)",
							"coord =>",
							"toSource()",
							"coord =>",
							"accumulate(other)",
							"static convertAngle(angle, unit)",
							"Rotation",
							"Translation",
							"constructor(...args)",
							"a =>",
							"get values()",
							"isZero()",
							"invert()",
							"accumulate(other)",
							"Translation",
							"Scaling",
							"constructor(...args)",
							"get values()",
							"isZero()",
							"toString()",
							"invert()",
							"accumulate(other)",
							"Scaling",
							"MatrixTransformation",
							"constructor(init)",
							"get values()",
							"toString()",
							"invert()",
							"isZero()",
							"accumulate(other)",
							"MatrixTransformation",
							"TransformationList",
							"constructor(init, tUnit, rUnit)",
							"initialize(init)",
							"TransformationList",
							"TransformationList",
							"fromString(str)",
							"fromArray(arr)",
							"get translationUnit()",
							"set translationUnit(value)",
							"get rotationUnit()",
							"set rotationUnit(value)",
							"static fromString(str)",
							"static fromArray(arr)",
							"static fromMatrix(matrix)",
							"toArray()",
							"toArray()",
							"push(...args)",
							"clone()",
							"t =>",
							"map(fn)",
							"slice(...args)",
							"splice(...args)",
							"concat(...args)",
							"filter(pred)",
							"baseCall(c = Array.prototype.map)",
							" (...args) =>",
							"unshift(...args)",
							"rotate(...args)",
							"translate(x, y)",
							"t =>",
							"scale(...args)",
							"matrix(...args)",
							"toString(tUnit, rUnit)",
							"t =>",
							"toDOM()",
							"toSource()",
							"t =>",
							"toMatrices()",
							"t =>",
							"toMatrix()",
							"undo()",
							"merge(...args)",
							"TransformationList",
							"decompose(degrees = true, transformationList = true)",
							".toArray = function toArray()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"get rotation()",
							"item =>",
							"set rotation(value)",
							"item =>",
							"get scaling()",
							"item =>",
							"set scaling(value)",
							"item =>",
							"get translation()",
							"item =>",
							"set translation(value)",
							"item =>",
							"get last()",
							"get first()",
							"at(pos)",
							"collapse()",
							"collapseAll()",
							"get angle()",
							"invert()",
							"(acc, t) =>",
							"join(sep = ' ')",
							"clear()",
							"apply(obj, round = true)",
							"TransformationList",
							"TransformationList",
							"ImmutableTransformationList.prototype.rotate = function(...args)",
							"ImmutableTransformationList.prototype.translate = function(...args)",
							"ImmutableTransformationList.prototype.scale = function(...args)",
							" () =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACQCQAAVHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm1hdGlvbikKICBnZXQgdHlwZSgpClRyYW5zZm9ybWF0aW9uTGlzdAogIGdldCBheGVzKCkKICBheGlzID0+CiAgZ2V0IHByb3BzKCkKICBrZXkgPT4KICBoYXMoYXhpcykKICBnZXQgaXMzRCgpCiAgZW50cmllcygpCiAgcHJvcCA9PgogIHRvSlNPTigpCiAgdmVjdG9yKHVuaXQpCiAgYXhpcyA9PgogIGF4aXMgPT4KICB0b1N0cmluZyh0VW5pdCkKICBjbG9uZSgpCihhY2MsIHByb3ApID0+CiAgc3RhdGljIGZyb21TdHJpbmcoYXJnKQogIGFyZyA9PgogIGFyZyA9PgogIHN0YXRpYyBnZXQgcm90YXRpb24oKQogIHN0YXRpYyBnZXQgdHJhbnNsYXRpb24oKQogIHN0YXRpYyBnZXQgc2NhbGluZygpCiAgc3RhdGljIGdldCBtYXRyaXgoKQogIHZhbHVlKGluc3QpCiAgY3RvciA9PgogIGN0b3IKUm90YXRpb24KICBjb25zdHJ1Y3RvcihhbmdsZSwgeCwgeSkKICBpbnZlcnQoKQogIGdldCB2YWx1ZXMoKQogIGdldCBpczNEKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKHJVbml0KQogIGNvb3JkID0+CiAgdG9Tb3VyY2UoKQogIGNvb3JkID0+CiAgYWNjdW11bGF0ZShvdGhlcikKICBzdGF0aWMgY29udmVydEFuZ2xlKGFuZ2xlLCB1bml0KQpSb3RhdGlvbgpUcmFuc2xhdGlvbgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgYSA9PgogIGdldCB2YWx1ZXMoKQogIGlzWmVybygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpUcmFuc2xhdGlvbgpTY2FsaW5nCiAgY29uc3RydWN0b3IoLi4uYXJncykKICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGFjY3VtdWxhdGUob3RoZXIpClNjYWxpbmcKTWF0cml4VHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcihpbml0KQogIGdldCB2YWx1ZXMoKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGlzWmVybygpCiAgYWNjdW11bGF0ZShvdGhlcikKTWF0cml4VHJhbnNmb3JtYXRpb24KVHJhbnNmb3JtYXRpb25MaXN0CiAgY29uc3RydWN0b3IoaW5pdCwgdFVuaXQsIHJVbml0KQogIGluaXRpYWxpemUoaW5pdCkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdAogIGZyb21TdHJpbmcoc3RyKQogIGZyb21BcnJheShhcnIpCiAgZ2V0IHRyYW5zbGF0aW9uVW5pdCgpCiAgc2V0IHRyYW5zbGF0aW9uVW5pdCh2YWx1ZSkKICBnZXQgcm90YXRpb25Vbml0KCkKICBzZXQgcm90YXRpb25Vbml0KHZhbHVlKQogIHN0YXRpYyBmcm9tU3RyaW5nKHN0cikKICBzdGF0aWMgZnJvbUFycmF5KGFycikKICBzdGF0aWMgZnJvbU1hdHJpeChtYXRyaXgpCiAgdG9BcnJheSgpCiAgdG9BcnJheSgpCiAgcHVzaCguLi5hcmdzKQogIGNsb25lKCkKICB0ID0+CiAgbWFwKGZuKQogIHNsaWNlKC4uLmFyZ3MpCiAgc3BsaWNlKC4uLmFyZ3MpCiAgY29uY2F0KC4uLmFyZ3MpCiAgZmlsdGVyKHByZWQpCiAgYmFzZUNhbGwoYyA9IEFycmF5LnByb3RvdHlwZS5tYXApCiAgKC4uLmFyZ3MpID0+CiAgdW5zaGlmdCguLi5hcmdzKQogIHJvdGF0ZSguLi5hcmdzKQogIHRyYW5zbGF0ZSh4LCB5KQogIHQgPT4KICBzY2FsZSguLi5hcmdzKQogIG1hdHJpeCguLi5hcmdzKQogIHRvU3RyaW5nKHRVbml0LCByVW5pdCkKICB0ID0+CiAgdG9ET00oKQogIHRvU291cmNlKCkKICB0ID0+CiAgdG9NYXRyaWNlcygpCiAgdCA9PgogIHRvTWF0cml4KCkKICB1bmRvKCkKICBtZXJnZSguLi5hcmdzKQpUcmFuc2Zvcm1hdGlvbkxpc3QKICBkZWNvbXBvc2UoZGVncmVlcyA9IHRydWUsIHRyYW5zZm9ybWF0aW9uTGlzdCA9IHRydWUpCiAgLnRvQXJyYXkgPSBmdW5jdGlvbiB0b0FycmF5KCkKICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICBmaW5kTGFzdChwcmVkaWNhdGUpCiAgZ2V0IHJvdGF0aW9uKCkKICBpdGVtID0+CiAgc2V0IHJvdGF0aW9uKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgc2NhbGluZygpCiAgaXRlbSA9PgogIHNldCBzY2FsaW5nKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgdHJhbnNsYXRpb24oKQogIGl0ZW0gPT4KICBzZXQgdHJhbnNsYXRpb24odmFsdWUpCiAgaXRlbSA9PgogIGdldCBsYXN0KCkKICBnZXQgZmlyc3QoKQogIGF0KHBvcykKICBjb2xsYXBzZSgpCiAgY29sbGFwc2VBbGwoKQogIGdldCBhbmdsZSgpCiAgaW52ZXJ0KCkKKGFjYywgdCkgPT4KICBqb2luKHNlcCA9ICcgJykKICBjbGVhcigpCiAgYXBwbHkob2JqLCByb3VuZCA9IHRydWUpClRyYW5zZm9ybWF0aW9uTGlzdApUcmFuc2Zvcm1hdGlvbkxpc3QKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS5yb3RhdGUgPSBmdW5jdGlvbiguLi5hcmdzKQpJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUuc2NhbGUgPSBmdW5jdGlvbiguLi5hcmdzKQogICgpID0+AAAAAAAAAACQCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAkAAFRyYW5zZm9ybWF0aW9uCiAgY29uc3RydWN0b3IodHJhbnNmb3JtYXRpb24pCiAgZ2V0IHR5cGUoKQpUcmFuc2Zvcm1hdGlvbkxpc3QKICBnZXQgYXhlcygpCiAgYXhpcyA9PgogIGdldCBwcm9wcygpCiAga2V5ID0+CiAgaGFzKGF4aXMpCiAgZ2V0IGlzM0QoKQogIGVudHJpZXMoKQogIHByb3AgPT4KICB0b0pTT04oKQogIHZlY3Rvcih1bml0KQogIGF4aXMgPT4KICBheGlzID0+CiAgdG9TdHJpbmcodFVuaXQpCiAgY2xvbmUoKQooYWNjLCBwcm9wKSA9PgogIHN0YXRpYyBmcm9tU3RyaW5nKGFyZykKICBhcmcgPT4KICBhcmcgPT4KICBzdGF0aWMgZ2V0IHJvdGF0aW9uKCkKICBzdGF0aWMgZ2V0IHRyYW5zbGF0aW9uKCkKICBzdGF0aWMgZ2V0IHNjYWxpbmcoKQogIHN0YXRpYyBnZXQgbWF0cml4KCkKICB2YWx1ZShpbnN0KQogIGN0b3IgPT4KICBjdG9yClJvdGF0aW9uCiAgY29uc3RydWN0b3IoYW5nbGUsIHgsIHkpCiAgaW52ZXJ0KCkKICBnZXQgdmFsdWVzKCkKICBnZXQgaXMzRCgpCiAgaXNaZXJvKCkKICB0b1N0cmluZyhyVW5pdCkKICBjb29yZCA9PgogIHRvU291cmNlKCkKICBjb29yZCA9PgogIGFjY3VtdWxhdGUob3RoZXIpCiAgc3RhdGljIGNvbnZlcnRBbmdsZShhbmdsZSwgdW5pdCkKUm90YXRpb24KVHJhbnNsYXRpb24KICBjb25zdHJ1Y3RvciguLi5hcmdzKQogIGEgPT4KICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIGludmVydCgpCiAgYWNjdW11bGF0ZShvdGhlcikKVHJhbnNsYXRpb24KU2NhbGluZwogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgZ2V0IHZhbHVlcygpCiAgaXNaZXJvKCkKICB0b1N0cmluZygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpTY2FsaW5nCk1hdHJpeFRyYW5zZm9ybWF0aW9uCiAgY29uc3RydWN0b3IoaW5pdCkKICBnZXQgdmFsdWVzKCkKICB0b1N0cmluZygpCiAgaW52ZXJ0KCkKICBpc1plcm8oKQogIGFjY3VtdWxhdGUob3RoZXIpCk1hdHJpeFRyYW5zZm9ybWF0aW9uClRyYW5zZm9ybWF0aW9uTGlzdAogIGNvbnN0cnVjdG9yKGluaXQsIHRVbml0LCByVW5pdCkKICBpbml0aWFsaXplKGluaXQpClRyYW5zZm9ybWF0aW9uTGlzdApUcmFuc2Zvcm1hdGlvbkxpc3QKICBmcm9tU3RyaW5nKHN0cikKICBmcm9tQXJyYXkoYXJyKQogIGdldCB0cmFuc2xhdGlvblVuaXQoKQogIHNldCB0cmFuc2xhdGlvblVuaXQodmFsdWUpCiAgZ2V0IHJvdGF0aW9uVW5pdCgpCiAgc2V0IHJvdGF0aW9uVW5pdCh2YWx1ZSkKICBzdGF0aWMgZnJvbVN0cmluZyhzdHIpCiAgc3RhdGljIGZyb21BcnJheShhcnIpCiAgc3RhdGljIGZyb21NYXRyaXgobWF0cml4KQogIHRvQXJyYXkoKQogIHRvQXJyYXkoKQogIHB1c2goLi4uYXJncykKICBjbG9uZSgpCiAgdCA9PgogIG1hcChmbikKICBzbGljZSguLi5hcmdzKQogIHNwbGljZSguLi5hcmdzKQogIGNvbmNhdCguLi5hcmdzKQogIGZpbHRlcihwcmVkKQogIGJhc2VDYWxsKGMgPSBBcnJheS5wcm90b3R5cGUubWFwKQogICguLi5hcmdzKSA9PgogIHVuc2hpZnQoLi4uYXJncykKICByb3RhdGUoLi4uYXJncykKICB0cmFuc2xhdGUoeCwgeSkKICB0ID0+CiAgc2NhbGUoLi4uYXJncykKICBtYXRyaXgoLi4uYXJncykKICB0b1N0cmluZyh0VW5pdCwgclVuaXQpCiAgdCA9PgogIHRvRE9NKCkKICB0b1NvdXJjZSgpCiAgdCA9PgogIHRvTWF0cmljZXMoKQogIHQgPT4KICB0b01hdHJpeCgpCiAgdW5kbygpCiAgbWVyZ2UoLi4uYXJncykKVHJhbnNmb3JtYXRpb25MaXN0CiAgZGVjb21wb3NlKGRlZ3JlZXMgPSB0cnVlLCB0cmFuc2Zvcm1hdGlvbkxpc3QgPSB0cnVlKQogIC50b0FycmF5ID0gZnVuY3Rpb24gdG9BcnJheSgpCiAgZmluZExhc3RJbmRleChwcmVkaWNhdGUpCiAgZmluZExhc3QocHJlZGljYXRlKQogIGdldCByb3RhdGlvbigpCiAgaXRlbSA9PgogIHNldCByb3RhdGlvbih2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IHNjYWxpbmcoKQogIGl0ZW0gPT4KICBzZXQgc2NhbGluZyh2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IHRyYW5zbGF0aW9uKCkKICBpdGVtID0+CiAgc2V0IHRyYW5zbGF0aW9uKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgbGFzdCgpCiAgZ2V0IGZpcnN0KCkKICBhdChwb3MpCiAgY29sbGFwc2UoKQogIGNvbGxhcHNlQWxsKCkKICBnZXQgYW5nbGUoKQogIGludmVydCgpCihhY2MsIHQpID0+CiAgam9pbihzZXAgPSAnICcpCiAgY2xlYXIoKQogIGFwcGx5KG9iaiwgcm91bmQgPSB0cnVlKQpUcmFuc2Zvcm1hdGlvbkxpc3QKVHJhbnNmb3JtYXRpb25MaXN0CkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUucm90YXRlID0gZnVuY3Rpb24oLi4uYXJncykKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS50cmFuc2xhdGUgPSBmdW5jdGlvbiguLi5hcmdzKQpJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnNjYWxlID0gZnVuY3Rpb24oLi4uYXJncykKICAoKSA9PgAAAAAAAAAAkAkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					26,
					3,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/geom/transformation.js",
						"symkeys":
						[
							[
								275,
								289
							],
							[
								316,
								343
							],
							[
								799,
								809
							],
							[
								1119,
								1137
							],
							[
								1220,
								1230
							],
							[
								1307,
								1314
							],
							[
								1336,
								1347
							],
							[
								1403,
								1409
							],
							[
								1432,
								1441
							],
							[
								1535,
								1545
							],
							[
								1581,
								1590
							],
							[
								1619,
								1626
							],
							[
								1655,
								1663
							],
							[
								1720,
								1732
							],
							[
								1844,
								1852
							],
							[
								1872,
								1880
							],
							[
								1901,
								1916
							],
							[
								2010,
								2017
							],
							[
								2109,
								2123
							],
							[
								2232,
								2254
							],
							[
								2488,
								2494
							],
							[
								2537,
								2543
							],
							[
								3785,
								3806
							],
							[
								3836,
								3860
							],
							[
								3893,
								3913
							],
							[
								3942,
								3961
							],
							[
								4132,
								4143
							],
							[
								4253,
								4260
							],
							[
								4292,
								4296
							],
							[
								4403,
								4411
							],
							[
								4475,
								4499
							],
							[
								4777,
								4785
							],
							[
								4844,
								4856
							],
							[
								4913,
								4923
							],
							[
								4962,
								4970
							],
							[
								5008,
								5023
							],
							[
								5296,
								5304
							],
							[
								5344,
								5354
							],
							[
								5576,
								5584
							],
							[
								5727,
								5744
							],
							[
								5937,
								5969
							],
							[
								6201,
								6209
							],
							[
								6358,
								6369
							],
							[
								6435,
								6455
							],
							[
								6732,
								6736
							],
							[
								6975,
								6987
							],
							[
								7076,
								7084
							],
							[
								7434,
								7442
							],
							[
								7612,
								7629
							],
							[
								7915,
								7926
							],
							[
								8084,
								8091
							],
							[
								8157,
								8177
							],
							[
								8570,
								8582
							],
							[
								8775,
								8783
							],
							[
								8895,
								8905
							],
							[
								9174,
								9182
							],
							[
								9313,
								9330
							],
							[
								9608,
								9615
							],
							[
								9761,
								9781
							],
							[
								9838,
								9855
							],
							[
								10047,
								10059
							],
							[
								10193,
								10203
							],
							[
								10250,
								10258
							],
							[
								10327,
								10335
							],
							[
								10382,
								10399
							],
							[
								10598,
								10618
							],
							[
								10807,
								10825
							],
							[
								10844,
								10875
							],
							[
								11264,
								11280
							],
							[
								11400,
								11418
							],
							[
								11493,
								11511
							],
							[
								11895,
								11910
							],
							[
								12179,
								12193
							],
							[
								12545,
								12566
							],
							[
								12655,
								12681
							],
							[
								12786,
								12804
							],
							[
								12887,
								12910
							],
							[
								13008,
								13030
							],
							[
								13093,
								13114
							],
							[
								13176,
								13201
							],
							[
								13377,
								13386
							],
							[
								13484,
								13493
							],
							[
								13761,
								13774
							],
							[
								14016,
								14023
							],
							[
								14046,
								14050
							],
							[
								14087,
								14094
							],
							[
								14155,
								14169
							],
							[
								14237,
								14252
							],
							[
								14321,
								14336
							],
							[
								14525,
								14537
							],
							[
								14603,
								14636
							],
							[
								14649,
								14662
							],
							[
								14835,
								14851
							],
							[
								15039,
								15054
							],
							[
								15193,
								15208
							],
							[
								15239,
								15243
							],
							[
								15657,
								15671
							],
							[
								15806,
								15821
							],
							[
								16008,
								16030
							],
							[
								16169,
								16173
							],
							[
								16333,
								16340
							],
							[
								16455,
								16465
							],
							[
								16532,
								16536
							],
							[
								16591,
								16603
							],
							[
								16630,
								16634
							],
							[
								16658,
								16668
							],
							[
								16734,
								16740
							],
							[
								16904,
								16918
							],
							[
								17030,
								17048
							],
							[
								17112,
								17164
							],
							[
								17598,
								17627
							],
							[
								17698,
								17722
							],
							[
								17861,
								17880
							],
							[
								17961,
								17975
							],
							[
								18003,
								18010
							],
							[
								18070,
								18089
							],
							[
								18127,
								18134
							],
							[
								18299,
								18312
							],
							[
								18340,
								18347
							],
							[
								18406,
								18424
							],
							[
								18462,
								18469
							],
							[
								18631,
								18648
							],
							[
								18676,
								18683
							],
							[
								18779,
								18801
							],
							[
								18839,
								18846
							],
							[
								19128,
								19138
							],
							[
								19171,
								19182
							],
							[
								19215,
								19222
							],
							[
								19290,
								19300
							],
							[
								19664,
								19677
							],
							[
								19746,
								19757
							],
							[
								19916,
								19924
							],
							[
								20042,
								20053
							],
							[
								20089,
								20104
							],
							[
								20163,
								20170
							],
							[
								20252,
								20276
							],
							[
								20440,
								20458
							],
							[
								20754,
								20772
							],
							[
								21286,
								21350
							],
							[
								21413,
								21480
							],
							[
								21546,
								21609
							],
							[
								21728,
								21734
							]
						],
						"symlist":
						[
							"Transformation",
							"constructor(transformation)",
							"get type()",
							"TransformationList",
							"get axes()",
							"axis =>",
							"get props()",
							"key =>",
							"has(axis)",
							"get is3D()",
							"entries()",
							"prop =>",
							"toJSON()",
							"vector(unit)",
							" axis =>",
							" axis =>",
							"toString(tUnit)",
							"clone()",
							"(acc, prop) =>",
							"static fromString(arg)",
							"arg =>",
							"arg =>",
							"static get rotation()",
							"static get translation()",
							"static get scaling()",
							"static get matrix()",
							"value(inst)",
							"ctor =>",
							"ctor",
							"Rotation",
							"constructor(angle, x, y)",
							"invert()",
							"get values()",
							"get is3D()",
							"isZero()",
							"toString(rUnit)",
							"coord =>",
							"toSource()",
							"coord =>",
							"accumulate(other)",
							"static convertAngle(angle, unit)",
							"Rotation",
							"Translation",
							"constructor(...args)",
							"a =>",
							"get values()",
							"isZero()",
							"invert()",
							"accumulate(other)",
							"Translation",
							"Scaling",
							"constructor(...args)",
							"get values()",
							"isZero()",
							"toString()",
							"invert()",
							"accumulate(other)",
							"Scaling",
							"MatrixTransformation",
							"constructor(init)",
							"get values()",
							"toString()",
							"invert()",
							"isZero()",
							"accumulate(other)",
							"MatrixTransformation",
							"TransformationList",
							"constructor(init, tUnit, rUnit)",
							"initialize(init)",
							"TransformationList",
							"TransformationList",
							"fromString(str)",
							"fromArray(arr)",
							"get translationUnit()",
							"set translationUnit(value)",
							"get rotationUnit()",
							"set rotationUnit(value)",
							"static fromString(str)",
							"static fromArray(arr)",
							"static fromMatrix(matrix)",
							"toArray()",
							"toArray()",
							"push(...args)",
							"clone()",
							"t =>",
							"map(fn)",
							"slice(...args)",
							"splice(...args)",
							"concat(...args)",
							"filter(pred)",
							"baseCall(c = Array.prototype.map)",
							" (...args) =>",
							"unshift(...args)",
							"rotate(...args)",
							"translate(x, y)",
							"t =>",
							"scale(...args)",
							"matrix(...args)",
							"toString(tUnit, rUnit)",
							"t =>",
							"toDOM()",
							"toSource()",
							"t =>",
							"toMatrices()",
							"t =>",
							"toMatrix()",
							"undo()",
							"merge(...args)",
							"TransformationList",
							"decompose(degrees = true, transformationList = true)",
							".toArray = function toArray()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"get rotation()",
							"item =>",
							"set rotation(value)",
							"item =>",
							"get scaling()",
							"item =>",
							"set scaling(value)",
							"item =>",
							"get translation()",
							"item =>",
							"set translation(value)",
							"item =>",
							"get last()",
							"get first()",
							"at(pos)",
							"collapse()",
							"collapseAll()",
							"get angle()",
							"invert()",
							"(acc, t) =>",
							"join(sep = ' ')",
							"clear()",
							"apply(obj, round = true)",
							"TransformationList",
							"TransformationList",
							"ImmutableTransformationList.prototype.rotate = function(...args)",
							"ImmutableTransformationList.prototype.translate = function(...args)",
							"ImmutableTransformationList.prototype.scale = function(...args)",
							" () =>"
						]
					},
					"",
					"AQAAAAAAAAAAAAAA"
				],
				[
					27,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/geom/transformation.js",
						"symkeys":
						[
							[
								275,
								289
							],
							[
								316,
								343
							],
							[
								799,
								809
							],
							[
								1119,
								1137
							],
							[
								1220,
								1230
							],
							[
								1307,
								1314
							],
							[
								1336,
								1347
							],
							[
								1403,
								1409
							],
							[
								1432,
								1441
							],
							[
								1535,
								1545
							],
							[
								1581,
								1590
							],
							[
								1619,
								1626
							],
							[
								1655,
								1663
							],
							[
								1720,
								1732
							],
							[
								1844,
								1852
							],
							[
								1872,
								1880
							],
							[
								1901,
								1916
							],
							[
								2010,
								2017
							],
							[
								2109,
								2123
							],
							[
								2232,
								2254
							],
							[
								2488,
								2494
							],
							[
								2537,
								2543
							],
							[
								3785,
								3806
							],
							[
								3836,
								3860
							],
							[
								3893,
								3913
							],
							[
								3942,
								3961
							],
							[
								4132,
								4143
							],
							[
								4253,
								4260
							],
							[
								4292,
								4296
							],
							[
								4403,
								4411
							],
							[
								4475,
								4499
							],
							[
								4777,
								4785
							],
							[
								4844,
								4856
							],
							[
								4913,
								4923
							],
							[
								4962,
								4970
							],
							[
								5008,
								5023
							],
							[
								5296,
								5304
							],
							[
								5344,
								5354
							],
							[
								5576,
								5584
							],
							[
								5727,
								5744
							],
							[
								5937,
								5969
							],
							[
								6201,
								6209
							],
							[
								6358,
								6369
							],
							[
								6435,
								6455
							],
							[
								6732,
								6736
							],
							[
								6975,
								6987
							],
							[
								7076,
								7084
							],
							[
								7434,
								7442
							],
							[
								7612,
								7629
							],
							[
								7915,
								7926
							],
							[
								8084,
								8091
							],
							[
								8157,
								8177
							],
							[
								8570,
								8582
							],
							[
								8775,
								8783
							],
							[
								8895,
								8905
							],
							[
								9174,
								9182
							],
							[
								9313,
								9330
							],
							[
								9608,
								9615
							],
							[
								9761,
								9781
							],
							[
								9838,
								9855
							],
							[
								10047,
								10059
							],
							[
								10193,
								10203
							],
							[
								10250,
								10258
							],
							[
								10327,
								10335
							],
							[
								10382,
								10399
							],
							[
								10598,
								10618
							],
							[
								10807,
								10825
							],
							[
								10844,
								10875
							],
							[
								11264,
								11280
							],
							[
								11400,
								11418
							],
							[
								11493,
								11511
							],
							[
								11895,
								11910
							],
							[
								12179,
								12193
							],
							[
								12545,
								12566
							],
							[
								12655,
								12681
							],
							[
								12786,
								12804
							],
							[
								12887,
								12910
							],
							[
								13008,
								13030
							],
							[
								13093,
								13114
							],
							[
								13176,
								13201
							],
							[
								13377,
								13386
							],
							[
								13484,
								13493
							],
							[
								13761,
								13774
							],
							[
								14016,
								14023
							],
							[
								14046,
								14050
							],
							[
								14087,
								14094
							],
							[
								14155,
								14169
							],
							[
								14237,
								14252
							],
							[
								14321,
								14336
							],
							[
								14525,
								14537
							],
							[
								14603,
								14636
							],
							[
								14649,
								14662
							],
							[
								14835,
								14851
							],
							[
								15039,
								15054
							],
							[
								15193,
								15208
							],
							[
								15239,
								15243
							],
							[
								15657,
								15671
							],
							[
								15806,
								15821
							],
							[
								16008,
								16030
							],
							[
								16169,
								16173
							],
							[
								16333,
								16340
							],
							[
								16455,
								16465
							],
							[
								16532,
								16536
							],
							[
								16591,
								16603
							],
							[
								16630,
								16634
							],
							[
								16658,
								16668
							],
							[
								16734,
								16740
							],
							[
								16904,
								16918
							],
							[
								17030,
								17048
							],
							[
								17112,
								17164
							],
							[
								17598,
								17627
							],
							[
								17698,
								17722
							],
							[
								17861,
								17880
							],
							[
								17961,
								17975
							],
							[
								18003,
								18010
							],
							[
								18070,
								18089
							],
							[
								18127,
								18134
							],
							[
								18299,
								18312
							],
							[
								18340,
								18347
							],
							[
								18406,
								18424
							],
							[
								18462,
								18469
							],
							[
								18631,
								18648
							],
							[
								18676,
								18683
							],
							[
								18779,
								18801
							],
							[
								18839,
								18846
							],
							[
								19128,
								19138
							],
							[
								19171,
								19182
							],
							[
								19215,
								19222
							],
							[
								19290,
								19300
							],
							[
								19664,
								19677
							],
							[
								19746,
								19757
							],
							[
								19916,
								19924
							],
							[
								20042,
								20053
							],
							[
								20089,
								20104
							],
							[
								20163,
								20170
							],
							[
								20252,
								20276
							],
							[
								20440,
								20458
							],
							[
								20754,
								20772
							],
							[
								21286,
								21350
							],
							[
								21413,
								21480
							],
							[
								21546,
								21609
							],
							[
								21728,
								21734
							]
						],
						"symlist":
						[
							"Transformation",
							"constructor(transformation)",
							"get type()",
							"TransformationList",
							"get axes()",
							"axis =>",
							"get props()",
							"key =>",
							"has(axis)",
							"get is3D()",
							"entries()",
							"prop =>",
							"toJSON()",
							"vector(unit)",
							" axis =>",
							" axis =>",
							"toString(tUnit)",
							"clone()",
							"(acc, prop) =>",
							"static fromString(arg)",
							"arg =>",
							"arg =>",
							"static get rotation()",
							"static get translation()",
							"static get scaling()",
							"static get matrix()",
							"value(inst)",
							"ctor =>",
							"ctor",
							"Rotation",
							"constructor(angle, x, y)",
							"invert()",
							"get values()",
							"get is3D()",
							"isZero()",
							"toString(rUnit)",
							"coord =>",
							"toSource()",
							"coord =>",
							"accumulate(other)",
							"static convertAngle(angle, unit)",
							"Rotation",
							"Translation",
							"constructor(...args)",
							"a =>",
							"get values()",
							"isZero()",
							"invert()",
							"accumulate(other)",
							"Translation",
							"Scaling",
							"constructor(...args)",
							"get values()",
							"isZero()",
							"toString()",
							"invert()",
							"accumulate(other)",
							"Scaling",
							"MatrixTransformation",
							"constructor(init)",
							"get values()",
							"toString()",
							"invert()",
							"isZero()",
							"accumulate(other)",
							"MatrixTransformation",
							"TransformationList",
							"constructor(init, tUnit, rUnit)",
							"initialize(init)",
							"TransformationList",
							"TransformationList",
							"fromString(str)",
							"fromArray(arr)",
							"get translationUnit()",
							"set translationUnit(value)",
							"get rotationUnit()",
							"set rotationUnit(value)",
							"static fromString(str)",
							"static fromArray(arr)",
							"static fromMatrix(matrix)",
							"toArray()",
							"toArray()",
							"push(...args)",
							"clone()",
							"t =>",
							"map(fn)",
							"slice(...args)",
							"splice(...args)",
							"concat(...args)",
							"filter(pred)",
							"baseCall(c = Array.prototype.map)",
							" (...args) =>",
							"unshift(...args)",
							"rotate(...args)",
							"translate(x, y)",
							"t =>",
							"scale(...args)",
							"matrix(...args)",
							"toString(tUnit, rUnit)",
							"t =>",
							"toDOM()",
							"toSource()",
							"t =>",
							"toMatrices()",
							"t =>",
							"toMatrix()",
							"undo()",
							"merge(...args)",
							"TransformationList",
							"decompose(degrees = true, transformationList = true)",
							".toArray = function toArray()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"get rotation()",
							"item =>",
							"set rotation(value)",
							"item =>",
							"get scaling()",
							"item =>",
							"set scaling(value)",
							"item =>",
							"get translation()",
							"item =>",
							"set translation(value)",
							"item =>",
							"get last()",
							"get first()",
							"at(pos)",
							"collapse()",
							"collapseAll()",
							"get angle()",
							"invert()",
							"(acc, t) =>",
							"join(sep = ' ')",
							"clear()",
							"apply(obj, round = true)",
							"TransformationList",
							"TransformationList",
							"ImmutableTransformationList.prototype.rotate = function(...args)",
							"ImmutableTransformationList.prototype.translate = function(...args)",
							"ImmutableTransformationList.prototype.scale = function(...args)",
							" () =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACQCQAAVHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm1hdGlvbikKICBnZXQgdHlwZSgpClRyYW5zZm9ybWF0aW9uTGlzdAogIGdldCBheGVzKCkKICBheGlzID0+CiAgZ2V0IHByb3BzKCkKICBrZXkgPT4KICBoYXMoYXhpcykKICBnZXQgaXMzRCgpCiAgZW50cmllcygpCiAgcHJvcCA9PgogIHRvSlNPTigpCiAgdmVjdG9yKHVuaXQpCiAgYXhpcyA9PgogIGF4aXMgPT4KICB0b1N0cmluZyh0VW5pdCkKICBjbG9uZSgpCihhY2MsIHByb3ApID0+CiAgc3RhdGljIGZyb21TdHJpbmcoYXJnKQogIGFyZyA9PgogIGFyZyA9PgogIHN0YXRpYyBnZXQgcm90YXRpb24oKQogIHN0YXRpYyBnZXQgdHJhbnNsYXRpb24oKQogIHN0YXRpYyBnZXQgc2NhbGluZygpCiAgc3RhdGljIGdldCBtYXRyaXgoKQogIHZhbHVlKGluc3QpCiAgY3RvciA9PgogIGN0b3IKUm90YXRpb24KICBjb25zdHJ1Y3RvcihhbmdsZSwgeCwgeSkKICBpbnZlcnQoKQogIGdldCB2YWx1ZXMoKQogIGdldCBpczNEKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKHJVbml0KQogIGNvb3JkID0+CiAgdG9Tb3VyY2UoKQogIGNvb3JkID0+CiAgYWNjdW11bGF0ZShvdGhlcikKICBzdGF0aWMgY29udmVydEFuZ2xlKGFuZ2xlLCB1bml0KQpSb3RhdGlvbgpUcmFuc2xhdGlvbgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgYSA9PgogIGdldCB2YWx1ZXMoKQogIGlzWmVybygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpUcmFuc2xhdGlvbgpTY2FsaW5nCiAgY29uc3RydWN0b3IoLi4uYXJncykKICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGFjY3VtdWxhdGUob3RoZXIpClNjYWxpbmcKTWF0cml4VHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcihpbml0KQogIGdldCB2YWx1ZXMoKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGlzWmVybygpCiAgYWNjdW11bGF0ZShvdGhlcikKTWF0cml4VHJhbnNmb3JtYXRpb24KVHJhbnNmb3JtYXRpb25MaXN0CiAgY29uc3RydWN0b3IoaW5pdCwgdFVuaXQsIHJVbml0KQogIGluaXRpYWxpemUoaW5pdCkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdAogIGZyb21TdHJpbmcoc3RyKQogIGZyb21BcnJheShhcnIpCiAgZ2V0IHRyYW5zbGF0aW9uVW5pdCgpCiAgc2V0IHRyYW5zbGF0aW9uVW5pdCh2YWx1ZSkKICBnZXQgcm90YXRpb25Vbml0KCkKICBzZXQgcm90YXRpb25Vbml0KHZhbHVlKQogIHN0YXRpYyBmcm9tU3RyaW5nKHN0cikKICBzdGF0aWMgZnJvbUFycmF5KGFycikKICBzdGF0aWMgZnJvbU1hdHJpeChtYXRyaXgpCiAgdG9BcnJheSgpCiAgdG9BcnJheSgpCiAgcHVzaCguLi5hcmdzKQogIGNsb25lKCkKICB0ID0+CiAgbWFwKGZuKQogIHNsaWNlKC4uLmFyZ3MpCiAgc3BsaWNlKC4uLmFyZ3MpCiAgY29uY2F0KC4uLmFyZ3MpCiAgZmlsdGVyKHByZWQpCiAgYmFzZUNhbGwoYyA9IEFycmF5LnByb3RvdHlwZS5tYXApCiAgKC4uLmFyZ3MpID0+CiAgdW5zaGlmdCguLi5hcmdzKQogIHJvdGF0ZSguLi5hcmdzKQogIHRyYW5zbGF0ZSh4LCB5KQogIHQgPT4KICBzY2FsZSguLi5hcmdzKQogIG1hdHJpeCguLi5hcmdzKQogIHRvU3RyaW5nKHRVbml0LCByVW5pdCkKICB0ID0+CiAgdG9ET00oKQogIHRvU291cmNlKCkKICB0ID0+CiAgdG9NYXRyaWNlcygpCiAgdCA9PgogIHRvTWF0cml4KCkKICB1bmRvKCkKICBtZXJnZSguLi5hcmdzKQpUcmFuc2Zvcm1hdGlvbkxpc3QKICBkZWNvbXBvc2UoZGVncmVlcyA9IHRydWUsIHRyYW5zZm9ybWF0aW9uTGlzdCA9IHRydWUpCiAgLnRvQXJyYXkgPSBmdW5jdGlvbiB0b0FycmF5KCkKICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICBmaW5kTGFzdChwcmVkaWNhdGUpCiAgZ2V0IHJvdGF0aW9uKCkKICBpdGVtID0+CiAgc2V0IHJvdGF0aW9uKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgc2NhbGluZygpCiAgaXRlbSA9PgogIHNldCBzY2FsaW5nKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgdHJhbnNsYXRpb24oKQogIGl0ZW0gPT4KICBzZXQgdHJhbnNsYXRpb24odmFsdWUpCiAgaXRlbSA9PgogIGdldCBsYXN0KCkKICBnZXQgZmlyc3QoKQogIGF0KHBvcykKICBjb2xsYXBzZSgpCiAgY29sbGFwc2VBbGwoKQogIGdldCBhbmdsZSgpCiAgaW52ZXJ0KCkKKGFjYywgdCkgPT4KICBqb2luKHNlcCA9ICcgJykKICBjbGVhcigpCiAgYXBwbHkob2JqLCByb3VuZCA9IHRydWUpClRyYW5zZm9ybWF0aW9uTGlzdApUcmFuc2Zvcm1hdGlvbkxpc3QKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS5yb3RhdGUgPSBmdW5jdGlvbiguLi5hcmdzKQpJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUuc2NhbGUgPSBmdW5jdGlvbiguLi5hcmdzKQogICgpID0+AAAAAAAAAACQCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAkAAFRyYW5zZm9ybWF0aW9uCiAgY29uc3RydWN0b3IodHJhbnNmb3JtYXRpb24pCiAgZ2V0IHR5cGUoKQpUcmFuc2Zvcm1hdGlvbkxpc3QKICBnZXQgYXhlcygpCiAgYXhpcyA9PgogIGdldCBwcm9wcygpCiAga2V5ID0+CiAgaGFzKGF4aXMpCiAgZ2V0IGlzM0QoKQogIGVudHJpZXMoKQogIHByb3AgPT4KICB0b0pTT04oKQogIHZlY3Rvcih1bml0KQogIGF4aXMgPT4KICBheGlzID0+CiAgdG9TdHJpbmcodFVuaXQpCiAgY2xvbmUoKQooYWNjLCBwcm9wKSA9PgogIHN0YXRpYyBmcm9tU3RyaW5nKGFyZykKICBhcmcgPT4KICBhcmcgPT4KICBzdGF0aWMgZ2V0IHJvdGF0aW9uKCkKICBzdGF0aWMgZ2V0IHRyYW5zbGF0aW9uKCkKICBzdGF0aWMgZ2V0IHNjYWxpbmcoKQogIHN0YXRpYyBnZXQgbWF0cml4KCkKICB2YWx1ZShpbnN0KQogIGN0b3IgPT4KICBjdG9yClJvdGF0aW9uCiAgY29uc3RydWN0b3IoYW5nbGUsIHgsIHkpCiAgaW52ZXJ0KCkKICBnZXQgdmFsdWVzKCkKICBnZXQgaXMzRCgpCiAgaXNaZXJvKCkKICB0b1N0cmluZyhyVW5pdCkKICBjb29yZCA9PgogIHRvU291cmNlKCkKICBjb29yZCA9PgogIGFjY3VtdWxhdGUob3RoZXIpCiAgc3RhdGljIGNvbnZlcnRBbmdsZShhbmdsZSwgdW5pdCkKUm90YXRpb24KVHJhbnNsYXRpb24KICBjb25zdHJ1Y3RvciguLi5hcmdzKQogIGEgPT4KICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIGludmVydCgpCiAgYWNjdW11bGF0ZShvdGhlcikKVHJhbnNsYXRpb24KU2NhbGluZwogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgZ2V0IHZhbHVlcygpCiAgaXNaZXJvKCkKICB0b1N0cmluZygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpTY2FsaW5nCk1hdHJpeFRyYW5zZm9ybWF0aW9uCiAgY29uc3RydWN0b3IoaW5pdCkKICBnZXQgdmFsdWVzKCkKICB0b1N0cmluZygpCiAgaW52ZXJ0KCkKICBpc1plcm8oKQogIGFjY3VtdWxhdGUob3RoZXIpCk1hdHJpeFRyYW5zZm9ybWF0aW9uClRyYW5zZm9ybWF0aW9uTGlzdAogIGNvbnN0cnVjdG9yKGluaXQsIHRVbml0LCByVW5pdCkKICBpbml0aWFsaXplKGluaXQpClRyYW5zZm9ybWF0aW9uTGlzdApUcmFuc2Zvcm1hdGlvbkxpc3QKICBmcm9tU3RyaW5nKHN0cikKICBmcm9tQXJyYXkoYXJyKQogIGdldCB0cmFuc2xhdGlvblVuaXQoKQogIHNldCB0cmFuc2xhdGlvblVuaXQodmFsdWUpCiAgZ2V0IHJvdGF0aW9uVW5pdCgpCiAgc2V0IHJvdGF0aW9uVW5pdCh2YWx1ZSkKICBzdGF0aWMgZnJvbVN0cmluZyhzdHIpCiAgc3RhdGljIGZyb21BcnJheShhcnIpCiAgc3RhdGljIGZyb21NYXRyaXgobWF0cml4KQogIHRvQXJyYXkoKQogIHRvQXJyYXkoKQogIHB1c2goLi4uYXJncykKICBjbG9uZSgpCiAgdCA9PgogIG1hcChmbikKICBzbGljZSguLi5hcmdzKQogIHNwbGljZSguLi5hcmdzKQogIGNvbmNhdCguLi5hcmdzKQogIGZpbHRlcihwcmVkKQogIGJhc2VDYWxsKGMgPSBBcnJheS5wcm90b3R5cGUubWFwKQogICguLi5hcmdzKSA9PgogIHVuc2hpZnQoLi4uYXJncykKICByb3RhdGUoLi4uYXJncykKICB0cmFuc2xhdGUoeCwgeSkKICB0ID0+CiAgc2NhbGUoLi4uYXJncykKICBtYXRyaXgoLi4uYXJncykKICB0b1N0cmluZyh0VW5pdCwgclVuaXQpCiAgdCA9PgogIHRvRE9NKCkKICB0b1NvdXJjZSgpCiAgdCA9PgogIHRvTWF0cmljZXMoKQogIHQgPT4KICB0b01hdHJpeCgpCiAgdW5kbygpCiAgbWVyZ2UoLi4uYXJncykKVHJhbnNmb3JtYXRpb25MaXN0CiAgZGVjb21wb3NlKGRlZ3JlZXMgPSB0cnVlLCB0cmFuc2Zvcm1hdGlvbkxpc3QgPSB0cnVlKQogIC50b0FycmF5ID0gZnVuY3Rpb24gdG9BcnJheSgpCiAgZmluZExhc3RJbmRleChwcmVkaWNhdGUpCiAgZmluZExhc3QocHJlZGljYXRlKQogIGdldCByb3RhdGlvbigpCiAgaXRlbSA9PgogIHNldCByb3RhdGlvbih2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IHNjYWxpbmcoKQogIGl0ZW0gPT4KICBzZXQgc2NhbGluZyh2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IHRyYW5zbGF0aW9uKCkKICBpdGVtID0+CiAgc2V0IHRyYW5zbGF0aW9uKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgbGFzdCgpCiAgZ2V0IGZpcnN0KCkKICBhdChwb3MpCiAgY29sbGFwc2UoKQogIGNvbGxhcHNlQWxsKCkKICBnZXQgYW5nbGUoKQogIGludmVydCgpCihhY2MsIHQpID0+CiAgam9pbihzZXAgPSAnICcpCiAgY2xlYXIoKQogIGFwcGx5KG9iaiwgcm91bmQgPSB0cnVlKQpUcmFuc2Zvcm1hdGlvbkxpc3QKVHJhbnNmb3JtYXRpb25MaXN0CkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUucm90YXRlID0gZnVuY3Rpb24oLi4uYXJncykKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS50cmFuc2xhdGUgPSBmdW5jdGlvbiguLi5hcmdzKQpJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnNjYWxlID0gZnVuY3Rpb24oLi4uYXJncykKICAoKSA9PgAAAAAAAAAAkAkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					28,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/geom/transformation.js",
						"symkeys":
						[
							[
								275,
								289
							],
							[
								316,
								343
							],
							[
								799,
								809
							],
							[
								1119,
								1137
							],
							[
								1220,
								1230
							],
							[
								1307,
								1314
							],
							[
								1336,
								1347
							],
							[
								1403,
								1409
							],
							[
								1432,
								1441
							],
							[
								1535,
								1545
							],
							[
								1581,
								1590
							],
							[
								1619,
								1626
							],
							[
								1655,
								1663
							],
							[
								1720,
								1732
							],
							[
								1844,
								1852
							],
							[
								1872,
								1880
							],
							[
								1901,
								1916
							],
							[
								2010,
								2017
							],
							[
								2109,
								2123
							],
							[
								2232,
								2254
							],
							[
								2488,
								2494
							],
							[
								2537,
								2543
							],
							[
								3785,
								3806
							],
							[
								3836,
								3860
							],
							[
								3893,
								3913
							],
							[
								3942,
								3961
							],
							[
								4132,
								4143
							],
							[
								4253,
								4260
							],
							[
								4292,
								4296
							],
							[
								4403,
								4411
							],
							[
								4475,
								4499
							],
							[
								4777,
								4785
							],
							[
								4844,
								4856
							],
							[
								4913,
								4923
							],
							[
								4962,
								4970
							],
							[
								5008,
								5023
							],
							[
								5296,
								5304
							],
							[
								5344,
								5354
							],
							[
								5576,
								5584
							],
							[
								5727,
								5744
							],
							[
								5937,
								5969
							],
							[
								6201,
								6209
							],
							[
								6358,
								6369
							],
							[
								6435,
								6455
							],
							[
								6732,
								6736
							],
							[
								6975,
								6987
							],
							[
								7076,
								7084
							],
							[
								7434,
								7442
							],
							[
								7612,
								7629
							],
							[
								7915,
								7926
							],
							[
								8084,
								8091
							],
							[
								8157,
								8177
							],
							[
								8570,
								8582
							],
							[
								8775,
								8783
							],
							[
								8895,
								8905
							],
							[
								9174,
								9182
							],
							[
								9313,
								9330
							],
							[
								9608,
								9615
							],
							[
								9761,
								9781
							],
							[
								9838,
								9855
							],
							[
								10047,
								10059
							],
							[
								10193,
								10203
							],
							[
								10250,
								10258
							],
							[
								10327,
								10335
							],
							[
								10382,
								10399
							],
							[
								10598,
								10618
							],
							[
								10807,
								10825
							],
							[
								10844,
								10875
							],
							[
								11264,
								11280
							],
							[
								11400,
								11418
							],
							[
								11493,
								11511
							],
							[
								11895,
								11910
							],
							[
								12179,
								12193
							],
							[
								12545,
								12566
							],
							[
								12655,
								12681
							],
							[
								12786,
								12804
							],
							[
								12887,
								12910
							],
							[
								13008,
								13030
							],
							[
								13093,
								13114
							],
							[
								13176,
								13201
							],
							[
								13377,
								13386
							],
							[
								13484,
								13493
							],
							[
								13761,
								13774
							],
							[
								14016,
								14023
							],
							[
								14046,
								14050
							],
							[
								14087,
								14094
							],
							[
								14155,
								14169
							],
							[
								14237,
								14252
							],
							[
								14321,
								14336
							],
							[
								14525,
								14537
							],
							[
								14603,
								14636
							],
							[
								14649,
								14662
							],
							[
								14835,
								14851
							],
							[
								15039,
								15054
							],
							[
								15193,
								15208
							],
							[
								15239,
								15243
							],
							[
								15657,
								15671
							],
							[
								15806,
								15821
							],
							[
								16008,
								16030
							],
							[
								16169,
								16173
							],
							[
								16333,
								16340
							],
							[
								16455,
								16465
							],
							[
								16532,
								16536
							],
							[
								16591,
								16603
							],
							[
								16630,
								16634
							],
							[
								16658,
								16668
							],
							[
								16734,
								16740
							],
							[
								16904,
								16918
							],
							[
								17030,
								17048
							],
							[
								17112,
								17164
							],
							[
								17598,
								17627
							],
							[
								17698,
								17722
							],
							[
								17861,
								17880
							],
							[
								17961,
								17975
							],
							[
								18003,
								18010
							],
							[
								18070,
								18089
							],
							[
								18127,
								18134
							],
							[
								18299,
								18312
							],
							[
								18340,
								18347
							],
							[
								18406,
								18424
							],
							[
								18462,
								18469
							],
							[
								18631,
								18648
							],
							[
								18676,
								18683
							],
							[
								18779,
								18801
							],
							[
								18839,
								18846
							],
							[
								19128,
								19138
							],
							[
								19171,
								19182
							],
							[
								19215,
								19222
							],
							[
								19290,
								19300
							],
							[
								19664,
								19677
							],
							[
								19746,
								19757
							],
							[
								19916,
								19924
							],
							[
								20042,
								20053
							],
							[
								20089,
								20104
							],
							[
								20163,
								20170
							],
							[
								20252,
								20276
							],
							[
								20440,
								20458
							],
							[
								20754,
								20772
							],
							[
								21286,
								21350
							],
							[
								21413,
								21480
							],
							[
								21546,
								21609
							],
							[
								21728,
								21734
							]
						],
						"symlist":
						[
							"Transformation",
							"constructor(transformation)",
							"get type()",
							"TransformationList",
							"get axes()",
							"axis =>",
							"get props()",
							"key =>",
							"has(axis)",
							"get is3D()",
							"entries()",
							"prop =>",
							"toJSON()",
							"vector(unit)",
							" axis =>",
							" axis =>",
							"toString(tUnit)",
							"clone()",
							"(acc, prop) =>",
							"static fromString(arg)",
							"arg =>",
							"arg =>",
							"static get rotation()",
							"static get translation()",
							"static get scaling()",
							"static get matrix()",
							"value(inst)",
							"ctor =>",
							"ctor",
							"Rotation",
							"constructor(angle, x, y)",
							"invert()",
							"get values()",
							"get is3D()",
							"isZero()",
							"toString(rUnit)",
							"coord =>",
							"toSource()",
							"coord =>",
							"accumulate(other)",
							"static convertAngle(angle, unit)",
							"Rotation",
							"Translation",
							"constructor(...args)",
							"a =>",
							"get values()",
							"isZero()",
							"invert()",
							"accumulate(other)",
							"Translation",
							"Scaling",
							"constructor(...args)",
							"get values()",
							"isZero()",
							"toString()",
							"invert()",
							"accumulate(other)",
							"Scaling",
							"MatrixTransformation",
							"constructor(init)",
							"get values()",
							"toString()",
							"invert()",
							"isZero()",
							"accumulate(other)",
							"MatrixTransformation",
							"TransformationList",
							"constructor(init, tUnit, rUnit)",
							"initialize(init)",
							"TransformationList",
							"TransformationList",
							"fromString(str)",
							"fromArray(arr)",
							"get translationUnit()",
							"set translationUnit(value)",
							"get rotationUnit()",
							"set rotationUnit(value)",
							"static fromString(str)",
							"static fromArray(arr)",
							"static fromMatrix(matrix)",
							"toArray()",
							"toArray()",
							"push(...args)",
							"clone()",
							"t =>",
							"map(fn)",
							"slice(...args)",
							"splice(...args)",
							"concat(...args)",
							"filter(pred)",
							"baseCall(c = Array.prototype.map)",
							" (...args) =>",
							"unshift(...args)",
							"rotate(...args)",
							"translate(x, y)",
							"t =>",
							"scale(...args)",
							"matrix(...args)",
							"toString(tUnit, rUnit)",
							"t =>",
							"toDOM()",
							"toSource()",
							"t =>",
							"toMatrices()",
							"t =>",
							"toMatrix()",
							"undo()",
							"merge(...args)",
							"TransformationList",
							"decompose(degrees = true, transformationList = true)",
							".toArray = function toArray()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"get rotation()",
							"item =>",
							"set rotation(value)",
							"item =>",
							"get scaling()",
							"item =>",
							"set scaling(value)",
							"item =>",
							"get translation()",
							"item =>",
							"set translation(value)",
							"item =>",
							"get last()",
							"get first()",
							"at(pos)",
							"collapse()",
							"collapseAll()",
							"get angle()",
							"invert()",
							"(acc, t) =>",
							"join(sep = ' ')",
							"clear()",
							"apply(obj, round = true)",
							"TransformationList",
							"TransformationList",
							"ImmutableTransformationList.prototype.rotate = function(...args)",
							"ImmutableTransformationList.prototype.translate = function(...args)",
							"ImmutableTransformationList.prototype.scale = function(...args)",
							" () =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACQCQAAVHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm1hdGlvbikKICBnZXQgdHlwZSgpClRyYW5zZm9ybWF0aW9uTGlzdAogIGdldCBheGVzKCkKICBheGlzID0+CiAgZ2V0IHByb3BzKCkKICBrZXkgPT4KICBoYXMoYXhpcykKICBnZXQgaXMzRCgpCiAgZW50cmllcygpCiAgcHJvcCA9PgogIHRvSlNPTigpCiAgdmVjdG9yKHVuaXQpCiAgYXhpcyA9PgogIGF4aXMgPT4KICB0b1N0cmluZyh0VW5pdCkKICBjbG9uZSgpCihhY2MsIHByb3ApID0+CiAgc3RhdGljIGZyb21TdHJpbmcoYXJnKQogIGFyZyA9PgogIGFyZyA9PgogIHN0YXRpYyBnZXQgcm90YXRpb24oKQogIHN0YXRpYyBnZXQgdHJhbnNsYXRpb24oKQogIHN0YXRpYyBnZXQgc2NhbGluZygpCiAgc3RhdGljIGdldCBtYXRyaXgoKQogIHZhbHVlKGluc3QpCiAgY3RvciA9PgogIGN0b3IKUm90YXRpb24KICBjb25zdHJ1Y3RvcihhbmdsZSwgeCwgeSkKICBpbnZlcnQoKQogIGdldCB2YWx1ZXMoKQogIGdldCBpczNEKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKHJVbml0KQogIGNvb3JkID0+CiAgdG9Tb3VyY2UoKQogIGNvb3JkID0+CiAgYWNjdW11bGF0ZShvdGhlcikKICBzdGF0aWMgY29udmVydEFuZ2xlKGFuZ2xlLCB1bml0KQpSb3RhdGlvbgpUcmFuc2xhdGlvbgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgYSA9PgogIGdldCB2YWx1ZXMoKQogIGlzWmVybygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpUcmFuc2xhdGlvbgpTY2FsaW5nCiAgY29uc3RydWN0b3IoLi4uYXJncykKICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGFjY3VtdWxhdGUob3RoZXIpClNjYWxpbmcKTWF0cml4VHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcihpbml0KQogIGdldCB2YWx1ZXMoKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGlzWmVybygpCiAgYWNjdW11bGF0ZShvdGhlcikKTWF0cml4VHJhbnNmb3JtYXRpb24KVHJhbnNmb3JtYXRpb25MaXN0CiAgY29uc3RydWN0b3IoaW5pdCwgdFVuaXQsIHJVbml0KQogIGluaXRpYWxpemUoaW5pdCkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdAogIGZyb21TdHJpbmcoc3RyKQogIGZyb21BcnJheShhcnIpCiAgZ2V0IHRyYW5zbGF0aW9uVW5pdCgpCiAgc2V0IHRyYW5zbGF0aW9uVW5pdCh2YWx1ZSkKICBnZXQgcm90YXRpb25Vbml0KCkKICBzZXQgcm90YXRpb25Vbml0KHZhbHVlKQogIHN0YXRpYyBmcm9tU3RyaW5nKHN0cikKICBzdGF0aWMgZnJvbUFycmF5KGFycikKICBzdGF0aWMgZnJvbU1hdHJpeChtYXRyaXgpCiAgdG9BcnJheSgpCiAgdG9BcnJheSgpCiAgcHVzaCguLi5hcmdzKQogIGNsb25lKCkKICB0ID0+CiAgbWFwKGZuKQogIHNsaWNlKC4uLmFyZ3MpCiAgc3BsaWNlKC4uLmFyZ3MpCiAgY29uY2F0KC4uLmFyZ3MpCiAgZmlsdGVyKHByZWQpCiAgYmFzZUNhbGwoYyA9IEFycmF5LnByb3RvdHlwZS5tYXApCiAgKC4uLmFyZ3MpID0+CiAgdW5zaGlmdCguLi5hcmdzKQogIHJvdGF0ZSguLi5hcmdzKQogIHRyYW5zbGF0ZSh4LCB5KQogIHQgPT4KICBzY2FsZSguLi5hcmdzKQogIG1hdHJpeCguLi5hcmdzKQogIHRvU3RyaW5nKHRVbml0LCByVW5pdCkKICB0ID0+CiAgdG9ET00oKQogIHRvU291cmNlKCkKICB0ID0+CiAgdG9NYXRyaWNlcygpCiAgdCA9PgogIHRvTWF0cml4KCkKICB1bmRvKCkKICBtZXJnZSguLi5hcmdzKQpUcmFuc2Zvcm1hdGlvbkxpc3QKICBkZWNvbXBvc2UoZGVncmVlcyA9IHRydWUsIHRyYW5zZm9ybWF0aW9uTGlzdCA9IHRydWUpCiAgLnRvQXJyYXkgPSBmdW5jdGlvbiB0b0FycmF5KCkKICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICBmaW5kTGFzdChwcmVkaWNhdGUpCiAgZ2V0IHJvdGF0aW9uKCkKICBpdGVtID0+CiAgc2V0IHJvdGF0aW9uKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgc2NhbGluZygpCiAgaXRlbSA9PgogIHNldCBzY2FsaW5nKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgdHJhbnNsYXRpb24oKQogIGl0ZW0gPT4KICBzZXQgdHJhbnNsYXRpb24odmFsdWUpCiAgaXRlbSA9PgogIGdldCBsYXN0KCkKICBnZXQgZmlyc3QoKQogIGF0KHBvcykKICBjb2xsYXBzZSgpCiAgY29sbGFwc2VBbGwoKQogIGdldCBhbmdsZSgpCiAgaW52ZXJ0KCkKKGFjYywgdCkgPT4KICBqb2luKHNlcCA9ICcgJykKICBjbGVhcigpCiAgYXBwbHkob2JqLCByb3VuZCA9IHRydWUpClRyYW5zZm9ybWF0aW9uTGlzdApUcmFuc2Zvcm1hdGlvbkxpc3QKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS5yb3RhdGUgPSBmdW5jdGlvbiguLi5hcmdzKQpJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUuc2NhbGUgPSBmdW5jdGlvbiguLi5hcmdzKQogICgpID0+AAAAAAAAAACQCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAkAAFRyYW5zZm9ybWF0aW9uCiAgY29uc3RydWN0b3IodHJhbnNmb3JtYXRpb24pCiAgZ2V0IHR5cGUoKQpUcmFuc2Zvcm1hdGlvbkxpc3QKICBnZXQgYXhlcygpCiAgYXhpcyA9PgogIGdldCBwcm9wcygpCiAga2V5ID0+CiAgaGFzKGF4aXMpCiAgZ2V0IGlzM0QoKQogIGVudHJpZXMoKQogIHByb3AgPT4KICB0b0pTT04oKQogIHZlY3Rvcih1bml0KQogIGF4aXMgPT4KICBheGlzID0+CiAgdG9TdHJpbmcodFVuaXQpCiAgY2xvbmUoKQooYWNjLCBwcm9wKSA9PgogIHN0YXRpYyBmcm9tU3RyaW5nKGFyZykKICBhcmcgPT4KICBhcmcgPT4KICBzdGF0aWMgZ2V0IHJvdGF0aW9uKCkKICBzdGF0aWMgZ2V0IHRyYW5zbGF0aW9uKCkKICBzdGF0aWMgZ2V0IHNjYWxpbmcoKQogIHN0YXRpYyBnZXQgbWF0cml4KCkKICB2YWx1ZShpbnN0KQogIGN0b3IgPT4KICBjdG9yClJvdGF0aW9uCiAgY29uc3RydWN0b3IoYW5nbGUsIHgsIHkpCiAgaW52ZXJ0KCkKICBnZXQgdmFsdWVzKCkKICBnZXQgaXMzRCgpCiAgaXNaZXJvKCkKICB0b1N0cmluZyhyVW5pdCkKICBjb29yZCA9PgogIHRvU291cmNlKCkKICBjb29yZCA9PgogIGFjY3VtdWxhdGUob3RoZXIpCiAgc3RhdGljIGNvbnZlcnRBbmdsZShhbmdsZSwgdW5pdCkKUm90YXRpb24KVHJhbnNsYXRpb24KICBjb25zdHJ1Y3RvciguLi5hcmdzKQogIGEgPT4KICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIGludmVydCgpCiAgYWNjdW11bGF0ZShvdGhlcikKVHJhbnNsYXRpb24KU2NhbGluZwogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgZ2V0IHZhbHVlcygpCiAgaXNaZXJvKCkKICB0b1N0cmluZygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpTY2FsaW5nCk1hdHJpeFRyYW5zZm9ybWF0aW9uCiAgY29uc3RydWN0b3IoaW5pdCkKICBnZXQgdmFsdWVzKCkKICB0b1N0cmluZygpCiAgaW52ZXJ0KCkKICBpc1plcm8oKQogIGFjY3VtdWxhdGUob3RoZXIpCk1hdHJpeFRyYW5zZm9ybWF0aW9uClRyYW5zZm9ybWF0aW9uTGlzdAogIGNvbnN0cnVjdG9yKGluaXQsIHRVbml0LCByVW5pdCkKICBpbml0aWFsaXplKGluaXQpClRyYW5zZm9ybWF0aW9uTGlzdApUcmFuc2Zvcm1hdGlvbkxpc3QKICBmcm9tU3RyaW5nKHN0cikKICBmcm9tQXJyYXkoYXJyKQogIGdldCB0cmFuc2xhdGlvblVuaXQoKQogIHNldCB0cmFuc2xhdGlvblVuaXQodmFsdWUpCiAgZ2V0IHJvdGF0aW9uVW5pdCgpCiAgc2V0IHJvdGF0aW9uVW5pdCh2YWx1ZSkKICBzdGF0aWMgZnJvbVN0cmluZyhzdHIpCiAgc3RhdGljIGZyb21BcnJheShhcnIpCiAgc3RhdGljIGZyb21NYXRyaXgobWF0cml4KQogIHRvQXJyYXkoKQogIHRvQXJyYXkoKQogIHB1c2goLi4uYXJncykKICBjbG9uZSgpCiAgdCA9PgogIG1hcChmbikKICBzbGljZSguLi5hcmdzKQogIHNwbGljZSguLi5hcmdzKQogIGNvbmNhdCguLi5hcmdzKQogIGZpbHRlcihwcmVkKQogIGJhc2VDYWxsKGMgPSBBcnJheS5wcm90b3R5cGUubWFwKQogICguLi5hcmdzKSA9PgogIHVuc2hpZnQoLi4uYXJncykKICByb3RhdGUoLi4uYXJncykKICB0cmFuc2xhdGUoeCwgeSkKICB0ID0+CiAgc2NhbGUoLi4uYXJncykKICBtYXRyaXgoLi4uYXJncykKICB0b1N0cmluZyh0VW5pdCwgclVuaXQpCiAgdCA9PgogIHRvRE9NKCkKICB0b1NvdXJjZSgpCiAgdCA9PgogIHRvTWF0cmljZXMoKQogIHQgPT4KICB0b01hdHJpeCgpCiAgdW5kbygpCiAgbWVyZ2UoLi4uYXJncykKVHJhbnNmb3JtYXRpb25MaXN0CiAgZGVjb21wb3NlKGRlZ3JlZXMgPSB0cnVlLCB0cmFuc2Zvcm1hdGlvbkxpc3QgPSB0cnVlKQogIC50b0FycmF5ID0gZnVuY3Rpb24gdG9BcnJheSgpCiAgZmluZExhc3RJbmRleChwcmVkaWNhdGUpCiAgZmluZExhc3QocHJlZGljYXRlKQogIGdldCByb3RhdGlvbigpCiAgaXRlbSA9PgogIHNldCByb3RhdGlvbih2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IHNjYWxpbmcoKQogIGl0ZW0gPT4KICBzZXQgc2NhbGluZyh2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IHRyYW5zbGF0aW9uKCkKICBpdGVtID0+CiAgc2V0IHRyYW5zbGF0aW9uKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgbGFzdCgpCiAgZ2V0IGZpcnN0KCkKICBhdChwb3MpCiAgY29sbGFwc2UoKQogIGNvbGxhcHNlQWxsKCkKICBnZXQgYW5nbGUoKQogIGludmVydCgpCihhY2MsIHQpID0+CiAgam9pbihzZXAgPSAnICcpCiAgY2xlYXIoKQogIGFwcGx5KG9iaiwgcm91bmQgPSB0cnVlKQpUcmFuc2Zvcm1hdGlvbkxpc3QKVHJhbnNmb3JtYXRpb25MaXN0CkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUucm90YXRlID0gZnVuY3Rpb24oLi4uYXJncykKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS50cmFuc2xhdGUgPSBmdW5jdGlvbiguLi5hcmdzKQpJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnNjYWxlID0gZnVuY3Rpb24oLi4uYXJncykKICAoKSA9PgAAAAAAAAAAkAkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					29,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/geom/transformation.js",
						"symkeys":
						[
							[
								275,
								289
							],
							[
								316,
								343
							],
							[
								799,
								809
							],
							[
								1119,
								1137
							],
							[
								1220,
								1230
							],
							[
								1307,
								1314
							],
							[
								1336,
								1347
							],
							[
								1403,
								1409
							],
							[
								1432,
								1441
							],
							[
								1535,
								1545
							],
							[
								1581,
								1590
							],
							[
								1619,
								1626
							],
							[
								1655,
								1663
							],
							[
								1720,
								1732
							],
							[
								1844,
								1852
							],
							[
								1872,
								1880
							],
							[
								1901,
								1916
							],
							[
								2010,
								2017
							],
							[
								2109,
								2123
							],
							[
								2232,
								2254
							],
							[
								2488,
								2494
							],
							[
								2537,
								2543
							],
							[
								3785,
								3806
							],
							[
								3836,
								3860
							],
							[
								3893,
								3913
							],
							[
								3942,
								3961
							],
							[
								4132,
								4143
							],
							[
								4253,
								4260
							],
							[
								4292,
								4296
							],
							[
								4403,
								4411
							],
							[
								4475,
								4499
							],
							[
								4777,
								4785
							],
							[
								4844,
								4856
							],
							[
								4913,
								4923
							],
							[
								4962,
								4970
							],
							[
								5008,
								5023
							],
							[
								5296,
								5304
							],
							[
								5344,
								5354
							],
							[
								5576,
								5584
							],
							[
								5727,
								5744
							],
							[
								5937,
								5969
							],
							[
								6201,
								6209
							],
							[
								6358,
								6369
							],
							[
								6435,
								6455
							],
							[
								6732,
								6736
							],
							[
								6975,
								6987
							],
							[
								7076,
								7084
							],
							[
								7434,
								7442
							],
							[
								7612,
								7629
							],
							[
								7915,
								7926
							],
							[
								8084,
								8091
							],
							[
								8157,
								8177
							],
							[
								8570,
								8582
							],
							[
								8775,
								8783
							],
							[
								8895,
								8905
							],
							[
								9174,
								9182
							],
							[
								9313,
								9330
							],
							[
								9608,
								9615
							],
							[
								9761,
								9781
							],
							[
								9838,
								9855
							],
							[
								10047,
								10059
							],
							[
								10193,
								10203
							],
							[
								10250,
								10258
							],
							[
								10327,
								10335
							],
							[
								10382,
								10399
							],
							[
								10598,
								10618
							],
							[
								10807,
								10825
							],
							[
								10844,
								10875
							],
							[
								11264,
								11280
							],
							[
								11400,
								11418
							],
							[
								11493,
								11511
							],
							[
								11895,
								11910
							],
							[
								12179,
								12193
							],
							[
								12573,
								12594
							],
							[
								12683,
								12709
							],
							[
								12814,
								12832
							],
							[
								12915,
								12938
							],
							[
								13036,
								13058
							],
							[
								13121,
								13142
							],
							[
								13204,
								13229
							],
							[
								13405,
								13414
							],
							[
								13512,
								13521
							],
							[
								13789,
								13802
							],
							[
								14044,
								14051
							],
							[
								14074,
								14078
							],
							[
								14115,
								14122
							],
							[
								14183,
								14197
							],
							[
								14265,
								14280
							],
							[
								14349,
								14364
							],
							[
								14553,
								14565
							],
							[
								14631,
								14664
							],
							[
								14677,
								14690
							],
							[
								14863,
								14879
							],
							[
								15067,
								15082
							],
							[
								15221,
								15236
							],
							[
								15267,
								15271
							],
							[
								15685,
								15699
							],
							[
								15834,
								15849
							],
							[
								16036,
								16058
							],
							[
								16197,
								16201
							],
							[
								16361,
								16368
							],
							[
								16483,
								16493
							],
							[
								16560,
								16564
							],
							[
								16619,
								16631
							],
							[
								16658,
								16662
							],
							[
								16686,
								16696
							],
							[
								16762,
								16768
							],
							[
								16932,
								16946
							],
							[
								17058,
								17076
							],
							[
								17140,
								17192
							],
							[
								17626,
								17655
							],
							[
								17726,
								17750
							],
							[
								17889,
								17908
							],
							[
								17989,
								18003
							],
							[
								18031,
								18038
							],
							[
								18098,
								18117
							],
							[
								18155,
								18162
							],
							[
								18327,
								18340
							],
							[
								18368,
								18375
							],
							[
								18434,
								18452
							],
							[
								18490,
								18497
							],
							[
								18659,
								18676
							],
							[
								18704,
								18711
							],
							[
								18807,
								18829
							],
							[
								18867,
								18874
							],
							[
								19156,
								19166
							],
							[
								19199,
								19210
							],
							[
								19243,
								19250
							],
							[
								19318,
								19328
							],
							[
								19692,
								19705
							],
							[
								19774,
								19785
							],
							[
								19944,
								19952
							],
							[
								20070,
								20081
							],
							[
								20117,
								20132
							],
							[
								20191,
								20198
							],
							[
								20280,
								20304
							],
							[
								20468,
								20486
							],
							[
								20782,
								20800
							],
							[
								21314,
								21378
							],
							[
								21441,
								21508
							],
							[
								21574,
								21637
							],
							[
								21756,
								21762
							]
						],
						"symlist":
						[
							"Transformation",
							"constructor(transformation)",
							"get type()",
							"TransformationList",
							"get axes()",
							"axis =>",
							"get props()",
							"key =>",
							"has(axis)",
							"get is3D()",
							"entries()",
							"prop =>",
							"toJSON()",
							"vector(unit)",
							" axis =>",
							" axis =>",
							"toString(tUnit)",
							"clone()",
							"(acc, prop) =>",
							"static fromString(arg)",
							"arg =>",
							"arg =>",
							"static get rotation()",
							"static get translation()",
							"static get scaling()",
							"static get matrix()",
							"value(inst)",
							"ctor =>",
							"ctor",
							"Rotation",
							"constructor(angle, x, y)",
							"invert()",
							"get values()",
							"get is3D()",
							"isZero()",
							"toString(rUnit)",
							"coord =>",
							"toSource()",
							"coord =>",
							"accumulate(other)",
							"static convertAngle(angle, unit)",
							"Rotation",
							"Translation",
							"constructor(...args)",
							"a =>",
							"get values()",
							"isZero()",
							"invert()",
							"accumulate(other)",
							"Translation",
							"Scaling",
							"constructor(...args)",
							"get values()",
							"isZero()",
							"toString()",
							"invert()",
							"accumulate(other)",
							"Scaling",
							"MatrixTransformation",
							"constructor(init)",
							"get values()",
							"toString()",
							"invert()",
							"isZero()",
							"accumulate(other)",
							"MatrixTransformation",
							"TransformationList",
							"constructor(init, tUnit, rUnit)",
							"initialize(init)",
							"TransformationList",
							"TransformationList",
							"fromString(str)",
							"fromArray(arr)",
							"get translationUnit()",
							"set translationUnit(value)",
							"get rotationUnit()",
							"set rotationUnit(value)",
							"static fromString(str)",
							"static fromArray(arr)",
							"static fromMatrix(matrix)",
							"toArray()",
							"toArray()",
							"push(...args)",
							"clone()",
							"t =>",
							"map(fn)",
							"slice(...args)",
							"splice(...args)",
							"concat(...args)",
							"filter(pred)",
							"baseCall(c = Array.prototype.map)",
							" (...args) =>",
							"unshift(...args)",
							"rotate(...args)",
							"translate(x, y)",
							"t =>",
							"scale(...args)",
							"matrix(...args)",
							"toString(tUnit, rUnit)",
							"t =>",
							"toDOM()",
							"toSource()",
							"t =>",
							"toMatrices()",
							"t =>",
							"toMatrix()",
							"undo()",
							"merge(...args)",
							"TransformationList",
							"decompose(degrees = true, transformationList = true)",
							".toArray = function toArray()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"get rotation()",
							"item =>",
							"set rotation(value)",
							"item =>",
							"get scaling()",
							"item =>",
							"set scaling(value)",
							"item =>",
							"get translation()",
							"item =>",
							"set translation(value)",
							"item =>",
							"get last()",
							"get first()",
							"at(pos)",
							"collapse()",
							"collapseAll()",
							"get angle()",
							"invert()",
							"(acc, t) =>",
							"join(sep = ' ')",
							"clear()",
							"apply(obj, round = true)",
							"TransformationList",
							"TransformationList",
							"ImmutableTransformationList.prototype.rotate = function(...args)",
							"ImmutableTransformationList.prototype.translate = function(...args)",
							"ImmutableTransformationList.prototype.scale = function(...args)",
							" () =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACQCQAAVHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm1hdGlvbikKICBnZXQgdHlwZSgpClRyYW5zZm9ybWF0aW9uTGlzdAogIGdldCBheGVzKCkKICBheGlzID0+CiAgZ2V0IHByb3BzKCkKICBrZXkgPT4KICBoYXMoYXhpcykKICBnZXQgaXMzRCgpCiAgZW50cmllcygpCiAgcHJvcCA9PgogIHRvSlNPTigpCiAgdmVjdG9yKHVuaXQpCiAgYXhpcyA9PgogIGF4aXMgPT4KICB0b1N0cmluZyh0VW5pdCkKICBjbG9uZSgpCihhY2MsIHByb3ApID0+CiAgc3RhdGljIGZyb21TdHJpbmcoYXJnKQogIGFyZyA9PgogIGFyZyA9PgogIHN0YXRpYyBnZXQgcm90YXRpb24oKQogIHN0YXRpYyBnZXQgdHJhbnNsYXRpb24oKQogIHN0YXRpYyBnZXQgc2NhbGluZygpCiAgc3RhdGljIGdldCBtYXRyaXgoKQogIHZhbHVlKGluc3QpCiAgY3RvciA9PgogIGN0b3IKUm90YXRpb24KICBjb25zdHJ1Y3RvcihhbmdsZSwgeCwgeSkKICBpbnZlcnQoKQogIGdldCB2YWx1ZXMoKQogIGdldCBpczNEKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKHJVbml0KQogIGNvb3JkID0+CiAgdG9Tb3VyY2UoKQogIGNvb3JkID0+CiAgYWNjdW11bGF0ZShvdGhlcikKICBzdGF0aWMgY29udmVydEFuZ2xlKGFuZ2xlLCB1bml0KQpSb3RhdGlvbgpUcmFuc2xhdGlvbgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgYSA9PgogIGdldCB2YWx1ZXMoKQogIGlzWmVybygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpUcmFuc2xhdGlvbgpTY2FsaW5nCiAgY29uc3RydWN0b3IoLi4uYXJncykKICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGFjY3VtdWxhdGUob3RoZXIpClNjYWxpbmcKTWF0cml4VHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcihpbml0KQogIGdldCB2YWx1ZXMoKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGlzWmVybygpCiAgYWNjdW11bGF0ZShvdGhlcikKTWF0cml4VHJhbnNmb3JtYXRpb24KVHJhbnNmb3JtYXRpb25MaXN0CiAgY29uc3RydWN0b3IoaW5pdCwgdFVuaXQsIHJVbml0KQogIGluaXRpYWxpemUoaW5pdCkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdAogIGZyb21TdHJpbmcoc3RyKQogIGZyb21BcnJheShhcnIpCiAgZ2V0IHRyYW5zbGF0aW9uVW5pdCgpCiAgc2V0IHRyYW5zbGF0aW9uVW5pdCh2YWx1ZSkKICBnZXQgcm90YXRpb25Vbml0KCkKICBzZXQgcm90YXRpb25Vbml0KHZhbHVlKQogIHN0YXRpYyBmcm9tU3RyaW5nKHN0cikKICBzdGF0aWMgZnJvbUFycmF5KGFycikKICBzdGF0aWMgZnJvbU1hdHJpeChtYXRyaXgpCiAgdG9BcnJheSgpCiAgdG9BcnJheSgpCiAgcHVzaCguLi5hcmdzKQogIGNsb25lKCkKICB0ID0+CiAgbWFwKGZuKQogIHNsaWNlKC4uLmFyZ3MpCiAgc3BsaWNlKC4uLmFyZ3MpCiAgY29uY2F0KC4uLmFyZ3MpCiAgZmlsdGVyKHByZWQpCiAgYmFzZUNhbGwoYyA9IEFycmF5LnByb3RvdHlwZS5tYXApCiAgKC4uLmFyZ3MpID0+CiAgdW5zaGlmdCguLi5hcmdzKQogIHJvdGF0ZSguLi5hcmdzKQogIHRyYW5zbGF0ZSh4LCB5KQogIHQgPT4KICBzY2FsZSguLi5hcmdzKQogIG1hdHJpeCguLi5hcmdzKQogIHRvU3RyaW5nKHRVbml0LCByVW5pdCkKICB0ID0+CiAgdG9ET00oKQogIHRvU291cmNlKCkKICB0ID0+CiAgdG9NYXRyaWNlcygpCiAgdCA9PgogIHRvTWF0cml4KCkKICB1bmRvKCkKICBtZXJnZSguLi5hcmdzKQpUcmFuc2Zvcm1hdGlvbkxpc3QKICBkZWNvbXBvc2UoZGVncmVlcyA9IHRydWUsIHRyYW5zZm9ybWF0aW9uTGlzdCA9IHRydWUpCiAgLnRvQXJyYXkgPSBmdW5jdGlvbiB0b0FycmF5KCkKICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICBmaW5kTGFzdChwcmVkaWNhdGUpCiAgZ2V0IHJvdGF0aW9uKCkKICBpdGVtID0+CiAgc2V0IHJvdGF0aW9uKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgc2NhbGluZygpCiAgaXRlbSA9PgogIHNldCBzY2FsaW5nKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgdHJhbnNsYXRpb24oKQogIGl0ZW0gPT4KICBzZXQgdHJhbnNsYXRpb24odmFsdWUpCiAgaXRlbSA9PgogIGdldCBsYXN0KCkKICBnZXQgZmlyc3QoKQogIGF0KHBvcykKICBjb2xsYXBzZSgpCiAgY29sbGFwc2VBbGwoKQogIGdldCBhbmdsZSgpCiAgaW52ZXJ0KCkKKGFjYywgdCkgPT4KICBqb2luKHNlcCA9ICcgJykKICBjbGVhcigpCiAgYXBwbHkob2JqLCByb3VuZCA9IHRydWUpClRyYW5zZm9ybWF0aW9uTGlzdApUcmFuc2Zvcm1hdGlvbkxpc3QKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS5yb3RhdGUgPSBmdW5jdGlvbiguLi5hcmdzKQpJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUuc2NhbGUgPSBmdW5jdGlvbiguLi5hcmdzKQogICgpID0+AAAAAAAAAACQCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAkAAFRyYW5zZm9ybWF0aW9uCiAgY29uc3RydWN0b3IodHJhbnNmb3JtYXRpb24pCiAgZ2V0IHR5cGUoKQpUcmFuc2Zvcm1hdGlvbkxpc3QKICBnZXQgYXhlcygpCiAgYXhpcyA9PgogIGdldCBwcm9wcygpCiAga2V5ID0+CiAgaGFzKGF4aXMpCiAgZ2V0IGlzM0QoKQogIGVudHJpZXMoKQogIHByb3AgPT4KICB0b0pTT04oKQogIHZlY3Rvcih1bml0KQogIGF4aXMgPT4KICBheGlzID0+CiAgdG9TdHJpbmcodFVuaXQpCiAgY2xvbmUoKQooYWNjLCBwcm9wKSA9PgogIHN0YXRpYyBmcm9tU3RyaW5nKGFyZykKICBhcmcgPT4KICBhcmcgPT4KICBzdGF0aWMgZ2V0IHJvdGF0aW9uKCkKICBzdGF0aWMgZ2V0IHRyYW5zbGF0aW9uKCkKICBzdGF0aWMgZ2V0IHNjYWxpbmcoKQogIHN0YXRpYyBnZXQgbWF0cml4KCkKICB2YWx1ZShpbnN0KQogIGN0b3IgPT4KICBjdG9yClJvdGF0aW9uCiAgY29uc3RydWN0b3IoYW5nbGUsIHgsIHkpCiAgaW52ZXJ0KCkKICBnZXQgdmFsdWVzKCkKICBnZXQgaXMzRCgpCiAgaXNaZXJvKCkKICB0b1N0cmluZyhyVW5pdCkKICBjb29yZCA9PgogIHRvU291cmNlKCkKICBjb29yZCA9PgogIGFjY3VtdWxhdGUob3RoZXIpCiAgc3RhdGljIGNvbnZlcnRBbmdsZShhbmdsZSwgdW5pdCkKUm90YXRpb24KVHJhbnNsYXRpb24KICBjb25zdHJ1Y3RvciguLi5hcmdzKQogIGEgPT4KICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIGludmVydCgpCiAgYWNjdW11bGF0ZShvdGhlcikKVHJhbnNsYXRpb24KU2NhbGluZwogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgZ2V0IHZhbHVlcygpCiAgaXNaZXJvKCkKICB0b1N0cmluZygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpTY2FsaW5nCk1hdHJpeFRyYW5zZm9ybWF0aW9uCiAgY29uc3RydWN0b3IoaW5pdCkKICBnZXQgdmFsdWVzKCkKICB0b1N0cmluZygpCiAgaW52ZXJ0KCkKICBpc1plcm8oKQogIGFjY3VtdWxhdGUob3RoZXIpCk1hdHJpeFRyYW5zZm9ybWF0aW9uClRyYW5zZm9ybWF0aW9uTGlzdAogIGNvbnN0cnVjdG9yKGluaXQsIHRVbml0LCByVW5pdCkKICBpbml0aWFsaXplKGluaXQpClRyYW5zZm9ybWF0aW9uTGlzdApUcmFuc2Zvcm1hdGlvbkxpc3QKICBmcm9tU3RyaW5nKHN0cikKICBmcm9tQXJyYXkoYXJyKQogIGdldCB0cmFuc2xhdGlvblVuaXQoKQogIHNldCB0cmFuc2xhdGlvblVuaXQodmFsdWUpCiAgZ2V0IHJvdGF0aW9uVW5pdCgpCiAgc2V0IHJvdGF0aW9uVW5pdCh2YWx1ZSkKICBzdGF0aWMgZnJvbVN0cmluZyhzdHIpCiAgc3RhdGljIGZyb21BcnJheShhcnIpCiAgc3RhdGljIGZyb21NYXRyaXgobWF0cml4KQogIHRvQXJyYXkoKQogIHRvQXJyYXkoKQogIHB1c2goLi4uYXJncykKICBjbG9uZSgpCiAgdCA9PgogIG1hcChmbikKICBzbGljZSguLi5hcmdzKQogIHNwbGljZSguLi5hcmdzKQogIGNvbmNhdCguLi5hcmdzKQogIGZpbHRlcihwcmVkKQogIGJhc2VDYWxsKGMgPSBBcnJheS5wcm90b3R5cGUubWFwKQogICguLi5hcmdzKSA9PgogIHVuc2hpZnQoLi4uYXJncykKICByb3RhdGUoLi4uYXJncykKICB0cmFuc2xhdGUoeCwgeSkKICB0ID0+CiAgc2NhbGUoLi4uYXJncykKICBtYXRyaXgoLi4uYXJncykKICB0b1N0cmluZyh0VW5pdCwgclVuaXQpCiAgdCA9PgogIHRvRE9NKCkKICB0b1NvdXJjZSgpCiAgdCA9PgogIHRvTWF0cmljZXMoKQogIHQgPT4KICB0b01hdHJpeCgpCiAgdW5kbygpCiAgbWVyZ2UoLi4uYXJncykKVHJhbnNmb3JtYXRpb25MaXN0CiAgZGVjb21wb3NlKGRlZ3JlZXMgPSB0cnVlLCB0cmFuc2Zvcm1hdGlvbkxpc3QgPSB0cnVlKQogIC50b0FycmF5ID0gZnVuY3Rpb24gdG9BcnJheSgpCiAgZmluZExhc3RJbmRleChwcmVkaWNhdGUpCiAgZmluZExhc3QocHJlZGljYXRlKQogIGdldCByb3RhdGlvbigpCiAgaXRlbSA9PgogIHNldCByb3RhdGlvbih2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IHNjYWxpbmcoKQogIGl0ZW0gPT4KICBzZXQgc2NhbGluZyh2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IHRyYW5zbGF0aW9uKCkKICBpdGVtID0+CiAgc2V0IHRyYW5zbGF0aW9uKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgbGFzdCgpCiAgZ2V0IGZpcnN0KCkKICBhdChwb3MpCiAgY29sbGFwc2UoKQogIGNvbGxhcHNlQWxsKCkKICBnZXQgYW5nbGUoKQogIGludmVydCgpCihhY2MsIHQpID0+CiAgam9pbihzZXAgPSAnICcpCiAgY2xlYXIoKQogIGFwcGx5KG9iaiwgcm91bmQgPSB0cnVlKQpUcmFuc2Zvcm1hdGlvbkxpc3QKVHJhbnNmb3JtYXRpb25MaXN0CkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUucm90YXRlID0gZnVuY3Rpb24oLi4uYXJncykKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS50cmFuc2xhdGUgPSBmdW5jdGlvbiguLi5hcmdzKQpJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnNjYWxlID0gZnVuY3Rpb24oLi4uYXJncykKICAoKSA9PgAAAAAAAAAAkAkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					30,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/geom/transformation.js",
						"symkeys":
						[
							[
								275,
								289
							],
							[
								316,
								343
							],
							[
								799,
								809
							],
							[
								1119,
								1137
							],
							[
								1220,
								1230
							],
							[
								1307,
								1314
							],
							[
								1336,
								1347
							],
							[
								1403,
								1409
							],
							[
								1432,
								1441
							],
							[
								1535,
								1545
							],
							[
								1581,
								1590
							],
							[
								1619,
								1626
							],
							[
								1655,
								1663
							],
							[
								1720,
								1732
							],
							[
								1844,
								1852
							],
							[
								1872,
								1880
							],
							[
								1901,
								1916
							],
							[
								2010,
								2017
							],
							[
								2109,
								2123
							],
							[
								2232,
								2254
							],
							[
								2488,
								2494
							],
							[
								2537,
								2543
							],
							[
								3785,
								3806
							],
							[
								3836,
								3860
							],
							[
								3893,
								3913
							],
							[
								3942,
								3961
							],
							[
								4132,
								4143
							],
							[
								4253,
								4260
							],
							[
								4292,
								4296
							],
							[
								4403,
								4411
							],
							[
								4475,
								4499
							],
							[
								4777,
								4785
							],
							[
								4844,
								4856
							],
							[
								4913,
								4923
							],
							[
								4962,
								4970
							],
							[
								5008,
								5023
							],
							[
								5296,
								5304
							],
							[
								5344,
								5354
							],
							[
								5576,
								5584
							],
							[
								5727,
								5744
							],
							[
								5937,
								5969
							],
							[
								6201,
								6209
							],
							[
								6358,
								6369
							],
							[
								6435,
								6455
							],
							[
								6732,
								6736
							],
							[
								6975,
								6987
							],
							[
								7076,
								7084
							],
							[
								7434,
								7442
							],
							[
								7612,
								7629
							],
							[
								7915,
								7926
							],
							[
								8084,
								8091
							],
							[
								8157,
								8177
							],
							[
								8570,
								8582
							],
							[
								8775,
								8783
							],
							[
								8895,
								8905
							],
							[
								9174,
								9182
							],
							[
								9313,
								9330
							],
							[
								9608,
								9615
							],
							[
								9761,
								9781
							],
							[
								9838,
								9855
							],
							[
								10047,
								10059
							],
							[
								10193,
								10203
							],
							[
								10250,
								10258
							],
							[
								10327,
								10335
							],
							[
								10382,
								10399
							],
							[
								10598,
								10618
							],
							[
								10807,
								10825
							],
							[
								10844,
								10875
							],
							[
								11264,
								11280
							],
							[
								11400,
								11418
							],
							[
								11493,
								11511
							],
							[
								11895,
								11910
							],
							[
								12179,
								12193
							],
							[
								12578,
								12599
							],
							[
								12688,
								12714
							],
							[
								12819,
								12837
							],
							[
								12920,
								12943
							],
							[
								13041,
								13063
							],
							[
								13126,
								13147
							],
							[
								13209,
								13234
							],
							[
								13410,
								13419
							],
							[
								13517,
								13526
							],
							[
								13794,
								13807
							],
							[
								14049,
								14056
							],
							[
								14079,
								14083
							],
							[
								14120,
								14127
							],
							[
								14188,
								14202
							],
							[
								14270,
								14285
							],
							[
								14354,
								14369
							],
							[
								14558,
								14570
							],
							[
								14636,
								14669
							],
							[
								14682,
								14695
							],
							[
								14868,
								14884
							],
							[
								15072,
								15087
							],
							[
								15226,
								15241
							],
							[
								15272,
								15276
							],
							[
								15690,
								15704
							],
							[
								15839,
								15854
							],
							[
								16041,
								16063
							],
							[
								16202,
								16206
							],
							[
								16366,
								16373
							],
							[
								16488,
								16498
							],
							[
								16565,
								16569
							],
							[
								16624,
								16636
							],
							[
								16663,
								16667
							],
							[
								16691,
								16701
							],
							[
								16767,
								16773
							],
							[
								16937,
								16951
							],
							[
								17063,
								17081
							],
							[
								17145,
								17197
							],
							[
								17631,
								17660
							],
							[
								17731,
								17755
							],
							[
								17894,
								17913
							],
							[
								17994,
								18008
							],
							[
								18036,
								18043
							],
							[
								18103,
								18122
							],
							[
								18160,
								18167
							],
							[
								18332,
								18345
							],
							[
								18373,
								18380
							],
							[
								18439,
								18457
							],
							[
								18495,
								18502
							],
							[
								18664,
								18681
							],
							[
								18709,
								18716
							],
							[
								18812,
								18834
							],
							[
								18872,
								18879
							],
							[
								19161,
								19171
							],
							[
								19204,
								19215
							],
							[
								19248,
								19255
							],
							[
								19323,
								19333
							],
							[
								19697,
								19710
							],
							[
								19779,
								19790
							],
							[
								19949,
								19957
							],
							[
								20075,
								20086
							],
							[
								20122,
								20137
							],
							[
								20196,
								20203
							],
							[
								20285,
								20309
							],
							[
								20473,
								20491
							],
							[
								20787,
								20805
							],
							[
								21319,
								21383
							],
							[
								21446,
								21513
							],
							[
								21579,
								21642
							],
							[
								21761,
								21767
							]
						],
						"symlist":
						[
							"Transformation",
							"constructor(transformation)",
							"get type()",
							"TransformationList",
							"get axes()",
							"axis =>",
							"get props()",
							"key =>",
							"has(axis)",
							"get is3D()",
							"entries()",
							"prop =>",
							"toJSON()",
							"vector(unit)",
							" axis =>",
							" axis =>",
							"toString(tUnit)",
							"clone()",
							"(acc, prop) =>",
							"static fromString(arg)",
							"arg =>",
							"arg =>",
							"static get rotation()",
							"static get translation()",
							"static get scaling()",
							"static get matrix()",
							"value(inst)",
							"ctor =>",
							"ctor",
							"Rotation",
							"constructor(angle, x, y)",
							"invert()",
							"get values()",
							"get is3D()",
							"isZero()",
							"toString(rUnit)",
							"coord =>",
							"toSource()",
							"coord =>",
							"accumulate(other)",
							"static convertAngle(angle, unit)",
							"Rotation",
							"Translation",
							"constructor(...args)",
							"a =>",
							"get values()",
							"isZero()",
							"invert()",
							"accumulate(other)",
							"Translation",
							"Scaling",
							"constructor(...args)",
							"get values()",
							"isZero()",
							"toString()",
							"invert()",
							"accumulate(other)",
							"Scaling",
							"MatrixTransformation",
							"constructor(init)",
							"get values()",
							"toString()",
							"invert()",
							"isZero()",
							"accumulate(other)",
							"MatrixTransformation",
							"TransformationList",
							"constructor(init, tUnit, rUnit)",
							"initialize(init)",
							"TransformationList",
							"TransformationList",
							"fromString(str)",
							"fromArray(arr)",
							"get translationUnit()",
							"set translationUnit(value)",
							"get rotationUnit()",
							"set rotationUnit(value)",
							"static fromString(str)",
							"static fromArray(arr)",
							"static fromMatrix(matrix)",
							"toArray()",
							"toArray()",
							"push(...args)",
							"clone()",
							"t =>",
							"map(fn)",
							"slice(...args)",
							"splice(...args)",
							"concat(...args)",
							"filter(pred)",
							"baseCall(c = Array.prototype.map)",
							" (...args) =>",
							"unshift(...args)",
							"rotate(...args)",
							"translate(x, y)",
							"t =>",
							"scale(...args)",
							"matrix(...args)",
							"toString(tUnit, rUnit)",
							"t =>",
							"toDOM()",
							"toSource()",
							"t =>",
							"toMatrices()",
							"t =>",
							"toMatrix()",
							"undo()",
							"merge(...args)",
							"TransformationList",
							"decompose(degrees = true, transformationList = true)",
							".toArray = function toArray()",
							"findLastIndex(predicate)",
							"findLast(predicate)",
							"get rotation()",
							"item =>",
							"set rotation(value)",
							"item =>",
							"get scaling()",
							"item =>",
							"set scaling(value)",
							"item =>",
							"get translation()",
							"item =>",
							"set translation(value)",
							"item =>",
							"get last()",
							"get first()",
							"at(pos)",
							"collapse()",
							"collapseAll()",
							"get angle()",
							"invert()",
							"(acc, t) =>",
							"join(sep = ' ')",
							"clear()",
							"apply(obj, round = true)",
							"TransformationList",
							"TransformationList",
							"ImmutableTransformationList.prototype.rotate = function(...args)",
							"ImmutableTransformationList.prototype.translate = function(...args)",
							"ImmutableTransformationList.prototype.scale = function(...args)",
							" () =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAACQCQAAVHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm1hdGlvbikKICBnZXQgdHlwZSgpClRyYW5zZm9ybWF0aW9uTGlzdAogIGdldCBheGVzKCkKICBheGlzID0+CiAgZ2V0IHByb3BzKCkKICBrZXkgPT4KICBoYXMoYXhpcykKICBnZXQgaXMzRCgpCiAgZW50cmllcygpCiAgcHJvcCA9PgogIHRvSlNPTigpCiAgdmVjdG9yKHVuaXQpCiAgYXhpcyA9PgogIGF4aXMgPT4KICB0b1N0cmluZyh0VW5pdCkKICBjbG9uZSgpCihhY2MsIHByb3ApID0+CiAgc3RhdGljIGZyb21TdHJpbmcoYXJnKQogIGFyZyA9PgogIGFyZyA9PgogIHN0YXRpYyBnZXQgcm90YXRpb24oKQogIHN0YXRpYyBnZXQgdHJhbnNsYXRpb24oKQogIHN0YXRpYyBnZXQgc2NhbGluZygpCiAgc3RhdGljIGdldCBtYXRyaXgoKQogIHZhbHVlKGluc3QpCiAgY3RvciA9PgogIGN0b3IKUm90YXRpb24KICBjb25zdHJ1Y3RvcihhbmdsZSwgeCwgeSkKICBpbnZlcnQoKQogIGdldCB2YWx1ZXMoKQogIGdldCBpczNEKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKHJVbml0KQogIGNvb3JkID0+CiAgdG9Tb3VyY2UoKQogIGNvb3JkID0+CiAgYWNjdW11bGF0ZShvdGhlcikKICBzdGF0aWMgY29udmVydEFuZ2xlKGFuZ2xlLCB1bml0KQpSb3RhdGlvbgpUcmFuc2xhdGlvbgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgYSA9PgogIGdldCB2YWx1ZXMoKQogIGlzWmVybygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpUcmFuc2xhdGlvbgpTY2FsaW5nCiAgY29uc3RydWN0b3IoLi4uYXJncykKICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGFjY3VtdWxhdGUob3RoZXIpClNjYWxpbmcKTWF0cml4VHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcihpbml0KQogIGdldCB2YWx1ZXMoKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGlzWmVybygpCiAgYWNjdW11bGF0ZShvdGhlcikKTWF0cml4VHJhbnNmb3JtYXRpb24KVHJhbnNmb3JtYXRpb25MaXN0CiAgY29uc3RydWN0b3IoaW5pdCwgdFVuaXQsIHJVbml0KQogIGluaXRpYWxpemUoaW5pdCkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdAogIGZyb21TdHJpbmcoc3RyKQogIGZyb21BcnJheShhcnIpCiAgZ2V0IHRyYW5zbGF0aW9uVW5pdCgpCiAgc2V0IHRyYW5zbGF0aW9uVW5pdCh2YWx1ZSkKICBnZXQgcm90YXRpb25Vbml0KCkKICBzZXQgcm90YXRpb25Vbml0KHZhbHVlKQogIHN0YXRpYyBmcm9tU3RyaW5nKHN0cikKICBzdGF0aWMgZnJvbUFycmF5KGFycikKICBzdGF0aWMgZnJvbU1hdHJpeChtYXRyaXgpCiAgdG9BcnJheSgpCiAgdG9BcnJheSgpCiAgcHVzaCguLi5hcmdzKQogIGNsb25lKCkKICB0ID0+CiAgbWFwKGZuKQogIHNsaWNlKC4uLmFyZ3MpCiAgc3BsaWNlKC4uLmFyZ3MpCiAgY29uY2F0KC4uLmFyZ3MpCiAgZmlsdGVyKHByZWQpCiAgYmFzZUNhbGwoYyA9IEFycmF5LnByb3RvdHlwZS5tYXApCiAgKC4uLmFyZ3MpID0+CiAgdW5zaGlmdCguLi5hcmdzKQogIHJvdGF0ZSguLi5hcmdzKQogIHRyYW5zbGF0ZSh4LCB5KQogIHQgPT4KICBzY2FsZSguLi5hcmdzKQogIG1hdHJpeCguLi5hcmdzKQogIHRvU3RyaW5nKHRVbml0LCByVW5pdCkKICB0ID0+CiAgdG9ET00oKQogIHRvU291cmNlKCkKICB0ID0+CiAgdG9NYXRyaWNlcygpCiAgdCA9PgogIHRvTWF0cml4KCkKICB1bmRvKCkKICBtZXJnZSguLi5hcmdzKQpUcmFuc2Zvcm1hdGlvbkxpc3QKICBkZWNvbXBvc2UoZGVncmVlcyA9IHRydWUsIHRyYW5zZm9ybWF0aW9uTGlzdCA9IHRydWUpCiAgLnRvQXJyYXkgPSBmdW5jdGlvbiB0b0FycmF5KCkKICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICBmaW5kTGFzdChwcmVkaWNhdGUpCiAgZ2V0IHJvdGF0aW9uKCkKICBpdGVtID0+CiAgc2V0IHJvdGF0aW9uKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgc2NhbGluZygpCiAgaXRlbSA9PgogIHNldCBzY2FsaW5nKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgdHJhbnNsYXRpb24oKQogIGl0ZW0gPT4KICBzZXQgdHJhbnNsYXRpb24odmFsdWUpCiAgaXRlbSA9PgogIGdldCBsYXN0KCkKICBnZXQgZmlyc3QoKQogIGF0KHBvcykKICBjb2xsYXBzZSgpCiAgY29sbGFwc2VBbGwoKQogIGdldCBhbmdsZSgpCiAgaW52ZXJ0KCkKKGFjYywgdCkgPT4KICBqb2luKHNlcCA9ICcgJykKICBjbGVhcigpCiAgYXBwbHkob2JqLCByb3VuZCA9IHRydWUpClRyYW5zZm9ybWF0aW9uTGlzdApUcmFuc2Zvcm1hdGlvbkxpc3QKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS5yb3RhdGUgPSBmdW5jdGlvbiguLi5hcmdzKQpJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUuc2NhbGUgPSBmdW5jdGlvbiguLi5hcmdzKQogICgpID0+AAAAAAAAAACQCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAkAAFRyYW5zZm9ybWF0aW9uCiAgY29uc3RydWN0b3IodHJhbnNmb3JtYXRpb24pCiAgZ2V0IHR5cGUoKQpUcmFuc2Zvcm1hdGlvbkxpc3QKICBnZXQgYXhlcygpCiAgYXhpcyA9PgogIGdldCBwcm9wcygpCiAga2V5ID0+CiAgaGFzKGF4aXMpCiAgZ2V0IGlzM0QoKQogIGVudHJpZXMoKQogIHByb3AgPT4KICB0b0pTT04oKQogIHZlY3Rvcih1bml0KQogIGF4aXMgPT4KICBheGlzID0+CiAgdG9TdHJpbmcodFVuaXQpCiAgY2xvbmUoKQooYWNjLCBwcm9wKSA9PgogIHN0YXRpYyBmcm9tU3RyaW5nKGFyZykKICBhcmcgPT4KICBhcmcgPT4KICBzdGF0aWMgZ2V0IHJvdGF0aW9uKCkKICBzdGF0aWMgZ2V0IHRyYW5zbGF0aW9uKCkKICBzdGF0aWMgZ2V0IHNjYWxpbmcoKQogIHN0YXRpYyBnZXQgbWF0cml4KCkKICB2YWx1ZShpbnN0KQogIGN0b3IgPT4KICBjdG9yClJvdGF0aW9uCiAgY29uc3RydWN0b3IoYW5nbGUsIHgsIHkpCiAgaW52ZXJ0KCkKICBnZXQgdmFsdWVzKCkKICBnZXQgaXMzRCgpCiAgaXNaZXJvKCkKICB0b1N0cmluZyhyVW5pdCkKICBjb29yZCA9PgogIHRvU291cmNlKCkKICBjb29yZCA9PgogIGFjY3VtdWxhdGUob3RoZXIpCiAgc3RhdGljIGNvbnZlcnRBbmdsZShhbmdsZSwgdW5pdCkKUm90YXRpb24KVHJhbnNsYXRpb24KICBjb25zdHJ1Y3RvciguLi5hcmdzKQogIGEgPT4KICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIGludmVydCgpCiAgYWNjdW11bGF0ZShvdGhlcikKVHJhbnNsYXRpb24KU2NhbGluZwogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgZ2V0IHZhbHVlcygpCiAgaXNaZXJvKCkKICB0b1N0cmluZygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpTY2FsaW5nCk1hdHJpeFRyYW5zZm9ybWF0aW9uCiAgY29uc3RydWN0b3IoaW5pdCkKICBnZXQgdmFsdWVzKCkKICB0b1N0cmluZygpCiAgaW52ZXJ0KCkKICBpc1plcm8oKQogIGFjY3VtdWxhdGUob3RoZXIpCk1hdHJpeFRyYW5zZm9ybWF0aW9uClRyYW5zZm9ybWF0aW9uTGlzdAogIGNvbnN0cnVjdG9yKGluaXQsIHRVbml0LCByVW5pdCkKICBpbml0aWFsaXplKGluaXQpClRyYW5zZm9ybWF0aW9uTGlzdApUcmFuc2Zvcm1hdGlvbkxpc3QKICBmcm9tU3RyaW5nKHN0cikKICBmcm9tQXJyYXkoYXJyKQogIGdldCB0cmFuc2xhdGlvblVuaXQoKQogIHNldCB0cmFuc2xhdGlvblVuaXQodmFsdWUpCiAgZ2V0IHJvdGF0aW9uVW5pdCgpCiAgc2V0IHJvdGF0aW9uVW5pdCh2YWx1ZSkKICBzdGF0aWMgZnJvbVN0cmluZyhzdHIpCiAgc3RhdGljIGZyb21BcnJheShhcnIpCiAgc3RhdGljIGZyb21NYXRyaXgobWF0cml4KQogIHRvQXJyYXkoKQogIHRvQXJyYXkoKQogIHB1c2goLi4uYXJncykKICBjbG9uZSgpCiAgdCA9PgogIG1hcChmbikKICBzbGljZSguLi5hcmdzKQogIHNwbGljZSguLi5hcmdzKQogIGNvbmNhdCguLi5hcmdzKQogIGZpbHRlcihwcmVkKQogIGJhc2VDYWxsKGMgPSBBcnJheS5wcm90b3R5cGUubWFwKQogICguLi5hcmdzKSA9PgogIHVuc2hpZnQoLi4uYXJncykKICByb3RhdGUoLi4uYXJncykKICB0cmFuc2xhdGUoeCwgeSkKICB0ID0+CiAgc2NhbGUoLi4uYXJncykKICBtYXRyaXgoLi4uYXJncykKICB0b1N0cmluZyh0VW5pdCwgclVuaXQpCiAgdCA9PgogIHRvRE9NKCkKICB0b1NvdXJjZSgpCiAgdCA9PgogIHRvTWF0cmljZXMoKQogIHQgPT4KICB0b01hdHJpeCgpCiAgdW5kbygpCiAgbWVyZ2UoLi4uYXJncykKVHJhbnNmb3JtYXRpb25MaXN0CiAgZGVjb21wb3NlKGRlZ3JlZXMgPSB0cnVlLCB0cmFuc2Zvcm1hdGlvbkxpc3QgPSB0cnVlKQogIC50b0FycmF5ID0gZnVuY3Rpb24gdG9BcnJheSgpCiAgZmluZExhc3RJbmRleChwcmVkaWNhdGUpCiAgZmluZExhc3QocHJlZGljYXRlKQogIGdldCByb3RhdGlvbigpCiAgaXRlbSA9PgogIHNldCByb3RhdGlvbih2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IHNjYWxpbmcoKQogIGl0ZW0gPT4KICBzZXQgc2NhbGluZyh2YWx1ZSkKICBpdGVtID0+CiAgZ2V0IHRyYW5zbGF0aW9uKCkKICBpdGVtID0+CiAgc2V0IHRyYW5zbGF0aW9uKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgbGFzdCgpCiAgZ2V0IGZpcnN0KCkKICBhdChwb3MpCiAgY29sbGFwc2UoKQogIGNvbGxhcHNlQWxsKCkKICBnZXQgYW5nbGUoKQogIGludmVydCgpCihhY2MsIHQpID0+CiAgam9pbihzZXAgPSAnICcpCiAgY2xlYXIoKQogIGFwcGx5KG9iaiwgcm91bmQgPSB0cnVlKQpUcmFuc2Zvcm1hdGlvbkxpc3QKVHJhbnNmb3JtYXRpb25MaXN0CkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUucm90YXRlID0gZnVuY3Rpb24oLi4uYXJncykKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS50cmFuc2xhdGUgPSBmdW5jdGlvbiguLi5hcmdzKQpJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnNjYWxlID0gZnVuY3Rpb24oLi4uYXJncykKICAoKSA9PgAAAAAAAAAAkAkAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					31,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAACQCQAAVHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm1hdGlvbikKICBnZXQgdHlwZSgpClRyYW5zZm9ybWF0aW9uTGlzdAogIGdldCBheGVzKCkKICBheGlzID0+CiAgZ2V0IHByb3BzKCkKICBrZXkgPT4KICBoYXMoYXhpcykKICBnZXQgaXMzRCgpCiAgZW50cmllcygpCiAgcHJvcCA9PgogIHRvSlNPTigpCiAgdmVjdG9yKHVuaXQpCiAgYXhpcyA9PgogIGF4aXMgPT4KICB0b1N0cmluZyh0VW5pdCkKICBjbG9uZSgpCihhY2MsIHByb3ApID0+CiAgc3RhdGljIGZyb21TdHJpbmcoYXJnKQogIGFyZyA9PgogIGFyZyA9PgogIHN0YXRpYyBnZXQgcm90YXRpb24oKQogIHN0YXRpYyBnZXQgdHJhbnNsYXRpb24oKQogIHN0YXRpYyBnZXQgc2NhbGluZygpCiAgc3RhdGljIGdldCBtYXRyaXgoKQogIHZhbHVlKGluc3QpCiAgY3RvciA9PgogIGN0b3IKUm90YXRpb24KICBjb25zdHJ1Y3RvcihhbmdsZSwgeCwgeSkKICBpbnZlcnQoKQogIGdldCB2YWx1ZXMoKQogIGdldCBpczNEKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKHJVbml0KQogIGNvb3JkID0+CiAgdG9Tb3VyY2UoKQogIGNvb3JkID0+CiAgYWNjdW11bGF0ZShvdGhlcikKICBzdGF0aWMgY29udmVydEFuZ2xlKGFuZ2xlLCB1bml0KQpSb3RhdGlvbgpUcmFuc2xhdGlvbgogIGNvbnN0cnVjdG9yKC4uLmFyZ3MpCiAgYSA9PgogIGdldCB2YWx1ZXMoKQogIGlzWmVybygpCiAgaW52ZXJ0KCkKICBhY2N1bXVsYXRlKG90aGVyKQpUcmFuc2xhdGlvbgpTY2FsaW5nCiAgY29uc3RydWN0b3IoLi4uYXJncykKICBnZXQgdmFsdWVzKCkKICBpc1plcm8oKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGFjY3VtdWxhdGUob3RoZXIpClNjYWxpbmcKTWF0cml4VHJhbnNmb3JtYXRpb24KICBjb25zdHJ1Y3Rvcihpbml0KQogIGdldCB2YWx1ZXMoKQogIHRvU3RyaW5nKCkKICBpbnZlcnQoKQogIGlzWmVybygpCiAgYWNjdW11bGF0ZShvdGhlcikKTWF0cml4VHJhbnNmb3JtYXRpb24KVHJhbnNmb3JtYXRpb25MaXN0CiAgY29uc3RydWN0b3IoaW5pdCwgdFVuaXQsIHJVbml0KQogIGluaXRpYWxpemUoaW5pdCkKVHJhbnNmb3JtYXRpb25MaXN0ClRyYW5zZm9ybWF0aW9uTGlzdAogIGZyb21TdHJpbmcoc3RyKQogIGZyb21BcnJheShhcnIpCiAgZ2V0IHRyYW5zbGF0aW9uVW5pdCgpCiAgc2V0IHRyYW5zbGF0aW9uVW5pdCh2YWx1ZSkKICBnZXQgcm90YXRpb25Vbml0KCkKICBzZXQgcm90YXRpb25Vbml0KHZhbHVlKQogIHN0YXRpYyBmcm9tU3RyaW5nKHN0cikKICBzdGF0aWMgZnJvbUFycmF5KGFycikKICBzdGF0aWMgZnJvbU1hdHJpeChtYXRyaXgpCiAgdG9BcnJheSgpCiAgdG9BcnJheSgpCiAgcHVzaCguLi5hcmdzKQogIGNsb25lKCkKICB0ID0+CiAgbWFwKGZuKQogIHNsaWNlKC4uLmFyZ3MpCiAgc3BsaWNlKC4uLmFyZ3MpCiAgY29uY2F0KC4uLmFyZ3MpCiAgZmlsdGVyKHByZWQpCiAgYmFzZUNhbGwoYyA9IEFycmF5LnByb3RvdHlwZS5tYXApCiAgKC4uLmFyZ3MpID0+CiAgdW5zaGlmdCguLi5hcmdzKQogIHJvdGF0ZSguLi5hcmdzKQogIHRyYW5zbGF0ZSh4LCB5KQogIHQgPT4KICBzY2FsZSguLi5hcmdzKQogIG1hdHJpeCguLi5hcmdzKQogIHRvU3RyaW5nKHRVbml0LCByVW5pdCkKICB0ID0+CiAgdG9ET00oKQogIHRvU291cmNlKCkKICB0ID0+CiAgdG9NYXRyaWNlcygpCiAgdCA9PgogIHRvTWF0cml4KCkKICB1bmRvKCkKICBtZXJnZSguLi5hcmdzKQpUcmFuc2Zvcm1hdGlvbkxpc3QKICBkZWNvbXBvc2UoZGVncmVlcyA9IHRydWUsIHRyYW5zZm9ybWF0aW9uTGlzdCA9IHRydWUpCiAgLnRvQXJyYXkgPSBmdW5jdGlvbiB0b0FycmF5KCkKICBmaW5kTGFzdEluZGV4KHByZWRpY2F0ZSkKICBmaW5kTGFzdChwcmVkaWNhdGUpCiAgZ2V0IHJvdGF0aW9uKCkKICBpdGVtID0+CiAgc2V0IHJvdGF0aW9uKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgc2NhbGluZygpCiAgaXRlbSA9PgogIHNldCBzY2FsaW5nKHZhbHVlKQogIGl0ZW0gPT4KICBnZXQgdHJhbnNsYXRpb24oKQogIGl0ZW0gPT4KICBzZXQgdHJhbnNsYXRpb24odmFsdWUpCiAgaXRlbSA9PgogIGdldCBsYXN0KCkKICBnZXQgZmlyc3QoKQogIGF0KHBvcykKICBjb2xsYXBzZSgpCiAgY29sbGFwc2VBbGwoKQogIGdldCBhbmdsZSgpCiAgaW52ZXJ0KCkKKGFjYywgdCkgPT4KICBqb2luKHNlcCA9ICcgJykKICBjbGVhcigpCiAgYXBwbHkob2JqLCByb3VuZCA9IHRydWUpClRyYW5zZm9ybWF0aW9uTGlzdApUcmFuc2Zvcm1hdGlvbkxpc3QKSW1tdXRhYmxlVHJhbnNmb3JtYXRpb25MaXN0LnByb3RvdHlwZS5yb3RhdGUgPSBmdW5jdGlvbiguLi5hcmdzKQpJbW11dGFibGVUcmFuc2Zvcm1hdGlvbkxpc3QucHJvdG90eXBlLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKC4uLmFyZ3MpCkltbXV0YWJsZVRyYW5zZm9ybWF0aW9uTGlzdC5wcm90b3R5cGUuc2NhbGUgPSBmdW5jdGlvbiguLi5hcmdzKQogICgpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					32,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/eagle/components/rectangle.js",
						"symkeys":
						[
							[
								322,
								368
							],
							[
								402,
								420
							],
							[
								725,
								730
							]
						],
						"symlist":
						[
							"Rectangle = ({ data, opts = {}, ...props }) =>",
							"async function* ()",
							" i =>"
						]
					},
					"AQAAAAAAAAAAAAAAOAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					33,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAUmVjdGFuZ2xlID0gKHsgZGF0YSwgb3B0cyA9IHt9LCAuLi5wcm9wcyB9KSA9PgooKQogIGkgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					34,
					3,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/eagle/components/rectangle.js",
						"symkeys":
						[
							[
								322,
								368
							],
							[
								402,
								420
							],
							[
								725,
								730
							]
						],
						"symlist":
						[
							"Rectangle = ({ data, opts = {}, ...props }) =>",
							"async function* ()",
							" i =>"
						]
					},
					"BQAAAAAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAABSZWN0YW5nbGUgPSAoeyBkYXRhLCBvcHRzID0ge30sIC4uLnByb3BzIH0pID0+CigpCiAgaSA9PgAAAAAAAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAABSZWN0YW5nbGUgPSAoeyBkYXRhLCBvcHRzID0ge30sIC4uLnByb3BzIH0pID0+CigpCiAgaSA9PgAAAAAAAAAAOAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					35,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/eagle/components/rectangle.js",
						"symkeys":
						[
							[
								322,
								368
							],
							[
								402,
								420
							],
							[
								725,
								730
							]
						],
						"symlist":
						[
							"Rectangle = ({ data, opts = {}, ...props }) =>",
							"async function* ()",
							" i =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAUmVjdGFuZ2xlID0gKHsgZGF0YSwgb3B0cyA9IHt9LCAuLi5wcm9wcyB9KSA9PgooKQogIGkgPT4AAAAAAAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAUmVjdGFuZ2xlID0gKHsgZGF0YSwgb3B0cyA9IHt9LCAuLi5wcm9wcyB9KSA9PgooKQogIGkgPT4AAAAAAAAAADgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					36,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/eagle/components/rectangle.js",
						"symkeys":
						[
							[
								322,
								368
							],
							[
								402,
								420
							],
							[
								725,
								730
							]
						],
						"symlist":
						[
							"Rectangle = ({ data, opts = {}, ...props }) =>",
							"async function* ()",
							" i =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAUmVjdGFuZ2xlID0gKHsgZGF0YSwgb3B0cyA9IHt9LCAuLi5wcm9wcyB9KSA9PgooKQogIGkgPT4AAAAAAAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAUmVjdGFuZ2xlID0gKHsgZGF0YSwgb3B0cyA9IHt9LCAuLi5wcm9wcyB9KSA9PgooKQogIGkgPT4AAAAAAAAAADgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					37,
					3,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/eagle/components/rectangle.js",
						"symkeys":
						[
							[
								322,
								368
							],
							[
								402,
								420
							],
							[
								725,
								730
							]
						],
						"symlist":
						[
							"Rectangle = ({ data, opts = {}, ...props }) =>",
							"async function* ()",
							" i =>"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAUmVjdGFuZ2xlID0gKHsgZGF0YSwgb3B0cyA9IHt9LCAuLi5wcm9wcyB9KSA9PgooKQogIGkgPT4AAAAAAAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAUmVjdGFuZ2xlID0gKHsgZGF0YSwgb3B0cyA9IHt9LCAuLi5wcm9wcyB9KSA9PgooKQogIGkgPT4AAAAAAAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAUmVjdGFuZ2xlID0gKHsgZGF0YSwgb3B0cyA9IHt9LCAuLi5wcm9wcyB9KSA9PgooKQogIGkgPT4AAAAAAAAAADgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					38,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/eagle/components/rectangle.js",
						"symkeys":
						[
							[
								322,
								368
							],
							[
								402,
								420
							],
							[
								725,
								730
							]
						],
						"symlist":
						[
							"Rectangle = ({ data, opts = {}, ...props }) =>",
							"async function* ()",
							" i =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAUmVjdGFuZ2xlID0gKHsgZGF0YSwgb3B0cyA9IHt9LCAuLi5wcm9wcyB9KSA9PgooKQogIGkgPT4AAAAAAAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAUmVjdGFuZ2xlID0gKHsgZGF0YSwgb3B0cyA9IHt9LCAuLi5wcm9wcyB9KSA9PgooKQogIGkgPT4AAAAAAAAAADgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					39,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAUmVjdGFuZ2xlID0gKHsgZGF0YSwgb3B0cyA9IHt9LCAuLi5wcm9wcyB9KSA9PgooKQogIGkgPT4AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					40,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/eagle/components/textElement.js",
						"symkeys":
						[
							[
								544,
								549
							],
							[
								764,
								775
							],
							[
								789,
								793
							],
							[
								823,
								833
							],
							[
								837,
								848
							]
						],
						"symlist":
						[
							" i =>",
							" () =>",
							"t =>",
							" t =>",
							" () =>"
						]
					},
					"AQAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					41,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAkAAAAICBpID0+CiAgKCkgPT4KICB0ID0+CiAgdCA9PgogICgpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					42,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/eagle/components/textElement.js",
						"symkeys":
						[
							[
								544,
								549
							],
							[
								764,
								775
							],
							[
								789,
								793
							],
							[
								823,
								833
							],
							[
								837,
								848
							]
						],
						"symlist":
						[
							" i =>",
							" () =>",
							"t =>",
							" t =>",
							" () =>"
						]
					},
					"AQAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					43,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/eagle/components/rectangle.js",
						"symkeys":
						[
							[
								322,
								368
							],
							[
								402,
								420
							],
							[
								725,
								730
							]
						],
						"symlist":
						[
							"Rectangle = ({ data, opts = {}, ...props }) =>",
							"async function* ()",
							" i =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAkAAAAICBpID0+CiAgKCkgPT4KICB0ID0+CiAgdCA9PgogICgpID0+AAAAAAAAAAA4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					44,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/eagle/components/textElement.js",
						"symkeys":
						[
							[
								544,
								549
							],
							[
								764,
								775
							],
							[
								789,
								793
							],
							[
								823,
								833
							],
							[
								837,
								848
							]
						],
						"symlist":
						[
							" i =>",
							" () =>",
							"t =>",
							" t =>",
							" () =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAUmVjdGFuZ2xlID0gKHsgZGF0YSwgb3B0cyA9IHt9LCAuLi5wcm9wcyB9KSA9PgooKQogIGkgPT4AAAAAAAAAACQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					45,
					3,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/eagle/components/textElement.js",
						"symkeys":
						[
							[
								544,
								549
							],
							[
								764,
								775
							],
							[
								789,
								793
							],
							[
								823,
								833
							],
							[
								837,
								848
							]
						],
						"symlist":
						[
							" i =>",
							" () =>",
							"t =>",
							" t =>",
							" () =>"
						]
					},
					"BgAAAAAAAAAAAAAAAAAAAAAAAAAkAAAAICBpID0+CiAgKCkgPT4KICB0ID0+CiAgdCA9PgogICgpID0+AAAAAAAAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAACAgaSA9PgogICgpID0+CiAgdCA9PgogIHQgPT4KICAoKSA9PgAAAAAAAAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAAAgIGkgPT4KICAoKSA9PgogIHQgPT4KICB0ID0+CiAgKCkgPT4AAAAAAAAAACQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					46,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAkAAAAICBpID0+CiAgKCkgPT4KICB0ID0+CiAgdCA9PgogICgpID0+AAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					47,
					1,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/eagle/components/circle.js",
						"symkeys":
						[
							[
								367,
								410
							],
							[
								471,
								489
							],
							[
								742,
								747
							]
						],
						"symlist":
						[
							"Circle = ({ data, opts = {}, ...props }) =>",
							"async function* ()",
							" i =>"
						]
					},
					"AQAAAAAAAAAAAAAANQAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					48,
					2,
					"outline_refresh",
					{
						"path": "/home/janos/Projects/plot-cv/lib/eagle/components/circle.js",
						"symkeys":
						[
							[
								367,
								410
							],
							[
								471,
								489
							],
							[
								742,
								747
							]
						],
						"symlist":
						[
							"Circle = ({ data, opts = {}, ...props }) =>",
							"async function* ()",
							" i =>"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAQ2lyY2xlID0gKHsgZGF0YSwgb3B0cyA9IHt9LCAuLi5wcm9wcyB9KSA9PgooKQogIGkgPT4AAAAAAAAAADUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1AAAAQ2lyY2xlID0gKHsgZGF0YSwgb3B0cyA9IHt9LCAuLi5wcm9wcyB9KSA9PgooKQogIGkgPT4AAAAAAAAAADUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "upload-server.js",
			"settings":
			{
				"buffer_size": 33962,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANlBAAAAAAAA2kEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2UEAAAAAAADZQQAAAAAAAAAAAAAAAAAA"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALlBAAAAAAAAukEAAAAAAAAAAAAAukEAAAAAAADEQQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuUEAAAAAAAC5QQAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAALlBAAAAAAAAukEAAAAAAAAAAAAAukEAAAAAAAC7QQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuUEAAAAAAAC5QQAAAAAAAAAAAAAAAFRA"
				],
				[
					17,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALtBAAAAAAAAvUEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAu0EAAAAAAAC7QQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "resp"
					},
					"BAAAALxBAAAAAAAAvUEAAAAAAAAAAAAAvUEAAAAAAAC+QQAAAAAAAAAAAAC+QQAAAAAAAL9BAAAAAAAAAAAAAL9BAAAAAAAAwEEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvEEAAAAAAAC8QQAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAMBBAAAAAAAAwUEAAAAAAAAAAAAAwUEAAAAAAADCQQAAAAAAAAAAAADCQQAAAAAAAMNBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwEEAAAAAAADAQQAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " resp?.type"
					},
					"CwAAAMNBAAAAAAAAxEEAAAAAAAAAAAAAxEEAAAAAAADFQQAAAAAAAAAAAADFQQAAAAAAAMZBAAAAAAAAAAAAAMZBAAAAAAAAx0EAAAAAAAAAAAAAx0EAAAAAAADIQQAAAAAAAAAAAADIQQAAAAAAAMlBAAAAAAAAAAAAAMlBAAAAAAAAykEAAAAAAAAAAAAAykEAAAAAAADLQQAAAAAAAAAAAADLQQAAAAAAAMxBAAAAAAAAAAAAAMxBAAAAAAAAzUEAAAAAAAAAAAAAzUEAAAAAAADOQQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAw0EAAAAAAADDQQAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+kEAAAAAAAD6QQAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAANBZAAAAAAAA0VkAAAAAAAAAAAAA0VkAAAAAAADRWQAAAAAAACYAAAAgICAgICAgIGNvbnNvbGUubG9nKCdvbkNvbm5lY3RceDFiJyk7Cg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANBZAAAAAAAA9lkAAAAAAAAAAAAAAADwvw"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": ",.ws"
					},
					"BAAAAFZaAAAAAAAAV1oAAAAAAAAAAAAAV1oAAAAAAABYWgAAAAAAAAAAAABYWgAAAAAAAFlaAAAAAAAAAAAAAFlaAAAAAAAAWloAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFZaAAAAAAAAVloAAAAAAAAAAAAAAADwvw"
				],
				[
					34,
					3,
					"left_delete",
					null,
					"AwAAAFlaAAAAAAAAWVoAAAAAAAABAAAAc1haAAAAAAAAWFoAAAAAAAABAAAAd1daAAAAAAAAV1oAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFpaAAAAAAAAWloAAAAAAAAAAAAAAADwvw"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": ",ws"
					},
					"AwAAAFdaAAAAAAAAWFoAAAAAAAAAAAAAWFoAAAAAAABZWgAAAAAAAAAAAABZWgAAAAAAAFpaAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFdaAAAAAAAAV1oAAAAAAAAAAAAAAADwvw"
				],
				[
					36,
					3,
					"left_delete",
					null,
					"AwAAAFlaAAAAAAAAWVoAAAAAAAABAAAAc1haAAAAAAAAWFoAAAAAAAABAAAAd1daAAAAAAAAV1oAAAAAAAABAAAALA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFpaAAAAAAAAWloAAAAAAAAAAAAAAADwvw"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AgAAAFdaAAAAAAAAWFoAAAAAAAAAAAAAWFoAAAAAAABZWgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFdaAAAAAAAAV1oAAAAAAAAAAAAAAADwvw"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": ",tls"
					},
					"BAAAAP5ZAAAAAAAA/1kAAAAAAAAAAAAA/1kAAAAAAAAAWgAAAAAAAAAAAAAAWgAAAAAAAAFaAAAAAAAAAAAAAAFaAAAAAAAAAloAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAP5ZAAAAAAAA/lkAAAAAAAAAAAAAAADwvw"
				],
				[
					47,
					2,
					"left_delete",
					null,
					"AgAAAFxaAAAAAAAAXFoAAAAAAAABAAAAc1taAAAAAAAAW1oAAAAAAAABAAAAdw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF1aAAAAAAAAXVoAAAAAAAAAAAAAAADwvw"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " tls"
					},
					"BAAAAFtaAAAAAAAAXFoAAAAAAAAAAAAAXFoAAAAAAABdWgAAAAAAAAAAAABdWgAAAAAAAF5aAAAAAAAAAAAAAF5aAAAAAAAAX1oAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFtaAAAAAAAAW1oAAAAAAAAAAAAAAADwvw"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "{data,"
					},
					"BgAAAKZ+AAAAAAAAp34AAAAAAAAAAAAAp34AAAAAAACofgAAAAAAAAAAAACofgAAAAAAAKl+AAAAAAAAAAAAAKl+AAAAAAAAqn4AAAAAAAAAAAAAqn4AAAAAAACrfgAAAAAAAAAAAACrfgAAAAAAAKx+AAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKZ+AAAAAAAApn4AAAAAAAAAAAAAAADwvw"
				],
				[
					93,
					5,
					"right_delete",
					null,
					"BQAAAK9+AAAAAAAAr34AAAAAAAABAAAAIK9+AAAAAAAAr34AAAAAAAABAAAAZK9+AAAAAAAAr34AAAAAAAABAAAAYa9+AAAAAAAAr34AAAAAAAABAAAAdK9+AAAAAAAAr34AAAAAAAABAAAAYQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK9+AAAAAAAAr34AAAAAAAAAAAAAAADwvw"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAK9+AAAAAAAAsH4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK9+AAAAAAAAr34AAAAAAAAAAAAAAADwvw"
				],
				[
					98,
					1,
					"left_delete",
					null,
					"AQAAAK5+AAAAAAAArn4AAAAAAAABAAAALA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK9+AAAAAAAAr34AAAAAAAAAAAAAAADwvw"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "define"
					},
					"BgAAAGRaAAAAAAAAZVoAAAAAAAAAAAAAZVoAAAAAAABmWgAAAAAAAAAAAABmWgAAAAAAAGdaAAAAAAAAAAAAAGdaAAAAAAAAaFoAAAAAAAAAAAAAaFoAAAAAAABpWgAAAAAAAAAAAABpWgAAAAAAAGpaAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGRaAAAAAAAAZFoAAAAAAAAAAAAAAADwvw"
				],
				[
					141,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGpaAAAAAAAAbFoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGpaAAAAAAAAaloAAAAAAAAAAAAAAADwvw"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "ws,"
					},
					"AwAAAGtaAAAAAAAAbFoAAAAAAAAAAAAAbFoAAAAAAABtWgAAAAAAAAAAAABtWgAAAAAAAG5aAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGtaAAAAAAAAa1oAAAAAAAAAAAAAAADwvw"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAG5aAAAAAAAAb1oAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG5aAAAAAAAAbloAAAAAAAAAAAAAAADwvw"
				],
				[
					144,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAG9aAAAAAAAAcVoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG9aAAAAAAAAb1oAAAAAAAAAAAAAAADwvw"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHBaAAAAAAAAcVoAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHBaAAAAAAAAcFoAAAAAAAAAAAAAAADwvw"
				],
				[
					146,
					3,
					"right_delete",
					null,
					"AwAAAHFaAAAAAAAAcVoAAAAAAAABAAAAfXFaAAAAAAAAcVoAAAAAAAABAAAAKXFaAAAAAAAAcVoAAAAAAAABAAAACg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHFaAAAAAAAAcVoAAAAAAAAAAAAAAADwvw"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHFaAAAAAAAAcloAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHFaAAAAAAAAcVoAAAAAAAAAAAAAAADwvw"
				],
				[
					148,
					11,
					"right_delete",
					null,
					"CwAAAHJaAAAAAAAAcloAAAAAAAABAAAAIHJaAAAAAAAAcloAAAAAAAABAAAAIHJaAAAAAAAAcloAAAAAAAABAAAAIHJaAAAAAAAAcloAAAAAAAABAAAAIHJaAAAAAAAAcloAAAAAAAABAAAAIHJaAAAAAAAAcloAAAAAAAABAAAAIHJaAAAAAAAAcloAAAAAAAABAAAAIHJaAAAAAAAAcloAAAAAAAABAAAAIHJaAAAAAAAAcloAAAAAAAABAAAAd3JaAAAAAAAAcloAAAAAAAABAAAAc3JaAAAAAAAAcloAAAAAAAABAAAALg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHJaAAAAAAAAcloAAAAAAAAAAAAAAADwvw"
				],
				[
					150,
					10,
					"right_delete",
					null,
					"CgAAAH5aAAAAAAAAfloAAAAAAAABAAAAPX5aAAAAAAAAfloAAAAAAAABAAAAIH5aAAAAAAAAfloAAAAAAAABAAAAZn5aAAAAAAAAfloAAAAAAAABAAAAdX5aAAAAAAAAfloAAAAAAAABAAAAbn5aAAAAAAAAfloAAAAAAAABAAAAY35aAAAAAAAAfloAAAAAAAABAAAAdH5aAAAAAAAAfloAAAAAAAABAAAAaX5aAAAAAAAAfloAAAAAAAABAAAAb35aAAAAAAAAfloAAAAAAAABAAAAbg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH5aAAAAAAAAfloAAAAAAAAAAAAAAADwvw"
				],
				[
					153,
					1,
					"left_delete",
					null,
					"AQAAAAlbAAAAAAAACVsAAAAAAAABAAAAOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAApbAAAAAAAAClsAAAAAAAAAAAAAAMBmQA"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": "});"
					},
					"AwAAAAlbAAAAAAAAClsAAAAAAAAAAAAAClsAAAAAAAALWwAAAAAAAAAAAAALWwAAAAAAAAxbAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAlbAAAAAAAACVsAAAAAAAAAAAAAAADwvw"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAAxbAAAAAAAADVsAAAAAAAAAAAAADVsAAAAAAAAVWwAAAAAAAAAAAAANWwAAAAAAAA1bAAAAAAAACAAAACAgICAgICAgDVsAAAAAAAANWwAAAAAAAAAAAAANWwAAAAAAAA5bAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAxbAAAAAAAADFsAAAAAAAAAAAAAAADwvw"
				],
				[
					161,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAc4UAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "eagle-shell.js",
			"settings":
			{
				"buffer_size": 38946,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					11,
					1,
					"insert",
					{
						"characters": "\n\nfunction"
					},
					"CgAAAEFsAAAAAAAAQmwAAAAAAAAAAAAAQmwAAAAAAABDbAAAAAAAAAAAAABDbAAAAAAAAERsAAAAAAAAAAAAAERsAAAAAAAARWwAAAAAAAAAAAAARWwAAAAAAABGbAAAAAAAAAAAAABGbAAAAAAAAEdsAAAAAAAAAAAAAEdsAAAAAAAASGwAAAAAAAAAAAAASGwAAAAAAABJbAAAAAAAAAAAAABJbAAAAAAAAEpsAAAAAAAAAAAAAEpsAAAAAAAAS2wAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBbAAAAAAAAEFsAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " InitBoard"
					},
					"CgAAAEtsAAAAAAAATGwAAAAAAAAAAAAATGwAAAAAAABNbAAAAAAAAAAAAABNbAAAAAAAAE5sAAAAAAAAAAAAAE5sAAAAAAAAT2wAAAAAAAAAAAAAT2wAAAAAAABQbAAAAAAAAAAAAABQbAAAAAAAAFFsAAAAAAAAAAAAAFFsAAAAAAAAUmwAAAAAAAAAAAAAUmwAAAAAAABTbAAAAAAAAAAAAABTbAAAAAAAAFRsAAAAAAAAAAAAAFRsAAAAAAAAVWwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLbAAAAAAAAEtsAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFVsAAAAAAAAV2wAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABVbAAAAAAAAFVsAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "doc=project.board"
					},
					"EQAAAFZsAAAAAAAAV2wAAAAAAAAAAAAAV2wAAAAAAABYbAAAAAAAAAAAAABYbAAAAAAAAFlsAAAAAAAAAAAAAFlsAAAAAAAAWmwAAAAAAAAAAAAAWmwAAAAAAABbbAAAAAAAAAAAAABbbAAAAAAAAFxsAAAAAAAAAAAAAFxsAAAAAAAAXWwAAAAAAAAAAAAAXWwAAAAAAABebAAAAAAAAAAAAABebAAAAAAAAF9sAAAAAAAAAAAAAF9sAAAAAAAAYGwAAAAAAAAAAAAAYGwAAAAAAABhbAAAAAAAAAAAAABhbAAAAAAAAGJsAAAAAAAAAAAAAGJsAAAAAAAAY2wAAAAAAAAAAAAAY2wAAAAAAABkbAAAAAAAAAAAAABkbAAAAAAAAGVsAAAAAAAAAAAAAGVsAAAAAAAAZmwAAAAAAAAAAAAAZmwAAAAAAABnbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWbAAAAAAAAFZsAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGhsAAAAAAAAaWwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABobAAAAAAAAGhsAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAGlsAAAAAAAAa2wAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABpbAAAAAAAAGlsAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAGpsAAAAAAAAa2wAAAAAAAAAAAAAa2wAAAAAAABsbAAAAAAAAAAAAABrbAAAAAAAAG1sAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABqbAAAAAAAAGpsAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"paste",
					null,
					"AQAAAG1sAAAAAAAA1GwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABtbAAAAAAAAG1sAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "doc"
					},
					"BAAAAHJsAAAAAAAAc2wAAAAAAAAAAAAAc2wAAAAAAABzbAAAAAAAAA0AAABwcm9qZWN0LmJvYXJkc2wAAAAAAAB0bAAAAAAAAAAAAAB0bAAAAAAAAHVsAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB/bAAAAAAAAHJsAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAG5sAAAAAAAAb2wAAAAAAAAAAAAAb2wAAAAAAABwbAAAAAAAAAAAAABwbAAAAAAAAHFsAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABubAAAAAAAAG5sAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " commdsn"
					},
					"CAAAAHFsAAAAAAAAcmwAAAAAAAAAAAAAcmwAAAAAAABzbAAAAAAAAAAAAABzbAAAAAAAAHRsAAAAAAAAAAAAAHRsAAAAAAAAdWwAAAAAAAAAAAAAdWwAAAAAAAB2bAAAAAAAAAAAAAB2bAAAAAAAAHdsAAAAAAAAAAAAAHdsAAAAAAAAeGwAAAAAAAAAAAAAeGwAAAAAAAB5bAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABxbAAAAAAAAHFsAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					2,
					"left_delete",
					null,
					"AgAAAHhsAAAAAAAAeGwAAAAAAAABAAAAbndsAAAAAAAAd2wAAAAAAAABAAAAcw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5bAAAAAAAAHlsAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "ands"
					},
					"BAAAAHdsAAAAAAAAeGwAAAAAAAAAAAAAeGwAAAAAAAB5bAAAAAAAAAAAAAB5bAAAAAAAAHpsAAAAAAAAAAAAAHpsAAAAAAAAe2wAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3bAAAAAAAAHdsAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAHtsAAAAAAAAfGwAAAAAAAAAAAAAfGwAAAAAAAB9bAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7bAAAAAAAAHtsAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAH1sAAAAAAAAfmwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9bAAAAAAAAH1sAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"left_delete",
					null,
					"AQAAAHZsAAAAAAAAdmwAAAAAAAABAAAAZA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3bAAAAAAAAHdsAAAAAAAAAAAAAAAAVUA"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAANlsAAAAAAAA2mwAAAAAAAAAAAAA2mwAAAAAAADbbAAAAAAAAAAAAADbbAAAAAAAANxsAAAAAAAAAAAAANxsAAAAAAAA3WwAAAAAAAAAAAAA3WwAAAAAAADebAAAAAAAAAAAAADebAAAAAAAAN9sAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZbAAAAAAAANlsAAAAAAAAAAAAAABAU0A"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " commands.join"
					},
					"DgAAAN9sAAAAAAAA4GwAAAAAAAAAAAAA4GwAAAAAAADhbAAAAAAAAAAAAADhbAAAAAAAAOJsAAAAAAAAAAAAAOJsAAAAAAAA42wAAAAAAAAAAAAA42wAAAAAAADkbAAAAAAAAAAAAADkbAAAAAAAAOVsAAAAAAAAAAAAAOVsAAAAAAAA5mwAAAAAAAAAAAAA5mwAAAAAAADnbAAAAAAAAAAAAADnbAAAAAAAAOhsAAAAAAAAAAAAAOhsAAAAAAAA6WwAAAAAAAAAAAAA6WwAAAAAAADqbAAAAAAAAAAAAADqbAAAAAAAAOtsAAAAAAAAAAAAAOtsAAAAAAAA7GwAAAAAAAAAAAAA7GwAAAAAAADtbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfbAAAAAAAAN9sAAAAAAAAAAAAAAAA8L8"
				],
				[
					58,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAO1sAAAAAAAA72wAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtbAAAAAAAAO1sAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAO5sAAAAAAAA8GwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADubAAAAAAAAO5sAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "\\n"
					},
					"AgAAAO9sAAAAAAAA8GwAAAAAAAAAAAAA8GwAAAAAAADxbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvbAAAAAAAAO9sAAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPNsAAAAAAAA9GwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzbAAAAAAAAPNsAAAAAAAAAAAAAAAA8L8"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANhsAAAAAAAA2WwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYbAAAAAAAANhsAAAAAAAAAAAAAACgZ0A"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAANlsAAAAAAAA2mwAAAAAAAAAAAAA2mwAAAAAAADbbAAAAAAAAAAAAADabAAAAAAAANpsAAAAAAAAAQAAACDabAAAAAAAAN1sAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZbAAAAAAAANlsAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": ","
					},
					"AgAAAJcqAAAAAAAAmCoAAAAAAAAAAAAA22wAAAAAAADbbAAAAAAAAAMAAAAgICA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXKgAAAAAAAJcqAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": "\nInitBoard"
					},
					"CwAAAJgqAAAAAAAAmSoAAAAAAAAAAAAAmSoAAAAAAACdKgAAAAAAAAAAAACdKgAAAAAAAJ4qAAAAAAAAAAAAAJ4qAAAAAAAAnyoAAAAAAAAAAAAAnyoAAAAAAACgKgAAAAAAAAAAAACgKgAAAAAAAKEqAAAAAAAAAAAAAKEqAAAAAAAAoioAAAAAAAAAAAAAoioAAAAAAACjKgAAAAAAAAAAAACjKgAAAAAAAKQqAAAAAAAAAAAAAKQqAAAAAAAApSoAAAAAAAAAAAAApSoAAAAAAACmKgAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYKgAAAAAAAJgqAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					1,
					"right_delete",
					null,
					"AQAAANlsAAAAAAAA2WwAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZbAAAAAAAANlsAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANlsAAAAAAAA2mwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZbAAAAAAAANlsAAAAAAAAAAAAAAAA8L8"
				],
				[
					106,
					1,
					"left_delete",
					null,
					"AQAAANlsAAAAAAAA2WwAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADabAAAAAAAANpsAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "[..."
					},
					"BAAAAOFsAAAAAAAA4mwAAAAAAAAAAAAA4mwAAAAAAADjbAAAAAAAAAAAAADjbAAAAAAAAORsAAAAAAAAAAAAAORsAAAAAAAA5WwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhbAAAAAAAAOFsAAAAAAAAAAAAAAAA8L8"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "].join"
					},
					"BgAAAOZsAAAAAAAA52wAAAAAAAAAAAAA52wAAAAAAADobAAAAAAAAAAAAADobAAAAAAAAOlsAAAAAAAAAAAAAOlsAAAAAAAA6mwAAAAAAAAAAAAA6mwAAAAAAADrbAAAAAAAAAAAAADrbAAAAAAAAOxsAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmbAAAAAAAAOZsAAAAAAAAAAAAAAAA8L8"
				],
				[
					125,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOxsAAAAAAAA7mwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsbAAAAAAAAOxsAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAO1sAAAAAAAA72wAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADtbAAAAAAAAO1sAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAO5sAAAAAAAA72wAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADubAAAAAAAAO5sAAAAAAAAAAAAAAAA8L8"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAPJsAAAAAAAA82wAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADybAAAAAAAAPJsAAAAAAAAAAAAAAAA8L8"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAN9sAAAAAAAA4GwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfbAAAAAAAAN9sAAAAAAAAAAAAAAAA8L8"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAALBsAAAAAAAAsWwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwbAAAAAAAALBsAAAAAAAAAAAAAAAA8L8"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BwAAALFsAAAAAAAAsmwAAAAAAAAAAAAAsmwAAAAAAAC1bAAAAAAAAAAAAACybAAAAAAAALJsAAAAAAAAAwAAACAgILJsAAAAAAAAtmwAAAAAAAAAAAAAtmwAAAAAAAC3bAAAAAAAAAAAAAC3bAAAAAAAALtsAAAAAAAAAAAAALJsAAAAAAAAsmwAAAAAAAAEAAAAICAgIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACxbAAAAAAAALFsAAAAAAAAAAAAAAAA8L8"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAALdsAAAAAAAAuGwAAAAAAAAAAAAAuGwAAAAAAAC5bAAAAAAAAAAAAAC5bAAAAAAAALpsAAAAAAAAAAAAALpsAAAAAAAAu2wAAAAAAAAAAAAAu2wAAAAAAAC8bAAAAAAAAAAAAAC8bAAAAAAAAL1sAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3bAAAAAAAALdsAAAAAAAAAAAAAAAA8L8"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAL1sAAAAAAAAvmwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9bAAAAAAAAL1sAAAAAAAAAAAAAAAA8L8"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANFsAAAAAAAA0mwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRbAAAAAAAANFsAAAAAAAAAAAAAAAA8L8"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAANJsAAAAAAAA02wAAAAAAAAAAAAA02wAAAAAAADXbAAAAAAAAAAAAADXbAAAAAAAANhsAAAAAAAAAAAAANNsAAAAAAAA02wAAAAAAAAEAAAAICAgINNsAAAAAAAA1WwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSbAAAAAAAANJsAAAAAAAAAAAAAAAA8L8"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAANJsAAAAAAAA02wAAAAAAAAAAAAA02wAAAAAAADXbAAAAAAAAAAAAADXbAAAAAAAANhsAAAAAAAAAAAAANhsAAAAAAAA3GwAAAAAAAAAAAAA02wAAAAAAADTbAAAAAAAAAQAAAAgICAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSbAAAAAAAANJsAAAAAAAA////////738"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BgAAALdsAAAAAAAAuGwAAAAAAAAAAAAA1WwAAAAAAADVbAAAAAAAAAQAAAAgICAguGwAAAAAAAC5bAAAAAAAAAAAAAC5bAAAAAAAALpsAAAAAAAAAAAAALpsAAAAAAAAu2wAAAAAAAAAAAAAu2wAAAAAAAC8bAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3bAAAAAAAALdsAAAAAAAAAAAAAAAAPEA"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": " pt="
					},
					"BAAAALxsAAAAAAAAvWwAAAAAAAAAAAAAvWwAAAAAAAC+bAAAAAAAAAAAAAC+bAAAAAAAAL9sAAAAAAAAAAAAAL9sAAAAAAAAwGwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8bAAAAAAAALxsAAAAAAAAAAAAAAAA8L8"
				],
				[
					157,
					13,
					"right_delete",
					null,
					"DQAAAMBsAAAAAAAAwGwAAAAAAAABAAAAcsBsAAAAAAAAwGwAAAAAAAABAAAAZcBsAAAAAAAAwGwAAAAAAAABAAAAdMBsAAAAAAAAwGwAAAAAAAABAAAAdcBsAAAAAAAAwGwAAAAAAAABAAAAcsBsAAAAAAAAwGwAAAAAAAABAAAAbsBsAAAAAAAAwGwAAAAAAAABAAAAIMBsAAAAAAAAwGwAAAAAAAABAAAAW8BsAAAAAAAAwGwAAAAAAAABAAAAbsBsAAAAAAAAwGwAAAAAAAABAAAAYcBsAAAAAAAAwGwAAAAAAAABAAAAbcBsAAAAAAAAwGwAAAAAAAABAAAAZcBsAAAAAAAAwGwAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADAbAAAAAAAAMBsAAAAAAAAAAAAAAAA8L8"
				],
				[
					159,
					2,
					"left_delete",
					null,
					"AgAAAM1sAAAAAAAAzWwAAAAAAAABAAAAO8xsAAAAAAAAzGwAAAAAAAABAAAAXQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADObAAAAAAAAM5sAAAAAAAA////////738"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMxsAAAAAAAAzWwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMbAAAAAAAAMxsAAAAAAAAAAAAAAAA8L8"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAM5sAAAAAAAAz2wAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADObAAAAAAAAM5sAAAAAAAAAAAAAADAZkA"
				],
				[
					165,
					1,
					"left_delete",
					null,
					"AQAAAL5sAAAAAAAAvmwAAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC/bAAAAAAAAL9sAAAAAAAAAAAAAAAA8L8"
				],
				[
					168,
					1,
					"cut",
					null,
					"AQAAAONsAAAAAAAA42wAAAAAAAAjAAAAIGBNT1ZFICR7bn0gKCR7Wy4uLnBdLmpvaW4oJyAnKX0pO2A",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjbAAAAAAAAAZtAAAAAAAAAAAAAAAA8L8"
				],
				[
					171,
					1,
					"paste",
					null,
					"AQAAAM5sAAAAAAAA8WwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADObAAAAAAAAM5sAAAAAAAAAAAAAAAA8L8"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPFsAAAAAAAA8mwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxbAAAAAAAAPFsAAAAAAAAAAAAAAAA8L8"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAM9sAAAAAAAA0GwAAAAAAAAAAAAA0GwAAAAAAADRbAAAAAAAAAAAAADRbAAAAAAAANJsAAAAAAAAAAAAANJsAAAAAAAA02wAAAAAAAAAAAAA02wAAAAAAADUbAAAAAAAAAAAAADUbAAAAAAAANVsAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPbAAAAAAAAM9sAAAAAAAAAAAAAAAAHEA"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANVsAAAAAAAA1mwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVbAAAAAAAANVsAAAAAAAAAAAAAAAA8L8"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "ame"
					},
					"AwAAAN9sAAAAAAAA4GwAAAAAAAAAAAAA4GwAAAAAAADhbAAAAAAAAAAAAADhbAAAAAAAAOJsAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADfbAAAAAAAAN9sAAAAAAAAAAAAAAAA8L8"
				],
				[
					184,
					1,
					"right_delete",
					null,
					"AQAAAAJtAAAAAAAAAm0AAAAAAAAQAAAALm1hcCgoW24scF0pID0+KQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACbQAAAAAAABJtAAAAAAAAAAAAAAAA8L8"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": "let"
					},
					"BAAAAM9sAAAAAAAA0GwAAAAAAAAAAAAA0GwAAAAAAADQbAAAAAAAAAYAAAByZXR1cm7QbAAAAAAAANFsAAAAAAAAAAAAANFsAAAAAAAA0mwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADPbAAAAAAAANVsAAAAAAAAAAAAAAAA8L8"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": " s="
					},
					"AwAAANJsAAAAAAAA02wAAAAAAAAAAAAA02wAAAAAAADUbAAAAAAAAAAAAADUbAAAAAAAANVsAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSbAAAAAAAANJsAAAAAAAAAAAAAAAA8L8"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAP1sAAAAAAAA/mwAAAAAAAAAAAAA/mwAAAAAAAD/bAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9bAAAAAAAAP1sAAAAAAAAAAAAAAAATEA"
				],
				[
					197,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAP5sAAAAAAAA/2wAAAAAAAAAAAAA/2wAAAAAAAAAbQAAAAAAAAAAAAAAbQAAAAAAAAFtAAAAAAAAAAAAAAFtAAAAAAAAAm0AAAAAAAAAAAAAAm0AAAAAAAADbQAAAAAAAAAAAAADbQAAAAAAAARtAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+bAAAAAAAAP5sAAAAAAAAAAAAAAAAAAA"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": " s;"
					},
					"AwAAAARtAAAAAAAABW0AAAAAAAAAAAAABW0AAAAAAAAGbQAAAAAAAAAAAAAGbQAAAAAAAAdtAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEbQAAAAAAAARtAAAAAAAAAAAAAAAA8L8"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAPxsAAAAAAAA/WwAAAAAAAAAAAAA/WwAAAAAAAD+bAAAAAAAAAAAAAD+bAAAAAAAAP9sAAAAAAAAAAAAAP9sAAAAAAAAAG0AAAAAAAAAAAAA/WwAAAAAAAD9bAAAAAAAAAEAAAAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8bAAAAAAAAPxsAAAAAAAA////////738"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": "const"
					},
					"BQAAAP9sAAAAAAAAAG0AAAAAAAAAAAAAAG0AAAAAAAABbQAAAAAAAAAAAAABbQAAAAAAAAJtAAAAAAAAAAAAAAJtAAAAAAAAA20AAAAAAAAAAAAAA20AAAAAAAAEbQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/bAAAAAAAAP9sAAAAAAAAAAAAAAAA8L8"
				],
				[
					204,
					1,
					"insert",
					{
						"characters": " rot=e.rot;"
					},
					"CwAAAARtAAAAAAAABW0AAAAAAAAAAAAABW0AAAAAAAAGbQAAAAAAAAAAAAAGbQAAAAAAAAdtAAAAAAAAAAAAAAdtAAAAAAAACG0AAAAAAAAAAAAACG0AAAAAAAAJbQAAAAAAAAAAAAAJbQAAAAAAAAptAAAAAAAAAAAAAAptAAAAAAAAC20AAAAAAAAAAAAAC20AAAAAAAAMbQAAAAAAAAAAAAAMbQAAAAAAAA1tAAAAAAAAAAAAAA1tAAAAAAAADm0AAAAAAAAAAAAADm0AAAAAAAAPbQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAEbQAAAAAAAARtAAAAAAAAAAAAAAAA8L8"
				],
				[
					220,
					1,
					"paste",
					null,
					"AQAAAAltAAAAAAAAFG0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJbQAAAAAAAAltAAAAAAAAAAAAAAAA8L8"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": ")("
					},
					"AgAAABRtAAAAAAAAFW0AAAAAAAAAAAAAFW0AAAAAAAAWbQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUbQAAAAAAABRtAAAAAAAAAAAAAAAA8L8"
				],
				[
					222,
					2,
					"left_delete",
					null,
					"AgAAABVtAAAAAAAAFW0AAAAAAAABAAAAKBRtAAAAAAAAFG0AAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAWbQAAAAAAABZtAAAAAAAAAAAAAAAA8L8"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAABRtAAAAAAAAFW0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUbQAAAAAAABRtAAAAAAAAAAAAAAAA8L8"
				],
				[
					225,
					1,
					"left_delete",
					null,
					"AQAAABptAAAAAAAAGm0AAAAAAAABAAAAOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbbQAAAAAAABttAAAAAAAA////////738"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAABptAAAAAAAAG20AAAAAAAAAAAAAG20AAAAAAAAcbQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAabQAAAAAAABptAAAAAAAAAAAAAAAA8L8"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": "[mirror,angle]"
					},
					"DgAAAAVtAAAAAAAABm0AAAAAAAAAAAAABm0AAAAAAAAHbQAAAAAAAAAAAAAHbQAAAAAAAAhtAAAAAAAAAAAAAAhtAAAAAAAACW0AAAAAAAAAAAAACW0AAAAAAAAKbQAAAAAAAAAAAAAKbQAAAAAAAAttAAAAAAAAAAAAAAttAAAAAAAADG0AAAAAAAAAAAAADG0AAAAAAAANbQAAAAAAAAAAAAANbQAAAAAAAA5tAAAAAAAAAAAAAA5tAAAAAAAAD20AAAAAAAAAAAAAD20AAAAAAAAQbQAAAAAAAAAAAAAQbQAAAAAAABFtAAAAAAAAAAAAABFtAAAAAAAAEm0AAAAAAAAAAAAAEm0AAAAAAAATbQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFbQAAAAAAAAVtAAAAAAAAAAAAAAAA8L8"
				],
				[
					230,
					3,
					"right_delete",
					null,
					"AwAAABNtAAAAAAAAE20AAAAAAAABAAAAchNtAAAAAAAAE20AAAAAAAABAAAAbxNtAAAAAAAAE20AAAAAAAABAAAAdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATbQAAAAAAABNtAAAAAAAAAAAAAAAA8L8"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAACdtAAAAAAAAKG0AAAAAAAAAAAAAKG0AAAAAAAApbQAAAAAAAAAAAAApbQAAAAAAACptAAAAAAAAAAAAACptAAAAAAAAK20AAAAAAAAAAAAAKG0AAAAAAAAobQAAAAAAAAEAAAAg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnbQAAAAAAACdtAAAAAAAA////////738"
				],
				[
					234,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAACptAAAAAAAAK20AAAAAAAAAAAAAK20AAAAAAAAsbQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqbQAAAAAAACptAAAAAAAAAAAAAAAA8L8"
				],
				[
					235,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACxtAAAAAAAALm0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsbQAAAAAAACxtAAAAAAAAAAAAAAAA8L8"
				],
				[
					236,
					1,
					"insert",
					{
						"characters": "angle"
					},
					"BQAAAC1tAAAAAAAALm0AAAAAAAAAAAAALm0AAAAAAAAvbQAAAAAAAAAAAAAvbQAAAAAAADBtAAAAAAAAAAAAADBtAAAAAAAAMW0AAAAAAAAAAAAAMW0AAAAAAAAybQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtbQAAAAAAAC1tAAAAAAAAAAAAAAAA8L8"
				],
				[
					237,
					1,
					"insert",
					{
						"characters": " !="
					},
					"AwAAADJtAAAAAAAAM20AAAAAAAAAAAAAM20AAAAAAAA0bQAAAAAAAAAAAAA0bQAAAAAAADVtAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAybQAAAAAAADJtAAAAAAAAAAAAAAAA8L8"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": " 0'"
					},
					"AwAAADVtAAAAAAAANm0AAAAAAAAAAAAANm0AAAAAAAA3bQAAAAAAAAAAAAA3bQAAAAAAADhtAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA1bQAAAAAAADVtAAAAAAAAAAAAAAAA8L8"
				],
				[
					239,
					1,
					"left_delete",
					null,
					"AQAAADdtAAAAAAAAN20AAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4bQAAAAAAADhtAAAAAAAAAAAAAAAA8L8"
				],
				[
					241,
					1,
					"insert",
					{
						"characters": "\ns+="
					},
					"BwAAADhtAAAAAAAAOW0AAAAAAAAAAAAAOW0AAAAAAAA6bQAAAAAAAAAAAAA5bQAAAAAAADltAAAAAAAAAQAAACA5bQAAAAAAADttAAAAAAAAAAAAADttAAAAAAAAPG0AAAAAAAAAAAAAPG0AAAAAAAA9bQAAAAAAAAAAAAA9bQAAAAAAAD5tAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4bQAAAAAAADhtAAAAAAAAAAAAAAAA8L8"
				],
				[
					242,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD5tAAAAAAAAP20AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+bQAAAAAAAD5tAAAAAAAAAAAAAAAA8L8"
				],
				[
					243,
					1,
					"insert_snippet",
					{
						"contents": "`$0`"
					},
					"AQAAAD9tAAAAAAAAQW0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/bQAAAAAAAD9tAAAAAAAAAAAAAAAA8L8"
				],
				[
					244,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEBtAAAAAAAAQW0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAbQAAAAAAAEBtAAAAAAAAAAAAAAAA8L8"
				],
				[
					245,
					1,
					"left_delete",
					null,
					"AQAAAEBtAAAAAAAAQG0AAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABBbQAAAAAAAEFtAAAAAAAAAAAAAAAA8L8"
				],
				[
					246,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEBtAAAAAAAAQW0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAbQAAAAAAAEBtAAAAAAAAAAAAAAAA8L8"
				],
				[
					249,
					1,
					"insert",
					{
						"characters": "{rot}=e"
					},
					"BwAAAAVtAAAAAAAABm0AAAAAAAAAAAAABm0AAAAAAAAHbQAAAAAAAAAAAAAHbQAAAAAAAAhtAAAAAAAAAAAAAAhtAAAAAAAACW0AAAAAAAAAAAAACW0AAAAAAAAKbQAAAAAAAAAAAAAKbQAAAAAAAAttAAAAAAAAAAAAAAttAAAAAAAADG0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFbQAAAAAAAAVtAAAAAAAAAAAAAAAA8L8"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAxtAAAAAAAADW0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMbQAAAAAAAAxtAAAAAAAAAAAAAAAA8L8"
				],
				[
					252,
					1,
					"cut",
					null,
					"AQAAAA1tAAAAAAAADW0AAAAAAAAiAAAAW21pcnJvcixhbmdsZV09R2V0Um90YXRpb24oZS5yb3QpOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANbQAAAAAAAC9tAAAAAAAA////////738"
				],
				[
					258,
					1,
					"cut",
					null,
					"AQAAAA9tAAAAAAAAD20AAAAAAAAQAAAAIGlmKGFuZ2xlICE9IDApCg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPbQAAAAAAAB9tAAAAAAAAAAAAAAAAAAA"
				],
				[
					261,
					1,
					"insert",
					{
						"characters": "ROTATE"
					},
					"BgAAABdtAAAAAAAAGG0AAAAAAAAAAAAAGG0AAAAAAAAZbQAAAAAAAAAAAAAZbQAAAAAAABptAAAAAAAAAAAAABptAAAAAAAAG20AAAAAAAAAAAAAG20AAAAAAAAcbQAAAAAAAAAAAAAcbQAAAAAAAB1tAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXbQAAAAAAABdtAAAAAAAAAAAAAAAA8L8"
				],
				[
					262,
					1,
					"insert",
					{
						"characters": " ${rot}"
					},
					"BwAAAB1tAAAAAAAAHm0AAAAAAAAAAAAAHm0AAAAAAAAfbQAAAAAAAAAAAAAfbQAAAAAAACBtAAAAAAAAAAAAACBtAAAAAAAAIW0AAAAAAAAAAAAAIW0AAAAAAAAibQAAAAAAAAAAAAAibQAAAAAAACNtAAAAAAAAAAAAACNtAAAAAAAAJG0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdbQAAAAAAAB1tAAAAAAAAAAAAAAAA8L8"
				],
				[
					263,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACRtAAAAAAAAJW0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkbQAAAAAAACRtAAAAAAAAAAAAAAAA8L8"
				],
				[
					264,
					1,
					"insert",
					{
						"characters": "'${name'"
					},
					"CAAAACVtAAAAAAAAJm0AAAAAAAAAAAAAJm0AAAAAAAAnbQAAAAAAAAAAAAAnbQAAAAAAAChtAAAAAAAAAAAAAChtAAAAAAAAKW0AAAAAAAAAAAAAKW0AAAAAAAAqbQAAAAAAAAAAAAAqbQAAAAAAACttAAAAAAAAAAAAACttAAAAAAAALG0AAAAAAAAAAAAALG0AAAAAAAAtbQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAlbQAAAAAAACVtAAAAAAAAAAAAAAAA8L8"
				],
				[
					265,
					1,
					"left_delete",
					null,
					"AQAAACxtAAAAAAAALG0AAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtbQAAAAAAAC1tAAAAAAAAAAAAAAAA8L8"
				],
				[
					266,
					1,
					"insert",
					{
						"characters": "}';"
					},
					"AwAAACxtAAAAAAAALW0AAAAAAAAAAAAALW0AAAAAAAAubQAAAAAAAAAAAAAubQAAAAAAAC9tAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAsbQAAAAAAACxtAAAAAAAAAAAAAAAA8L8"
				],
				[
					269,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAONsAAAAAAAA5WwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjbAAAAAAAAONsAAAAAAAAAAAAAAAA8L8"
				],
				[
					272,
					1,
					"right_delete",
					null,
					"AQAAAORsAAAAAAAA5GwAAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkbAAAAAAAAORsAAAAAAAAAAAAAAAA8L8"
				],
				[
					274,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAANdsAAAAAAAA2GwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXbAAAAAAAANdsAAAAAAAAAAAAAAAA8L8"
				],
				[
					275,
					1,
					"left_delete",
					null,
					"AQAAANdsAAAAAAAA12wAAAAAAAABAAAAJw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYbAAAAAAAANhsAAAAAAAAAAAAAAAA8L8"
				],
				[
					277,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAANxsAAAAAAAA3WwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcbAAAAAAAANxsAAAAAAAAAAAAAAAA8L8"
				],
				[
					279,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdbAAAAAAAAN1sAAAAAAAAAAAAAAAA8L8"
				],
				[
					282,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"AwAAACBtAAAAAAAAIW0AAAAAAAAAAAAAIW0AAAAAAAAibQAAAAAAAAAAAAAibQAAAAAAACNtAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAgbQAAAAAAACBtAAAAAAAAAAAAAACAUUA"
				],
				[
					283,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACNtAAAAAAAAJW0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjbQAAAAAAACNtAAAAAAAAAAAAAAAA8L8"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": "rot"
					},
					"AwAAACRtAAAAAAAAJW0AAAAAAAAAAAAAJW0AAAAAAAAmbQAAAAAAAAAAAAAmbQAAAAAAACdtAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkbQAAAAAAACRtAAAAAAAAAAAAAAAA8L8"
				],
				[
					285,
					1,
					"insert",
					{
						"characters": " !=="
					},
					"BAAAACdtAAAAAAAAKG0AAAAAAAAAAAAAKG0AAAAAAAApbQAAAAAAAAAAAAApbQAAAAAAACptAAAAAAAAAAAAACptAAAAAAAAK20AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnbQAAAAAAACdtAAAAAAAAAAAAAAAA8L8"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": " undefined"
					},
					"CgAAACttAAAAAAAALG0AAAAAAAAAAAAALG0AAAAAAAAtbQAAAAAAAAAAAAAtbQAAAAAAAC5tAAAAAAAAAAAAAC5tAAAAAAAAL20AAAAAAAAAAAAAL20AAAAAAAAwbQAAAAAAAAAAAAAwbQAAAAAAADFtAAAAAAAAAAAAADFtAAAAAAAAMm0AAAAAAAAAAAAAMm0AAAAAAAAzbQAAAAAAAAAAAAAzbQAAAAAAADRtAAAAAAAAAAAAADRtAAAAAAAANW0AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArbQAAAAAAACttAAAAAAAAAAAAAAAA8L8"
				],
				[
					294,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANBsAAAAAAAA0WwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQbAAAAAAAANBsAAAAAAAAAAAAAAAA8L8"
				],
				[
					295,
					1,
					"left_delete",
					null,
					"AQAAANBsAAAAAAAA0GwAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRbAAAAAAAANFsAAAAAAAAAAAAAAAA8L8"
				],
				[
					296,
					1,
					"insert",
					{
						"characters": ".div"
					},
					"BAAAANBsAAAAAAAA0WwAAAAAAAAAAAAA0WwAAAAAAADSbAAAAAAAAAAAAADSbAAAAAAAANNsAAAAAAAAAAAAANNsAAAAAAAA1GwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQbAAAAAAAANBsAAAAAAAAAAAAAAAA8L8"
				],
				[
					297,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANRsAAAAAAAA1mwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUbAAAAAAAANRsAAAAAAAAAAAAAAAA8L8"
				],
				[
					298,
					1,
					"insert",
					{
						"characters": "2.54"
					},
					"BAAAANVsAAAAAAAA1mwAAAAAAAAAAAAA1mwAAAAAAADXbAAAAAAAAAAAAADXbAAAAAAAANhsAAAAAAAAAAAAANhsAAAAAAAA2WwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADVbAAAAAAAANVsAAAAAAAAAAAAAAAA8L8"
				],
				[
					301,
					1,
					"insert",
					{
						"characters": ".,r"
					},
					"AwAAANpsAAAAAAAA22wAAAAAAAAAAAAA22wAAAAAAADcbAAAAAAAAAAAAADcbAAAAAAAAN1sAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADabAAAAAAAANpsAAAAAAAAAAAAAAAA8L8"
				],
				[
					302,
					2,
					"left_delete",
					null,
					"AgAAANxsAAAAAAAA3GwAAAAAAAABAAAActtsAAAAAAAA22wAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdbAAAAAAAAN1sAAAAAAAAAAAAAAAA8L8"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": "round"
					},
					"BQAAANtsAAAAAAAA3GwAAAAAAAAAAAAA3GwAAAAAAADdbAAAAAAAAAAAAADdbAAAAAAAAN5sAAAAAAAAAAAAAN5sAAAAAAAA32wAAAAAAAAAAAAA32wAAAAAAADgbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbbAAAAAAAANtsAAAAAAAAAAAAAAAA8L8"
				],
				[
					304,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOBsAAAAAAAA4mwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADgbAAAAAAAAOBsAAAAAAAAAAAAAAAA8L8"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": "0.1"
					},
					"AwAAAOFsAAAAAAAA4mwAAAAAAAAAAAAA4mwAAAAAAADjbAAAAAAAAAAAAADjbAAAAAAAAORsAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhbAAAAAAAAOFsAAAAAAAAAAAAAAAA8L8"
				],
				[
					312,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAF5tAAAAAAAAX20AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABebQAAAAAAAF5tAAAAAAAAAAAAAACAX0A"
				],
				[
					318,
					1,
					"left_delete",
					null,
					"AQAAANZsAAAAAAAA1mwAAAAAAAABAAAALg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXbAAAAAAAANdsAAAAAAAAAAAAAADgbEA"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAANdsAAAAAAAA2GwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXbAAAAAAAANdsAAAAAAAAAAAAAAAA8L8"
				],
				[
					324,
					1,
					"left_delete",
					null,
					"AQAAAONsAAAAAAAA42wAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkbAAAAAAAAORsAAAAAAAAAAAAAAAA8L8"
				],
				[
					325,
					1,
					"insert",
					{
						"characters": "05"
					},
					"AgAAAONsAAAAAAAA5GwAAAAAAAAAAAAA5GwAAAAAAADlbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADjbAAAAAAAAONsAAAAAAAAAAAAAAAA8L8"
				],
				[
					328,
					1,
					"left_delete",
					null,
					"AQAAAORsAAAAAAAA5GwAAAAAAAABAAAANQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlbAAAAAAAAOVsAAAAAAAAAAAAAAAA8L8"
				],
				[
					329,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAORsAAAAAAAA5WwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkbAAAAAAAAORsAAAAAAAAAAAAAAAA8L8"
				],
				[
					332,
					1,
					"left_delete",
					null,
					"AQAAAORsAAAAAAAA5GwAAAAAAAABAAAAMQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADlbAAAAAAAAOVsAAAAAAAAAAAAAAAA8L8"
				],
				[
					333,
					1,
					"insert",
					{
						"characters": "05"
					},
					"AgAAAORsAAAAAAAA5WwAAAAAAAAAAAAA5WwAAAAAAADmbAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkbAAAAAAAAORsAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "lib/eagle/boardRenderer.js",
			"settings":
			{
				"buffer_size": 10708,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"insert",
					{
						"characters": "getLayer()"
					},
					"CgAAAP4RAAAAAAAA/xEAAAAAAAAAAAAA/xEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAESAAAAAAAAAAAAAAESAAAAAAAAAhIAAAAAAAAAAAAAAhIAAAAAAAADEgAAAAAAAAAAAAADEgAAAAAAAAQSAAAAAAAAAAAAAAQSAAAAAAAABRIAAAAAAAAAAAAABRIAAAAAAAAGEgAAAAAAAAAAAAAGEgAAAAAAAAcSAAAAAAAAAAAAAAcSAAAAAAAACBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/hEAAAAAAAD+EQAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"left_delete",
					null,
					"AQAAAAcSAAAAAAAABxIAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAACBIAAAAAAAAIEgAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAAcSAAAAAAAACBIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABxIAAAAAAAAHEgAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					5,
					"right_delete",
					null,
					"BQAAAAgSAAAAAAAACBIAAAAAAAABAAAAbAgSAAAAAAAACBIAAAAAAAABAAAAYQgSAAAAAAAACBIAAAAAAAABAAAAeQgSAAAAAAAACBIAAAAAAAABAAAAZQgSAAAAAAAACBIAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAACBIAAAAAAAAIEgAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAAgSAAAAAAAACRIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACBIAAAAAAAAIEgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/eagle/svgRenderer.js",
			"settings":
			{
				"buffer_size": 11200,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "eagle2svg.js",
			"settings":
			{
				"buffer_size": 2302,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 6335,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					10,
					1,
					"left_delete",
					null,
					"AQAAAIgGAAAAAAAAiAYAAAAAAAAuAAAAICAgICJsaWIvcHJlYWN0Lm1qcyI6ICJsaWIvcHJlYWN0Lm1vZHVsZS5qcyIsCg",
					"AQAAAAAAAAABAAAAiAYAAAAAAAC2BgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/geom/transformation.js",
			"settings":
			{
				"buffer_size": 21798,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					25,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAK0wAAAAAAAArjAAAAAAAAAAAAAArjAAAAAAAACvMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArTAAAAAAAACtMAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK8wAAAAAAAAsDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArzAAAAAAAACvMAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert_snippet",
					{
						"contents": "`$0`"
					},
					"AQAAALAwAAAAAAAAsjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsDAAAAAAAACwMAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " ${class"
					},
					"CAAAALEwAAAAAAAAsjAAAAAAAAAAAAAAsjAAAAAAAACzMAAAAAAAAAAAAACzMAAAAAAAALQwAAAAAAAAAAAAALQwAAAAAAAAtTAAAAAAAAAAAAAAtTAAAAAAAAC2MAAAAAAAAAAAAAC2MAAAAAAAALcwAAAAAAAAAAAAALcwAAAAAAAAuDAAAAAAAAAAAAAAuDAAAAAAAAC5MAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsTAAAAAAAACxMAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "Name(arg"
					},
					"CAAAALkwAAAAAAAAujAAAAAAAAAAAAAAujAAAAAAAAC7MAAAAAAAAAAAAAC7MAAAAAAAALwwAAAAAAAAAAAAALwwAAAAAAAAvTAAAAAAAAAAAAAAvTAAAAAAAAC+MAAAAAAAAAAAAAC+MAAAAAAAAL8wAAAAAAAAAAAAAL8wAAAAAAAAwDAAAAAAAAAAAAAAwDAAAAAAAADBMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuTAAAAAAAAC5MAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "I)"
					},
					"AgAAAMEwAAAAAAAAwjAAAAAAAAAAAAAAwjAAAAAAAADDMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwTAAAAAAAADBMAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					2,
					"left_delete",
					null,
					"AgAAAMIwAAAAAAAAwjAAAAAAAAABAAAAKcEwAAAAAAAAwTAAAAAAAAABAAAASQ",
					"AQAAAAAAAAABAAAAwzAAAAAAAADDMAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": ")}"
					},
					"AgAAAMEwAAAAAAAAwjAAAAAAAAAAAAAAwjAAAAAAAADDMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwTAAAAAAAADBMAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAOlUAAAAAAAA6lQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwzAAAAAAAADDMAAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"cut",
					null,
					"AQAAAPIvAAAAAAAA8i8AAAAAAAAdAAAAYXJnIGluc3RhbmNlb2YgVHJhbnNmb3JtYXRpb24",
					"AQAAAAAAAAABAAAA8i8AAAAAAAAPMAAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"paste",
					null,
					"AQAAAPIvAAAAAAAADzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8i8AAAAAAADyLwAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": " ||"
					},
					"AwAAAA8wAAAAAAAAEDAAAAAAAAAAAAAAEDAAAAAAAAARMAAAAAAAAAAAAAARMAAAAAAAABIwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADzAAAAAAAAAPMAAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABIwAAAAAAAAEzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEjAAAAAAAAASMAAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"paste",
					null,
					"AQAAABMwAAAAAAAAMDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEzAAAAAAAAATMAAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					14,
					"left_delete",
					null,
					"DgAAAC8wAAAAAAAALzAAAAAAAAABAAAAbi4wAAAAAAAALjAAAAAAAAABAAAAby0wAAAAAAAALTAAAAAAAAABAAAAaSwwAAAAAAAALDAAAAAAAAABAAAAdCswAAAAAAAAKzAAAAAAAAABAAAAYSowAAAAAAAAKjAAAAAAAAABAAAAbSkwAAAAAAAAKTAAAAAAAAABAAAAcigwAAAAAAAAKDAAAAAAAAABAAAAbycwAAAAAAAAJzAAAAAAAAABAAAAZiYwAAAAAAAAJjAAAAAAAAABAAAAcyUwAAAAAAAAJTAAAAAAAAABAAAAbiQwAAAAAAAAJDAAAAAAAAABAAAAYSMwAAAAAAAAIzAAAAAAAAABAAAAciIwAAAAAAAAIjAAAAAAAAABAAAAVA",
					"AQAAAAAAAAABAAAAMDAAAAAAAAAwMAAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "Rotation"
					},
					"CAAAACIwAAAAAAAAIzAAAAAAAAAAAAAAIzAAAAAAAAAkMAAAAAAAAAAAAAAkMAAAAAAAACUwAAAAAAAAAAAAACUwAAAAAAAAJjAAAAAAAAAAAAAAJjAAAAAAAAAnMAAAAAAAAAAAAAAnMAAAAAAAACgwAAAAAAAAAAAAACgwAAAAAAAAKTAAAAAAAAAAAAAAKTAAAAAAAAAqMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIjAAAAAAAAAiMAAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN8wAAAAAAAA4DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3zAAAAAAAADfMAAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " ${arg"
					},
					"BgAAAN4wAAAAAAAA3zAAAAAAAAAAAAAA3zAAAAAAAADgMAAAAAAAAAAAAADgMAAAAAAAAOEwAAAAAAAAAAAAAOEwAAAAAAAA4jAAAAAAAAAAAAAA4jAAAAAAAADjMAAAAAAAAAAAAADjMAAAAAAAAOQwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3jAAAAAAAADeMAAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": " instanceof"
					},
					"CwAAAOQwAAAAAAAA5TAAAAAAAAAAAAAA5TAAAAAAAADmMAAAAAAAAAAAAADmMAAAAAAAAOcwAAAAAAAAAAAAAOcwAAAAAAAA6DAAAAAAAAAAAAAA6DAAAAAAAADpMAAAAAAAAAAAAADpMAAAAAAAAOowAAAAAAAAAAAAAOowAAAAAAAA6zAAAAAAAAAAAAAA6zAAAAAAAADsMAAAAAAAAAAAAADsMAAAAAAAAO0wAAAAAAAAAAAAAO0wAAAAAAAA7jAAAAAAAAAAAAAA7jAAAAAAAADvMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5DAAAAAAAADkMAAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " Rotation}"
					},
					"CgAAAO8wAAAAAAAA8DAAAAAAAAAAAAAA8DAAAAAAAADxMAAAAAAAAAAAAADxMAAAAAAAAPIwAAAAAAAAAAAAAPIwAAAAAAAA8zAAAAAAAAAAAAAA8zAAAAAAAAD0MAAAAAAAAAAAAAD0MAAAAAAAAPUwAAAAAAAAAAAAAPUwAAAAAAAA9jAAAAAAAAAAAAAA9jAAAAAAAAD3MAAAAAAAAAAAAAD3MAAAAAAAAPgwAAAAAAAAAAAAAPgwAAAAAAAA+TAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7zAAAAAAAADvMAAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": "clöa"
					},
					"BAAAABMwAAAAAAAAFDAAAAAAAAAAAAAAFDAAAAAAAAAVMAAAAAAAAAAAAAAVMAAAAAAAABYwAAAAAAAAAAAAABYwAAAAAAAAFzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEzAAAAAAAAATMAAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					2,
					"left_delete",
					null,
					"AgAAABYwAAAAAAAAFjAAAAAAAAABAAAAYRUwAAAAAAAAFTAAAAAAAAACAAAAw7Y",
					"AQAAAAAAAAABAAAAFzAAAAAAAAAXMAAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "assName("
					},
					"CAAAABUwAAAAAAAAFjAAAAAAAAAAAAAAFjAAAAAAAAAXMAAAAAAAAAAAAAAXMAAAAAAAABgwAAAAAAAAAAAAABgwAAAAAAAAGTAAAAAAAAAAAAAAGTAAAAAAAAAaMAAAAAAAAAAAAAAaMAAAAAAAABswAAAAAAAAAAAAABswAAAAAAAAHDAAAAAAAAAAAAAAHDAAAAAAAAAdMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFTAAAAAAAAAVMAAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAB0wAAAAAAAAHjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHTAAAAAAAAAdMAAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					2,
					"left_delete",
					null,
					"AgAAAB4wAAAAAAAAHjAAAAAAAAABAAAAYR0wAAAAAAAAHTAAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAHzAAAAAAAAAfMAAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAB0wAAAAAAAAHjAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHTAAAAAAAAAdMAAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAACAwAAAAAAAAITAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIDAAAAAAAAAgMAAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAACEwAAAAAAAAIjAAAAAAAAAAAAAAIjAAAAAAAAAjMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAITAAAAAAAAAhMAAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					3,
					"left_delete",
					null,
					"AwAAACIwAAAAAAAAIjAAAAAAAAABAAAAPyEwAAAAAAAAITAAAAAAAAABAAAAICAwAAAAAAAAIDAAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAIzAAAAAAAAAjMAAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAACAwAAAAAAAAITAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIDAAAAAAAAAgMAAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAACEwAAAAAAAAIjAAAAAAAAAAAAAAIjAAAAAAAAAjMAAAAAAAAAAAAAAjMAAAAAAAACQwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAITAAAAAAAAAhMAAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					11,
					"right_delete",
					null,
					"CwAAACQwAAAAAAAAJDAAAAAAAAABAAAAICQwAAAAAAAAJDAAAAAAAAABAAAAaSQwAAAAAAAAJDAAAAAAAAABAAAAbiQwAAAAAAAAJDAAAAAAAAABAAAAcyQwAAAAAAAAJDAAAAAAAAABAAAAdCQwAAAAAAAAJDAAAAAAAAABAAAAYSQwAAAAAAAAJDAAAAAAAAABAAAAbiQwAAAAAAAAJDAAAAAAAAABAAAAYyQwAAAAAAAAJDAAAAAAAAABAAAAZSQwAAAAAAAAJDAAAAAAAAABAAAAbyQwAAAAAAAAJDAAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAJDAAAAAAAAAkMAAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACQwAAAAAAAAJTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJDAAAAAAAAAkMAAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAACUwAAAAAAAAJzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJTAAAAAAAAAlMAAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					2,
					"right_delete",
					null,
					"AgAAACYwAAAAAAAAJjAAAAAAAAABAAAAJyYwAAAAAAAAJjAAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAJjAAAAAAAAAmMAAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAC4wAAAAAAAALzAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALjAAAAAAAAAuMAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/eagle/components/rectangle.js",
			"settings":
			{
				"buffer_size": 1484,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					14,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAEgDAAAAAAAASQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAMAAAAAAABIAwAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAAEgDAAAAAAAASAMAAAAAAAABAAAAPw",
					"AQAAAAAAAAABAAAASQMAAAAAAABJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "rectangöle"
					},
					"CgAAAD8DAAAAAAAAQAMAAAAAAAAAAAAAQAMAAAAAAABBAwAAAAAAAAAAAABBAwAAAAAAAEIDAAAAAAAAAAAAAEIDAAAAAAAAQwMAAAAAAAAAAAAAQwMAAAAAAABEAwAAAAAAAAAAAABEAwAAAAAAAEUDAAAAAAAAAAAAAEUDAAAAAAAARgMAAAAAAAAAAAAARgMAAAAAAABHAwAAAAAAAAAAAABHAwAAAAAAAEgDAAAAAAAAAAAAAEgDAAAAAAAASQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwMAAAAAAAA/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					2,
					"left_delete",
					null,
					"AgAAAEgDAAAAAAAASAMAAAAAAAABAAAAZUcDAAAAAAAARwMAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAASQMAAAAAAABJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "le"
					},
					"AgAAAEcDAAAAAAAASAMAAAAAAAAAAAAASAMAAAAAAABJAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwMAAAAAAABHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEkDAAAAAAAASgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQMAAAAAAABJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					4,
					"left_delete",
					null,
					"BAAAAEkDAAAAAAAASQMAAAAAAAABAAAAIEgDAAAAAAAASAMAAAAAAAABAAAAZUcDAAAAAAAARwMAAAAAAAABAAAAbEYDAAAAAAAARgMAAAAAAAACAAAAw7Y",
					"AQAAAAAAAAABAAAASgMAAAAAAABKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAEYDAAAAAAAARwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARgMAAAAAAABGAwAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAEcDAAAAAAAASAMAAAAAAAAAAAAASAMAAAAAAABJAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwMAAAAAAABHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					2,
					"left_delete",
					null,
					"AgAAAEgDAAAAAAAASAMAAAAAAAABAAAAZUcDAAAAAAAARwMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAASQMAAAAAAABJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAEcDAAAAAAAASAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARwMAAAAAAABHAwAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " &/&"
					},
					"BAAAAEgDAAAAAAAASQMAAAAAAAAAAAAASQMAAAAAAABKAwAAAAAAAAAAAABKAwAAAAAAAEsDAAAAAAAAAAAAAEsDAAAAAAAATAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAMAAAAAAABIAwAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"left_delete",
					null,
					"AQAAAEsDAAAAAAAASwMAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAATAMAAAAAAABMAwAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEsDAAAAAAAATAMAAAAAAAAAAAAATAMAAAAAAABOAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwMAAAAAAABLAwAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					3,
					"left_delete",
					null,
					"AwAAAEwDAAAAAAAATAMAAAAAAAACAAAAICBLAwAAAAAAAEsDAAAAAAAAAQAAAApKAwAAAAAAAEoDAAAAAAAAAQAAAC8",
					"AQAAAAAAAAABAAAATgMAAAAAAABOAwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AQAAAEoDAAAAAAAASwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgMAAAAAAABKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " rectangle.getCol"
					},
					"EQAAAEsDAAAAAAAATAMAAAAAAAAAAAAATAMAAAAAAABNAwAAAAAAAAAAAABNAwAAAAAAAE4DAAAAAAAAAAAAAE4DAAAAAAAATwMAAAAAAAAAAAAATwMAAAAAAABQAwAAAAAAAAAAAABQAwAAAAAAAFEDAAAAAAAAAAAAAFEDAAAAAAAAUgMAAAAAAAAAAAAAUgMAAAAAAABTAwAAAAAAAAAAAABTAwAAAAAAAFQDAAAAAAAAAAAAAFQDAAAAAAAAVQMAAAAAAAAAAAAAVQMAAAAAAABWAwAAAAAAAAAAAABWAwAAAAAAAFcDAAAAAAAAAAAAAFcDAAAAAAAAWAMAAAAAAAAAAAAAWAMAAAAAAABZAwAAAAAAAAAAAABZAwAAAAAAAFoDAAAAAAAAAAAAAFoDAAAAAAAAWwMAAAAAAAAAAAAAWwMAAAAAAABcAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASwMAAAAAAABLAwAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "or"
					},
					"AgAAAFwDAAAAAAAAXQMAAAAAAAAAAAAAXQMAAAAAAABeAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXAMAAAAAAABcAwAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAF4DAAAAAAAAXwMAAAAAAAAAAAAAXwMAAAAAAABgAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgMAAAAAAABeAwAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGADAAAAAAAAYQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAMAAAAAAABgAwAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAAHUDAAAAAAAAdgMAAAAAAAAAAAAAdgMAAAAAAAB3AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQMAAAAAAAB1AwAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " undefined"
					},
					"CgAAAHcDAAAAAAAAeAMAAAAAAAAAAAAAeAMAAAAAAAB5AwAAAAAAAAAAAAB5AwAAAAAAAHoDAAAAAAAAAAAAAHoDAAAAAAAAewMAAAAAAAAAAAAAewMAAAAAAAB8AwAAAAAAAAAAAAB8AwAAAAAAAH0DAAAAAAAAAAAAAH0DAAAAAAAAfgMAAAAAAAAAAAAAfgMAAAAAAAB/AwAAAAAAAAAAAAB/AwAAAAAAAIADAAAAAAAAAAAAAIADAAAAAAAAgQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwMAAAAAAAB3AwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/eagle/components/textElement.js",
			"settings":
			{
				"buffer_size": 1864,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"insert",
					{
						"characters": "data"
					},
					"BAAAAOwDAAAAAAAA7QMAAAAAAAAAAAAA7QMAAAAAAADuAwAAAAAAAAAAAADuAwAAAAAAAO8DAAAAAAAAAAAAAO8DAAAAAAAA8AMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AMAAAAAAADsAwAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " /&/"
					},
					"BAAAAPADAAAAAAAA8QMAAAAAAAAAAAAA8QMAAAAAAADyAwAAAAAAAAAAAADyAwAAAAAAAPMDAAAAAAAAAAAAAPMDAAAAAAAA9AMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AMAAAAAAADwAwAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					3,
					"left_delete",
					null,
					"AwAAAPMDAAAAAAAA8wMAAAAAAAABAAAAL/IDAAAAAAAA8gMAAAAAAAABAAAAJvEDAAAAAAAA8QMAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAA9AMAAAAAAAD0AwAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAPEDAAAAAAAA8gMAAAAAAAAAAAAA8gMAAAAAAADzAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QMAAAAAAADxAwAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					2,
					"left_delete",
					null,
					"AgAAAPIDAAAAAAAA8gMAAAAAAAABAAAAL/EDAAAAAAAA8QMAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAA8wMAAAAAAADzAwAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "&&"
					},
					"AgAAAPEDAAAAAAAA8gMAAAAAAAAAAAAA8gMAAAAAAADzAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QMAAAAAAADxAwAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " data.getCol"
					},
					"DAAAAPMDAAAAAAAA9AMAAAAAAAAAAAAA9AMAAAAAAAD1AwAAAAAAAAAAAAD1AwAAAAAAAPYDAAAAAAAAAAAAAPYDAAAAAAAA9wMAAAAAAAAAAAAA9wMAAAAAAAD4AwAAAAAAAAAAAAD4AwAAAAAAAPkDAAAAAAAAAAAAAPkDAAAAAAAA+gMAAAAAAAAAAAAA+gMAAAAAAAD7AwAAAAAAAAAAAAD7AwAAAAAAAPwDAAAAAAAAAAAAAPwDAAAAAAAA/QMAAAAAAAAAAAAA/QMAAAAAAAD+AwAAAAAAAAAAAAD+AwAAAAAAAP8DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8wMAAAAAAADzAwAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "or"
					},
					"AgAAAP8DAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAABBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wMAAAAAAAD/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAAEEAAAAAAAAAgQAAAAAAAAAAAAAAgQAAAAAAAADBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQQAAAAAAAABBAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAMEAAAAAAAABAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwQAAAAAAAADBAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAABMEAAAAAAAAFAQAAAAAAAAAAAAAFAQAAAAAAAAVBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEwQAAAAAAAATBAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " undefinefd"
					},
					"CwAAABUEAAAAAAAAFgQAAAAAAAAAAAAAFgQAAAAAAAAXBAAAAAAAAAAAAAAXBAAAAAAAABgEAAAAAAAAAAAAABgEAAAAAAAAGQQAAAAAAAAAAAAAGQQAAAAAAAAaBAAAAAAAAAAAAAAaBAAAAAAAABsEAAAAAAAAAAAAABsEAAAAAAAAHAQAAAAAAAAAAAAAHAQAAAAAAAAdBAAAAAAAAAAAAAAdBAAAAAAAAB4EAAAAAAAAAAAAAB4EAAAAAAAAHwQAAAAAAAAAAAAAHwQAAAAAAAAgBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQQAAAAAAAAVBAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					2,
					"left_delete",
					null,
					"AgAAAB8EAAAAAAAAHwQAAAAAAAABAAAAZB4EAAAAAAAAHgQAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAIAQAAAAAAAAgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "sd"
					},
					"AgAAAB4EAAAAAAAAHwQAAAAAAAAAAAAAHwQAAAAAAAAgBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgQAAAAAAAAeBAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"AQAAAB8EAAAAAAAAHwQAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAIAQAAAAAAAAgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAB8EAAAAAAAAIAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwQAAAAAAAAfBAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					2,
					"left_delete",
					null,
					"AgAAAB8EAAAAAAAAHwQAAAAAAAABAAAAZB4EAAAAAAAAHgQAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAIAQAAAAAAAAgBAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAB4EAAAAAAAAHwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgQAAAAAAAAeBAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/eagle/components/circle.js",
			"settings":
			{
				"buffer_size": 1339,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": "circle"
					},
					"BgAAAE8DAAAAAAAAUAMAAAAAAAAAAAAAUAMAAAAAAABRAwAAAAAAAAAAAABRAwAAAAAAAFIDAAAAAAAAAAAAAFIDAAAAAAAAUwMAAAAAAAAAAAAAUwMAAAAAAABUAwAAAAAAAAAAAABUAwAAAAAAAFUDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwMAAAAAAABPAwAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAFUDAAAAAAAAVgMAAAAAAAAAAAAAVgMAAAAAAABXAwAAAAAAAAAAAABXAwAAAAAAAFgDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVQMAAAAAAABVAwAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " circle.getColor"
					},
					"EAAAAFgDAAAAAAAAWQMAAAAAAAAAAAAAWQMAAAAAAABaAwAAAAAAAAAAAABaAwAAAAAAAFsDAAAAAAAAAAAAAFsDAAAAAAAAXAMAAAAAAAAAAAAAXAMAAAAAAABdAwAAAAAAAAAAAABdAwAAAAAAAF4DAAAAAAAAAAAAAF4DAAAAAAAAXwMAAAAAAAAAAAAAXwMAAAAAAABgAwAAAAAAAAAAAABgAwAAAAAAAGEDAAAAAAAAAAAAAGEDAAAAAAAAYgMAAAAAAAAAAAAAYgMAAAAAAABjAwAAAAAAAAAAAABjAwAAAAAAAGQDAAAAAAAAAAAAAGQDAAAAAAAAZQMAAAAAAAAAAAAAZQMAAAAAAABmAwAAAAAAAAAAAABmAwAAAAAAAGcDAAAAAAAAAAAAAGcDAAAAAAAAaAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWAMAAAAAAABYAwAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " ?"
					},
					"AgAAAGgDAAAAAAAAaQMAAAAAAAAAAAAAaQMAAAAAAABqAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAMAAAAAAABoAwAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGoDAAAAAAAAawMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAagMAAAAAAABqAwAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AwAAAHwDAAAAAAAAfQMAAAAAAAAAAAAAfQMAAAAAAAB9AwAAAAAAAEIAAAA7IC8vKG9wdHMgJiYgb3B0cy5jb2xvcikgfHwgKGxheWVyICYmIHRoaXMuZ2V0Q29sb3IobGF5ZXIuY29sb3IpKTt9AwAAAAAAAH4DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAMAAAAAAAC+AwAAAAAAAP///////+9/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " undefined;"
					},
					"CwAAAH4DAAAAAAAAfwMAAAAAAAAAAAAAfwMAAAAAAACAAwAAAAAAAAAAAACAAwAAAAAAAIEDAAAAAAAAAAAAAIEDAAAAAAAAggMAAAAAAAAAAAAAggMAAAAAAACDAwAAAAAAAAAAAACDAwAAAAAAAIQDAAAAAAAAAAAAAIQDAAAAAAAAhQMAAAAAAAAAAAAAhQMAAAAAAACGAwAAAAAAAAAAAACGAwAAAAAAAIcDAAAAAAAAAAAAAIcDAAAAAAAAiAMAAAAAAAAAAAAAiAMAAAAAAACJAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgMAAAAAAAB+AwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/eagle/element.js",
			"settings":
			{
				"buffer_size": 35907,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					11,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAEhTAAAAAAAASVMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIUwAAAAAAAEhTAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"left_delete",
					null,
					"AQAAAEhTAAAAAAAASFMAAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJUwAAAAAAAElTAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAFNTAAAAAAAAVFMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTUwAAAAAAAFNTAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAI1TAAAAAAAAjlMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNUwAAAAAAAI1TAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAEhTAAAAAAAASVMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIUwAAAAAAAEhTAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"left_delete",
					null,
					"AQAAAEhTAAAAAAAASFMAAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJUwAAAAAAAElTAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BQAAADhTAAAAAAAAOVMAAAAAAAAAAAAAOVMAAAAAAAA7UwAAAAAAAAAAAAA7UwAAAAAAAD1TAAAAAAAAAAAAAD1TAAAAAAAAPlMAAAAAAAAAAAAAPlMAAAAAAAA/UwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4UwAAAAAAADhTAAAAAAAAAAAAAABAWkA"
				],
				[
					27,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAD9TAAAAAAAAQVMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/UwAAAAAAAD9TAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "this.raw"
					},
					"CAAAAEBTAAAAAAAAQVMAAAAAAAAAAAAAQVMAAAAAAABCUwAAAAAAAAAAAABCUwAAAAAAAENTAAAAAAAAAAAAAENTAAAAAAAARFMAAAAAAAAAAAAARFMAAAAAAABFUwAAAAAAAAAAAABFUwAAAAAAAEZTAAAAAAAAAAAAAEZTAAAAAAAAR1MAAAAAAAAAAAAAR1MAAAAAAABIUwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAUwAAAAAAAEBTAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAElTAAAAAAAASlMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJUwAAAAAAAElTAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEpTAAAAAAAATFMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKUwAAAAAAAEpTAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"right_delete",
					null,
					"AQAAAEtTAAAAAAAAS1MAAAAAAAABAAAAfQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLUwAAAAAAAEtTAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAEpUAAAAAAAAS1QAAAAAAAAAAAAAS1QAAAAAAABPVAAAAAAAAAAAAABPVAAAAAAAAFBUAAAAAAAAAAAAAEtUAAAAAAAAS1QAAAAAAAAEAAAAICAgIEtUAAAAAAAATVQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKVAAAAAAAAEpUAAAAAAAA////////738"
				],
				[
					54,
					1,
					"paste",
					null,
					"AQAAAAVUAAAAAAAAE1QAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAFVAAAAAAAAAVUAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "layers["
					},
					"BwAAABNUAAAAAAAAFFQAAAAAAAAAAAAAFFQAAAAAAAAVVAAAAAAAAAAAAAAVVAAAAAAAABZUAAAAAAAAAAAAABZUAAAAAAAAF1QAAAAAAAAAAAAAF1QAAAAAAAAYVAAAAAAAAAAAAAAYVAAAAAAAABlUAAAAAAAAAAAAABlUAAAAAAAAGlQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATVAAAAAAAABNUAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": "]"
					},
					"AQAAACFUAAAAAAAAIlQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAhVAAAAAAAACFUAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					1,
					"paste",
					null,
					"AQAAANNTAAAAAAAA8VMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTUwAAAAAAANNTAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"cut",
					null,
					"AQAAAPFTAAAAAAAA8VMAAAAAAAAHAAAAJ1BhZHMnOw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxUwAAAAAAAPhTAAAAAAAA////////738"
				],
				[
					73,
					5,
					"left_delete",
					null,
					"BQAAAO1TAAAAAAAA7VMAAAAAAAABAAAAc+xTAAAAAAAA7FMAAAAAAAABAAAAZetTAAAAAAAA61MAAAAAAAABAAAAbOpTAAAAAAAA6lMAAAAAAAABAAAAb+lTAAAAAAAA6VMAAAAAAAABAAAASA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuUwAAAAAAAO5TAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "Pads"
					},
					"BAAAAOlTAAAAAAAA6lMAAAAAAAAAAAAA6lMAAAAAAADrUwAAAAAAAAAAAADrUwAAAAAAAOxTAAAAAAAAAAAAAOxTAAAAAAAA7VMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpUwAAAAAAAOlTAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": "Package Control Messages\n========================\n\nJsPrettier\n----------\n\n  ┌──────────────────────────────────────────────────────────────────────────────┐\n  │                     _     ____           _   _   _                           │\n  │                    | |___|  _ \\ _ __ ___| |_| |_(_) ___ _ __                 │\n  │                 _  | / __| |_) | '__/ _ \\ __| __| |/ _ \\ '__|                │\n  │                | |_| \\__ \\  __/| | |  __/ |_| |_| |  __/ |                   │\n  │                 \\___/|___/_|   |_|  \\___|\\__|\\__|_|\\___|_|                   │\n  │                                                                              │\n  └──────────────────────────────────────────────────────────────────────────────┘\n\n  ## 1.64.0\n\n  Release Date: 2023-11-04\n\n  In Prettier v3, --loglevel CLI option was changed to --log-level.",
			"settings":
			{
				"buffer_size": 847,
				"line_ending": "Unix",
				"name": "Package Control Messages",
				"read_only": true,
				"scratch": true
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "Package Control Messages\n========================\n\nJsPrettier\n----------\n\n  ┌──────────────────────────────────────────────────────────────────────────────┐\n  │                     _     ____           _   _   _                           │\n  │                    | |___|  _ \\ _ __ ___| |_| |_(_) ___ _ __                 │\n  │                 _  | / __| |_) | '__/ _ \\ __| __| |/ _ \\ '__|                │\n  │                | |_| \\__ \\  __/| | |  __/ |_| |_| |  __/ |                   │\n  │                 \\___/|___/_|   |_|  \\___|\\__|\\__|_|\\___|_|                   │\n  │                                                                              │\n  └──────────────────────────────────────────────────────────────────────────────┘\n\n  ## 1.64.0\n\n  Release Date: 2023-11-04\n\n  In Prettier v3, --loglevel CLI option was changed to --log-level."
					},
					"IgAAAAAAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAAD0AAAAAAAAAAAAAAD0AAAAAAAAAPgAAAAAAAAAAAAAAPgAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEkAAAAAAAAAAAAAAEkAAAAAAAAASgAAAAAAAAAAAAAASgAAAAAAAACcAAAAAAAAAAAAAACcAAAAAAAAAJ0AAAAAAAAAAAAAAJ0AAAAAAAAA7wAAAAAAAAAAAAAA7wAAAAAAAADwAAAAAAAAAAAAAADwAAAAAAAAAEIBAAAAAAAAAAAAAEIBAAAAAAAAQwEAAAAAAAAAAAAAQwEAAAAAAACVAQAAAAAAAAAAAACVAQAAAAAAAJYBAAAAAAAAAAAAAJYBAAAAAAAA6AEAAAAAAAAAAAAA6AEAAAAAAADpAQAAAAAAAAAAAADpAQAAAAAAADsCAAAAAAAAAAAAADsCAAAAAAAAPAIAAAAAAAAAAAAAPAIAAAAAAACOAgAAAAAAAAAAAACOAgAAAAAAAI8CAAAAAAAAAAAAAI8CAAAAAAAA4QIAAAAAAAAAAAAA4QIAAAAAAADiAgAAAAAAAAAAAADiAgAAAAAAAOMCAAAAAAAAAAAAAOMCAAAAAAAA7gIAAAAAAAAAAAAA7gIAAAAAAADvAgAAAAAAAAAAAADvAgAAAAAAAPACAAAAAAAAAAAAAPACAAAAAAAACgMAAAAAAAAAAAAACgMAAAAAAAALAwAAAAAAAAAAAAALAwAAAAAAAAwDAAAAAAAAAAAAAAwDAAAAAAAATwMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "quickjs/qjs-modules/lib/util.js",
			"settings":
			{
				"buffer_size": 68538,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					69,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAJNVAAAAAAAAlFUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJNVAAAAAAAAk1UAAAAAAAAAAAAAAADwvw"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " ..."
					},
					"BAAAAJRVAAAAAAAAlVUAAAAAAAAAAAAAlVUAAAAAAACWVQAAAAAAAAAAAACWVQAAAAAAAJdVAAAAAAAAAAAAAJdVAAAAAAAAmFUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJRVAAAAAAAAlFUAAAAAAAAAAAAAAADwvw"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJlVAAAAAAAAmlUAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJlVAAAAAAAAmVUAAAAAAAAAAAAAAADwvw"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": " enumerable:"
					},
					"DAAAAJpVAAAAAAAAm1UAAAAAAAAAAAAAm1UAAAAAAACcVQAAAAAAAAAAAACcVQAAAAAAAJ1VAAAAAAAAAAAAAJ1VAAAAAAAAnlUAAAAAAAAAAAAAnlUAAAAAAACfVQAAAAAAAAAAAACfVQAAAAAAAKBVAAAAAAAAAAAAAKBVAAAAAAAAoVUAAAAAAAAAAAAAoVUAAAAAAACiVQAAAAAAAAAAAACiVQAAAAAAAKNVAAAAAAAAAAAAAKNVAAAAAAAApFUAAAAAAAAAAAAApFUAAAAAAAClVQAAAAAAAAAAAAClVQAAAAAAAKZVAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJpVAAAAAAAAmlUAAAAAAAAAAAAAAADwvw"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " false"
					},
					"BgAAAKZVAAAAAAAAp1UAAAAAAAAAAAAAp1UAAAAAAACoVQAAAAAAAAAAAACoVQAAAAAAAKlVAAAAAAAAAAAAAKlVAAAAAAAAqlUAAAAAAAAAAAAAqlUAAAAAAACrVQAAAAAAAAAAAACrVQAAAAAAAKxVAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKZVAAAAAAAAplUAAAAAAAAAAAAAAADwvw"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAKxVAAAAAAAArVUAAAAAAAAAAAAArVUAAAAAAACuVQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKxVAAAAAAAArFUAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "quickjs/qjs-net/src/minnet-websocket.c",
			"settings":
			{
				"buffer_size": 18999,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					17,
					1,
					"cut",
					null,
					"AQAAADgyAAAAAAAAODIAAAAAAABCAAAAICAgIEpTX0NHRVRTRVRfTUFHSUNfREVGKCJzc2wiLCBtaW5uZXRfd3NfZ2V0LCAwLCBXRUJTT0NLRVRfU1NMKSwK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgyAAAAAAAAejIAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					2,
					"paste",
					null,
					"AgAAADgyAAAAAAAAejIAAAAAAAAAAAAAejIAAAAAAAC8MgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgyAAAAAAAAODIAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "tls"
					},
					"BAAAAJQyAAAAAAAAlTIAAAAAAAAAAAAAlTIAAAAAAACVMgAAAAAAAAMAAABzc2yVMgAAAAAAAJYyAAAAAAAAAAAAAJYyAAAAAAAAlzIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQyAAAAAAAAlzIAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAJgyAAAAAAAAmTIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgyAAAAAAAAmDIAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					1,
					"left_delete",
					null,
					"AQAAAJgyAAAAAAAAmDIAAAAAAAABAAAAMQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkyAAAAAAAAmTIAAAAAAAAAAAAAAADwvw"
				],
				[
					29,
					1,
					"cut",
					null,
					"AQAAAMAyAAAAAAAAwDIAAAAAAAAgAAAASlNfQUxJQVNfREVGKCJ0bHMiLCAic3NsIiksCiAgICA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMAyAAAAAAAA4DIAAAAAAAAAAAAAAAA8QA"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAADgyAAAAAAAAOTIAAAAAAAAAAAAAOTIAAAAAAAA5MgAAAAAAAEIAAAAgICAgSlNfQ0dFVFNFVF9NQUdJQ19ERUYoInNzbCIsIG1pbm5ldF93c19nZXQsIDAsIFdFQlNPQ0tFVF9TU0wpLAo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgyAAAAAAAAejIAAAAAAAAAAAAAAADwvw"
				],
				[
					67,
					1,
					"",
					null,
					"AwAAAGsyAAAAAAAAeDIAAAAAAAANAAAAV0VCU09DS0VUX1NTTKYiAAAAAAAAsyIAAAAAAAANAAAAV0VCU09DS0VUX1NTTDkCAAAAAAAARgIAAAAAAAANAAAAV0VCU09DS0VUX1NTTA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGsyAAAAAAAAeDIAAAAAAAAAAAAAAADwvw"
				],
				[
					86,
					1,
					"left_delete",
					null,
					"AQAAAH0yAAAAAAAAfTIAAAAAAAACAAAAICA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH8yAAAAAAAAfzIAAAAAAAAAAAAAAAA8QA"
				],
				[
					88,
					2,
					"right_delete",
					null,
					"AgAAADoyAAAAAAAAOjIAAAAAAAACAAAAICA6MgAAAAAAADoyAAAAAAAAAQAAACA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoyAAAAAAAAOjIAAAAAAAAAAAAAAAAsQA"
				],
				[
					91,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoyAAAAAAAAOjIAAAAAAAAAAAAAAADwvw"
				],
				[
					92,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoyAAAAAAAAOjIAAAAAAAAAAAAAAADwvw"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"prett",
				"Pretty Shell: Minify"
			],
			[
				"OUTLIN",
				"Browse Mode: Outline (Right)"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/janos/Projects/plot-cv"
	],
	"file_history":
	[
		"/home/janos/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/janos/Projects/plot-cv/quickjs/qjs-modules/src/utils.c",
		"/home/janos/Projects/plot-cv/quickjs/qjs-modules/quickjs-internal.h",
		"/home/janos/Projects/plot-cv/quickjs/qjs-net/src/minnet-client.c",
		"/home/janos/Projects/plot-cv/quickjs/qjs-net/libwebsockets/lib/core-net/close.c",
		"/home/janos/Projects/plot-cv/quickjs/qjs-net/lib/callback.c",
		"/home/janos/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/janos/Projects/plot-cv/test-sourcemap.js",
		"/home/janos/Projects/plot-cv/ws-worker.js",
		"/home/janos/Projects/plot-cv/tokmap.c",
		"/home/janos/Projects/plot-cv/count-neighbours.js",
		"/home/janos/Projects/plot-cv/findsig.c",
		"/home/janos/Projects/plot-cv/getModuleProps.js",
		"/home/janos/Projects/plot-cv/midi-tcp.js",
		"/home/janos/Projects/plot-cv/portal.js",
		"/home/janos/Projects/plot-cv/resolve-imports.js",
		"/home/janos/Projects/plot-cv/palette.css",
		"/home/janos/Projects/plot-cv/get-res.c",
		"/home/janos/Projects/plot-cv/get-msys-packages.js",
		"/home/janos/Projects/plot-cv/gerber2gcode.js",
		"/home/janos/Projects/plot-cv/ftrace.js",
		"/home/janos/Projects/plot-cv/filelist.js",
		"/home/janos/Projects/plot-cv/coil.js",
		"/home/janos/Projects/plot-cv/eagle-server.js",
		"/home/janos/Projects/plot-cv/eagle-query.js",
		"/home/janos/Projects/plot-cv/dump-structs.js",
		"/home/janos/Projects/plot-cv/doc-scanner.js",
		"/home/janos/Projects/plot-cv/config.js",
		"/home/janos/Projects/plot-cv/deconflict.js",
		"/home/janos/Projects/plot-cv/debuggerprotocol.js",
		"/home/janos/Projects/plot-cv/debugger.js",
		"/home/janos/Projects/plot-cv/convert-imports.js",
		"/home/janos/Projects/plot-cv/esparse.js",
		"/home/janos/Projects/plot-cv/extract-structs.js",
		"/home/janos/Projects/plot-cv/fetch-post-prices.js",
		"/home/janos/Projects/plot-cv/ffi.js",
		"/home/janos/Projects/plot-cv/fontsample.js",
		"/home/janos/Projects/plot-cv/grammar-arith.js",
		"/home/janos/Projects/plot-cv/grammar-C.js",
		"/home/janos/Projects/plot-cv/grammar-c.js",
		"/home/janos/Projects/plot-cv/grammar-css3.js",
		"/home/janos/Projects/plot-cv/grammar-geda-netlist.js",
		"/home/janos/Projects/plot-cv/grammar-INI.js",
		"/home/janos/Projects/plot-cv/httpd.js",
		"/home/janos/Projects/plot-cv/ini-grammar.js",
		"/home/janos/Projects/plot-cv/io-helpers.js",
		"/home/janos/Projects/plot-cv/list-directory.js",
		"/home/janos/Projects/plot-cv/list-exports.js",
		"/home/janos/Projects/plot-cv/list-exports2.js",
		"/home/janos/Projects/plot-cv/load-ast.js",
		"/home/janos/Projects/plot-cv/meriyah.js",
		"/home/janos/Projects/plot-cv/workertest.js",
		"/home/janos/Projects/plot-cv/worker.js",
		"/home/janos/Projects/plot-cv/userscript-test.js",
		"/home/janos/Projects/plot-cv/upload.html",
		"/home/janos/Projects/plot-cv/upload-server.js",
		"/home/janos/Projects/plot-cv/untar.c",
		"/home/janos/Projects/plot-cv/tmpx.js",
		"/home/janos/Projects/plot-cv/test-xml.js",
		"/home/janos/Projects/plot-cv/test-wru.js",
		"/home/janos/Projects/plot-cv/test-websocket.js",
		"/home/janos/Projects/plot-cv/test-voronoi.js",
		"/home/janos/Projects/plot-cv/test-video.js",
		"/home/janos/Projects/plot-cv/test-util.js",
		"/home/janos/Projects/plot-cv/test-utf8.js",
		"/home/janos/Projects/plot-cv/test-umat.js",
		"/home/janos/Projects/plot-cv/test-trkl.js",
		"/home/janos/Projects/plot-cv/test-sqlite3.js",
		"/home/janos/Projects/plot-cv/test-spawn.js",
		"/home/janos/Projects/plot-cv/test-sockets.js",
		"/home/janos/Projects/plot-cv/test-shparse.js",
		"/home/janos/Projects/plot-cv/test-rpc.js",
		"/home/janos/Projects/plot-cv/test-repl.js",
		"/home/janos/Projects/plot-cv/test-renderer.js",
		"/home/janos/Projects/plot-cv/test-readline.js",
		"/home/janos/Projects/plot-cv/test-readdir.js",
		"/home/janos/Projects/plot-cv/test-quickjs.js",
		"/home/janos/Projects/plot-cv/test-proxy.js",
		"/home/janos/Projects/plot-cv/test-pointlist.js",
		"/home/janos/Projects/plot-cv/test-pointer.js",
		"/home/janos/Projects/plot-cv/test-path.js",
		"/home/janos/Projects/plot-cv/test-parsexml.js",
		"/home/janos/Projects/plot-cv/test-parse.js",
		"/home/janos/Projects/plot-cv/test-opencv.js",
		"/home/janos/Projects/plot-cv/test-octagon.js",
		"/home/janos/Projects/plot-cv/test-ngql.js",
		"/home/janos/Projects/plot-cv/test-net.js",
		"/home/janos/Projects/plot-cv/test-mmap.js",
		"/home/janos/Projects/plot-cv/test-minnet.js",
		"/home/janos/Projects/plot-cv/test-meriyah.js",
		"/home/janos/Projects/plot-cv/ol-marker.js",
		"/home/janos/Projects/plot-cv/ol-map.js",
		"/home/janos/Projects/plot-cv/make-bitmap.js",
		"/home/janos/Projects/plot-cv/list-proxies.js",
		"/home/janos/Projects/plot-cv/eagle2gerber.js",
		"/home/janos/Projects/plot-cv/test-exception.js",
		"/home/janos/Projects/plot-cv/test-childprocess.js",
		"/home/janos/Projects/plot-cv/test-bjson.js",
		"/home/janos/Projects/plot-cv/test-ansitrunc.c",
		"/home/janos/Projects/plot-cv/svg-scale.js",
		"/home/janos/Projects/plot-cv/server.js",
		"/home/janos/Projects/plot-cv/search-engine.js",
		"/home/janos/Projects/plot-cv/resolve-imports2.js",
		"/home/janos/Projects/plot-cv/readfile.js",
		"/home/janos/Projects/plot-cv/read-deps.js",
		"/home/janos/Projects/plot-cv/react-simple-code-editor.js",
		"/home/janos/Projects/plot-cv/pcb-conversion.js",
		"/home/janos/Projects/plot-cv/knopf-schwarz-o12mm-cliff-cl178862.html",
		"/home/janos/Projects/plot-cv/dom-helpers.js",
		"/home/janos/Projects/pictest/traced_back.svg",
		"/home/janos/Projects/plot-cv/param.js",
		"/home/janos/Projects/plot-cv/qjs-opencv/output.js",
		"/home/janos/Projects/plot-cv/qjs-opencv/tests/test_freetype.js",
		"/home/janos/Projects/plot-cv/lib/stream/utils.js",
		"/home/janos/Projects/plot-cv/svg-crop-pad.js",
		"/home/janos/Projects/plot-cv/qjs-opencv/tests/test_png.js"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 98.0,
		"where_history":
		[
			"/home/janos/Projects/plot-cv/quickjs/qjs-net,*.c,*.h,-*/libwebsockets/*",
			"/home/janos/Projects/plot-cv/quickjs/qjs-net/src"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"Instance",
			"testEagle",
			"lib",
			"define\\(",
			"define\\b",
			"sendCommand",
			"define",
			"'onMessage'",
			"WEBSOCKET_SSL\\b",
			"WEBSOCKET_SSL",
			"tls",
			"         ",
			"onConnect",
			"await ",
			"client_finalize",
			"onClose",
			"exception",
			"current_exce",
			"}\\n\n",
			"}\\n\n([^\\n])",
			"}\\n([^\\n])",
			"}\\n\n([^\\n])",
			"remove",
			"ZipFolder",
			"<<<<",
			"ExecTool",
			"outdir",
			"'str'",
			"optionsArray",
			"Bottom",
			"compact",
			"boxes",
			"join",
			"\nfunction outputBytes(mat) {\n  return '['+[...rowIterator(mat)].map(a => '[ '+[...a].map(n => '0x'+n.toString(16).padStart(2, \n'0')).join(',')+' ],').join('\\n')+']';\n}",
			"cv\\.",
			"writeROI",
			"cvtColor",
			"g",
			"=> ",
			"));",
			"mod\\(",
			"toMap",
			"Util\\."
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"WEBSOCKET_TLS",
			"}\\n\\n",
			"}\\n\\n\\1",
			"",
			"\n      t = 'l';"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 53,
						"regions":
						{
							"col_FFFFFFFF":
							{
								"flags": 16,
								"regions":
								[
									[
										53,
										53
									]
								],
								"scope": "col_FFFFFFFF"
							},
							"col_FFFFFFFF_icon":
							{
								"flags": 16,
								"icon": "Packages/User/Color Highlight.cache/col_FFFFFFFF_circle.png",
								"regions":
								[
									[
										53,
										53
									]
								],
								"scope": "col_gutter"
							}
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/janos/Projects/plot-cv/lib/eagle/components/circle.js",
							"function_name_status_row": 23,
							"outline_rename_mode": false,
							"show_line_column": "disabled",
							"symkeys":
							[
								[
									367,
									410
								],
								[
									471,
									489
								],
								[
									742,
									747
								]
							],
							"symlist":
							[
								"Circle = ({ data, opts = {}, ...props }) =>",
								"()",
								"\ti =>"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1681502964.68,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "upload-server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 33962,
						"regions":
						{
						},
						"selection":
						[
							[
								945,
								948
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 18,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1697964153.55,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 252.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "eagle-shell.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38946,
						"regions":
						{
						},
						"selection":
						[
							[
								27878,
								27878
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1002,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1699790765.89,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 13801.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/eagle/boardRenderer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10708,
						"regions":
						{
						},
						"selection":
						[
							[
								4617,
								4617
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 141,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1699798389.83,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1686.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/eagle/svgRenderer.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11200,
						"regions":
						{
						},
						"selection":
						[
							[
								1790,
								1790
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 51,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1699799799.53,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 426.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "eagle2svg.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2302,
						"regions":
						{
						},
						"selection":
						[
							[
								439,
								445
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 9,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1699799811.22,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6335,
						"regions":
						{
						},
						"selection":
						[
							[
								180,
								138
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 5,
							"show_line_column": "disabled",
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1699799844.51,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "lib/geom/transformation.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21798,
						"regions":
						{
						},
						"selection":
						[
							[
								12335,
								12335
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 458,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1699800054.68,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 174.0,
						"translation.y": 6171.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "lib/eagle/components/rectangle.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1484,
						"regions":
						{
						},
						"selection":
						[
							[
								790,
								790
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 21,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1699800155.92,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 39.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "lib/eagle/components/textElement.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1864,
						"regions":
						{
						},
						"selection":
						[
							[
								1055,
								1055
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 25,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1699800179.72,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 81.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "lib/eagle/components/circle.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1339,
						"regions":
						{
						},
						"selection":
						[
							[
								905,
								905
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 30,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1699802463.55,
							"tabs_extra_last_activated_sheet_index": 9,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "lib/eagle/element.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 35907,
						"regions":
						{
						},
						"selection":
						[
							[
								21626,
								21626
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 599,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1699789825.97,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8019.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 847,
						"regions":
						{
						},
						"selection":
						[
							[
								847,
								847
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"auto_indent": false,
							"function_name_status_row": 19,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"tab_width": 2,
							"tabs_extra_last_activated": 1699789069.09,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "quickjs/qjs-modules/lib/util.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 68538,
						"regions":
						{
						},
						"selection":
						[
							[
								21760,
								21732
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 705,
							"show_line_column": "disabled",
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1697955546.1,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9475.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "quickjs/qjs-net/src/minnet-websocket.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18999,
						"regions":
						{
						},
						"selection":
						[
							[
								12858,
								12858
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 495,
							"show_line_column": "disabled",
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1697955175.64,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6507.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"circle",
				"lib/eagle/components/circle.js"
			],
			[
				"textEle",
				"lib/eagle/components/textElement.js"
			],
			[
				"rectangle",
				"lib/eagle/components/rectangle.js"
			],
			[
				"transform",
				"lib/geom/transformation.js"
			],
			[
				"eagle2sv",
				"eagle2svg.js"
			],
			[
				"svgRe",
				"lib/eagle/svgRenderer.js"
			],
			[
				"boardRe",
				"lib/eagle/boardRenderer.js"
			],
			[
				"elemen",
				"lib/eagle/element.js"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"/util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"minnet-we",
				"quickjs/qjs-net/src/minnet-websocket.c"
			],
			[
				"wscli.js",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"minnet-clie",
				"quickjs/qjs-net/src/minnet-client.c"
			],
			[
				"callbaCK.C",
				"quickjs/qjs-net/lib/callback.c"
			],
			[
				"internal",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/src/utils.c"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/src/qjsm.c"
			],
			[
				"eagle2",
				"eagle2gerber.js"
			],
			[
				"pcb-con",
				"pcb-conversion.js"
			],
			[
				"test_free",
				"qjs-opencv/tests/test_freetype.js"
			],
			[
				"param.js",
				"param.js"
			],
			[
				"make",
				"make-bitmap.js"
			],
			[
				"test_png",
				"qjs-opencv/tests/test_png.js"
			],
			[
				"stream/utils",
				"lib/stream/utils.js"
			],
			[
				"svg-cr",
				"svg-crop-pad.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 330.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
