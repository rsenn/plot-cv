{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"PaStream",
				"PaStreamParameters"
			],
			[
				"JS_Free",
				"JS_FreeCString"
			],
			[
				"PaE",
				"PaHostErrorInfo"
			],
			[
				"hostApi",
				"hostApiSpecificStreamInfo"
			],
			[
				"host",
				"hostApiType"
			],
			[
				"defaultHi",
				"defaultHighOutputLatency"
			],
			[
				"Draw",
				"DrawCircle"
			],
			[
				"exi",
				"existsSync"
			],
			[
				"text",
				"text-decoration"
			],
			[
				"crea",
				"createTextNode"
			],
			[
				"Transform",
				"TransformationList"
			],
			[
				"trans",
				"transformation"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "  oncePromise = (emitter, events) =>\nresolve =>\n  handler = e =>\nresolve =>\n  handler = e =>\nWebSocketError\n  constructor(message, ws)\nWebSocketIterator()\nWebSocketURL(arg = '/', query = {})\nCreateWebSocket(path = '/', protocols = [])\nStreamReadIterator(strm)\nReconnectingWebSocket\n  constructor(url = '/ws', protocols = [], handlers = {})\n  connect(handlers = this.handlers)\n  get writable()\n  write: chunk =>\n  close: () =>\n  abort: err =>\n  get readable()\n  start: controller =>",
			"settings":
			{
				"buffer_size": 481,
				"line_ending": "Unix",
				"name": "𝌆 Outline",
				"scratch": true
			},
			"undo_stack":
			[
				[
					351,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1850,
								1856
							],
							[
								1883,
								1899
							],
							[
								2048,
								2058
							],
							[
								2080,
								2090
							],
							[
								2094,
								2105
							],
							[
								2118,
								2126
							],
							[
								2508,
								2529
							],
							[
								2628,
								2649
							],
							[
								2683,
								2711
							],
							[
								2756,
								2781
							],
							[
								2926,
								2950
							],
							[
								3405,
								3429
							],
							[
								3729,
								3756
							],
							[
								4093,
								4097
							],
							[
								4108,
								4114
							],
							[
								4132,
								4137
							],
							[
								4164,
								4168
							],
							[
								4371,
								4379
							],
							[
								4403,
								4416
							],
							[
								4439,
								4451
							],
							[
								4488,
								4494
							],
							[
								5052,
								5058
							],
							[
								5414,
								5440
							],
							[
								5582,
								5615
							],
							[
								5718,
								5755
							],
							[
								5978,
								6018
							],
							[
								6198,
								6232
							],
							[
								6328,
								6354
							],
							[
								6585,
								6622
							],
							[
								6691,
								6695
							],
							[
								6748,
								6752
							],
							[
								6801,
								6814
							],
							[
								6922,
								6955
							],
							[
								6967,
								6984
							],
							[
								7333,
								7382
							],
							[
								7796,
								7832
							],
							[
								7844,
								7861
							],
							[
								7945,
								7952
							],
							[
								8013,
								8042
							],
							[
								8083,
								8132
							],
							[
								8143,
								8152
							],
							[
								8268,
								8302
							],
							[
								8607,
								8643
							],
							[
								8742,
								8765
							],
							[
								8777,
								8799
							],
							[
								8857,
								8885
							],
							[
								9564,
								9597
							],
							[
								9755,
								9796
							],
							[
								10115,
								10124
							],
							[
								10627,
								10670
							],
							[
								11074,
								11089
							],
							[
								11349,
								11359
							],
							[
								11430,
								11447
							],
							[
								11482,
								11500
							],
							[
								11792,
								11830
							],
							[
								11850,
								11864
							],
							[
								12322,
								12331
							],
							[
								13068,
								13102
							],
							[
								13146,
								13156
							],
							[
								13251,
								13261
							],
							[
								13310,
								13342
							],
							[
								13462,
								13483
							],
							[
								13526,
								13544
							],
							[
								13625,
								13644
							],
							[
								13670,
								13691
							],
							[
								13846,
								13863
							],
							[
								15021,
								15030
							],
							[
								15111,
								15134
							],
							[
								15526,
								15567
							],
							[
								15572,
								15573
							],
							[
								15625,
								15662
							],
							[
								16033,
								16058
							],
							[
								16352,
								16380
							],
							[
								16654,
								16683
							],
							[
								17030,
								17038
							],
							[
								17264,
								17290
							],
							[
								17451,
								17462
							],
							[
								18005,
								18034
							],
							[
								18058,
								18063
							],
							[
								18140,
								18153
							],
							[
								19165,
								19212
							],
							[
								19591,
								19600
							],
							[
								19609,
								19618
							],
							[
								19625,
								19637
							],
							[
								19741,
								19756
							],
							[
								19883,
								19903
							],
							[
								19936,
								19953
							],
							[
								20002,
								20020
							],
							[
								20055,
								20069
							],
							[
								20191,
								20208
							],
							[
								20270,
								20287
							],
							[
								20343,
								20359
							],
							[
								20409,
								20424
							],
							[
								20462,
								20479
							],
							[
								20555,
								20560
							],
							[
								20636,
								20645
							],
							[
								21008,
								21047
							],
							[
								21083,
								21088
							],
							[
								21141,
								21189
							],
							[
								22299,
								22315
							],
							[
								22547,
								22571
							],
							[
								22838,
								22859
							],
							[
								23016,
								23063
							],
							[
								23068,
								23074
							],
							[
								23681,
								23705
							],
							[
								23877,
								23885
							],
							[
								23929,
								23945
							],
							[
								25040,
								25076
							],
							[
								25109,
								25113
							],
							[
								25165,
								25205
							],
							[
								25234,
								25238
							],
							[
								25353,
								25407
							],
							[
								25638,
								25661
							],
							[
								25774,
								25796
							],
							[
								25863,
								25882
							],
							[
								26227,
								26247
							],
							[
								26468,
								26503
							],
							[
								26514,
								26527
							],
							[
								26617,
								26638
							]
						],
						"symlist":
						[
							"key =>",
							" (key, value) =>",
							" v =>",
							" v =>",
							" () =>",
							" o =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function isNativeObject(obj)",
							"function Object2JSON(obj)",
							"function CopyObject(obj)",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function GetElementMatrix(element)",
							"function SetCrosshair(pos)",
							"function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							"function PositionMatrix(canvas = ",
							"('canvas'), rect)",
							"function PositionMatrix2(element = canvasElement)",
							"function PositionProcessor(canvas = ",
							"('canvas'), rect)",
							" pos =>",
							"function ProcessPosition(pos)",
							"function TouchTransformer(tfn = (x, y) => [x, y])",
							" touch =>",
							"async function* TouchPrinter(iter)",
							"async function* GenericPrinter(iter)",
							"function Transformer(t)",
							"async function* (iter)",
							"function MouseToTouch(event)",
							"async function* CatchIterator(it)",
							"async function* TouchIterator(element, t)",
							"(x, y) =>",
							"async function* MoveIterator(eventIterator)",
							"function main()",
							"cid: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							"(v, i) =>",
							"animationFrame = (minDelay = 0) =>",
							"resolve =>",
							"resolve =>",
							" function animationFrame(t)",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							"onOpen()",
							" function KeyHandler(key)",
							"async () =>",
							"async function InputHandler()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							" () =>",
							" () =>",
							" error =>",
							"function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"htmlElement: () =>",
							"gfxRect: () =>",
							"windowRect: () =>",
							"windowSize: () =>",
							"scrollPos: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"() =>",
							" value =>",
							"SVGPolyline = ({ points, ...props }) =>",
							"pt =>",
							"SVGComponent = ({ circle, points, ...props }) =>",
							"async function()",
							"function ResizeHandler()",
							"function ParseJSON(s)",
							"function ReplayTrail(trail, time = performance.",
							" + 20)",
							"function NewWS(handlers)",
							"get ws()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>",
							"async function LoadWASM(file = 'fire/build/fire.wasm')",
							"function ElementName(e)",
							"function TargetName(e)",
							"function GetRects()",
							"function SendWS(msg)",
							"function ToggleClass(element, name)",
							" (...args) =>",
							"function syncHeight()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADDBwAAICBrZXkgPT4KKGtleSwgdmFsdWUpID0+CnYgPT4KdiA9PgooKSA9PgpvID0+ClJhbmRvbUJ5dGUoKQpNb2R1bG8obiwgbSkKICBpc05hdGl2ZU9iamVjdChvYmopCk9iamVjdDJKU09OKG9iaikKQ29weU9iamVjdChvYmopCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CigpID0+CnYgPT4KICBiID0+CkRyYXdMaXN0CiAgY29uc3RydWN0b3IoKQogIGluc2VydChpdGVtKQppdCA9PgppdCA9PgpBbGxQYXJlbnRzKGVsZW0pCiAgZ2V0VHJhbnNmb3JtYXRpb25MaXN0KGUpCkRlY29tcG9zZVRyYW5zZm9ybUxpc3QoZWxlbSkKICBkcmF3UmVjdChyZWN0LCBzdHJva2UgPSAnIzBmMCcpCkdldEVsZW1lbnRNYXRyaXgoZWxlbWVudCkKU2V0Q3Jvc3NoYWlyKHBvcykKRXZlbnRQb3NpdGlvbnMoZXZlbnRPclRvdWNoKQogIG4gPT4KICBuID0+CihhY2MsIGtleSkgPT4KUG9zaXRpb25NYXRyaXgoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpClBvc2l0aW9uTWF0cml4MihlbGVtZW50ID0gY2FudmFzRWxlbWVudCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpCnBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpUb3VjaFRyYW5zZm9ybWVyKHRmbiA9ICh4LCB5KSA9PiBbeCwgeV0pCnRvdWNoID0+ClRvdWNoUHJpbnRlcihpdGVyKQpHZW5lcmljUHJpbnRlcihpdGVyKQpUcmFuc2Zvcm1lcih0KQooaXRlcikKTW91c2VUb1RvdWNoKGV2ZW50KQpDYXRjaEl0ZXJhdG9yKGl0KQpUb3VjaEl0ZXJhdG9yKGVsZW1lbnQsIHQpCih4LCB5KSA9PgpNb3ZlSXRlcmF0b3IoZXZlbnRJdGVyYXRvcikKICBtYWluKCkKICBjaWQ6ICgpID0+CiAgY3VycmVudFVSTDogKCkgPT4KICBjdXJyZW50RmlsZTogKCkgPT4KUmVwYXJlbnQoY2FudmFzID0gZG9jdW1lbnQuCignY2FudmFzJylbMF0pCih2LCBpKSA9PgogIGFuaW1hdGlvbkZyYW1lID0gKG1pbkRlbGF5ID0gMCkgPT4KICByZXNvbHZlID0+CiAgcmVzb2x2ZSA9PgogIGFuaW1hdGlvbkZyYW1lKHQpCkxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQogIG9uT3BlbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgpJbnB1dEhhbmRsZXIoKQooKSA9PgooKSA9PgpTZW5kVHJhaWwoc3RhcnQgPSB0aW1lZ2VuLnN0YXJ0KQooKSA9PgooKSA9PgplcnJvciA9PgpJbml0KCkKICBjYW52YXNFbGVtZW50OiAoKSA9PgogIGRpdkVsZW1lbnQ6ICgpID0+CiAgaHRtbEVsZW1lbnQ6ICgpID0+CiAgZ2Z4UmVjdDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIHdpbmRvd1NpemU6ICgpID0+CiAgc2Nyb2xsUG9zOiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CigpID0+CnZhbHVlID0+ClNWR1BvbHlsaW5lID0gKHsgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIHB0ID0+ClNWR0NvbXBvbmVudCA9ICh7IGNpcmNsZSwgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIGZ1bmN0aW9uKCkKUmVzaXplSGFuZGxlcigpClBhcnNlSlNPTihzKQpSZXBsYXlUcmFpbCh0cmFpbCwgdGltZSA9IHBlcmZvcm1hbmNlLgorIDIwKQpOZXdXUyhoYW5kbGVycykKICBnZXQgd3MoKQogIGZ1bmN0aW9uKCkKTWFrZVVVSUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpNYWtlQ2xpZW50SUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpMb2FkV0FTTShmaWxlID0gJ2ZpcmUvYnVpbGQvZmlyZS53YXNtJykKRWxlbWVudE5hbWUoZSkKVGFyZ2V0TmFtZShlKQpHZXRSZWN0cygpClNlbmRXUyhtc2cpClRvZ2dsZUNsYXNzKGVsZW1lbnQsIG5hbWUpCiguLi5hcmdzKSA9PgogIHN5bmNIZWlnaHQoKQAAAAAAAAAAwwcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMMHAAAgIGtleSA9Pgooa2V5LCB2YWx1ZSkgPT4KdiA9Pgp2ID0+CigpID0+Cm8gPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQogIGlzTmF0aXZlT2JqZWN0KG9iaikKT2JqZWN0MkpTT04ob2JqKQpDb3B5T2JqZWN0KG9iaikKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KKCkgPT4KdiA9PgogIGIgPT4KRHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCml0ID0+Cml0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSAKKCdjYW52YXMnKSwgcmVjdCkKUG9zaXRpb25NYXRyaXgyKGVsZW1lbnQgPSBjYW52YXNFbGVtZW50KQpQb3NpdGlvblByb2Nlc3NvcihjYW52YXMgPSAKKCdjYW52YXMnKSwgcmVjdCkKcG9zID0+ClByb2Nlc3NQb3NpdGlvbihwb3MpClRvdWNoVHJhbnNmb3JtZXIodGZuID0gKHgsIHkpID0+IFt4LCB5XSkKdG91Y2ggPT4KVG91Y2hQcmludGVyKGl0ZXIpCkdlbmVyaWNQcmludGVyKGl0ZXIpClRyYW5zZm9ybWVyKHQpCihpdGVyKQpNb3VzZVRvVG91Y2goZXZlbnQpCkNhdGNoSXRlcmF0b3IoaXQpClRvdWNoSXRlcmF0b3IoZWxlbWVudCwgdCkKKHgsIHkpID0+Ck1vdmVJdGVyYXRvcihldmVudEl0ZXJhdG9yKQogIG1haW4oKQogIGNpZDogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKKHYsIGkpID0+CiAgYW5pbWF0aW9uRnJhbWUgPSAobWluRGVsYXkgPSAwKSA9PgogIHJlc29sdmUgPT4KICByZXNvbHZlID0+CiAgYW5pbWF0aW9uRnJhbWUodCkKTG9vcCgpCiAgbG9nID0gKHQsIG5hbWUpID0+CiAgZmlyZSA9ICguLi5hcmdzKSA9PgogIHJlZHJhdyA9ICguLi5hcmdzKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkRyYXcoeCwgeSwgdGltZSA9IHBlcmZvcm1hbmNlLgopCkJyZXNlbmhhbSh4MCwgeTAsIHgxLCB5MSkKQmxhemUoeCwgeSwgcikKUHV0QXJyYXkoeCwgeSwgYSkKUHV0QXJyYXkyKHgsIHksIGEpCiAgb25PcGVuKCkKS2V5SGFuZGxlcihrZXkpCigpID0+CklucHV0SGFuZGxlcigpCigpID0+CigpID0+ClNlbmRUcmFpbChzdGFydCA9IHRpbWVnZW4uc3RhcnQpCigpID0+CigpID0+CmVycm9yID0+CkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICBodG1sRWxlbWVudDogKCkgPT4KICBnZnhSZWN0OiAoKSA9PgogIHdpbmRvd1JlY3Q6ICgpID0+CiAgd2luZG93U2l6ZTogKCkgPT4KICBzY3JvbGxQb3M6ICgpID0+CiAgYm9keVJlY3Q6ICgpID0+CiAgY2FudmFzUmVjdDogKCkgPT4KKCkgPT4KdmFsdWUgPT4KU1ZHUG9seWxpbmUgPSAoeyBwb2ludHMsIC4uLnByb3BzIH0pID0+CiAgcHQgPT4KU1ZHQ29tcG9uZW50ID0gKHsgY2lyY2xlLCBwb2ludHMsIC4uLnByb3BzIH0pID0+CiAgZnVuY3Rpb24oKQpSZXNpemVIYW5kbGVyKCkKUGFyc2VKU09OKHMpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCisgMjApCk5ld1dTKGhhbmRsZXJzKQogIGdldCB3cygpCiAgZnVuY3Rpb24oKQpNYWtlVVVJRChybmcgPSBNYXRoLnJhbmRvbSkKICBuID0+Ck1ha2VDbGllbnRJRChybmcgPSBNYXRoLnJhbmRvbSkKICBuID0+CkxvYWRXQVNNKGZpbGUgPSAnZmlyZS9idWlsZC9maXJlLndhc20nKQpFbGVtZW50TmFtZShlKQpUYXJnZXROYW1lKGUpCkdldFJlY3RzKCkKU2VuZFdTKG1zZykKVG9nZ2xlQ2xhc3MoZWxlbWVudCwgbmFtZSkKKC4uLmFyZ3MpID0+CiAgc3luY0hlaWdodCgpAAAAAAAAAADDBwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					352,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADDBwAAICBrZXkgPT4KKGtleSwgdmFsdWUpID0+CnYgPT4KdiA9PgooKSA9PgpvID0+ClJhbmRvbUJ5dGUoKQpNb2R1bG8obiwgbSkKICBpc05hdGl2ZU9iamVjdChvYmopCk9iamVjdDJKU09OKG9iaikKQ29weU9iamVjdChvYmopCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CigpID0+CnYgPT4KICBiID0+CkRyYXdMaXN0CiAgY29uc3RydWN0b3IoKQogIGluc2VydChpdGVtKQppdCA9PgppdCA9PgpBbGxQYXJlbnRzKGVsZW0pCiAgZ2V0VHJhbnNmb3JtYXRpb25MaXN0KGUpCkRlY29tcG9zZVRyYW5zZm9ybUxpc3QoZWxlbSkKICBkcmF3UmVjdChyZWN0LCBzdHJva2UgPSAnIzBmMCcpCkdldEVsZW1lbnRNYXRyaXgoZWxlbWVudCkKU2V0Q3Jvc3NoYWlyKHBvcykKRXZlbnRQb3NpdGlvbnMoZXZlbnRPclRvdWNoKQogIG4gPT4KICBuID0+CihhY2MsIGtleSkgPT4KUG9zaXRpb25NYXRyaXgoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpClBvc2l0aW9uTWF0cml4MihlbGVtZW50ID0gY2FudmFzRWxlbWVudCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpCnBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpUb3VjaFRyYW5zZm9ybWVyKHRmbiA9ICh4LCB5KSA9PiBbeCwgeV0pCnRvdWNoID0+ClRvdWNoUHJpbnRlcihpdGVyKQpHZW5lcmljUHJpbnRlcihpdGVyKQpUcmFuc2Zvcm1lcih0KQooaXRlcikKTW91c2VUb1RvdWNoKGV2ZW50KQpDYXRjaEl0ZXJhdG9yKGl0KQpUb3VjaEl0ZXJhdG9yKGVsZW1lbnQsIHQpCih4LCB5KSA9PgpNb3ZlSXRlcmF0b3IoZXZlbnRJdGVyYXRvcikKICBtYWluKCkKICBjaWQ6ICgpID0+CiAgY3VycmVudFVSTDogKCkgPT4KICBjdXJyZW50RmlsZTogKCkgPT4KUmVwYXJlbnQoY2FudmFzID0gZG9jdW1lbnQuCignY2FudmFzJylbMF0pCih2LCBpKSA9PgogIGFuaW1hdGlvbkZyYW1lID0gKG1pbkRlbGF5ID0gMCkgPT4KICByZXNvbHZlID0+CiAgcmVzb2x2ZSA9PgogIGFuaW1hdGlvbkZyYW1lKHQpCkxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQogIG9uT3BlbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgpJbnB1dEhhbmRsZXIoKQooKSA9PgooKSA9PgpTZW5kVHJhaWwoc3RhcnQgPSB0aW1lZ2VuLnN0YXJ0KQooKSA9PgooKSA9PgplcnJvciA9PgpJbml0KCkKICBjYW52YXNFbGVtZW50OiAoKSA9PgogIGRpdkVsZW1lbnQ6ICgpID0+CiAgaHRtbEVsZW1lbnQ6ICgpID0+CiAgZ2Z4UmVjdDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIHdpbmRvd1NpemU6ICgpID0+CiAgc2Nyb2xsUG9zOiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CigpID0+CnZhbHVlID0+ClNWR1BvbHlsaW5lID0gKHsgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIHB0ID0+ClNWR0NvbXBvbmVudCA9ICh7IGNpcmNsZSwgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIGZ1bmN0aW9uKCkKUmVzaXplSGFuZGxlcigpClBhcnNlSlNPTihzKQpSZXBsYXlUcmFpbCh0cmFpbCwgdGltZSA9IHBlcmZvcm1hbmNlLgorIDIwKQpOZXdXUyhoYW5kbGVycykKICBnZXQgd3MoKQogIGZ1bmN0aW9uKCkKTWFrZVVVSUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpNYWtlQ2xpZW50SUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpMb2FkV0FTTShmaWxlID0gJ2ZpcmUvYnVpbGQvZmlyZS53YXNtJykKRWxlbWVudE5hbWUoZSkKVGFyZ2V0TmFtZShlKQpHZXRSZWN0cygpClNlbmRXUyhtc2cpClRvZ2dsZUNsYXNzKGVsZW1lbnQsIG5hbWUpCiguLi5hcmdzKSA9PgogIHN5bmNIZWlnaHQoKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					353,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1850,
								1856
							],
							[
								1883,
								1899
							],
							[
								2048,
								2058
							],
							[
								2080,
								2090
							],
							[
								2094,
								2105
							],
							[
								2118,
								2126
							],
							[
								2508,
								2529
							],
							[
								2628,
								2649
							],
							[
								2683,
								2711
							],
							[
								2756,
								2781
							],
							[
								2926,
								2950
							],
							[
								3405,
								3429
							],
							[
								3729,
								3756
							],
							[
								4093,
								4097
							],
							[
								4108,
								4114
							],
							[
								4132,
								4137
							],
							[
								4164,
								4168
							],
							[
								4371,
								4379
							],
							[
								4403,
								4416
							],
							[
								4439,
								4451
							],
							[
								4488,
								4494
							],
							[
								5052,
								5058
							],
							[
								5414,
								5440
							],
							[
								5582,
								5615
							],
							[
								5718,
								5755
							],
							[
								5978,
								6018
							],
							[
								6198,
								6232
							],
							[
								6328,
								6354
							],
							[
								6585,
								6622
							],
							[
								6691,
								6695
							],
							[
								6748,
								6752
							],
							[
								6801,
								6814
							],
							[
								6922,
								6955
							],
							[
								6967,
								6984
							],
							[
								7333,
								7382
							],
							[
								7796,
								7832
							],
							[
								7844,
								7861
							],
							[
								7945,
								7952
							],
							[
								8013,
								8042
							],
							[
								8083,
								8132
							],
							[
								8143,
								8152
							],
							[
								8268,
								8302
							],
							[
								8607,
								8643
							],
							[
								8742,
								8765
							],
							[
								8777,
								8799
							],
							[
								8857,
								8885
							],
							[
								9564,
								9597
							],
							[
								9755,
								9796
							],
							[
								10115,
								10124
							],
							[
								10627,
								10670
							],
							[
								11074,
								11089
							],
							[
								11349,
								11359
							],
							[
								11430,
								11447
							],
							[
								11482,
								11500
							],
							[
								11792,
								11830
							],
							[
								11850,
								11864
							],
							[
								12322,
								12331
							],
							[
								13068,
								13102
							],
							[
								13146,
								13156
							],
							[
								13251,
								13261
							],
							[
								13310,
								13342
							],
							[
								13462,
								13483
							],
							[
								13526,
								13544
							],
							[
								13625,
								13644
							],
							[
								13670,
								13691
							],
							[
								13846,
								13863
							],
							[
								15021,
								15030
							],
							[
								15111,
								15134
							],
							[
								15526,
								15567
							],
							[
								15572,
								15573
							],
							[
								15625,
								15662
							],
							[
								16033,
								16058
							],
							[
								16352,
								16380
							],
							[
								16654,
								16683
							],
							[
								17030,
								17038
							],
							[
								17264,
								17290
							],
							[
								17451,
								17462
							],
							[
								18005,
								18034
							],
							[
								18058,
								18063
							],
							[
								18140,
								18153
							],
							[
								19165,
								19212
							],
							[
								19591,
								19600
							],
							[
								19609,
								19618
							],
							[
								19625,
								19637
							],
							[
								19741,
								19756
							],
							[
								19883,
								19903
							],
							[
								19936,
								19953
							],
							[
								20002,
								20020
							],
							[
								20055,
								20069
							],
							[
								20191,
								20208
							],
							[
								20270,
								20287
							],
							[
								20343,
								20359
							],
							[
								20409,
								20424
							],
							[
								20462,
								20479
							],
							[
								20555,
								20560
							],
							[
								20636,
								20645
							],
							[
								21008,
								21047
							],
							[
								21083,
								21088
							],
							[
								21141,
								21189
							],
							[
								22299,
								22315
							],
							[
								22547,
								22571
							],
							[
								22838,
								22859
							],
							[
								23016,
								23063
							],
							[
								23068,
								23074
							],
							[
								23681,
								23705
							],
							[
								23877,
								23885
							],
							[
								23929,
								23945
							],
							[
								25040,
								25076
							],
							[
								25109,
								25113
							],
							[
								25165,
								25205
							],
							[
								25234,
								25238
							],
							[
								25353,
								25407
							],
							[
								25638,
								25661
							],
							[
								25774,
								25796
							],
							[
								25863,
								25882
							],
							[
								26227,
								26247
							],
							[
								26468,
								26503
							],
							[
								26514,
								26527
							],
							[
								26617,
								26638
							]
						],
						"symlist":
						[
							"key =>",
							" (key, value) =>",
							" v =>",
							" v =>",
							" () =>",
							" o =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function isNativeObject(obj)",
							"function Object2JSON(obj)",
							"function CopyObject(obj)",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function GetElementMatrix(element)",
							"function SetCrosshair(pos)",
							"function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							"function PositionMatrix(canvas = ",
							"('canvas'), rect)",
							"function PositionMatrix2(element = canvasElement)",
							"function PositionProcessor(canvas = ",
							"('canvas'), rect)",
							" pos =>",
							"function ProcessPosition(pos)",
							"function TouchTransformer(tfn = (x, y) => [x, y])",
							" touch =>",
							"async function* TouchPrinter(iter)",
							"async function* GenericPrinter(iter)",
							"function Transformer(t)",
							"async function* (iter)",
							"function MouseToTouch(event)",
							"async function* CatchIterator(it)",
							"async function* TouchIterator(element, t)",
							"(x, y) =>",
							"async function* MoveIterator(eventIterator)",
							"function main()",
							"cid: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							"(v, i) =>",
							"animationFrame = (minDelay = 0) =>",
							"resolve =>",
							"resolve =>",
							" function animationFrame(t)",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							"onOpen()",
							" function KeyHandler(key)",
							"async () =>",
							"async function InputHandler()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							" () =>",
							" () =>",
							" error =>",
							"function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"htmlElement: () =>",
							"gfxRect: () =>",
							"windowRect: () =>",
							"windowSize: () =>",
							"scrollPos: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"() =>",
							" value =>",
							"SVGPolyline = ({ points, ...props }) =>",
							"pt =>",
							"SVGComponent = ({ circle, points, ...props }) =>",
							"async function()",
							"function ResizeHandler()",
							"function ParseJSON(s)",
							"function ReplayTrail(trail, time = performance.",
							" + 20)",
							"function NewWS(handlers)",
							"get ws()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>",
							"async function LoadWASM(file = 'fire/build/fire.wasm')",
							"function ElementName(e)",
							"function TargetName(e)",
							"function GetRects()",
							"function SendWS(msg)",
							"function ToggleClass(element, name)",
							" (...args) =>",
							"function syncHeight()"
						]
					},
					"AQAAAAAAAAAAAAAAwwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					354,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1850,
								1856
							],
							[
								1883,
								1899
							],
							[
								2048,
								2058
							],
							[
								2080,
								2090
							],
							[
								2094,
								2105
							],
							[
								2118,
								2126
							],
							[
								2508,
								2529
							],
							[
								2628,
								2649
							],
							[
								2683,
								2711
							],
							[
								2756,
								2781
							],
							[
								2926,
								2950
							],
							[
								3405,
								3429
							],
							[
								3729,
								3756
							],
							[
								4093,
								4097
							],
							[
								4108,
								4114
							],
							[
								4132,
								4137
							],
							[
								4164,
								4168
							],
							[
								4371,
								4379
							],
							[
								4403,
								4416
							],
							[
								4439,
								4451
							],
							[
								4488,
								4494
							],
							[
								5052,
								5058
							],
							[
								5414,
								5440
							],
							[
								5582,
								5615
							],
							[
								5718,
								5755
							],
							[
								5978,
								6018
							],
							[
								6198,
								6232
							],
							[
								6328,
								6354
							],
							[
								6585,
								6622
							],
							[
								6691,
								6695
							],
							[
								6748,
								6752
							],
							[
								6801,
								6814
							],
							[
								6922,
								6955
							],
							[
								6967,
								6984
							],
							[
								7333,
								7382
							],
							[
								7796,
								7832
							],
							[
								7844,
								7861
							],
							[
								7945,
								7952
							],
							[
								8013,
								8042
							],
							[
								8083,
								8132
							],
							[
								8143,
								8152
							],
							[
								8268,
								8302
							],
							[
								8607,
								8643
							],
							[
								8742,
								8765
							],
							[
								8777,
								8799
							],
							[
								8857,
								8885
							],
							[
								9564,
								9597
							],
							[
								9755,
								9796
							],
							[
								10115,
								10124
							],
							[
								10627,
								10670
							],
							[
								11074,
								11089
							],
							[
								11349,
								11359
							],
							[
								11430,
								11447
							],
							[
								11482,
								11500
							],
							[
								11792,
								11830
							],
							[
								11850,
								11864
							],
							[
								12322,
								12331
							],
							[
								13068,
								13102
							],
							[
								13146,
								13156
							],
							[
								13251,
								13261
							],
							[
								13310,
								13342
							],
							[
								13462,
								13483
							],
							[
								13526,
								13544
							],
							[
								13625,
								13644
							],
							[
								13670,
								13691
							],
							[
								13846,
								13863
							],
							[
								15021,
								15030
							],
							[
								15111,
								15134
							],
							[
								15526,
								15567
							],
							[
								15572,
								15573
							],
							[
								15625,
								15662
							],
							[
								16033,
								16058
							],
							[
								16352,
								16380
							],
							[
								16654,
								16683
							],
							[
								17030,
								17038
							],
							[
								17264,
								17290
							],
							[
								17451,
								17462
							],
							[
								18005,
								18034
							],
							[
								18058,
								18063
							],
							[
								18140,
								18153
							],
							[
								19165,
								19212
							],
							[
								19591,
								19600
							],
							[
								19609,
								19618
							],
							[
								19625,
								19637
							],
							[
								19741,
								19756
							],
							[
								19883,
								19903
							],
							[
								19936,
								19953
							],
							[
								20002,
								20020
							],
							[
								20055,
								20069
							],
							[
								20191,
								20208
							],
							[
								20270,
								20287
							],
							[
								20343,
								20359
							],
							[
								20409,
								20424
							],
							[
								20462,
								20479
							],
							[
								20555,
								20560
							],
							[
								20636,
								20645
							],
							[
								21008,
								21047
							],
							[
								21083,
								21088
							],
							[
								21141,
								21189
							],
							[
								22299,
								22315
							],
							[
								22547,
								22571
							],
							[
								22874,
								22895
							],
							[
								23052,
								23099
							],
							[
								23104,
								23110
							],
							[
								23717,
								23741
							],
							[
								23913,
								23921
							],
							[
								23965,
								23981
							],
							[
								25076,
								25112
							],
							[
								25145,
								25149
							],
							[
								25201,
								25241
							],
							[
								25270,
								25274
							],
							[
								25389,
								25443
							],
							[
								25674,
								25697
							],
							[
								25810,
								25832
							],
							[
								25899,
								25918
							],
							[
								26263,
								26283
							],
							[
								26504,
								26539
							],
							[
								26550,
								26563
							],
							[
								26653,
								26674
							]
						],
						"symlist":
						[
							"key =>",
							" (key, value) =>",
							" v =>",
							" v =>",
							" () =>",
							" o =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function isNativeObject(obj)",
							"function Object2JSON(obj)",
							"function CopyObject(obj)",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function GetElementMatrix(element)",
							"function SetCrosshair(pos)",
							"function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							"function PositionMatrix(canvas = ",
							"('canvas'), rect)",
							"function PositionMatrix2(element = canvasElement)",
							"function PositionProcessor(canvas = ",
							"('canvas'), rect)",
							" pos =>",
							"function ProcessPosition(pos)",
							"function TouchTransformer(tfn = (x, y) => [x, y])",
							" touch =>",
							"async function* TouchPrinter(iter)",
							"async function* GenericPrinter(iter)",
							"function Transformer(t)",
							"async function* (iter)",
							"function MouseToTouch(event)",
							"async function* CatchIterator(it)",
							"async function* TouchIterator(element, t)",
							"(x, y) =>",
							"async function* MoveIterator(eventIterator)",
							"function main()",
							"cid: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							"(v, i) =>",
							"animationFrame = (minDelay = 0) =>",
							"resolve =>",
							"resolve =>",
							" function animationFrame(t)",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							"onOpen()",
							" function KeyHandler(key)",
							"async () =>",
							"async function InputHandler()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							" () =>",
							" () =>",
							" error =>",
							"function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"htmlElement: () =>",
							"gfxRect: () =>",
							"windowRect: () =>",
							"windowSize: () =>",
							"scrollPos: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"() =>",
							" value =>",
							"SVGPolyline = ({ points, ...props }) =>",
							"pt =>",
							"SVGComponent = ({ circle, points, ...props }) =>",
							"async function()",
							"function ResizeHandler()",
							"function ParseJSON(s)",
							"function ReplayTrail(trail, time = performance.",
							" + 20)",
							"function NewWS(handlers)",
							"get ws()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>",
							"async function LoadWASM(file = 'fire/build/fire.wasm')",
							"function ElementName(e)",
							"function TargetName(e)",
							"function GetRects()",
							"function SendWS(msg)",
							"function ToggleClass(element, name)",
							" (...args) =>",
							"function syncHeight()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADDBwAAICBrZXkgPT4KKGtleSwgdmFsdWUpID0+CnYgPT4KdiA9PgooKSA9PgpvID0+ClJhbmRvbUJ5dGUoKQpNb2R1bG8obiwgbSkKICBpc05hdGl2ZU9iamVjdChvYmopCk9iamVjdDJKU09OKG9iaikKQ29weU9iamVjdChvYmopCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CigpID0+CnYgPT4KICBiID0+CkRyYXdMaXN0CiAgY29uc3RydWN0b3IoKQogIGluc2VydChpdGVtKQppdCA9PgppdCA9PgpBbGxQYXJlbnRzKGVsZW0pCiAgZ2V0VHJhbnNmb3JtYXRpb25MaXN0KGUpCkRlY29tcG9zZVRyYW5zZm9ybUxpc3QoZWxlbSkKICBkcmF3UmVjdChyZWN0LCBzdHJva2UgPSAnIzBmMCcpCkdldEVsZW1lbnRNYXRyaXgoZWxlbWVudCkKU2V0Q3Jvc3NoYWlyKHBvcykKRXZlbnRQb3NpdGlvbnMoZXZlbnRPclRvdWNoKQogIG4gPT4KICBuID0+CihhY2MsIGtleSkgPT4KUG9zaXRpb25NYXRyaXgoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpClBvc2l0aW9uTWF0cml4MihlbGVtZW50ID0gY2FudmFzRWxlbWVudCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpCnBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpUb3VjaFRyYW5zZm9ybWVyKHRmbiA9ICh4LCB5KSA9PiBbeCwgeV0pCnRvdWNoID0+ClRvdWNoUHJpbnRlcihpdGVyKQpHZW5lcmljUHJpbnRlcihpdGVyKQpUcmFuc2Zvcm1lcih0KQooaXRlcikKTW91c2VUb1RvdWNoKGV2ZW50KQpDYXRjaEl0ZXJhdG9yKGl0KQpUb3VjaEl0ZXJhdG9yKGVsZW1lbnQsIHQpCih4LCB5KSA9PgpNb3ZlSXRlcmF0b3IoZXZlbnRJdGVyYXRvcikKICBtYWluKCkKICBjaWQ6ICgpID0+CiAgY3VycmVudFVSTDogKCkgPT4KICBjdXJyZW50RmlsZTogKCkgPT4KUmVwYXJlbnQoY2FudmFzID0gZG9jdW1lbnQuCignY2FudmFzJylbMF0pCih2LCBpKSA9PgogIGFuaW1hdGlvbkZyYW1lID0gKG1pbkRlbGF5ID0gMCkgPT4KICByZXNvbHZlID0+CiAgcmVzb2x2ZSA9PgogIGFuaW1hdGlvbkZyYW1lKHQpCkxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQogIG9uT3BlbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgpJbnB1dEhhbmRsZXIoKQooKSA9PgooKSA9PgpTZW5kVHJhaWwoc3RhcnQgPSB0aW1lZ2VuLnN0YXJ0KQooKSA9PgooKSA9PgplcnJvciA9PgpJbml0KCkKICBjYW52YXNFbGVtZW50OiAoKSA9PgogIGRpdkVsZW1lbnQ6ICgpID0+CiAgaHRtbEVsZW1lbnQ6ICgpID0+CiAgZ2Z4UmVjdDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIHdpbmRvd1NpemU6ICgpID0+CiAgc2Nyb2xsUG9zOiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CigpID0+CnZhbHVlID0+ClNWR1BvbHlsaW5lID0gKHsgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIHB0ID0+ClNWR0NvbXBvbmVudCA9ICh7IGNpcmNsZSwgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIGZ1bmN0aW9uKCkKUmVzaXplSGFuZGxlcigpClBhcnNlSlNPTihzKQpSZXBsYXlUcmFpbCh0cmFpbCwgdGltZSA9IHBlcmZvcm1hbmNlLgorIDIwKQpOZXdXUyhoYW5kbGVycykKICBnZXQgd3MoKQogIGZ1bmN0aW9uKCkKTWFrZVVVSUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpNYWtlQ2xpZW50SUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpMb2FkV0FTTShmaWxlID0gJ2ZpcmUvYnVpbGQvZmlyZS53YXNtJykKRWxlbWVudE5hbWUoZSkKVGFyZ2V0TmFtZShlKQpHZXRSZWN0cygpClNlbmRXUyhtc2cpClRvZ2dsZUNsYXNzKGVsZW1lbnQsIG5hbWUpCiguLi5hcmdzKSA9PgogIHN5bmNIZWlnaHQoKQAAAAAAAAAAwwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					355,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1850,
								1856
							],
							[
								1883,
								1899
							],
							[
								2048,
								2058
							],
							[
								2080,
								2090
							],
							[
								2094,
								2105
							],
							[
								2118,
								2126
							],
							[
								2508,
								2529
							],
							[
								2628,
								2649
							],
							[
								2683,
								2711
							],
							[
								2756,
								2781
							],
							[
								2926,
								2950
							],
							[
								3405,
								3429
							],
							[
								3729,
								3756
							],
							[
								4093,
								4097
							],
							[
								4108,
								4114
							],
							[
								4132,
								4137
							],
							[
								4164,
								4168
							],
							[
								4371,
								4379
							],
							[
								4403,
								4416
							],
							[
								4439,
								4451
							],
							[
								4488,
								4494
							],
							[
								5052,
								5058
							],
							[
								5414,
								5440
							],
							[
								5582,
								5615
							],
							[
								5718,
								5755
							],
							[
								5978,
								6018
							],
							[
								6198,
								6232
							],
							[
								6328,
								6354
							],
							[
								6585,
								6622
							],
							[
								6691,
								6695
							],
							[
								6748,
								6752
							],
							[
								6801,
								6814
							],
							[
								6922,
								6955
							],
							[
								6967,
								6984
							],
							[
								7333,
								7382
							],
							[
								7796,
								7832
							],
							[
								7844,
								7861
							],
							[
								7945,
								7952
							],
							[
								8013,
								8042
							],
							[
								8083,
								8132
							],
							[
								8143,
								8152
							],
							[
								8268,
								8302
							],
							[
								8607,
								8643
							],
							[
								8742,
								8765
							],
							[
								8777,
								8799
							],
							[
								8857,
								8885
							],
							[
								9564,
								9597
							],
							[
								9755,
								9796
							],
							[
								10115,
								10124
							],
							[
								10627,
								10670
							],
							[
								11074,
								11089
							],
							[
								11349,
								11359
							],
							[
								11430,
								11447
							],
							[
								11482,
								11500
							],
							[
								11792,
								11830
							],
							[
								11850,
								11864
							],
							[
								12322,
								12331
							],
							[
								13068,
								13102
							],
							[
								13146,
								13156
							],
							[
								13251,
								13261
							],
							[
								13310,
								13342
							],
							[
								13462,
								13483
							],
							[
								13526,
								13544
							],
							[
								13625,
								13644
							],
							[
								13670,
								13691
							],
							[
								13846,
								13863
							],
							[
								15021,
								15030
							],
							[
								15111,
								15134
							],
							[
								15526,
								15567
							],
							[
								15572,
								15573
							],
							[
								15625,
								15662
							],
							[
								16033,
								16058
							],
							[
								16352,
								16380
							],
							[
								16654,
								16683
							],
							[
								17030,
								17038
							],
							[
								17264,
								17290
							],
							[
								17451,
								17462
							],
							[
								18005,
								18034
							],
							[
								18058,
								18063
							],
							[
								18140,
								18153
							],
							[
								19165,
								19212
							],
							[
								19591,
								19600
							],
							[
								19609,
								19618
							],
							[
								19625,
								19637
							],
							[
								19741,
								19756
							],
							[
								19883,
								19903
							],
							[
								19936,
								19953
							],
							[
								20002,
								20020
							],
							[
								20055,
								20069
							],
							[
								20191,
								20208
							],
							[
								20270,
								20287
							],
							[
								20343,
								20359
							],
							[
								20409,
								20424
							],
							[
								20462,
								20479
							],
							[
								20555,
								20560
							],
							[
								20636,
								20645
							],
							[
								21008,
								21047
							],
							[
								21083,
								21088
							],
							[
								21141,
								21189
							],
							[
								22299,
								22315
							],
							[
								22547,
								22571
							],
							[
								22875,
								22896
							],
							[
								23053,
								23100
							],
							[
								23105,
								23111
							],
							[
								23718,
								23742
							],
							[
								23914,
								23922
							],
							[
								23966,
								23982
							],
							[
								25077,
								25113
							],
							[
								25146,
								25150
							],
							[
								25202,
								25242
							],
							[
								25271,
								25275
							],
							[
								25390,
								25444
							],
							[
								25675,
								25698
							],
							[
								25811,
								25833
							],
							[
								25900,
								25919
							],
							[
								26264,
								26284
							],
							[
								26505,
								26540
							],
							[
								26551,
								26564
							],
							[
								26654,
								26675
							]
						],
						"symlist":
						[
							"key =>",
							" (key, value) =>",
							" v =>",
							" v =>",
							" () =>",
							" o =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function isNativeObject(obj)",
							"function Object2JSON(obj)",
							"function CopyObject(obj)",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function GetElementMatrix(element)",
							"function SetCrosshair(pos)",
							"function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							"function PositionMatrix(canvas = ",
							"('canvas'), rect)",
							"function PositionMatrix2(element = canvasElement)",
							"function PositionProcessor(canvas = ",
							"('canvas'), rect)",
							" pos =>",
							"function ProcessPosition(pos)",
							"function TouchTransformer(tfn = (x, y) => [x, y])",
							" touch =>",
							"async function* TouchPrinter(iter)",
							"async function* GenericPrinter(iter)",
							"function Transformer(t)",
							"async function* (iter)",
							"function MouseToTouch(event)",
							"async function* CatchIterator(it)",
							"async function* TouchIterator(element, t)",
							"(x, y) =>",
							"async function* MoveIterator(eventIterator)",
							"function main()",
							"cid: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							"(v, i) =>",
							"animationFrame = (minDelay = 0) =>",
							"resolve =>",
							"resolve =>",
							" function animationFrame(t)",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							"onOpen()",
							" function KeyHandler(key)",
							"async () =>",
							"async function InputHandler()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							" () =>",
							" () =>",
							" error =>",
							"function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"htmlElement: () =>",
							"gfxRect: () =>",
							"windowRect: () =>",
							"windowSize: () =>",
							"scrollPos: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"() =>",
							" value =>",
							"SVGPolyline = ({ points, ...props }) =>",
							"pt =>",
							"SVGComponent = ({ circle, points, ...props }) =>",
							"async function()",
							"function ResizeHandler()",
							"function ParseJSON(s)",
							"function ReplayTrail(trail, time = performance.",
							" + 20)",
							"function NewWS(handlers)",
							"get ws()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>",
							"async function LoadWASM(file = 'fire/build/fire.wasm')",
							"function ElementName(e)",
							"function TargetName(e)",
							"function GetRects()",
							"function SendWS(msg)",
							"function ToggleClass(element, name)",
							" (...args) =>",
							"function syncHeight()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADDBwAAICBrZXkgPT4KKGtleSwgdmFsdWUpID0+CnYgPT4KdiA9PgooKSA9PgpvID0+ClJhbmRvbUJ5dGUoKQpNb2R1bG8obiwgbSkKICBpc05hdGl2ZU9iamVjdChvYmopCk9iamVjdDJKU09OKG9iaikKQ29weU9iamVjdChvYmopCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CigpID0+CnYgPT4KICBiID0+CkRyYXdMaXN0CiAgY29uc3RydWN0b3IoKQogIGluc2VydChpdGVtKQppdCA9PgppdCA9PgpBbGxQYXJlbnRzKGVsZW0pCiAgZ2V0VHJhbnNmb3JtYXRpb25MaXN0KGUpCkRlY29tcG9zZVRyYW5zZm9ybUxpc3QoZWxlbSkKICBkcmF3UmVjdChyZWN0LCBzdHJva2UgPSAnIzBmMCcpCkdldEVsZW1lbnRNYXRyaXgoZWxlbWVudCkKU2V0Q3Jvc3NoYWlyKHBvcykKRXZlbnRQb3NpdGlvbnMoZXZlbnRPclRvdWNoKQogIG4gPT4KICBuID0+CihhY2MsIGtleSkgPT4KUG9zaXRpb25NYXRyaXgoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpClBvc2l0aW9uTWF0cml4MihlbGVtZW50ID0gY2FudmFzRWxlbWVudCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpCnBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpUb3VjaFRyYW5zZm9ybWVyKHRmbiA9ICh4LCB5KSA9PiBbeCwgeV0pCnRvdWNoID0+ClRvdWNoUHJpbnRlcihpdGVyKQpHZW5lcmljUHJpbnRlcihpdGVyKQpUcmFuc2Zvcm1lcih0KQooaXRlcikKTW91c2VUb1RvdWNoKGV2ZW50KQpDYXRjaEl0ZXJhdG9yKGl0KQpUb3VjaEl0ZXJhdG9yKGVsZW1lbnQsIHQpCih4LCB5KSA9PgpNb3ZlSXRlcmF0b3IoZXZlbnRJdGVyYXRvcikKICBtYWluKCkKICBjaWQ6ICgpID0+CiAgY3VycmVudFVSTDogKCkgPT4KICBjdXJyZW50RmlsZTogKCkgPT4KUmVwYXJlbnQoY2FudmFzID0gZG9jdW1lbnQuCignY2FudmFzJylbMF0pCih2LCBpKSA9PgogIGFuaW1hdGlvbkZyYW1lID0gKG1pbkRlbGF5ID0gMCkgPT4KICByZXNvbHZlID0+CiAgcmVzb2x2ZSA9PgogIGFuaW1hdGlvbkZyYW1lKHQpCkxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQogIG9uT3BlbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgpJbnB1dEhhbmRsZXIoKQooKSA9PgooKSA9PgpTZW5kVHJhaWwoc3RhcnQgPSB0aW1lZ2VuLnN0YXJ0KQooKSA9PgooKSA9PgplcnJvciA9PgpJbml0KCkKICBjYW52YXNFbGVtZW50OiAoKSA9PgogIGRpdkVsZW1lbnQ6ICgpID0+CiAgaHRtbEVsZW1lbnQ6ICgpID0+CiAgZ2Z4UmVjdDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIHdpbmRvd1NpemU6ICgpID0+CiAgc2Nyb2xsUG9zOiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CigpID0+CnZhbHVlID0+ClNWR1BvbHlsaW5lID0gKHsgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIHB0ID0+ClNWR0NvbXBvbmVudCA9ICh7IGNpcmNsZSwgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIGZ1bmN0aW9uKCkKUmVzaXplSGFuZGxlcigpClBhcnNlSlNPTihzKQpSZXBsYXlUcmFpbCh0cmFpbCwgdGltZSA9IHBlcmZvcm1hbmNlLgorIDIwKQpOZXdXUyhoYW5kbGVycykKICBnZXQgd3MoKQogIGZ1bmN0aW9uKCkKTWFrZVVVSUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpNYWtlQ2xpZW50SUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpMb2FkV0FTTShmaWxlID0gJ2ZpcmUvYnVpbGQvZmlyZS53YXNtJykKRWxlbWVudE5hbWUoZSkKVGFyZ2V0TmFtZShlKQpHZXRSZWN0cygpClNlbmRXUyhtc2cpClRvZ2dsZUNsYXNzKGVsZW1lbnQsIG5hbWUpCiguLi5hcmdzKSA9PgogIHN5bmNIZWlnaHQoKQAAAAAAAAAAwwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					356,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADDBwAAICBrZXkgPT4KKGtleSwgdmFsdWUpID0+CnYgPT4KdiA9PgooKSA9PgpvID0+ClJhbmRvbUJ5dGUoKQpNb2R1bG8obiwgbSkKICBpc05hdGl2ZU9iamVjdChvYmopCk9iamVjdDJKU09OKG9iaikKQ29weU9iamVjdChvYmopCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CigpID0+CnYgPT4KICBiID0+CkRyYXdMaXN0CiAgY29uc3RydWN0b3IoKQogIGluc2VydChpdGVtKQppdCA9PgppdCA9PgpBbGxQYXJlbnRzKGVsZW0pCiAgZ2V0VHJhbnNmb3JtYXRpb25MaXN0KGUpCkRlY29tcG9zZVRyYW5zZm9ybUxpc3QoZWxlbSkKICBkcmF3UmVjdChyZWN0LCBzdHJva2UgPSAnIzBmMCcpCkdldEVsZW1lbnRNYXRyaXgoZWxlbWVudCkKU2V0Q3Jvc3NoYWlyKHBvcykKRXZlbnRQb3NpdGlvbnMoZXZlbnRPclRvdWNoKQogIG4gPT4KICBuID0+CihhY2MsIGtleSkgPT4KUG9zaXRpb25NYXRyaXgoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpClBvc2l0aW9uTWF0cml4MihlbGVtZW50ID0gY2FudmFzRWxlbWVudCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpCnBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpUb3VjaFRyYW5zZm9ybWVyKHRmbiA9ICh4LCB5KSA9PiBbeCwgeV0pCnRvdWNoID0+ClRvdWNoUHJpbnRlcihpdGVyKQpHZW5lcmljUHJpbnRlcihpdGVyKQpUcmFuc2Zvcm1lcih0KQooaXRlcikKTW91c2VUb1RvdWNoKGV2ZW50KQpDYXRjaEl0ZXJhdG9yKGl0KQpUb3VjaEl0ZXJhdG9yKGVsZW1lbnQsIHQpCih4LCB5KSA9PgpNb3ZlSXRlcmF0b3IoZXZlbnRJdGVyYXRvcikKICBtYWluKCkKICBjaWQ6ICgpID0+CiAgY3VycmVudFVSTDogKCkgPT4KICBjdXJyZW50RmlsZTogKCkgPT4KUmVwYXJlbnQoY2FudmFzID0gZG9jdW1lbnQuCignY2FudmFzJylbMF0pCih2LCBpKSA9PgogIGFuaW1hdGlvbkZyYW1lID0gKG1pbkRlbGF5ID0gMCkgPT4KICByZXNvbHZlID0+CiAgcmVzb2x2ZSA9PgogIGFuaW1hdGlvbkZyYW1lKHQpCkxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQogIG9uT3BlbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgpJbnB1dEhhbmRsZXIoKQooKSA9PgooKSA9PgpTZW5kVHJhaWwoc3RhcnQgPSB0aW1lZ2VuLnN0YXJ0KQooKSA9PgooKSA9PgplcnJvciA9PgpJbml0KCkKICBjYW52YXNFbGVtZW50OiAoKSA9PgogIGRpdkVsZW1lbnQ6ICgpID0+CiAgaHRtbEVsZW1lbnQ6ICgpID0+CiAgZ2Z4UmVjdDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIHdpbmRvd1NpemU6ICgpID0+CiAgc2Nyb2xsUG9zOiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CigpID0+CnZhbHVlID0+ClNWR1BvbHlsaW5lID0gKHsgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIHB0ID0+ClNWR0NvbXBvbmVudCA9ICh7IGNpcmNsZSwgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIGZ1bmN0aW9uKCkKUmVzaXplSGFuZGxlcigpClBhcnNlSlNPTihzKQpSZXBsYXlUcmFpbCh0cmFpbCwgdGltZSA9IHBlcmZvcm1hbmNlLgorIDIwKQpOZXdXUyhoYW5kbGVycykKICBnZXQgd3MoKQogIGZ1bmN0aW9uKCkKTWFrZVVVSUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpNYWtlQ2xpZW50SUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpMb2FkV0FTTShmaWxlID0gJ2ZpcmUvYnVpbGQvZmlyZS53YXNtJykKRWxlbWVudE5hbWUoZSkKVGFyZ2V0TmFtZShlKQpHZXRSZWN0cygpClNlbmRXUyhtc2cpClRvZ2dsZUNsYXNzKGVsZW1lbnQsIG5hbWUpCiguLi5hcmdzKSA9PgogIHN5bmNIZWlnaHQoKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					357,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1850,
								1856
							],
							[
								1883,
								1899
							],
							[
								2048,
								2058
							],
							[
								2080,
								2090
							],
							[
								2094,
								2105
							],
							[
								2118,
								2126
							],
							[
								2508,
								2529
							],
							[
								2628,
								2649
							],
							[
								2683,
								2711
							],
							[
								2756,
								2781
							],
							[
								2926,
								2950
							],
							[
								3405,
								3429
							],
							[
								3729,
								3756
							],
							[
								4093,
								4097
							],
							[
								4108,
								4114
							],
							[
								4132,
								4137
							],
							[
								4164,
								4168
							],
							[
								4371,
								4379
							],
							[
								4403,
								4416
							],
							[
								4439,
								4451
							],
							[
								4488,
								4494
							],
							[
								5052,
								5058
							],
							[
								5414,
								5440
							],
							[
								5582,
								5615
							],
							[
								5718,
								5755
							],
							[
								5978,
								6018
							],
							[
								6198,
								6232
							],
							[
								6328,
								6354
							],
							[
								6585,
								6622
							],
							[
								6691,
								6695
							],
							[
								6748,
								6752
							],
							[
								6801,
								6814
							],
							[
								6922,
								6955
							],
							[
								6967,
								6984
							],
							[
								7333,
								7382
							],
							[
								7796,
								7832
							],
							[
								7844,
								7861
							],
							[
								7945,
								7952
							],
							[
								8013,
								8042
							],
							[
								8083,
								8132
							],
							[
								8143,
								8152
							],
							[
								8268,
								8302
							],
							[
								8607,
								8643
							],
							[
								8742,
								8765
							],
							[
								8777,
								8799
							],
							[
								8857,
								8885
							],
							[
								9564,
								9597
							],
							[
								9755,
								9796
							],
							[
								10115,
								10124
							],
							[
								10627,
								10670
							],
							[
								11074,
								11089
							],
							[
								11349,
								11359
							],
							[
								11430,
								11447
							],
							[
								11482,
								11500
							],
							[
								11792,
								11830
							],
							[
								11850,
								11864
							],
							[
								12322,
								12331
							],
							[
								13068,
								13102
							],
							[
								13146,
								13156
							],
							[
								13251,
								13261
							],
							[
								13310,
								13342
							],
							[
								13462,
								13483
							],
							[
								13526,
								13544
							],
							[
								13625,
								13644
							],
							[
								13670,
								13691
							],
							[
								13846,
								13863
							],
							[
								15021,
								15030
							],
							[
								15111,
								15134
							],
							[
								15526,
								15567
							],
							[
								15572,
								15573
							],
							[
								15625,
								15662
							],
							[
								16033,
								16058
							],
							[
								16352,
								16380
							],
							[
								16654,
								16683
							],
							[
								17030,
								17038
							],
							[
								17264,
								17290
							],
							[
								17451,
								17462
							],
							[
								18005,
								18034
							],
							[
								18058,
								18063
							],
							[
								18140,
								18153
							],
							[
								19165,
								19212
							],
							[
								19591,
								19600
							],
							[
								19609,
								19618
							],
							[
								19625,
								19637
							],
							[
								19741,
								19756
							],
							[
								19883,
								19903
							],
							[
								19936,
								19953
							],
							[
								20002,
								20020
							],
							[
								20055,
								20069
							],
							[
								20191,
								20208
							],
							[
								20270,
								20287
							],
							[
								20343,
								20359
							],
							[
								20409,
								20424
							],
							[
								20462,
								20479
							],
							[
								20555,
								20560
							],
							[
								20636,
								20645
							],
							[
								21008,
								21047
							],
							[
								21083,
								21088
							],
							[
								21141,
								21189
							],
							[
								22299,
								22315
							],
							[
								22547,
								22571
							],
							[
								22875,
								22896
							],
							[
								23053,
								23100
							],
							[
								23105,
								23111
							],
							[
								23718,
								23742
							],
							[
								23914,
								23922
							],
							[
								23966,
								23982
							],
							[
								25077,
								25113
							],
							[
								25146,
								25150
							],
							[
								25202,
								25242
							],
							[
								25271,
								25275
							],
							[
								25390,
								25444
							],
							[
								25675,
								25698
							],
							[
								25811,
								25833
							],
							[
								25900,
								25919
							],
							[
								26264,
								26284
							],
							[
								26505,
								26540
							],
							[
								26551,
								26564
							],
							[
								26654,
								26675
							]
						],
						"symlist":
						[
							"key =>",
							" (key, value) =>",
							" v =>",
							" v =>",
							" () =>",
							" o =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function isNativeObject(obj)",
							"function Object2JSON(obj)",
							"function CopyObject(obj)",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function GetElementMatrix(element)",
							"function SetCrosshair(pos)",
							"function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							"function PositionMatrix(canvas = ",
							"('canvas'), rect)",
							"function PositionMatrix2(element = canvasElement)",
							"function PositionProcessor(canvas = ",
							"('canvas'), rect)",
							" pos =>",
							"function ProcessPosition(pos)",
							"function TouchTransformer(tfn = (x, y) => [x, y])",
							" touch =>",
							"async function* TouchPrinter(iter)",
							"async function* GenericPrinter(iter)",
							"function Transformer(t)",
							"async function* (iter)",
							"function MouseToTouch(event)",
							"async function* CatchIterator(it)",
							"async function* TouchIterator(element, t)",
							"(x, y) =>",
							"async function* MoveIterator(eventIterator)",
							"function main()",
							"cid: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							"(v, i) =>",
							"animationFrame = (minDelay = 0) =>",
							"resolve =>",
							"resolve =>",
							" function animationFrame(t)",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							"onOpen()",
							" function KeyHandler(key)",
							"async () =>",
							"async function InputHandler()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							" () =>",
							" () =>",
							" error =>",
							"function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"htmlElement: () =>",
							"gfxRect: () =>",
							"windowRect: () =>",
							"windowSize: () =>",
							"scrollPos: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"() =>",
							" value =>",
							"SVGPolyline = ({ points, ...props }) =>",
							"pt =>",
							"SVGComponent = ({ circle, points, ...props }) =>",
							"async function()",
							"function ResizeHandler()",
							"function ParseJSON(s)",
							"function ReplayTrail(trail, time = performance.",
							" + 20)",
							"function NewWS(handlers)",
							"get ws()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>",
							"async function LoadWASM(file = 'fire/build/fire.wasm')",
							"function ElementName(e)",
							"function TargetName(e)",
							"function GetRects()",
							"function SendWS(msg)",
							"function ToggleClass(element, name)",
							" (...args) =>",
							"function syncHeight()"
						]
					},
					"AwAAAAAAAAAAAAAAwwcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMMHAAAgIGtleSA9Pgooa2V5LCB2YWx1ZSkgPT4KdiA9Pgp2ID0+CigpID0+Cm8gPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQogIGlzTmF0aXZlT2JqZWN0KG9iaikKT2JqZWN0MkpTT04ob2JqKQpDb3B5T2JqZWN0KG9iaikKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KKCkgPT4KdiA9PgogIGIgPT4KRHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCml0ID0+Cml0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSAKKCdjYW52YXMnKSwgcmVjdCkKUG9zaXRpb25NYXRyaXgyKGVsZW1lbnQgPSBjYW52YXNFbGVtZW50KQpQb3NpdGlvblByb2Nlc3NvcihjYW52YXMgPSAKKCdjYW52YXMnKSwgcmVjdCkKcG9zID0+ClByb2Nlc3NQb3NpdGlvbihwb3MpClRvdWNoVHJhbnNmb3JtZXIodGZuID0gKHgsIHkpID0+IFt4LCB5XSkKdG91Y2ggPT4KVG91Y2hQcmludGVyKGl0ZXIpCkdlbmVyaWNQcmludGVyKGl0ZXIpClRyYW5zZm9ybWVyKHQpCihpdGVyKQpNb3VzZVRvVG91Y2goZXZlbnQpCkNhdGNoSXRlcmF0b3IoaXQpClRvdWNoSXRlcmF0b3IoZWxlbWVudCwgdCkKKHgsIHkpID0+Ck1vdmVJdGVyYXRvcihldmVudEl0ZXJhdG9yKQogIG1haW4oKQogIGNpZDogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKKHYsIGkpID0+CiAgYW5pbWF0aW9uRnJhbWUgPSAobWluRGVsYXkgPSAwKSA9PgogIHJlc29sdmUgPT4KICByZXNvbHZlID0+CiAgYW5pbWF0aW9uRnJhbWUodCkKTG9vcCgpCiAgbG9nID0gKHQsIG5hbWUpID0+CiAgZmlyZSA9ICguLi5hcmdzKSA9PgogIHJlZHJhdyA9ICguLi5hcmdzKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkRyYXcoeCwgeSwgdGltZSA9IHBlcmZvcm1hbmNlLgopCkJyZXNlbmhhbSh4MCwgeTAsIHgxLCB5MSkKQmxhemUoeCwgeSwgcikKUHV0QXJyYXkoeCwgeSwgYSkKUHV0QXJyYXkyKHgsIHksIGEpCiAgb25PcGVuKCkKS2V5SGFuZGxlcihrZXkpCigpID0+CklucHV0SGFuZGxlcigpCigpID0+CigpID0+ClNlbmRUcmFpbChzdGFydCA9IHRpbWVnZW4uc3RhcnQpCigpID0+CigpID0+CmVycm9yID0+CkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICBodG1sRWxlbWVudDogKCkgPT4KICBnZnhSZWN0OiAoKSA9PgogIHdpbmRvd1JlY3Q6ICgpID0+CiAgd2luZG93U2l6ZTogKCkgPT4KICBzY3JvbGxQb3M6ICgpID0+CiAgYm9keVJlY3Q6ICgpID0+CiAgY2FudmFzUmVjdDogKCkgPT4KKCkgPT4KdmFsdWUgPT4KU1ZHUG9seWxpbmUgPSAoeyBwb2ludHMsIC4uLnByb3BzIH0pID0+CiAgcHQgPT4KU1ZHQ29tcG9uZW50ID0gKHsgY2lyY2xlLCBwb2ludHMsIC4uLnByb3BzIH0pID0+CiAgZnVuY3Rpb24oKQpSZXNpemVIYW5kbGVyKCkKUGFyc2VKU09OKHMpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCisgMjApCk5ld1dTKGhhbmRsZXJzKQogIGdldCB3cygpCiAgZnVuY3Rpb24oKQpNYWtlVVVJRChybmcgPSBNYXRoLnJhbmRvbSkKICBuID0+Ck1ha2VDbGllbnRJRChybmcgPSBNYXRoLnJhbmRvbSkKICBuID0+CkxvYWRXQVNNKGZpbGUgPSAnZmlyZS9idWlsZC9maXJlLndhc20nKQpFbGVtZW50TmFtZShlKQpUYXJnZXROYW1lKGUpCkdldFJlY3RzKCkKU2VuZFdTKG1zZykKVG9nZ2xlQ2xhc3MoZWxlbWVudCwgbmFtZSkKKC4uLmFyZ3MpID0+CiAgc3luY0hlaWdodCgpAAAAAAAAAADDBwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					358,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1850,
								1856
							],
							[
								1883,
								1899
							],
							[
								2048,
								2058
							],
							[
								2080,
								2090
							],
							[
								2094,
								2105
							],
							[
								2118,
								2126
							],
							[
								2508,
								2529
							],
							[
								2628,
								2649
							],
							[
								2683,
								2711
							],
							[
								2756,
								2781
							],
							[
								2926,
								2950
							],
							[
								3405,
								3429
							],
							[
								3729,
								3756
							],
							[
								4093,
								4097
							],
							[
								4108,
								4114
							],
							[
								4132,
								4137
							],
							[
								4164,
								4168
							],
							[
								4371,
								4379
							],
							[
								4403,
								4416
							],
							[
								4439,
								4451
							],
							[
								4488,
								4494
							],
							[
								5052,
								5058
							],
							[
								5414,
								5440
							],
							[
								5582,
								5615
							],
							[
								5718,
								5755
							],
							[
								5978,
								6018
							],
							[
								6198,
								6232
							],
							[
								6328,
								6354
							],
							[
								6585,
								6622
							],
							[
								6691,
								6695
							],
							[
								6748,
								6752
							],
							[
								6801,
								6814
							],
							[
								6922,
								6955
							],
							[
								6967,
								6984
							],
							[
								7333,
								7382
							],
							[
								7796,
								7832
							],
							[
								7844,
								7861
							],
							[
								7945,
								7952
							],
							[
								8013,
								8042
							],
							[
								8083,
								8132
							],
							[
								8143,
								8152
							],
							[
								8268,
								8302
							],
							[
								8607,
								8643
							],
							[
								8742,
								8765
							],
							[
								8777,
								8799
							],
							[
								8857,
								8885
							],
							[
								9564,
								9597
							],
							[
								9755,
								9796
							],
							[
								10115,
								10124
							],
							[
								10627,
								10670
							],
							[
								11074,
								11089
							],
							[
								11349,
								11359
							],
							[
								11430,
								11447
							],
							[
								11482,
								11500
							],
							[
								11792,
								11830
							],
							[
								11850,
								11864
							],
							[
								12322,
								12331
							],
							[
								13068,
								13102
							],
							[
								13146,
								13156
							],
							[
								13251,
								13261
							],
							[
								13310,
								13342
							],
							[
								13462,
								13483
							],
							[
								13526,
								13544
							],
							[
								13625,
								13644
							],
							[
								13670,
								13691
							],
							[
								13846,
								13863
							],
							[
								15021,
								15030
							],
							[
								15111,
								15134
							],
							[
								15526,
								15567
							],
							[
								15572,
								15573
							],
							[
								15625,
								15662
							],
							[
								16033,
								16058
							],
							[
								16352,
								16380
							],
							[
								16654,
								16683
							],
							[
								17030,
								17038
							],
							[
								17264,
								17290
							],
							[
								17451,
								17462
							],
							[
								18005,
								18034
							],
							[
								18058,
								18063
							],
							[
								18140,
								18153
							],
							[
								19245,
								19292
							],
							[
								19686,
								19695
							],
							[
								19704,
								19713
							],
							[
								19720,
								19732
							],
							[
								19836,
								19851
							],
							[
								19978,
								19998
							],
							[
								20031,
								20048
							],
							[
								20097,
								20115
							],
							[
								20150,
								20164
							],
							[
								20286,
								20303
							],
							[
								20365,
								20382
							],
							[
								20438,
								20454
							],
							[
								20504,
								20519
							],
							[
								20557,
								20574
							],
							[
								20650,
								20655
							],
							[
								20731,
								20740
							],
							[
								21103,
								21142
							],
							[
								21178,
								21183
							],
							[
								21236,
								21284
							],
							[
								22394,
								22410
							],
							[
								22642,
								22666
							],
							[
								22970,
								22991
							],
							[
								23148,
								23195
							],
							[
								23200,
								23206
							],
							[
								23813,
								23837
							],
							[
								24009,
								24017
							],
							[
								24061,
								24077
							],
							[
								25172,
								25208
							],
							[
								25241,
								25245
							],
							[
								25297,
								25337
							],
							[
								25366,
								25370
							],
							[
								25485,
								25539
							],
							[
								25770,
								25793
							],
							[
								25906,
								25928
							],
							[
								25995,
								26014
							],
							[
								26359,
								26379
							],
							[
								26600,
								26635
							],
							[
								26646,
								26659
							],
							[
								26749,
								26770
							]
						],
						"symlist":
						[
							"key =>",
							" (key, value) =>",
							" v =>",
							" v =>",
							" () =>",
							" o =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function isNativeObject(obj)",
							"function Object2JSON(obj)",
							"function CopyObject(obj)",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function GetElementMatrix(element)",
							"function SetCrosshair(pos)",
							"function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							"function PositionMatrix(canvas = ",
							"('canvas'), rect)",
							"function PositionMatrix2(element = canvasElement)",
							"function PositionProcessor(canvas = ",
							"('canvas'), rect)",
							" pos =>",
							"function ProcessPosition(pos)",
							"function TouchTransformer(tfn = (x, y) => [x, y])",
							" touch =>",
							"async function* TouchPrinter(iter)",
							"async function* GenericPrinter(iter)",
							"function Transformer(t)",
							"async function* (iter)",
							"function MouseToTouch(event)",
							"async function* CatchIterator(it)",
							"async function* TouchIterator(element, t)",
							"(x, y) =>",
							"async function* MoveIterator(eventIterator)",
							"function main()",
							"cid: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							"(v, i) =>",
							"animationFrame = (minDelay = 0) =>",
							"resolve =>",
							"resolve =>",
							" function animationFrame(t)",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							"onOpen()",
							" function KeyHandler(key)",
							"async () =>",
							"async function InputHandler()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							" () =>",
							" () =>",
							" error =>",
							"function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"htmlElement: () =>",
							"gfxRect: () =>",
							"windowRect: () =>",
							"windowSize: () =>",
							"scrollPos: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"() =>",
							" value =>",
							"SVGPolyline = ({ points, ...props }) =>",
							"pt =>",
							"SVGComponent = ({ circle, points, ...props }) =>",
							"async function()",
							"function ResizeHandler()",
							"function ParseJSON(s)",
							"function ReplayTrail(trail, time = performance.",
							" + 20)",
							"function NewWS(handlers)",
							"get ws()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>",
							"async function LoadWASM(file = 'fire/build/fire.wasm')",
							"function ElementName(e)",
							"function TargetName(e)",
							"function GetRects()",
							"function SendWS(msg)",
							"function ToggleClass(element, name)",
							" (...args) =>",
							"function syncHeight()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADDBwAAICBrZXkgPT4KKGtleSwgdmFsdWUpID0+CnYgPT4KdiA9PgooKSA9PgpvID0+ClJhbmRvbUJ5dGUoKQpNb2R1bG8obiwgbSkKICBpc05hdGl2ZU9iamVjdChvYmopCk9iamVjdDJKU09OKG9iaikKQ29weU9iamVjdChvYmopCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CigpID0+CnYgPT4KICBiID0+CkRyYXdMaXN0CiAgY29uc3RydWN0b3IoKQogIGluc2VydChpdGVtKQppdCA9PgppdCA9PgpBbGxQYXJlbnRzKGVsZW0pCiAgZ2V0VHJhbnNmb3JtYXRpb25MaXN0KGUpCkRlY29tcG9zZVRyYW5zZm9ybUxpc3QoZWxlbSkKICBkcmF3UmVjdChyZWN0LCBzdHJva2UgPSAnIzBmMCcpCkdldEVsZW1lbnRNYXRyaXgoZWxlbWVudCkKU2V0Q3Jvc3NoYWlyKHBvcykKRXZlbnRQb3NpdGlvbnMoZXZlbnRPclRvdWNoKQogIG4gPT4KICBuID0+CihhY2MsIGtleSkgPT4KUG9zaXRpb25NYXRyaXgoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpClBvc2l0aW9uTWF0cml4MihlbGVtZW50ID0gY2FudmFzRWxlbWVudCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpCnBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpUb3VjaFRyYW5zZm9ybWVyKHRmbiA9ICh4LCB5KSA9PiBbeCwgeV0pCnRvdWNoID0+ClRvdWNoUHJpbnRlcihpdGVyKQpHZW5lcmljUHJpbnRlcihpdGVyKQpUcmFuc2Zvcm1lcih0KQooaXRlcikKTW91c2VUb1RvdWNoKGV2ZW50KQpDYXRjaEl0ZXJhdG9yKGl0KQpUb3VjaEl0ZXJhdG9yKGVsZW1lbnQsIHQpCih4LCB5KSA9PgpNb3ZlSXRlcmF0b3IoZXZlbnRJdGVyYXRvcikKICBtYWluKCkKICBjaWQ6ICgpID0+CiAgY3VycmVudFVSTDogKCkgPT4KICBjdXJyZW50RmlsZTogKCkgPT4KUmVwYXJlbnQoY2FudmFzID0gZG9jdW1lbnQuCignY2FudmFzJylbMF0pCih2LCBpKSA9PgogIGFuaW1hdGlvbkZyYW1lID0gKG1pbkRlbGF5ID0gMCkgPT4KICByZXNvbHZlID0+CiAgcmVzb2x2ZSA9PgogIGFuaW1hdGlvbkZyYW1lKHQpCkxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQogIG9uT3BlbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgpJbnB1dEhhbmRsZXIoKQooKSA9PgooKSA9PgpTZW5kVHJhaWwoc3RhcnQgPSB0aW1lZ2VuLnN0YXJ0KQooKSA9PgooKSA9PgplcnJvciA9PgpJbml0KCkKICBjYW52YXNFbGVtZW50OiAoKSA9PgogIGRpdkVsZW1lbnQ6ICgpID0+CiAgaHRtbEVsZW1lbnQ6ICgpID0+CiAgZ2Z4UmVjdDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIHdpbmRvd1NpemU6ICgpID0+CiAgc2Nyb2xsUG9zOiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CigpID0+CnZhbHVlID0+ClNWR1BvbHlsaW5lID0gKHsgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIHB0ID0+ClNWR0NvbXBvbmVudCA9ICh7IGNpcmNsZSwgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIGZ1bmN0aW9uKCkKUmVzaXplSGFuZGxlcigpClBhcnNlSlNPTihzKQpSZXBsYXlUcmFpbCh0cmFpbCwgdGltZSA9IHBlcmZvcm1hbmNlLgorIDIwKQpOZXdXUyhoYW5kbGVycykKICBnZXQgd3MoKQogIGZ1bmN0aW9uKCkKTWFrZVVVSUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpNYWtlQ2xpZW50SUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpMb2FkV0FTTShmaWxlID0gJ2ZpcmUvYnVpbGQvZmlyZS53YXNtJykKRWxlbWVudE5hbWUoZSkKVGFyZ2V0TmFtZShlKQpHZXRSZWN0cygpClNlbmRXUyhtc2cpClRvZ2dsZUNsYXNzKGVsZW1lbnQsIG5hbWUpCiguLi5hcmdzKSA9PgogIHN5bmNIZWlnaHQoKQAAAAAAAAAAwwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					359,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1850,
								1856
							],
							[
								1883,
								1899
							],
							[
								2048,
								2058
							],
							[
								2080,
								2090
							],
							[
								2094,
								2105
							],
							[
								2118,
								2126
							],
							[
								2508,
								2529
							],
							[
								2628,
								2649
							],
							[
								2683,
								2711
							],
							[
								2756,
								2781
							],
							[
								2926,
								2950
							],
							[
								3405,
								3429
							],
							[
								3729,
								3756
							],
							[
								4093,
								4097
							],
							[
								4108,
								4114
							],
							[
								4132,
								4137
							],
							[
								4164,
								4168
							],
							[
								4371,
								4379
							],
							[
								4403,
								4416
							],
							[
								4439,
								4451
							],
							[
								4488,
								4494
							],
							[
								5052,
								5058
							],
							[
								5414,
								5440
							],
							[
								5582,
								5615
							],
							[
								5718,
								5755
							],
							[
								5978,
								6018
							],
							[
								6198,
								6232
							],
							[
								6328,
								6354
							],
							[
								6585,
								6622
							],
							[
								6691,
								6695
							],
							[
								6748,
								6752
							],
							[
								6801,
								6814
							],
							[
								6922,
								6955
							],
							[
								6967,
								6984
							],
							[
								7333,
								7382
							],
							[
								7796,
								7832
							],
							[
								7844,
								7861
							],
							[
								7945,
								7952
							],
							[
								8013,
								8042
							],
							[
								8083,
								8132
							],
							[
								8143,
								8152
							],
							[
								8268,
								8302
							],
							[
								8607,
								8643
							],
							[
								8742,
								8765
							],
							[
								8777,
								8799
							],
							[
								8857,
								8885
							],
							[
								9564,
								9597
							],
							[
								9755,
								9796
							],
							[
								10115,
								10124
							],
							[
								10627,
								10670
							],
							[
								11074,
								11089
							],
							[
								11349,
								11359
							],
							[
								11430,
								11447
							],
							[
								11482,
								11500
							],
							[
								11792,
								11830
							],
							[
								11850,
								11864
							],
							[
								12322,
								12331
							],
							[
								13068,
								13102
							],
							[
								13146,
								13156
							],
							[
								13251,
								13261
							],
							[
								13310,
								13342
							],
							[
								13462,
								13483
							],
							[
								13526,
								13544
							],
							[
								13625,
								13644
							],
							[
								13670,
								13691
							],
							[
								13846,
								13863
							],
							[
								15028,
								15037
							],
							[
								15118,
								15141
							],
							[
								15533,
								15574
							],
							[
								15579,
								15580
							],
							[
								15632,
								15669
							],
							[
								16055,
								16080
							],
							[
								16222,
								16250
							],
							[
								16508,
								16537
							],
							[
								16868,
								16876
							],
							[
								17102,
								17128
							],
							[
								17289,
								17300
							],
							[
								17651,
								17680
							],
							[
								17704,
								17709
							],
							[
								17789,
								17802
							],
							[
								18894,
								18941
							],
							[
								19335,
								19344
							],
							[
								19353,
								19362
							],
							[
								19369,
								19381
							],
							[
								19485,
								19500
							],
							[
								19627,
								19647
							],
							[
								19680,
								19697
							],
							[
								19746,
								19764
							],
							[
								19799,
								19813
							],
							[
								19935,
								19952
							],
							[
								20014,
								20031
							],
							[
								20087,
								20103
							],
							[
								20153,
								20168
							],
							[
								20206,
								20223
							],
							[
								20299,
								20304
							],
							[
								20380,
								20389
							],
							[
								20752,
								20791
							],
							[
								20827,
								20832
							],
							[
								20885,
								20933
							],
							[
								22043,
								22059
							],
							[
								22291,
								22315
							],
							[
								22619,
								22640
							],
							[
								22797,
								22844
							],
							[
								22849,
								22855
							],
							[
								23462,
								23486
							],
							[
								23658,
								23666
							],
							[
								23710,
								23726
							],
							[
								24821,
								24857
							],
							[
								24890,
								24894
							],
							[
								24946,
								24986
							],
							[
								25015,
								25019
							],
							[
								25134,
								25188
							],
							[
								25419,
								25442
							],
							[
								25555,
								25577
							],
							[
								25644,
								25663
							],
							[
								26008,
								26028
							],
							[
								26249,
								26284
							],
							[
								26295,
								26308
							],
							[
								26398,
								26419
							]
						],
						"symlist":
						[
							"key =>",
							" (key, value) =>",
							" v =>",
							" v =>",
							" () =>",
							" o =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function isNativeObject(obj)",
							"function Object2JSON(obj)",
							"function CopyObject(obj)",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function GetElementMatrix(element)",
							"function SetCrosshair(pos)",
							"function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							"function PositionMatrix(canvas = ",
							"('canvas'), rect)",
							"function PositionMatrix2(element = canvasElement)",
							"function PositionProcessor(canvas = ",
							"('canvas'), rect)",
							" pos =>",
							"function ProcessPosition(pos)",
							"function TouchTransformer(tfn = (x, y) => [x, y])",
							" touch =>",
							"async function* TouchPrinter(iter)",
							"async function* GenericPrinter(iter)",
							"function Transformer(t)",
							"async function* (iter)",
							"function MouseToTouch(event)",
							"async function* CatchIterator(it)",
							"async function* TouchIterator(element, t)",
							"(x, y) =>",
							"async function* MoveIterator(eventIterator)",
							"function main()",
							"cid: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							"(v, i) =>",
							"animationFrame = (minDelay = 0) =>",
							"resolve =>",
							"resolve =>",
							" function animationFrame(t)",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							"onOpen()",
							" function KeyHandler(key)",
							"async () =>",
							"async function InputHandler()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							" () =>",
							" () =>",
							" error =>",
							"function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"htmlElement: () =>",
							"gfxRect: () =>",
							"windowRect: () =>",
							"windowSize: () =>",
							"scrollPos: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"() =>",
							" value =>",
							"SVGPolyline = ({ points, ...props }) =>",
							"pt =>",
							"SVGComponent = ({ circle, points, ...props }) =>",
							"async function()",
							"function ResizeHandler()",
							"function ParseJSON(s)",
							"function ReplayTrail(trail, time = performance.",
							" + 20)",
							"function NewWS(handlers)",
							"get ws()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>",
							"async function LoadWASM(file = 'fire/build/fire.wasm')",
							"function ElementName(e)",
							"function TargetName(e)",
							"function GetRects()",
							"function SendWS(msg)",
							"function ToggleClass(element, name)",
							" (...args) =>",
							"function syncHeight()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADDBwAAICBrZXkgPT4KKGtleSwgdmFsdWUpID0+CnYgPT4KdiA9PgooKSA9PgpvID0+ClJhbmRvbUJ5dGUoKQpNb2R1bG8obiwgbSkKICBpc05hdGl2ZU9iamVjdChvYmopCk9iamVjdDJKU09OKG9iaikKQ29weU9iamVjdChvYmopCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CigpID0+CnYgPT4KICBiID0+CkRyYXdMaXN0CiAgY29uc3RydWN0b3IoKQogIGluc2VydChpdGVtKQppdCA9PgppdCA9PgpBbGxQYXJlbnRzKGVsZW0pCiAgZ2V0VHJhbnNmb3JtYXRpb25MaXN0KGUpCkRlY29tcG9zZVRyYW5zZm9ybUxpc3QoZWxlbSkKICBkcmF3UmVjdChyZWN0LCBzdHJva2UgPSAnIzBmMCcpCkdldEVsZW1lbnRNYXRyaXgoZWxlbWVudCkKU2V0Q3Jvc3NoYWlyKHBvcykKRXZlbnRQb3NpdGlvbnMoZXZlbnRPclRvdWNoKQogIG4gPT4KICBuID0+CihhY2MsIGtleSkgPT4KUG9zaXRpb25NYXRyaXgoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpClBvc2l0aW9uTWF0cml4MihlbGVtZW50ID0gY2FudmFzRWxlbWVudCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpCnBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpUb3VjaFRyYW5zZm9ybWVyKHRmbiA9ICh4LCB5KSA9PiBbeCwgeV0pCnRvdWNoID0+ClRvdWNoUHJpbnRlcihpdGVyKQpHZW5lcmljUHJpbnRlcihpdGVyKQpUcmFuc2Zvcm1lcih0KQooaXRlcikKTW91c2VUb1RvdWNoKGV2ZW50KQpDYXRjaEl0ZXJhdG9yKGl0KQpUb3VjaEl0ZXJhdG9yKGVsZW1lbnQsIHQpCih4LCB5KSA9PgpNb3ZlSXRlcmF0b3IoZXZlbnRJdGVyYXRvcikKICBtYWluKCkKICBjaWQ6ICgpID0+CiAgY3VycmVudFVSTDogKCkgPT4KICBjdXJyZW50RmlsZTogKCkgPT4KUmVwYXJlbnQoY2FudmFzID0gZG9jdW1lbnQuCignY2FudmFzJylbMF0pCih2LCBpKSA9PgogIGFuaW1hdGlvbkZyYW1lID0gKG1pbkRlbGF5ID0gMCkgPT4KICByZXNvbHZlID0+CiAgcmVzb2x2ZSA9PgogIGFuaW1hdGlvbkZyYW1lKHQpCkxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQogIG9uT3BlbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgpJbnB1dEhhbmRsZXIoKQooKSA9PgooKSA9PgpTZW5kVHJhaWwoc3RhcnQgPSB0aW1lZ2VuLnN0YXJ0KQooKSA9PgooKSA9PgplcnJvciA9PgpJbml0KCkKICBjYW52YXNFbGVtZW50OiAoKSA9PgogIGRpdkVsZW1lbnQ6ICgpID0+CiAgaHRtbEVsZW1lbnQ6ICgpID0+CiAgZ2Z4UmVjdDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIHdpbmRvd1NpemU6ICgpID0+CiAgc2Nyb2xsUG9zOiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CigpID0+CnZhbHVlID0+ClNWR1BvbHlsaW5lID0gKHsgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIHB0ID0+ClNWR0NvbXBvbmVudCA9ICh7IGNpcmNsZSwgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIGZ1bmN0aW9uKCkKUmVzaXplSGFuZGxlcigpClBhcnNlSlNPTihzKQpSZXBsYXlUcmFpbCh0cmFpbCwgdGltZSA9IHBlcmZvcm1hbmNlLgorIDIwKQpOZXdXUyhoYW5kbGVycykKICBnZXQgd3MoKQogIGZ1bmN0aW9uKCkKTWFrZVVVSUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpNYWtlQ2xpZW50SUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpMb2FkV0FTTShmaWxlID0gJ2ZpcmUvYnVpbGQvZmlyZS53YXNtJykKRWxlbWVudE5hbWUoZSkKVGFyZ2V0TmFtZShlKQpHZXRSZWN0cygpClNlbmRXUyhtc2cpClRvZ2dsZUNsYXNzKGVsZW1lbnQsIG5hbWUpCiguLi5hcmdzKSA9PgogIHN5bmNIZWlnaHQoKQAAAAAAAAAAwwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					360,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1850,
								1856
							],
							[
								1883,
								1899
							],
							[
								2048,
								2058
							],
							[
								2080,
								2090
							],
							[
								2094,
								2105
							],
							[
								2118,
								2126
							],
							[
								2508,
								2529
							],
							[
								2628,
								2649
							],
							[
								2683,
								2711
							],
							[
								2756,
								2781
							],
							[
								2926,
								2950
							],
							[
								3405,
								3429
							],
							[
								3729,
								3756
							],
							[
								4093,
								4097
							],
							[
								4108,
								4114
							],
							[
								4132,
								4137
							],
							[
								4164,
								4168
							],
							[
								4371,
								4379
							],
							[
								4403,
								4416
							],
							[
								4439,
								4451
							],
							[
								4488,
								4494
							],
							[
								5052,
								5058
							],
							[
								5414,
								5440
							],
							[
								5582,
								5615
							],
							[
								5718,
								5755
							],
							[
								5978,
								6018
							],
							[
								6198,
								6232
							],
							[
								6328,
								6354
							],
							[
								6585,
								6622
							],
							[
								6691,
								6695
							],
							[
								6748,
								6752
							],
							[
								6801,
								6814
							],
							[
								6922,
								6955
							],
							[
								6967,
								6984
							],
							[
								7333,
								7382
							],
							[
								7796,
								7832
							],
							[
								7844,
								7861
							],
							[
								7945,
								7952
							],
							[
								8013,
								8042
							],
							[
								8083,
								8132
							],
							[
								8143,
								8152
							],
							[
								8268,
								8302
							],
							[
								8607,
								8643
							],
							[
								8742,
								8765
							],
							[
								8777,
								8799
							],
							[
								8857,
								8885
							],
							[
								9564,
								9597
							],
							[
								9755,
								9796
							],
							[
								10115,
								10124
							],
							[
								10627,
								10670
							],
							[
								11074,
								11089
							],
							[
								11349,
								11359
							],
							[
								11430,
								11447
							],
							[
								11482,
								11500
							],
							[
								11792,
								11830
							],
							[
								11850,
								11864
							],
							[
								12322,
								12331
							],
							[
								12618,
								12652
							],
							[
								12696,
								12706
							],
							[
								12801,
								12811
							],
							[
								12860,
								12892
							],
							[
								13012,
								13033
							],
							[
								13076,
								13094
							],
							[
								13175,
								13194
							],
							[
								13220,
								13241
							],
							[
								13396,
								13413
							],
							[
								14572,
								14581
							],
							[
								14662,
								14685
							],
							[
								15077,
								15118
							],
							[
								15123,
								15124
							],
							[
								15176,
								15213
							],
							[
								15599,
								15624
							],
							[
								15766,
								15794
							],
							[
								16052,
								16081
							],
							[
								16412,
								16420
							],
							[
								16646,
								16672
							],
							[
								16833,
								16844
							],
							[
								17195,
								17224
							],
							[
								17248,
								17253
							],
							[
								17333,
								17346
							],
							[
								18438,
								18485
							],
							[
								18879,
								18888
							],
							[
								18897,
								18906
							],
							[
								18913,
								18925
							],
							[
								19029,
								19044
							],
							[
								19171,
								19191
							],
							[
								19224,
								19241
							],
							[
								19290,
								19308
							],
							[
								19343,
								19357
							],
							[
								19479,
								19496
							],
							[
								19558,
								19575
							],
							[
								19631,
								19647
							],
							[
								19697,
								19712
							],
							[
								19750,
								19767
							],
							[
								19843,
								19848
							],
							[
								19924,
								19933
							],
							[
								20296,
								20335
							],
							[
								20371,
								20376
							],
							[
								20429,
								20477
							],
							[
								21587,
								21603
							],
							[
								21835,
								21859
							],
							[
								22163,
								22184
							],
							[
								22341,
								22388
							],
							[
								22393,
								22399
							],
							[
								23006,
								23030
							],
							[
								23202,
								23210
							],
							[
								23254,
								23270
							],
							[
								24365,
								24401
							],
							[
								24434,
								24438
							],
							[
								24490,
								24530
							],
							[
								24559,
								24563
							],
							[
								24678,
								24732
							],
							[
								24963,
								24986
							],
							[
								25099,
								25121
							],
							[
								25188,
								25207
							],
							[
								25552,
								25572
							],
							[
								25793,
								25828
							],
							[
								25839,
								25852
							],
							[
								25942,
								25963
							]
						],
						"symlist":
						[
							"key =>",
							" (key, value) =>",
							" v =>",
							" v =>",
							" () =>",
							" o =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function isNativeObject(obj)",
							"function Object2JSON(obj)",
							"function CopyObject(obj)",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function GetElementMatrix(element)",
							"function SetCrosshair(pos)",
							"function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							"function PositionMatrix(canvas = ",
							"('canvas'), rect)",
							"function PositionMatrix2(element = canvasElement)",
							"function PositionProcessor(canvas = ",
							"('canvas'), rect)",
							" pos =>",
							"function ProcessPosition(pos)",
							"function TouchTransformer(tfn = (x, y) => [x, y])",
							" touch =>",
							"async function* TouchPrinter(iter)",
							"async function* GenericPrinter(iter)",
							"function Transformer(t)",
							"async function* (iter)",
							"function MouseToTouch(event)",
							"async function* CatchIterator(it)",
							"async function* TouchIterator(element, t)",
							"(x, y) =>",
							"async function* MoveIterator(eventIterator)",
							"function main()",
							"cid: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							"(v, i) =>",
							"animationFrame = (minDelay = 0) =>",
							"resolve =>",
							"resolve =>",
							" function animationFrame(t)",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							"onOpen()",
							" function KeyHandler(key)",
							"async () =>",
							"async function InputHandler()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							" () =>",
							" () =>",
							" error =>",
							"function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"htmlElement: () =>",
							"gfxRect: () =>",
							"windowRect: () =>",
							"windowSize: () =>",
							"scrollPos: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"() =>",
							" value =>",
							"SVGPolyline = ({ points, ...props }) =>",
							"pt =>",
							"SVGComponent = ({ circle, points, ...props }) =>",
							"async function()",
							"function ResizeHandler()",
							"function ParseJSON(s)",
							"function ReplayTrail(trail, time = performance.",
							" + 20)",
							"function NewWS(handlers)",
							"get ws()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>",
							"async function LoadWASM(file = 'fire/build/fire.wasm')",
							"function ElementName(e)",
							"function TargetName(e)",
							"function GetRects()",
							"function SendWS(msg)",
							"function ToggleClass(element, name)",
							" (...args) =>",
							"function syncHeight()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADDBwAAICBrZXkgPT4KKGtleSwgdmFsdWUpID0+CnYgPT4KdiA9PgooKSA9PgpvID0+ClJhbmRvbUJ5dGUoKQpNb2R1bG8obiwgbSkKICBpc05hdGl2ZU9iamVjdChvYmopCk9iamVjdDJKU09OKG9iaikKQ29weU9iamVjdChvYmopCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CigpID0+CnYgPT4KICBiID0+CkRyYXdMaXN0CiAgY29uc3RydWN0b3IoKQogIGluc2VydChpdGVtKQppdCA9PgppdCA9PgpBbGxQYXJlbnRzKGVsZW0pCiAgZ2V0VHJhbnNmb3JtYXRpb25MaXN0KGUpCkRlY29tcG9zZVRyYW5zZm9ybUxpc3QoZWxlbSkKICBkcmF3UmVjdChyZWN0LCBzdHJva2UgPSAnIzBmMCcpCkdldEVsZW1lbnRNYXRyaXgoZWxlbWVudCkKU2V0Q3Jvc3NoYWlyKHBvcykKRXZlbnRQb3NpdGlvbnMoZXZlbnRPclRvdWNoKQogIG4gPT4KICBuID0+CihhY2MsIGtleSkgPT4KUG9zaXRpb25NYXRyaXgoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpClBvc2l0aW9uTWF0cml4MihlbGVtZW50ID0gY2FudmFzRWxlbWVudCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpCnBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpUb3VjaFRyYW5zZm9ybWVyKHRmbiA9ICh4LCB5KSA9PiBbeCwgeV0pCnRvdWNoID0+ClRvdWNoUHJpbnRlcihpdGVyKQpHZW5lcmljUHJpbnRlcihpdGVyKQpUcmFuc2Zvcm1lcih0KQooaXRlcikKTW91c2VUb1RvdWNoKGV2ZW50KQpDYXRjaEl0ZXJhdG9yKGl0KQpUb3VjaEl0ZXJhdG9yKGVsZW1lbnQsIHQpCih4LCB5KSA9PgpNb3ZlSXRlcmF0b3IoZXZlbnRJdGVyYXRvcikKICBtYWluKCkKICBjaWQ6ICgpID0+CiAgY3VycmVudFVSTDogKCkgPT4KICBjdXJyZW50RmlsZTogKCkgPT4KUmVwYXJlbnQoY2FudmFzID0gZG9jdW1lbnQuCignY2FudmFzJylbMF0pCih2LCBpKSA9PgogIGFuaW1hdGlvbkZyYW1lID0gKG1pbkRlbGF5ID0gMCkgPT4KICByZXNvbHZlID0+CiAgcmVzb2x2ZSA9PgogIGFuaW1hdGlvbkZyYW1lKHQpCkxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQogIG9uT3BlbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgpJbnB1dEhhbmRsZXIoKQooKSA9PgooKSA9PgpTZW5kVHJhaWwoc3RhcnQgPSB0aW1lZ2VuLnN0YXJ0KQooKSA9PgooKSA9PgplcnJvciA9PgpJbml0KCkKICBjYW52YXNFbGVtZW50OiAoKSA9PgogIGRpdkVsZW1lbnQ6ICgpID0+CiAgaHRtbEVsZW1lbnQ6ICgpID0+CiAgZ2Z4UmVjdDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIHdpbmRvd1NpemU6ICgpID0+CiAgc2Nyb2xsUG9zOiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CigpID0+CnZhbHVlID0+ClNWR1BvbHlsaW5lID0gKHsgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIHB0ID0+ClNWR0NvbXBvbmVudCA9ICh7IGNpcmNsZSwgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIGZ1bmN0aW9uKCkKUmVzaXplSGFuZGxlcigpClBhcnNlSlNPTihzKQpSZXBsYXlUcmFpbCh0cmFpbCwgdGltZSA9IHBlcmZvcm1hbmNlLgorIDIwKQpOZXdXUyhoYW5kbGVycykKICBnZXQgd3MoKQogIGZ1bmN0aW9uKCkKTWFrZVVVSUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpNYWtlQ2xpZW50SUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpMb2FkV0FTTShmaWxlID0gJ2ZpcmUvYnVpbGQvZmlyZS53YXNtJykKRWxlbWVudE5hbWUoZSkKVGFyZ2V0TmFtZShlKQpHZXRSZWN0cygpClNlbmRXUyhtc2cpClRvZ2dsZUNsYXNzKGVsZW1lbnQsIG5hbWUpCiguLi5hcmdzKSA9PgogIHN5bmNIZWlnaHQoKQAAAAAAAAAAwwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					361,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1850,
								1856
							],
							[
								1883,
								1899
							],
							[
								2048,
								2058
							],
							[
								2080,
								2090
							],
							[
								2094,
								2105
							],
							[
								2118,
								2126
							],
							[
								2508,
								2529
							],
							[
								2628,
								2649
							],
							[
								2683,
								2711
							],
							[
								2756,
								2781
							],
							[
								2926,
								2950
							],
							[
								3405,
								3429
							],
							[
								3729,
								3756
							],
							[
								4093,
								4097
							],
							[
								4108,
								4114
							],
							[
								4132,
								4137
							],
							[
								4164,
								4168
							],
							[
								4371,
								4379
							],
							[
								4403,
								4416
							],
							[
								4439,
								4451
							],
							[
								4488,
								4494
							],
							[
								5052,
								5058
							],
							[
								5414,
								5440
							],
							[
								5582,
								5615
							],
							[
								5718,
								5755
							],
							[
								5978,
								6018
							],
							[
								6198,
								6232
							],
							[
								6328,
								6354
							],
							[
								6585,
								6622
							],
							[
								6691,
								6695
							],
							[
								6748,
								6752
							],
							[
								6801,
								6814
							],
							[
								6922,
								6955
							],
							[
								6967,
								6984
							],
							[
								7333,
								7382
							],
							[
								7796,
								7832
							],
							[
								7844,
								7861
							],
							[
								7945,
								7952
							],
							[
								8013,
								8042
							],
							[
								8083,
								8132
							],
							[
								8143,
								8152
							],
							[
								8268,
								8302
							],
							[
								8607,
								8643
							],
							[
								8742,
								8765
							],
							[
								8777,
								8799
							],
							[
								8857,
								8885
							],
							[
								9568,
								9601
							],
							[
								9759,
								9800
							],
							[
								10119,
								10128
							],
							[
								10642,
								10685
							],
							[
								11090,
								11105
							],
							[
								11365,
								11375
							],
							[
								11446,
								11463
							],
							[
								11498,
								11516
							],
							[
								11808,
								11846
							],
							[
								11866,
								11880
							],
							[
								12338,
								12347
							],
							[
								12634,
								12668
							],
							[
								12712,
								12722
							],
							[
								12817,
								12827
							],
							[
								12876,
								12908
							],
							[
								13028,
								13049
							],
							[
								13092,
								13110
							],
							[
								13191,
								13210
							],
							[
								13236,
								13257
							],
							[
								13412,
								13429
							],
							[
								14588,
								14597
							],
							[
								14678,
								14701
							],
							[
								15093,
								15134
							],
							[
								15139,
								15140
							],
							[
								15192,
								15229
							],
							[
								15615,
								15640
							],
							[
								15782,
								15810
							],
							[
								16068,
								16097
							],
							[
								16428,
								16436
							],
							[
								16662,
								16688
							],
							[
								16849,
								16860
							],
							[
								17211,
								17240
							],
							[
								17264,
								17269
							],
							[
								17349,
								17362
							],
							[
								18454,
								18501
							],
							[
								18895,
								18904
							],
							[
								18913,
								18922
							],
							[
								18929,
								18941
							],
							[
								19045,
								19060
							],
							[
								19187,
								19207
							],
							[
								19240,
								19257
							],
							[
								19306,
								19324
							],
							[
								19359,
								19373
							],
							[
								19495,
								19512
							],
							[
								19574,
								19591
							],
							[
								19647,
								19663
							],
							[
								19713,
								19728
							],
							[
								19766,
								19783
							],
							[
								19859,
								19864
							],
							[
								19940,
								19949
							],
							[
								20312,
								20351
							],
							[
								20387,
								20392
							],
							[
								20445,
								20493
							],
							[
								21603,
								21619
							],
							[
								21851,
								21875
							],
							[
								22179,
								22200
							],
							[
								22357,
								22404
							],
							[
								22409,
								22415
							],
							[
								23022,
								23046
							],
							[
								23218,
								23226
							],
							[
								23270,
								23286
							],
							[
								24381,
								24417
							],
							[
								24450,
								24454
							],
							[
								24506,
								24546
							],
							[
								24575,
								24579
							],
							[
								24694,
								24748
							],
							[
								24979,
								25002
							],
							[
								25115,
								25137
							],
							[
								25204,
								25223
							],
							[
								25568,
								25588
							],
							[
								25809,
								25844
							],
							[
								25855,
								25868
							],
							[
								25958,
								25979
							]
						],
						"symlist":
						[
							"key =>",
							" (key, value) =>",
							" v =>",
							" v =>",
							" () =>",
							" o =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function isNativeObject(obj)",
							"function Object2JSON(obj)",
							"function CopyObject(obj)",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function GetElementMatrix(element)",
							"function SetCrosshair(pos)",
							"function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							"function PositionMatrix(canvas = ",
							"('canvas'), rect)",
							"function PositionMatrix2(element = canvasElement)",
							"function PositionProcessor(canvas = ",
							"('canvas'), rect)",
							" pos =>",
							"function ProcessPosition(pos)",
							"function TouchTransformer(tfn = (x, y) => [x, y])",
							" touch =>",
							"async function* TouchPrinter(iter)",
							"async function* GenericPrinter(iter)",
							"function Transformer(t)",
							"async function* (iter)",
							"function MouseToTouch(event)",
							"async function* CatchIterator(it)",
							"async function* TouchIterator(element, t)",
							"(x, y) =>",
							"async function* MoveIterator(eventIterator)",
							"function main()",
							"cid: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							"(v, i) =>",
							"animationFrame = (minDelay = 0) =>",
							"resolve =>",
							"resolve =>",
							" function animationFrame(t)",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							"onOpen()",
							" function KeyHandler(key)",
							"async () =>",
							"async function InputHandler()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							" () =>",
							" () =>",
							" error =>",
							"function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"htmlElement: () =>",
							"gfxRect: () =>",
							"windowRect: () =>",
							"windowSize: () =>",
							"scrollPos: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"() =>",
							" value =>",
							"SVGPolyline = ({ points, ...props }) =>",
							"pt =>",
							"SVGComponent = ({ circle, points, ...props }) =>",
							"async function()",
							"function ResizeHandler()",
							"function ParseJSON(s)",
							"function ReplayTrail(trail, time = performance.",
							" + 20)",
							"function NewWS(handlers)",
							"get ws()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>",
							"async function LoadWASM(file = 'fire/build/fire.wasm')",
							"function ElementName(e)",
							"function TargetName(e)",
							"function GetRects()",
							"function SendWS(msg)",
							"function ToggleClass(element, name)",
							" (...args) =>",
							"function syncHeight()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADDBwAAICBrZXkgPT4KKGtleSwgdmFsdWUpID0+CnYgPT4KdiA9PgooKSA9PgpvID0+ClJhbmRvbUJ5dGUoKQpNb2R1bG8obiwgbSkKICBpc05hdGl2ZU9iamVjdChvYmopCk9iamVjdDJKU09OKG9iaikKQ29weU9iamVjdChvYmopCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CigpID0+CnYgPT4KICBiID0+CkRyYXdMaXN0CiAgY29uc3RydWN0b3IoKQogIGluc2VydChpdGVtKQppdCA9PgppdCA9PgpBbGxQYXJlbnRzKGVsZW0pCiAgZ2V0VHJhbnNmb3JtYXRpb25MaXN0KGUpCkRlY29tcG9zZVRyYW5zZm9ybUxpc3QoZWxlbSkKICBkcmF3UmVjdChyZWN0LCBzdHJva2UgPSAnIzBmMCcpCkdldEVsZW1lbnRNYXRyaXgoZWxlbWVudCkKU2V0Q3Jvc3NoYWlyKHBvcykKRXZlbnRQb3NpdGlvbnMoZXZlbnRPclRvdWNoKQogIG4gPT4KICBuID0+CihhY2MsIGtleSkgPT4KUG9zaXRpb25NYXRyaXgoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpClBvc2l0aW9uTWF0cml4MihlbGVtZW50ID0gY2FudmFzRWxlbWVudCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpCnBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpUb3VjaFRyYW5zZm9ybWVyKHRmbiA9ICh4LCB5KSA9PiBbeCwgeV0pCnRvdWNoID0+ClRvdWNoUHJpbnRlcihpdGVyKQpHZW5lcmljUHJpbnRlcihpdGVyKQpUcmFuc2Zvcm1lcih0KQooaXRlcikKTW91c2VUb1RvdWNoKGV2ZW50KQpDYXRjaEl0ZXJhdG9yKGl0KQpUb3VjaEl0ZXJhdG9yKGVsZW1lbnQsIHQpCih4LCB5KSA9PgpNb3ZlSXRlcmF0b3IoZXZlbnRJdGVyYXRvcikKICBtYWluKCkKICBjaWQ6ICgpID0+CiAgY3VycmVudFVSTDogKCkgPT4KICBjdXJyZW50RmlsZTogKCkgPT4KUmVwYXJlbnQoY2FudmFzID0gZG9jdW1lbnQuCignY2FudmFzJylbMF0pCih2LCBpKSA9PgogIGFuaW1hdGlvbkZyYW1lID0gKG1pbkRlbGF5ID0gMCkgPT4KICByZXNvbHZlID0+CiAgcmVzb2x2ZSA9PgogIGFuaW1hdGlvbkZyYW1lKHQpCkxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQogIG9uT3BlbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgpJbnB1dEhhbmRsZXIoKQooKSA9PgooKSA9PgpTZW5kVHJhaWwoc3RhcnQgPSB0aW1lZ2VuLnN0YXJ0KQooKSA9PgooKSA9PgplcnJvciA9PgpJbml0KCkKICBjYW52YXNFbGVtZW50OiAoKSA9PgogIGRpdkVsZW1lbnQ6ICgpID0+CiAgaHRtbEVsZW1lbnQ6ICgpID0+CiAgZ2Z4UmVjdDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIHdpbmRvd1NpemU6ICgpID0+CiAgc2Nyb2xsUG9zOiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CigpID0+CnZhbHVlID0+ClNWR1BvbHlsaW5lID0gKHsgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIHB0ID0+ClNWR0NvbXBvbmVudCA9ICh7IGNpcmNsZSwgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIGZ1bmN0aW9uKCkKUmVzaXplSGFuZGxlcigpClBhcnNlSlNPTihzKQpSZXBsYXlUcmFpbCh0cmFpbCwgdGltZSA9IHBlcmZvcm1hbmNlLgorIDIwKQpOZXdXUyhoYW5kbGVycykKICBnZXQgd3MoKQogIGZ1bmN0aW9uKCkKTWFrZVVVSUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpNYWtlQ2xpZW50SUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpMb2FkV0FTTShmaWxlID0gJ2ZpcmUvYnVpbGQvZmlyZS53YXNtJykKRWxlbWVudE5hbWUoZSkKVGFyZ2V0TmFtZShlKQpHZXRSZWN0cygpClNlbmRXUyhtc2cpClRvZ2dsZUNsYXNzKGVsZW1lbnQsIG5hbWUpCiguLi5hcmdzKSA9PgogIHN5bmNIZWlnaHQoKQAAAAAAAAAAwwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					362,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1850,
								1856
							],
							[
								1883,
								1899
							],
							[
								2048,
								2058
							],
							[
								2080,
								2090
							],
							[
								2094,
								2105
							],
							[
								2118,
								2126
							],
							[
								2508,
								2529
							],
							[
								2628,
								2649
							],
							[
								2683,
								2711
							],
							[
								2756,
								2781
							],
							[
								2926,
								2950
							],
							[
								3405,
								3429
							],
							[
								3729,
								3756
							],
							[
								4093,
								4097
							],
							[
								4108,
								4114
							],
							[
								4132,
								4137
							],
							[
								4164,
								4168
							],
							[
								4371,
								4379
							],
							[
								4403,
								4416
							],
							[
								4439,
								4451
							],
							[
								4488,
								4494
							],
							[
								5052,
								5058
							],
							[
								5414,
								5440
							],
							[
								5582,
								5615
							],
							[
								5718,
								5755
							],
							[
								5978,
								6018
							],
							[
								6198,
								6232
							],
							[
								6328,
								6354
							],
							[
								6585,
								6622
							],
							[
								6691,
								6695
							],
							[
								6748,
								6752
							],
							[
								6801,
								6814
							],
							[
								6922,
								6955
							],
							[
								6967,
								6984
							],
							[
								7333,
								7382
							],
							[
								7796,
								7832
							],
							[
								7844,
								7861
							],
							[
								7945,
								7952
							],
							[
								8013,
								8042
							],
							[
								8083,
								8132
							],
							[
								8143,
								8152
							],
							[
								8268,
								8302
							],
							[
								8562,
								8598
							],
							[
								8697,
								8720
							],
							[
								8732,
								8754
							],
							[
								8812,
								8840
							],
							[
								9523,
								9556
							],
							[
								9714,
								9755
							],
							[
								10074,
								10083
							],
							[
								10597,
								10640
							],
							[
								11045,
								11060
							],
							[
								11320,
								11330
							],
							[
								11401,
								11418
							],
							[
								11453,
								11471
							],
							[
								11763,
								11801
							],
							[
								11821,
								11835
							],
							[
								12293,
								12302
							],
							[
								12589,
								12623
							],
							[
								12667,
								12677
							],
							[
								12772,
								12782
							],
							[
								12831,
								12863
							],
							[
								12983,
								13004
							],
							[
								13047,
								13065
							],
							[
								13146,
								13165
							],
							[
								13191,
								13212
							],
							[
								13367,
								13384
							],
							[
								14543,
								14552
							],
							[
								14633,
								14656
							],
							[
								15048,
								15089
							],
							[
								15094,
								15095
							],
							[
								15147,
								15184
							],
							[
								15570,
								15595
							],
							[
								15737,
								15765
							],
							[
								16023,
								16052
							],
							[
								16383,
								16391
							],
							[
								16617,
								16643
							],
							[
								16804,
								16815
							],
							[
								17166,
								17195
							],
							[
								17219,
								17224
							],
							[
								17304,
								17317
							],
							[
								18409,
								18456
							],
							[
								18850,
								18859
							],
							[
								18868,
								18877
							],
							[
								18884,
								18896
							],
							[
								19000,
								19015
							],
							[
								19142,
								19162
							],
							[
								19195,
								19212
							],
							[
								19261,
								19279
							],
							[
								19314,
								19328
							],
							[
								19450,
								19467
							],
							[
								19529,
								19546
							],
							[
								19602,
								19618
							],
							[
								19668,
								19683
							],
							[
								19721,
								19738
							],
							[
								19814,
								19819
							],
							[
								19895,
								19904
							],
							[
								20267,
								20306
							],
							[
								20342,
								20347
							],
							[
								20400,
								20448
							],
							[
								21558,
								21574
							],
							[
								21806,
								21830
							],
							[
								22134,
								22155
							],
							[
								22312,
								22359
							],
							[
								22364,
								22370
							],
							[
								22977,
								23001
							],
							[
								23173,
								23181
							],
							[
								23225,
								23241
							],
							[
								24336,
								24372
							],
							[
								24405,
								24409
							],
							[
								24461,
								24501
							],
							[
								24530,
								24534
							],
							[
								24649,
								24703
							],
							[
								24934,
								24957
							],
							[
								25070,
								25092
							],
							[
								25159,
								25178
							],
							[
								25523,
								25543
							],
							[
								25764,
								25799
							],
							[
								25810,
								25823
							],
							[
								25913,
								25934
							]
						],
						"symlist":
						[
							"key =>",
							" (key, value) =>",
							" v =>",
							" v =>",
							" () =>",
							" o =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function isNativeObject(obj)",
							"function Object2JSON(obj)",
							"function CopyObject(obj)",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function GetElementMatrix(element)",
							"function SetCrosshair(pos)",
							"function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							"function PositionMatrix(canvas = ",
							"('canvas'), rect)",
							"function PositionMatrix2(element = canvasElement)",
							"function PositionProcessor(canvas = ",
							"('canvas'), rect)",
							" pos =>",
							"function ProcessPosition(pos)",
							"function TouchTransformer(tfn = (x, y) => [x, y])",
							" touch =>",
							"async function* TouchPrinter(iter)",
							"async function* GenericPrinter(iter)",
							"function Transformer(t)",
							"async function* (iter)",
							"function MouseToTouch(event)",
							"async function* CatchIterator(it)",
							"async function* TouchIterator(element, t)",
							"(x, y) =>",
							"async function* MoveIterator(eventIterator)",
							"function main()",
							"cid: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							"(v, i) =>",
							"animationFrame = (minDelay = 0) =>",
							"resolve =>",
							"resolve =>",
							" function animationFrame(t)",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							"onOpen()",
							" function KeyHandler(key)",
							"async () =>",
							"async function InputHandler()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							" () =>",
							" () =>",
							" error =>",
							"function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"htmlElement: () =>",
							"gfxRect: () =>",
							"windowRect: () =>",
							"windowSize: () =>",
							"scrollPos: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"() =>",
							" value =>",
							"SVGPolyline = ({ points, ...props }) =>",
							"pt =>",
							"SVGComponent = ({ circle, points, ...props }) =>",
							"async function()",
							"function ResizeHandler()",
							"function ParseJSON(s)",
							"function ReplayTrail(trail, time = performance.",
							" + 20)",
							"function NewWS(handlers)",
							"get ws()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>",
							"async function LoadWASM(file = 'fire/build/fire.wasm')",
							"function ElementName(e)",
							"function TargetName(e)",
							"function GetRects()",
							"function SendWS(msg)",
							"function ToggleClass(element, name)",
							" (...args) =>",
							"function syncHeight()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADDBwAAICBrZXkgPT4KKGtleSwgdmFsdWUpID0+CnYgPT4KdiA9PgooKSA9PgpvID0+ClJhbmRvbUJ5dGUoKQpNb2R1bG8obiwgbSkKICBpc05hdGl2ZU9iamVjdChvYmopCk9iamVjdDJKU09OKG9iaikKQ29weU9iamVjdChvYmopCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CigpID0+CnYgPT4KICBiID0+CkRyYXdMaXN0CiAgY29uc3RydWN0b3IoKQogIGluc2VydChpdGVtKQppdCA9PgppdCA9PgpBbGxQYXJlbnRzKGVsZW0pCiAgZ2V0VHJhbnNmb3JtYXRpb25MaXN0KGUpCkRlY29tcG9zZVRyYW5zZm9ybUxpc3QoZWxlbSkKICBkcmF3UmVjdChyZWN0LCBzdHJva2UgPSAnIzBmMCcpCkdldEVsZW1lbnRNYXRyaXgoZWxlbWVudCkKU2V0Q3Jvc3NoYWlyKHBvcykKRXZlbnRQb3NpdGlvbnMoZXZlbnRPclRvdWNoKQogIG4gPT4KICBuID0+CihhY2MsIGtleSkgPT4KUG9zaXRpb25NYXRyaXgoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpClBvc2l0aW9uTWF0cml4MihlbGVtZW50ID0gY2FudmFzRWxlbWVudCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpCnBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpUb3VjaFRyYW5zZm9ybWVyKHRmbiA9ICh4LCB5KSA9PiBbeCwgeV0pCnRvdWNoID0+ClRvdWNoUHJpbnRlcihpdGVyKQpHZW5lcmljUHJpbnRlcihpdGVyKQpUcmFuc2Zvcm1lcih0KQooaXRlcikKTW91c2VUb1RvdWNoKGV2ZW50KQpDYXRjaEl0ZXJhdG9yKGl0KQpUb3VjaEl0ZXJhdG9yKGVsZW1lbnQsIHQpCih4LCB5KSA9PgpNb3ZlSXRlcmF0b3IoZXZlbnRJdGVyYXRvcikKICBtYWluKCkKICBjaWQ6ICgpID0+CiAgY3VycmVudFVSTDogKCkgPT4KICBjdXJyZW50RmlsZTogKCkgPT4KUmVwYXJlbnQoY2FudmFzID0gZG9jdW1lbnQuCignY2FudmFzJylbMF0pCih2LCBpKSA9PgogIGFuaW1hdGlvbkZyYW1lID0gKG1pbkRlbGF5ID0gMCkgPT4KICByZXNvbHZlID0+CiAgcmVzb2x2ZSA9PgogIGFuaW1hdGlvbkZyYW1lKHQpCkxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQogIG9uT3BlbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgpJbnB1dEhhbmRsZXIoKQooKSA9PgooKSA9PgpTZW5kVHJhaWwoc3RhcnQgPSB0aW1lZ2VuLnN0YXJ0KQooKSA9PgooKSA9PgplcnJvciA9PgpJbml0KCkKICBjYW52YXNFbGVtZW50OiAoKSA9PgogIGRpdkVsZW1lbnQ6ICgpID0+CiAgaHRtbEVsZW1lbnQ6ICgpID0+CiAgZ2Z4UmVjdDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIHdpbmRvd1NpemU6ICgpID0+CiAgc2Nyb2xsUG9zOiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CigpID0+CnZhbHVlID0+ClNWR1BvbHlsaW5lID0gKHsgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIHB0ID0+ClNWR0NvbXBvbmVudCA9ICh7IGNpcmNsZSwgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIGZ1bmN0aW9uKCkKUmVzaXplSGFuZGxlcigpClBhcnNlSlNPTihzKQpSZXBsYXlUcmFpbCh0cmFpbCwgdGltZSA9IHBlcmZvcm1hbmNlLgorIDIwKQpOZXdXUyhoYW5kbGVycykKICBnZXQgd3MoKQogIGZ1bmN0aW9uKCkKTWFrZVVVSUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpNYWtlQ2xpZW50SUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpMb2FkV0FTTShmaWxlID0gJ2ZpcmUvYnVpbGQvZmlyZS53YXNtJykKRWxlbWVudE5hbWUoZSkKVGFyZ2V0TmFtZShlKQpHZXRSZWN0cygpClNlbmRXUyhtc2cpClRvZ2dsZUNsYXNzKGVsZW1lbnQsIG5hbWUpCiguLi5hcmdzKSA9PgogIHN5bmNIZWlnaHQoKQAAAAAAAAAAwwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					363,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1850,
								1856
							],
							[
								1883,
								1899
							],
							[
								2048,
								2058
							],
							[
								2080,
								2090
							],
							[
								2094,
								2105
							],
							[
								2118,
								2126
							],
							[
								2409,
								2430
							],
							[
								2529,
								2550
							],
							[
								2584,
								2612
							],
							[
								2657,
								2682
							],
							[
								2827,
								2851
							],
							[
								3318,
								3342
							],
							[
								3643,
								3670
							],
							[
								4007,
								4011
							],
							[
								4022,
								4028
							],
							[
								4046,
								4051
							],
							[
								4078,
								4082
							],
							[
								4286,
								4294
							],
							[
								4318,
								4331
							],
							[
								4354,
								4366
							],
							[
								4403,
								4409
							],
							[
								4968,
								4974
							],
							[
								5331,
								5357
							],
							[
								5499,
								5532
							],
							[
								5635,
								5672
							],
							[
								5895,
								5935
							],
							[
								6115,
								6149
							],
							[
								6245,
								6271
							],
							[
								6502,
								6539
							],
							[
								6608,
								6612
							],
							[
								6665,
								6669
							],
							[
								6718,
								6731
							],
							[
								6839,
								6872
							],
							[
								6884,
								6901
							],
							[
								7250,
								7299
							],
							[
								7713,
								7749
							],
							[
								7761,
								7778
							],
							[
								7862,
								7869
							],
							[
								7930,
								7959
							],
							[
								8000,
								8049
							],
							[
								8060,
								8069
							],
							[
								8186,
								8220
							],
							[
								8480,
								8516
							],
							[
								8615,
								8638
							],
							[
								8650,
								8672
							],
							[
								8730,
								8758
							],
							[
								9441,
								9474
							],
							[
								9632,
								9673
							],
							[
								9992,
								10001
							],
							[
								10515,
								10558
							],
							[
								10963,
								10978
							],
							[
								11238,
								11248
							],
							[
								11319,
								11336
							],
							[
								11371,
								11389
							],
							[
								11681,
								11719
							],
							[
								11739,
								11753
							],
							[
								12211,
								12220
							],
							[
								12507,
								12541
							],
							[
								12585,
								12595
							],
							[
								12690,
								12700
							],
							[
								12749,
								12781
							],
							[
								12901,
								12922
							],
							[
								12965,
								12983
							],
							[
								13064,
								13083
							],
							[
								13109,
								13130
							],
							[
								13285,
								13302
							],
							[
								14461,
								14470
							],
							[
								14551,
								14574
							],
							[
								14966,
								15007
							],
							[
								15012,
								15013
							],
							[
								15065,
								15102
							],
							[
								15488,
								15513
							],
							[
								15655,
								15683
							],
							[
								15941,
								15970
							],
							[
								16301,
								16309
							],
							[
								16535,
								16561
							],
							[
								16722,
								16733
							],
							[
								17084,
								17113
							],
							[
								17137,
								17142
							],
							[
								17222,
								17235
							],
							[
								18327,
								18374
							],
							[
								18768,
								18777
							],
							[
								18786,
								18795
							],
							[
								18802,
								18814
							],
							[
								18918,
								18933
							],
							[
								19060,
								19080
							],
							[
								19113,
								19130
							],
							[
								19179,
								19197
							],
							[
								19232,
								19246
							],
							[
								19368,
								19385
							],
							[
								19447,
								19464
							],
							[
								19520,
								19536
							],
							[
								19586,
								19601
							],
							[
								19639,
								19656
							],
							[
								19732,
								19737
							],
							[
								19813,
								19822
							],
							[
								20185,
								20224
							],
							[
								20260,
								20265
							],
							[
								20318,
								20366
							],
							[
								21476,
								21492
							],
							[
								21724,
								21748
							],
							[
								22052,
								22073
							],
							[
								22230,
								22277
							],
							[
								22282,
								22288
							],
							[
								22895,
								22919
							],
							[
								23091,
								23099
							],
							[
								23143,
								23159
							],
							[
								24254,
								24290
							],
							[
								24323,
								24327
							],
							[
								24379,
								24419
							],
							[
								24448,
								24452
							],
							[
								24567,
								24621
							],
							[
								24852,
								24875
							],
							[
								24988,
								25010
							],
							[
								25077,
								25096
							],
							[
								25441,
								25461
							],
							[
								25682,
								25717
							],
							[
								25728,
								25741
							],
							[
								25831,
								25852
							]
						],
						"symlist":
						[
							"key =>",
							" (key, value) =>",
							" v =>",
							" v =>",
							" () =>",
							" o =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function isNativeObject(obj)",
							"function Object2JSON(obj)",
							"function CopyObject(obj)",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function GetElementMatrix(element)",
							"function SetCrosshair(pos)",
							"function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							"function PositionMatrix(canvas = ",
							"('canvas'), rect)",
							"function PositionMatrix2(element = canvasElement)",
							"function PositionProcessor(canvas = ",
							"('canvas'), rect)",
							" pos =>",
							"function ProcessPosition(pos)",
							"function TouchTransformer(tfn = (x, y) => [x, y])",
							" touch =>",
							"async function* TouchPrinter(iter)",
							"async function* GenericPrinter(iter)",
							"function Transformer(t)",
							"async function* (iter)",
							"function MouseToTouch(event)",
							"async function* CatchIterator(it)",
							"async function* TouchIterator(element, t)",
							"(x, y) =>",
							"async function* MoveIterator(eventIterator)",
							"function main()",
							"cid: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							"(v, i) =>",
							"animationFrame = (minDelay = 0) =>",
							"resolve =>",
							"resolve =>",
							" function animationFrame(t)",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							"onOpen()",
							" function KeyHandler(key)",
							"async () =>",
							"async function InputHandler()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							" () =>",
							" () =>",
							" error =>",
							"function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"htmlElement: () =>",
							"gfxRect: () =>",
							"windowRect: () =>",
							"windowSize: () =>",
							"scrollPos: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"() =>",
							" value =>",
							"SVGPolyline = ({ points, ...props }) =>",
							"pt =>",
							"SVGComponent = ({ circle, points, ...props }) =>",
							"async function()",
							"function ResizeHandler()",
							"function ParseJSON(s)",
							"function ReplayTrail(trail, time = performance.",
							" + 20)",
							"function NewWS(handlers)",
							"get ws()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>",
							"async function LoadWASM(file = 'fire/build/fire.wasm')",
							"function ElementName(e)",
							"function TargetName(e)",
							"function GetRects()",
							"function SendWS(msg)",
							"function ToggleClass(element, name)",
							" (...args) =>",
							"function syncHeight()"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADDBwAAICBrZXkgPT4KKGtleSwgdmFsdWUpID0+CnYgPT4KdiA9PgooKSA9PgpvID0+ClJhbmRvbUJ5dGUoKQpNb2R1bG8obiwgbSkKICBpc05hdGl2ZU9iamVjdChvYmopCk9iamVjdDJKU09OKG9iaikKQ29weU9iamVjdChvYmopCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CigpID0+CnYgPT4KICBiID0+CkRyYXdMaXN0CiAgY29uc3RydWN0b3IoKQogIGluc2VydChpdGVtKQppdCA9PgppdCA9PgpBbGxQYXJlbnRzKGVsZW0pCiAgZ2V0VHJhbnNmb3JtYXRpb25MaXN0KGUpCkRlY29tcG9zZVRyYW5zZm9ybUxpc3QoZWxlbSkKICBkcmF3UmVjdChyZWN0LCBzdHJva2UgPSAnIzBmMCcpCkdldEVsZW1lbnRNYXRyaXgoZWxlbWVudCkKU2V0Q3Jvc3NoYWlyKHBvcykKRXZlbnRQb3NpdGlvbnMoZXZlbnRPclRvdWNoKQogIG4gPT4KICBuID0+CihhY2MsIGtleSkgPT4KUG9zaXRpb25NYXRyaXgoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpClBvc2l0aW9uTWF0cml4MihlbGVtZW50ID0gY2FudmFzRWxlbWVudCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpCnBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpUb3VjaFRyYW5zZm9ybWVyKHRmbiA9ICh4LCB5KSA9PiBbeCwgeV0pCnRvdWNoID0+ClRvdWNoUHJpbnRlcihpdGVyKQpHZW5lcmljUHJpbnRlcihpdGVyKQpUcmFuc2Zvcm1lcih0KQooaXRlcikKTW91c2VUb1RvdWNoKGV2ZW50KQpDYXRjaEl0ZXJhdG9yKGl0KQpUb3VjaEl0ZXJhdG9yKGVsZW1lbnQsIHQpCih4LCB5KSA9PgpNb3ZlSXRlcmF0b3IoZXZlbnRJdGVyYXRvcikKICBtYWluKCkKICBjaWQ6ICgpID0+CiAgY3VycmVudFVSTDogKCkgPT4KICBjdXJyZW50RmlsZTogKCkgPT4KUmVwYXJlbnQoY2FudmFzID0gZG9jdW1lbnQuCignY2FudmFzJylbMF0pCih2LCBpKSA9PgogIGFuaW1hdGlvbkZyYW1lID0gKG1pbkRlbGF5ID0gMCkgPT4KICByZXNvbHZlID0+CiAgcmVzb2x2ZSA9PgogIGFuaW1hdGlvbkZyYW1lKHQpCkxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQogIG9uT3BlbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgpJbnB1dEhhbmRsZXIoKQooKSA9PgooKSA9PgpTZW5kVHJhaWwoc3RhcnQgPSB0aW1lZ2VuLnN0YXJ0KQooKSA9PgooKSA9PgplcnJvciA9PgpJbml0KCkKICBjYW52YXNFbGVtZW50OiAoKSA9PgogIGRpdkVsZW1lbnQ6ICgpID0+CiAgaHRtbEVsZW1lbnQ6ICgpID0+CiAgZ2Z4UmVjdDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIHdpbmRvd1NpemU6ICgpID0+CiAgc2Nyb2xsUG9zOiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CigpID0+CnZhbHVlID0+ClNWR1BvbHlsaW5lID0gKHsgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIHB0ID0+ClNWR0NvbXBvbmVudCA9ICh7IGNpcmNsZSwgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIGZ1bmN0aW9uKCkKUmVzaXplSGFuZGxlcigpClBhcnNlSlNPTihzKQpSZXBsYXlUcmFpbCh0cmFpbCwgdGltZSA9IHBlcmZvcm1hbmNlLgorIDIwKQpOZXdXUyhoYW5kbGVycykKICBnZXQgd3MoKQogIGZ1bmN0aW9uKCkKTWFrZVVVSUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpNYWtlQ2xpZW50SUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpMb2FkV0FTTShmaWxlID0gJ2ZpcmUvYnVpbGQvZmlyZS53YXNtJykKRWxlbWVudE5hbWUoZSkKVGFyZ2V0TmFtZShlKQpHZXRSZWN0cygpClNlbmRXUyhtc2cpClRvZ2dsZUNsYXNzKGVsZW1lbnQsIG5hbWUpCiguLi5hcmdzKSA9PgogIHN5bmNIZWlnaHQoKQAAAAAAAAAAwwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					364,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1754,
								1760
							],
							[
								1787,
								1803
							],
							[
								1952,
								1962
							],
							[
								1984,
								1994
							],
							[
								1998,
								2009
							],
							[
								2022,
								2030
							],
							[
								2313,
								2334
							],
							[
								2433,
								2454
							],
							[
								2488,
								2516
							],
							[
								2561,
								2586
							],
							[
								2731,
								2755
							],
							[
								3222,
								3246
							],
							[
								3547,
								3574
							],
							[
								3911,
								3915
							],
							[
								3926,
								3932
							],
							[
								3950,
								3955
							],
							[
								3982,
								3986
							],
							[
								4190,
								4198
							],
							[
								4222,
								4235
							],
							[
								4258,
								4270
							],
							[
								4307,
								4313
							],
							[
								4872,
								4878
							],
							[
								5235,
								5261
							],
							[
								5403,
								5436
							],
							[
								5539,
								5576
							],
							[
								5799,
								5839
							],
							[
								6019,
								6053
							],
							[
								6149,
								6175
							],
							[
								6406,
								6443
							],
							[
								6512,
								6516
							],
							[
								6569,
								6573
							],
							[
								6622,
								6635
							],
							[
								6743,
								6776
							],
							[
								6788,
								6805
							],
							[
								7154,
								7203
							],
							[
								7617,
								7653
							],
							[
								7665,
								7682
							],
							[
								7766,
								7773
							],
							[
								7834,
								7863
							],
							[
								7904,
								7953
							],
							[
								7964,
								7973
							],
							[
								8090,
								8124
							],
							[
								8384,
								8420
							],
							[
								8519,
								8542
							],
							[
								8554,
								8576
							],
							[
								8634,
								8662
							],
							[
								9345,
								9378
							],
							[
								9536,
								9577
							],
							[
								9896,
								9905
							],
							[
								10419,
								10462
							],
							[
								10867,
								10882
							],
							[
								11142,
								11152
							],
							[
								11223,
								11240
							],
							[
								11275,
								11293
							],
							[
								11585,
								11623
							],
							[
								11643,
								11657
							],
							[
								12115,
								12124
							],
							[
								12411,
								12445
							],
							[
								12489,
								12499
							],
							[
								12594,
								12604
							],
							[
								12653,
								12685
							],
							[
								12805,
								12826
							],
							[
								12869,
								12887
							],
							[
								12968,
								12987
							],
							[
								13013,
								13034
							],
							[
								13189,
								13206
							],
							[
								14365,
								14374
							],
							[
								14455,
								14478
							],
							[
								14870,
								14911
							],
							[
								14916,
								14917
							],
							[
								14969,
								15006
							],
							[
								15392,
								15417
							],
							[
								15559,
								15587
							],
							[
								15845,
								15874
							],
							[
								16205,
								16213
							],
							[
								16439,
								16465
							],
							[
								16626,
								16637
							],
							[
								16988,
								17017
							],
							[
								17041,
								17046
							],
							[
								17126,
								17139
							],
							[
								18231,
								18278
							],
							[
								18672,
								18681
							],
							[
								18690,
								18699
							],
							[
								18706,
								18718
							],
							[
								18822,
								18837
							],
							[
								18964,
								18984
							],
							[
								19017,
								19034
							],
							[
								19083,
								19101
							],
							[
								19136,
								19150
							],
							[
								19272,
								19289
							],
							[
								19351,
								19368
							],
							[
								19424,
								19440
							],
							[
								19490,
								19505
							],
							[
								19543,
								19560
							],
							[
								19636,
								19641
							],
							[
								19717,
								19726
							],
							[
								20089,
								20128
							],
							[
								20164,
								20169
							],
							[
								20222,
								20270
							],
							[
								21380,
								21396
							],
							[
								21628,
								21652
							],
							[
								21956,
								21977
							],
							[
								22134,
								22181
							],
							[
								22186,
								22192
							],
							[
								22799,
								22823
							],
							[
								22995,
								23003
							],
							[
								23047,
								23063
							],
							[
								24158,
								24194
							],
							[
								24227,
								24231
							],
							[
								24283,
								24323
							],
							[
								24352,
								24356
							],
							[
								24471,
								24525
							],
							[
								24756,
								24779
							],
							[
								24892,
								24914
							],
							[
								24981,
								25000
							],
							[
								25345,
								25365
							],
							[
								25586,
								25621
							],
							[
								25632,
								25645
							],
							[
								25735,
								25756
							]
						],
						"symlist":
						[
							"key =>",
							" (key, value) =>",
							" v =>",
							" v =>",
							" () =>",
							" o =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function isNativeObject(obj)",
							"function Object2JSON(obj)",
							"function CopyObject(obj)",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function GetElementMatrix(element)",
							"function SetCrosshair(pos)",
							"function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							"function PositionMatrix(canvas = ",
							"('canvas'), rect)",
							"function PositionMatrix2(element = canvasElement)",
							"function PositionProcessor(canvas = ",
							"('canvas'), rect)",
							" pos =>",
							"function ProcessPosition(pos)",
							"function TouchTransformer(tfn = (x, y) => [x, y])",
							" touch =>",
							"async function* TouchPrinter(iter)",
							"async function* GenericPrinter(iter)",
							"function Transformer(t)",
							"async function* (iter)",
							"function MouseToTouch(event)",
							"async function* CatchIterator(it)",
							"async function* TouchIterator(element, t)",
							"(x, y) =>",
							"async function* MoveIterator(eventIterator)",
							"function main()",
							"cid: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							"(v, i) =>",
							"animationFrame = (minDelay = 0) =>",
							"resolve =>",
							"resolve =>",
							" function animationFrame(t)",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							"onOpen()",
							" function KeyHandler(key)",
							"async () =>",
							"async function InputHandler()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							" () =>",
							" () =>",
							" error =>",
							"function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"htmlElement: () =>",
							"gfxRect: () =>",
							"windowRect: () =>",
							"windowSize: () =>",
							"scrollPos: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"() =>",
							" value =>",
							"SVGPolyline = ({ points, ...props }) =>",
							"pt =>",
							"SVGComponent = ({ circle, points, ...props }) =>",
							"async function()",
							"function ResizeHandler()",
							"function ParseJSON(s)",
							"function ReplayTrail(trail, time = performance.",
							" + 20)",
							"function NewWS(handlers)",
							"get ws()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>",
							"async function LoadWASM(file = 'fire/build/fire.wasm')",
							"function ElementName(e)",
							"function TargetName(e)",
							"function GetRects()",
							"function SendWS(msg)",
							"function ToggleClass(element, name)",
							" (...args) =>",
							"function syncHeight()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADDBwAAICBrZXkgPT4KKGtleSwgdmFsdWUpID0+CnYgPT4KdiA9PgooKSA9PgpvID0+ClJhbmRvbUJ5dGUoKQpNb2R1bG8obiwgbSkKICBpc05hdGl2ZU9iamVjdChvYmopCk9iamVjdDJKU09OKG9iaikKQ29weU9iamVjdChvYmopCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CigpID0+CnYgPT4KICBiID0+CkRyYXdMaXN0CiAgY29uc3RydWN0b3IoKQogIGluc2VydChpdGVtKQppdCA9PgppdCA9PgpBbGxQYXJlbnRzKGVsZW0pCiAgZ2V0VHJhbnNmb3JtYXRpb25MaXN0KGUpCkRlY29tcG9zZVRyYW5zZm9ybUxpc3QoZWxlbSkKICBkcmF3UmVjdChyZWN0LCBzdHJva2UgPSAnIzBmMCcpCkdldEVsZW1lbnRNYXRyaXgoZWxlbWVudCkKU2V0Q3Jvc3NoYWlyKHBvcykKRXZlbnRQb3NpdGlvbnMoZXZlbnRPclRvdWNoKQogIG4gPT4KICBuID0+CihhY2MsIGtleSkgPT4KUG9zaXRpb25NYXRyaXgoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpClBvc2l0aW9uTWF0cml4MihlbGVtZW50ID0gY2FudmFzRWxlbWVudCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpCnBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpUb3VjaFRyYW5zZm9ybWVyKHRmbiA9ICh4LCB5KSA9PiBbeCwgeV0pCnRvdWNoID0+ClRvdWNoUHJpbnRlcihpdGVyKQpHZW5lcmljUHJpbnRlcihpdGVyKQpUcmFuc2Zvcm1lcih0KQooaXRlcikKTW91c2VUb1RvdWNoKGV2ZW50KQpDYXRjaEl0ZXJhdG9yKGl0KQpUb3VjaEl0ZXJhdG9yKGVsZW1lbnQsIHQpCih4LCB5KSA9PgpNb3ZlSXRlcmF0b3IoZXZlbnRJdGVyYXRvcikKICBtYWluKCkKICBjaWQ6ICgpID0+CiAgY3VycmVudFVSTDogKCkgPT4KICBjdXJyZW50RmlsZTogKCkgPT4KUmVwYXJlbnQoY2FudmFzID0gZG9jdW1lbnQuCignY2FudmFzJylbMF0pCih2LCBpKSA9PgogIGFuaW1hdGlvbkZyYW1lID0gKG1pbkRlbGF5ID0gMCkgPT4KICByZXNvbHZlID0+CiAgcmVzb2x2ZSA9PgogIGFuaW1hdGlvbkZyYW1lKHQpCkxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQogIG9uT3BlbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgpJbnB1dEhhbmRsZXIoKQooKSA9PgooKSA9PgpTZW5kVHJhaWwoc3RhcnQgPSB0aW1lZ2VuLnN0YXJ0KQooKSA9PgooKSA9PgplcnJvciA9PgpJbml0KCkKICBjYW52YXNFbGVtZW50OiAoKSA9PgogIGRpdkVsZW1lbnQ6ICgpID0+CiAgaHRtbEVsZW1lbnQ6ICgpID0+CiAgZ2Z4UmVjdDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIHdpbmRvd1NpemU6ICgpID0+CiAgc2Nyb2xsUG9zOiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CigpID0+CnZhbHVlID0+ClNWR1BvbHlsaW5lID0gKHsgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIHB0ID0+ClNWR0NvbXBvbmVudCA9ICh7IGNpcmNsZSwgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIGZ1bmN0aW9uKCkKUmVzaXplSGFuZGxlcigpClBhcnNlSlNPTihzKQpSZXBsYXlUcmFpbCh0cmFpbCwgdGltZSA9IHBlcmZvcm1hbmNlLgorIDIwKQpOZXdXUyhoYW5kbGVycykKICBnZXQgd3MoKQogIGZ1bmN0aW9uKCkKTWFrZVVVSUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpNYWtlQ2xpZW50SUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpMb2FkV0FTTShmaWxlID0gJ2ZpcmUvYnVpbGQvZmlyZS53YXNtJykKRWxlbWVudE5hbWUoZSkKVGFyZ2V0TmFtZShlKQpHZXRSZWN0cygpClNlbmRXUyhtc2cpClRvZ2dsZUNsYXNzKGVsZW1lbnQsIG5hbWUpCiguLi5hcmdzKSA9PgogIHN5bmNIZWlnaHQoKQAAAAAAAAAAwwcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMMHAAAgIGtleSA9Pgooa2V5LCB2YWx1ZSkgPT4KdiA9Pgp2ID0+CigpID0+Cm8gPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQogIGlzTmF0aXZlT2JqZWN0KG9iaikKT2JqZWN0MkpTT04ob2JqKQpDb3B5T2JqZWN0KG9iaikKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KKCkgPT4KdiA9PgogIGIgPT4KRHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCml0ID0+Cml0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSAKKCdjYW52YXMnKSwgcmVjdCkKUG9zaXRpb25NYXRyaXgyKGVsZW1lbnQgPSBjYW52YXNFbGVtZW50KQpQb3NpdGlvblByb2Nlc3NvcihjYW52YXMgPSAKKCdjYW52YXMnKSwgcmVjdCkKcG9zID0+ClByb2Nlc3NQb3NpdGlvbihwb3MpClRvdWNoVHJhbnNmb3JtZXIodGZuID0gKHgsIHkpID0+IFt4LCB5XSkKdG91Y2ggPT4KVG91Y2hQcmludGVyKGl0ZXIpCkdlbmVyaWNQcmludGVyKGl0ZXIpClRyYW5zZm9ybWVyKHQpCihpdGVyKQpNb3VzZVRvVG91Y2goZXZlbnQpCkNhdGNoSXRlcmF0b3IoaXQpClRvdWNoSXRlcmF0b3IoZWxlbWVudCwgdCkKKHgsIHkpID0+Ck1vdmVJdGVyYXRvcihldmVudEl0ZXJhdG9yKQogIG1haW4oKQogIGNpZDogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKKHYsIGkpID0+CiAgYW5pbWF0aW9uRnJhbWUgPSAobWluRGVsYXkgPSAwKSA9PgogIHJlc29sdmUgPT4KICByZXNvbHZlID0+CiAgYW5pbWF0aW9uRnJhbWUodCkKTG9vcCgpCiAgbG9nID0gKHQsIG5hbWUpID0+CiAgZmlyZSA9ICguLi5hcmdzKSA9PgogIHJlZHJhdyA9ICguLi5hcmdzKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkRyYXcoeCwgeSwgdGltZSA9IHBlcmZvcm1hbmNlLgopCkJyZXNlbmhhbSh4MCwgeTAsIHgxLCB5MSkKQmxhemUoeCwgeSwgcikKUHV0QXJyYXkoeCwgeSwgYSkKUHV0QXJyYXkyKHgsIHksIGEpCiAgb25PcGVuKCkKS2V5SGFuZGxlcihrZXkpCigpID0+CklucHV0SGFuZGxlcigpCigpID0+CigpID0+ClNlbmRUcmFpbChzdGFydCA9IHRpbWVnZW4uc3RhcnQpCigpID0+CigpID0+CmVycm9yID0+CkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICBodG1sRWxlbWVudDogKCkgPT4KICBnZnhSZWN0OiAoKSA9PgogIHdpbmRvd1JlY3Q6ICgpID0+CiAgd2luZG93U2l6ZTogKCkgPT4KICBzY3JvbGxQb3M6ICgpID0+CiAgYm9keVJlY3Q6ICgpID0+CiAgY2FudmFzUmVjdDogKCkgPT4KKCkgPT4KdmFsdWUgPT4KU1ZHUG9seWxpbmUgPSAoeyBwb2ludHMsIC4uLnByb3BzIH0pID0+CiAgcHQgPT4KU1ZHQ29tcG9uZW50ID0gKHsgY2lyY2xlLCBwb2ludHMsIC4uLnByb3BzIH0pID0+CiAgZnVuY3Rpb24oKQpSZXNpemVIYW5kbGVyKCkKUGFyc2VKU09OKHMpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCisgMjApCk5ld1dTKGhhbmRsZXJzKQogIGdldCB3cygpCiAgZnVuY3Rpb24oKQpNYWtlVVVJRChybmcgPSBNYXRoLnJhbmRvbSkKICBuID0+Ck1ha2VDbGllbnRJRChybmcgPSBNYXRoLnJhbmRvbSkKICBuID0+CkxvYWRXQVNNKGZpbGUgPSAnZmlyZS9idWlsZC9maXJlLndhc20nKQpFbGVtZW50TmFtZShlKQpUYXJnZXROYW1lKGUpCkdldFJlY3RzKCkKU2VuZFdTKG1zZykKVG9nZ2xlQ2xhc3MoZWxlbWVudCwgbmFtZSkKKC4uLmFyZ3MpID0+CiAgc3luY0hlaWdodCgpAAAAAAAAAADDBwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					365,
					1,
					"outline_refresh",
					{
						"path": null,
						"symkeys":
						[
						],
						"symlist":
						[
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADDBwAAICBrZXkgPT4KKGtleSwgdmFsdWUpID0+CnYgPT4KdiA9PgooKSA9PgpvID0+ClJhbmRvbUJ5dGUoKQpNb2R1bG8obiwgbSkKICBpc05hdGl2ZU9iamVjdChvYmopCk9iamVjdDJKU09OKG9iaikKQ29weU9iamVjdChvYmopCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CigpID0+CnYgPT4KICBiID0+CkRyYXdMaXN0CiAgY29uc3RydWN0b3IoKQogIGluc2VydChpdGVtKQppdCA9PgppdCA9PgpBbGxQYXJlbnRzKGVsZW0pCiAgZ2V0VHJhbnNmb3JtYXRpb25MaXN0KGUpCkRlY29tcG9zZVRyYW5zZm9ybUxpc3QoZWxlbSkKICBkcmF3UmVjdChyZWN0LCBzdHJva2UgPSAnIzBmMCcpCkdldEVsZW1lbnRNYXRyaXgoZWxlbWVudCkKU2V0Q3Jvc3NoYWlyKHBvcykKRXZlbnRQb3NpdGlvbnMoZXZlbnRPclRvdWNoKQogIG4gPT4KICBuID0+CihhY2MsIGtleSkgPT4KUG9zaXRpb25NYXRyaXgoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpClBvc2l0aW9uTWF0cml4MihlbGVtZW50ID0gY2FudmFzRWxlbWVudCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpCnBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpUb3VjaFRyYW5zZm9ybWVyKHRmbiA9ICh4LCB5KSA9PiBbeCwgeV0pCnRvdWNoID0+ClRvdWNoUHJpbnRlcihpdGVyKQpHZW5lcmljUHJpbnRlcihpdGVyKQpUcmFuc2Zvcm1lcih0KQooaXRlcikKTW91c2VUb1RvdWNoKGV2ZW50KQpDYXRjaEl0ZXJhdG9yKGl0KQpUb3VjaEl0ZXJhdG9yKGVsZW1lbnQsIHQpCih4LCB5KSA9PgpNb3ZlSXRlcmF0b3IoZXZlbnRJdGVyYXRvcikKICBtYWluKCkKICBjaWQ6ICgpID0+CiAgY3VycmVudFVSTDogKCkgPT4KICBjdXJyZW50RmlsZTogKCkgPT4KUmVwYXJlbnQoY2FudmFzID0gZG9jdW1lbnQuCignY2FudmFzJylbMF0pCih2LCBpKSA9PgogIGFuaW1hdGlvbkZyYW1lID0gKG1pbkRlbGF5ID0gMCkgPT4KICByZXNvbHZlID0+CiAgcmVzb2x2ZSA9PgogIGFuaW1hdGlvbkZyYW1lKHQpCkxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQogIG9uT3BlbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgpJbnB1dEhhbmRsZXIoKQooKSA9PgooKSA9PgpTZW5kVHJhaWwoc3RhcnQgPSB0aW1lZ2VuLnN0YXJ0KQooKSA9PgooKSA9PgplcnJvciA9PgpJbml0KCkKICBjYW52YXNFbGVtZW50OiAoKSA9PgogIGRpdkVsZW1lbnQ6ICgpID0+CiAgaHRtbEVsZW1lbnQ6ICgpID0+CiAgZ2Z4UmVjdDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIHdpbmRvd1NpemU6ICgpID0+CiAgc2Nyb2xsUG9zOiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CigpID0+CnZhbHVlID0+ClNWR1BvbHlsaW5lID0gKHsgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIHB0ID0+ClNWR0NvbXBvbmVudCA9ICh7IGNpcmNsZSwgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIGZ1bmN0aW9uKCkKUmVzaXplSGFuZGxlcigpClBhcnNlSlNPTihzKQpSZXBsYXlUcmFpbCh0cmFpbCwgdGltZSA9IHBlcmZvcm1hbmNlLgorIDIwKQpOZXdXUyhoYW5kbGVycykKICBnZXQgd3MoKQogIGZ1bmN0aW9uKCkKTWFrZVVVSUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpNYWtlQ2xpZW50SUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpMb2FkV0FTTShmaWxlID0gJ2ZpcmUvYnVpbGQvZmlyZS53YXNtJykKRWxlbWVudE5hbWUoZSkKVGFyZ2V0TmFtZShlKQpHZXRSZWN0cygpClNlbmRXUyhtc2cpClRvZ2dsZUNsYXNzKGVsZW1lbnQsIG5hbWUpCiguLi5hcmdzKSA9PgogIHN5bmNIZWlnaHQoKQAAAAAAAAAAAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					366,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1754,
								1760
							],
							[
								1787,
								1803
							],
							[
								1952,
								1962
							],
							[
								1984,
								1994
							],
							[
								1998,
								2009
							],
							[
								2022,
								2030
							],
							[
								2313,
								2334
							],
							[
								2433,
								2454
							],
							[
								2488,
								2516
							],
							[
								2561,
								2586
							],
							[
								2731,
								2755
							],
							[
								3222,
								3246
							],
							[
								3547,
								3574
							],
							[
								3911,
								3915
							],
							[
								3926,
								3932
							],
							[
								3950,
								3955
							],
							[
								3982,
								3986
							],
							[
								4190,
								4198
							],
							[
								4222,
								4235
							],
							[
								4258,
								4270
							],
							[
								4307,
								4313
							],
							[
								4872,
								4878
							],
							[
								5235,
								5261
							],
							[
								5403,
								5436
							],
							[
								5539,
								5576
							],
							[
								5799,
								5839
							],
							[
								6019,
								6053
							],
							[
								6149,
								6175
							],
							[
								6406,
								6443
							],
							[
								6512,
								6516
							],
							[
								6569,
								6573
							],
							[
								6622,
								6635
							],
							[
								6743,
								6776
							],
							[
								6788,
								6805
							],
							[
								7154,
								7203
							],
							[
								7617,
								7653
							],
							[
								7665,
								7682
							],
							[
								7766,
								7773
							],
							[
								7834,
								7863
							],
							[
								7904,
								7953
							],
							[
								7964,
								7973
							],
							[
								8090,
								8124
							],
							[
								8384,
								8420
							],
							[
								8519,
								8542
							],
							[
								8554,
								8576
							],
							[
								8634,
								8662
							],
							[
								9345,
								9378
							],
							[
								9536,
								9577
							],
							[
								9896,
								9905
							],
							[
								10419,
								10462
							],
							[
								10867,
								10882
							],
							[
								11142,
								11152
							],
							[
								11223,
								11240
							],
							[
								11275,
								11293
							],
							[
								11585,
								11623
							],
							[
								11643,
								11657
							],
							[
								12115,
								12124
							],
							[
								12411,
								12445
							],
							[
								12489,
								12499
							],
							[
								12594,
								12604
							],
							[
								12653,
								12685
							],
							[
								12805,
								12826
							],
							[
								12869,
								12887
							],
							[
								12968,
								12987
							],
							[
								13013,
								13034
							],
							[
								13189,
								13206
							],
							[
								14365,
								14374
							],
							[
								14455,
								14478
							],
							[
								14870,
								14911
							],
							[
								14916,
								14917
							],
							[
								14969,
								15006
							],
							[
								15392,
								15417
							],
							[
								15559,
								15587
							],
							[
								15845,
								15874
							],
							[
								16205,
								16213
							],
							[
								16439,
								16465
							],
							[
								16626,
								16637
							],
							[
								16988,
								17017
							],
							[
								17041,
								17046
							],
							[
								17126,
								17139
							],
							[
								18231,
								18278
							],
							[
								18672,
								18681
							],
							[
								18690,
								18699
							],
							[
								18706,
								18718
							],
							[
								18822,
								18837
							],
							[
								18964,
								18984
							],
							[
								19017,
								19034
							],
							[
								19083,
								19101
							],
							[
								19136,
								19150
							],
							[
								19272,
								19289
							],
							[
								19351,
								19368
							],
							[
								19424,
								19440
							],
							[
								19490,
								19505
							],
							[
								19543,
								19560
							],
							[
								19636,
								19641
							],
							[
								19717,
								19726
							],
							[
								20089,
								20128
							],
							[
								20164,
								20169
							],
							[
								20222,
								20270
							],
							[
								21380,
								21396
							],
							[
								21628,
								21652
							],
							[
								21956,
								21977
							],
							[
								22134,
								22181
							],
							[
								22186,
								22192
							],
							[
								22799,
								22823
							],
							[
								22995,
								23003
							],
							[
								23047,
								23063
							],
							[
								24158,
								24194
							],
							[
								24227,
								24231
							],
							[
								24283,
								24323
							],
							[
								24352,
								24356
							],
							[
								24471,
								24525
							],
							[
								24756,
								24779
							],
							[
								24892,
								24914
							],
							[
								24981,
								25000
							],
							[
								25345,
								25365
							],
							[
								25586,
								25621
							],
							[
								25632,
								25645
							],
							[
								25735,
								25756
							]
						],
						"symlist":
						[
							"key =>",
							" (key, value) =>",
							" v =>",
							" v =>",
							" () =>",
							" o =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function isNativeObject(obj)",
							"function Object2JSON(obj)",
							"function CopyObject(obj)",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function GetElementMatrix(element)",
							"function SetCrosshair(pos)",
							"function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							"function PositionMatrix(canvas = ",
							"('canvas'), rect)",
							"function PositionMatrix2(element = canvasElement)",
							"function PositionProcessor(canvas = ",
							"('canvas'), rect)",
							" pos =>",
							"function ProcessPosition(pos)",
							"function TouchTransformer(tfn = (x, y) => [x, y])",
							" touch =>",
							"async function* TouchPrinter(iter)",
							"async function* GenericPrinter(iter)",
							"function Transformer(t)",
							"async function* (iter)",
							"function MouseToTouch(event)",
							"async function* CatchIterator(it)",
							"async function* TouchIterator(element, t)",
							"(x, y) =>",
							"async function* MoveIterator(eventIterator)",
							"function main()",
							"cid: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							"(v, i) =>",
							"animationFrame = (minDelay = 0) =>",
							"resolve =>",
							"resolve =>",
							" function animationFrame(t)",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							"onOpen()",
							" function KeyHandler(key)",
							"async () =>",
							"async function InputHandler()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							" () =>",
							" () =>",
							" error =>",
							"function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"htmlElement: () =>",
							"gfxRect: () =>",
							"windowRect: () =>",
							"windowSize: () =>",
							"scrollPos: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"() =>",
							" value =>",
							"SVGPolyline = ({ points, ...props }) =>",
							"pt =>",
							"SVGComponent = ({ circle, points, ...props }) =>",
							"async function()",
							"function ResizeHandler()",
							"function ParseJSON(s)",
							"function ReplayTrail(trail, time = performance.",
							" + 20)",
							"function NewWS(handlers)",
							"get ws()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>",
							"async function LoadWASM(file = 'fire/build/fire.wasm')",
							"function ElementName(e)",
							"function TargetName(e)",
							"function GetRects()",
							"function SendWS(msg)",
							"function ToggleClass(element, name)",
							" (...args) =>",
							"function syncHeight()"
						]
					},
					"AQAAAAAAAAAAAAAAwwcAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					367,
					2,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/fire.js",
						"symkeys":
						[
							[
								1754,
								1760
							],
							[
								1787,
								1803
							],
							[
								1952,
								1962
							],
							[
								1984,
								1994
							],
							[
								1998,
								2009
							],
							[
								2022,
								2030
							],
							[
								2313,
								2334
							],
							[
								2433,
								2454
							],
							[
								2488,
								2516
							],
							[
								2561,
								2586
							],
							[
								2731,
								2755
							],
							[
								3222,
								3246
							],
							[
								3547,
								3574
							],
							[
								3911,
								3915
							],
							[
								3926,
								3932
							],
							[
								3950,
								3955
							],
							[
								3982,
								3986
							],
							[
								4190,
								4198
							],
							[
								4222,
								4235
							],
							[
								4258,
								4270
							],
							[
								4307,
								4313
							],
							[
								4872,
								4878
							],
							[
								5235,
								5261
							],
							[
								5403,
								5436
							],
							[
								5539,
								5576
							],
							[
								5799,
								5839
							],
							[
								6019,
								6053
							],
							[
								6149,
								6175
							],
							[
								6406,
								6443
							],
							[
								6512,
								6516
							],
							[
								6569,
								6573
							],
							[
								6622,
								6635
							],
							[
								6743,
								6776
							],
							[
								6788,
								6805
							],
							[
								7154,
								7203
							],
							[
								7617,
								7653
							],
							[
								7665,
								7682
							],
							[
								7766,
								7773
							],
							[
								7834,
								7863
							],
							[
								7904,
								7953
							],
							[
								7964,
								7973
							],
							[
								8090,
								8124
							],
							[
								8384,
								8420
							],
							[
								8519,
								8542
							],
							[
								8554,
								8576
							],
							[
								8634,
								8662
							],
							[
								9345,
								9378
							],
							[
								9536,
								9577
							],
							[
								9896,
								9905
							],
							[
								10419,
								10462
							],
							[
								10867,
								10882
							],
							[
								11142,
								11152
							],
							[
								11223,
								11240
							],
							[
								11275,
								11293
							],
							[
								11585,
								11623
							],
							[
								11643,
								11657
							],
							[
								12115,
								12124
							],
							[
								12411,
								12445
							],
							[
								12489,
								12499
							],
							[
								12594,
								12604
							],
							[
								12653,
								12685
							],
							[
								12805,
								12826
							],
							[
								12869,
								12887
							],
							[
								12968,
								12987
							],
							[
								13013,
								13034
							],
							[
								13189,
								13206
							],
							[
								14365,
								14374
							],
							[
								14455,
								14478
							],
							[
								14870,
								14911
							],
							[
								14916,
								14917
							],
							[
								14969,
								15006
							],
							[
								15392,
								15417
							],
							[
								15559,
								15587
							],
							[
								15845,
								15874
							],
							[
								16205,
								16213
							],
							[
								16439,
								16465
							],
							[
								16626,
								16637
							],
							[
								16988,
								17017
							],
							[
								17041,
								17046
							],
							[
								17126,
								17139
							],
							[
								18232,
								18279
							],
							[
								18673,
								18682
							],
							[
								18691,
								18700
							],
							[
								18707,
								18719
							],
							[
								18823,
								18838
							],
							[
								18965,
								18985
							],
							[
								19018,
								19035
							],
							[
								19084,
								19102
							],
							[
								19137,
								19151
							],
							[
								19273,
								19290
							],
							[
								19352,
								19369
							],
							[
								19425,
								19441
							],
							[
								19491,
								19506
							],
							[
								19544,
								19561
							],
							[
								19637,
								19642
							],
							[
								19718,
								19727
							],
							[
								20090,
								20129
							],
							[
								20165,
								20170
							],
							[
								20223,
								20271
							],
							[
								21381,
								21397
							],
							[
								21629,
								21653
							],
							[
								21957,
								21978
							],
							[
								22135,
								22182
							],
							[
								22187,
								22193
							],
							[
								22800,
								22824
							],
							[
								22996,
								23004
							],
							[
								23048,
								23064
							],
							[
								24159,
								24195
							],
							[
								24228,
								24232
							],
							[
								24284,
								24324
							],
							[
								24353,
								24357
							],
							[
								24472,
								24526
							],
							[
								24757,
								24780
							],
							[
								24893,
								24915
							],
							[
								24982,
								25001
							],
							[
								25346,
								25366
							],
							[
								25587,
								25622
							],
							[
								25633,
								25646
							],
							[
								25736,
								25757
							]
						],
						"symlist":
						[
							"key =>",
							" (key, value) =>",
							" v =>",
							" v =>",
							" () =>",
							" o =>",
							"function RandomByte()",
							"function Modulo(n, m)",
							"function isNativeObject(obj)",
							"function Object2JSON(obj)",
							"function CopyObject(obj)",
							"function CreatePalette()",
							"function CreatePaletteHSL()",
							"v =>",
							" () =>",
							" v =>",
							"b =>",
							"DrawList",
							"constructor()",
							"insert(item)",
							" it =>",
							" it =>",
							"function* AllParents(elem)",
							"function getTransformationList(e)",
							"function DecomposeTransformList(elem)",
							"function drawRect(rect, stroke = '#0f0')",
							"function GetElementMatrix(element)",
							"function SetCrosshair(pos)",
							"function EventPositions(eventOrTouch)",
							"n =>",
							"n =>",
							"(acc, key) =>",
							"function PositionMatrix(canvas = ",
							"('canvas'), rect)",
							"function PositionMatrix2(element = canvasElement)",
							"function PositionProcessor(canvas = ",
							"('canvas'), rect)",
							" pos =>",
							"function ProcessPosition(pos)",
							"function TouchTransformer(tfn = (x, y) => [x, y])",
							" touch =>",
							"async function* TouchPrinter(iter)",
							"async function* GenericPrinter(iter)",
							"function Transformer(t)",
							"async function* (iter)",
							"function MouseToTouch(event)",
							"async function* CatchIterator(it)",
							"async function* TouchIterator(element, t)",
							"(x, y) =>",
							"async function* MoveIterator(eventIterator)",
							"function main()",
							"cid: () =>",
							"currentURL: () =>",
							"currentFile: () =>",
							" function Reparent(canvas = document.",
							"('canvas')[0])",
							"(v, i) =>",
							"animationFrame = (minDelay = 0) =>",
							"resolve =>",
							"resolve =>",
							" function animationFrame(t)",
							"async function Loop()",
							"log = (t, name) =>",
							"fire = (...args) =>",
							"redraw = (...args) =>",
							" function Fire()",
							"(a, p) =>",
							"async function Redraw()",
							" function Draw(x, y, time = performance.",
							")",
							" function* Bresenham(x0, y0, x1, y1)",
							" function Blaze(x, y, r)",
							" function PutArray(x, y, a)",
							" function PutArray2(x, y, a)",
							"onOpen()",
							" function KeyHandler(key)",
							"async () =>",
							"async function InputHandler()",
							"() =>",
							" () =>",
							" function SendTrail(start = timegen.start)",
							" () =>",
							" () =>",
							" error =>",
							"function Init()",
							"canvasElement: () =>",
							"divElement: () =>",
							"htmlElement: () =>",
							"gfxRect: () =>",
							"windowRect: () =>",
							"windowSize: () =>",
							"scrollPos: () =>",
							"bodyRect: () =>",
							"canvasRect: () =>",
							"() =>",
							" value =>",
							"SVGPolyline = ({ points, ...props }) =>",
							"pt =>",
							"SVGComponent = ({ circle, points, ...props }) =>",
							"async function()",
							"function ResizeHandler()",
							"function ParseJSON(s)",
							"function ReplayTrail(trail, time = performance.",
							" + 20)",
							"function NewWS(handlers)",
							"get ws()",
							"async function()",
							"function MakeUUID(rng = Math.random)",
							"n =>",
							"function MakeClientID(rng = Math.random)",
							"n =>",
							"async function LoadWASM(file = 'fire/build/fire.wasm')",
							"function ElementName(e)",
							"function TargetName(e)",
							"function GetRects()",
							"function SendWS(msg)",
							"function ToggleClass(element, name)",
							" (...args) =>",
							"function syncHeight()"
						]
					},
					"BAAAAAAAAAAAAAAAAAAAAAAAAADDBwAAICBrZXkgPT4KKGtleSwgdmFsdWUpID0+CnYgPT4KdiA9PgooKSA9PgpvID0+ClJhbmRvbUJ5dGUoKQpNb2R1bG8obiwgbSkKICBpc05hdGl2ZU9iamVjdChvYmopCk9iamVjdDJKU09OKG9iaikKQ29weU9iamVjdChvYmopCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CigpID0+CnYgPT4KICBiID0+CkRyYXdMaXN0CiAgY29uc3RydWN0b3IoKQogIGluc2VydChpdGVtKQppdCA9PgppdCA9PgpBbGxQYXJlbnRzKGVsZW0pCiAgZ2V0VHJhbnNmb3JtYXRpb25MaXN0KGUpCkRlY29tcG9zZVRyYW5zZm9ybUxpc3QoZWxlbSkKICBkcmF3UmVjdChyZWN0LCBzdHJva2UgPSAnIzBmMCcpCkdldEVsZW1lbnRNYXRyaXgoZWxlbWVudCkKU2V0Q3Jvc3NoYWlyKHBvcykKRXZlbnRQb3NpdGlvbnMoZXZlbnRPclRvdWNoKQogIG4gPT4KICBuID0+CihhY2MsIGtleSkgPT4KUG9zaXRpb25NYXRyaXgoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpClBvc2l0aW9uTWF0cml4MihlbGVtZW50ID0gY2FudmFzRWxlbWVudCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpCnBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpUb3VjaFRyYW5zZm9ybWVyKHRmbiA9ICh4LCB5KSA9PiBbeCwgeV0pCnRvdWNoID0+ClRvdWNoUHJpbnRlcihpdGVyKQpHZW5lcmljUHJpbnRlcihpdGVyKQpUcmFuc2Zvcm1lcih0KQooaXRlcikKTW91c2VUb1RvdWNoKGV2ZW50KQpDYXRjaEl0ZXJhdG9yKGl0KQpUb3VjaEl0ZXJhdG9yKGVsZW1lbnQsIHQpCih4LCB5KSA9PgpNb3ZlSXRlcmF0b3IoZXZlbnRJdGVyYXRvcikKICBtYWluKCkKICBjaWQ6ICgpID0+CiAgY3VycmVudFVSTDogKCkgPT4KICBjdXJyZW50RmlsZTogKCkgPT4KUmVwYXJlbnQoY2FudmFzID0gZG9jdW1lbnQuCignY2FudmFzJylbMF0pCih2LCBpKSA9PgogIGFuaW1hdGlvbkZyYW1lID0gKG1pbkRlbGF5ID0gMCkgPT4KICByZXNvbHZlID0+CiAgcmVzb2x2ZSA9PgogIGFuaW1hdGlvbkZyYW1lKHQpCkxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQogIG9uT3BlbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgpJbnB1dEhhbmRsZXIoKQooKSA9PgooKSA9PgpTZW5kVHJhaWwoc3RhcnQgPSB0aW1lZ2VuLnN0YXJ0KQooKSA9PgooKSA9PgplcnJvciA9PgpJbml0KCkKICBjYW52YXNFbGVtZW50OiAoKSA9PgogIGRpdkVsZW1lbnQ6ICgpID0+CiAgaHRtbEVsZW1lbnQ6ICgpID0+CiAgZ2Z4UmVjdDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIHdpbmRvd1NpemU6ICgpID0+CiAgc2Nyb2xsUG9zOiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CigpID0+CnZhbHVlID0+ClNWR1BvbHlsaW5lID0gKHsgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIHB0ID0+ClNWR0NvbXBvbmVudCA9ICh7IGNpcmNsZSwgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIGZ1bmN0aW9uKCkKUmVzaXplSGFuZGxlcigpClBhcnNlSlNPTihzKQpSZXBsYXlUcmFpbCh0cmFpbCwgdGltZSA9IHBlcmZvcm1hbmNlLgorIDIwKQpOZXdXUyhoYW5kbGVycykKICBnZXQgd3MoKQogIGZ1bmN0aW9uKCkKTWFrZVVVSUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpNYWtlQ2xpZW50SUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpMb2FkV0FTTShmaWxlID0gJ2ZpcmUvYnVpbGQvZmlyZS53YXNtJykKRWxlbWVudE5hbWUoZSkKVGFyZ2V0TmFtZShlKQpHZXRSZWN0cygpClNlbmRXUyhtc2cpClRvZ2dsZUNsYXNzKGVsZW1lbnQsIG5hbWUpCiguLi5hcmdzKSA9PgogIHN5bmNIZWlnaHQoKQAAAAAAAAAAwwcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMMHAAAgIGtleSA9Pgooa2V5LCB2YWx1ZSkgPT4KdiA9Pgp2ID0+CigpID0+Cm8gPT4KUmFuZG9tQnl0ZSgpCk1vZHVsbyhuLCBtKQogIGlzTmF0aXZlT2JqZWN0KG9iaikKT2JqZWN0MkpTT04ob2JqKQpDb3B5T2JqZWN0KG9iaikKQ3JlYXRlUGFsZXR0ZSgpCkNyZWF0ZVBhbGV0dGVIU0woKQogIHYgPT4KKCkgPT4KdiA9PgogIGIgPT4KRHJhd0xpc3QKICBjb25zdHJ1Y3RvcigpCiAgaW5zZXJ0KGl0ZW0pCml0ID0+Cml0ID0+CkFsbFBhcmVudHMoZWxlbSkKICBnZXRUcmFuc2Zvcm1hdGlvbkxpc3QoZSkKRGVjb21wb3NlVHJhbnNmb3JtTGlzdChlbGVtKQogIGRyYXdSZWN0KHJlY3QsIHN0cm9rZSA9ICcjMGYwJykKR2V0RWxlbWVudE1hdHJpeChlbGVtZW50KQpTZXRDcm9zc2hhaXIocG9zKQpFdmVudFBvc2l0aW9ucyhldmVudE9yVG91Y2gpCiAgbiA9PgogIG4gPT4KKGFjYywga2V5KSA9PgpQb3NpdGlvbk1hdHJpeChjYW52YXMgPSAKKCdjYW52YXMnKSwgcmVjdCkKUG9zaXRpb25NYXRyaXgyKGVsZW1lbnQgPSBjYW52YXNFbGVtZW50KQpQb3NpdGlvblByb2Nlc3NvcihjYW52YXMgPSAKKCdjYW52YXMnKSwgcmVjdCkKcG9zID0+ClByb2Nlc3NQb3NpdGlvbihwb3MpClRvdWNoVHJhbnNmb3JtZXIodGZuID0gKHgsIHkpID0+IFt4LCB5XSkKdG91Y2ggPT4KVG91Y2hQcmludGVyKGl0ZXIpCkdlbmVyaWNQcmludGVyKGl0ZXIpClRyYW5zZm9ybWVyKHQpCihpdGVyKQpNb3VzZVRvVG91Y2goZXZlbnQpCkNhdGNoSXRlcmF0b3IoaXQpClRvdWNoSXRlcmF0b3IoZWxlbWVudCwgdCkKKHgsIHkpID0+Ck1vdmVJdGVyYXRvcihldmVudEl0ZXJhdG9yKQogIG1haW4oKQogIGNpZDogKCkgPT4KICBjdXJyZW50VVJMOiAoKSA9PgogIGN1cnJlbnRGaWxlOiAoKSA9PgpSZXBhcmVudChjYW52YXMgPSBkb2N1bWVudC4KKCdjYW52YXMnKVswXSkKKHYsIGkpID0+CiAgYW5pbWF0aW9uRnJhbWUgPSAobWluRGVsYXkgPSAwKSA9PgogIHJlc29sdmUgPT4KICByZXNvbHZlID0+CiAgYW5pbWF0aW9uRnJhbWUodCkKTG9vcCgpCiAgbG9nID0gKHQsIG5hbWUpID0+CiAgZmlyZSA9ICguLi5hcmdzKSA9PgogIHJlZHJhdyA9ICguLi5hcmdzKSA9PgpGaXJlKCkKKGEsIHApID0+ClJlZHJhdygpCkRyYXcoeCwgeSwgdGltZSA9IHBlcmZvcm1hbmNlLgopCkJyZXNlbmhhbSh4MCwgeTAsIHgxLCB5MSkKQmxhemUoeCwgeSwgcikKUHV0QXJyYXkoeCwgeSwgYSkKUHV0QXJyYXkyKHgsIHksIGEpCiAgb25PcGVuKCkKS2V5SGFuZGxlcihrZXkpCigpID0+CklucHV0SGFuZGxlcigpCigpID0+CigpID0+ClNlbmRUcmFpbChzdGFydCA9IHRpbWVnZW4uc3RhcnQpCigpID0+CigpID0+CmVycm9yID0+CkluaXQoKQogIGNhbnZhc0VsZW1lbnQ6ICgpID0+CiAgZGl2RWxlbWVudDogKCkgPT4KICBodG1sRWxlbWVudDogKCkgPT4KICBnZnhSZWN0OiAoKSA9PgogIHdpbmRvd1JlY3Q6ICgpID0+CiAgd2luZG93U2l6ZTogKCkgPT4KICBzY3JvbGxQb3M6ICgpID0+CiAgYm9keVJlY3Q6ICgpID0+CiAgY2FudmFzUmVjdDogKCkgPT4KKCkgPT4KdmFsdWUgPT4KU1ZHUG9seWxpbmUgPSAoeyBwb2ludHMsIC4uLnByb3BzIH0pID0+CiAgcHQgPT4KU1ZHQ29tcG9uZW50ID0gKHsgY2lyY2xlLCBwb2ludHMsIC4uLnByb3BzIH0pID0+CiAgZnVuY3Rpb24oKQpSZXNpemVIYW5kbGVyKCkKUGFyc2VKU09OKHMpClJlcGxheVRyYWlsKHRyYWlsLCB0aW1lID0gcGVyZm9ybWFuY2UuCisgMjApCk5ld1dTKGhhbmRsZXJzKQogIGdldCB3cygpCiAgZnVuY3Rpb24oKQpNYWtlVVVJRChybmcgPSBNYXRoLnJhbmRvbSkKICBuID0+Ck1ha2VDbGllbnRJRChybmcgPSBNYXRoLnJhbmRvbSkKICBuID0+CkxvYWRXQVNNKGZpbGUgPSAnZmlyZS9idWlsZC9maXJlLndhc20nKQpFbGVtZW50TmFtZShlKQpUYXJnZXROYW1lKGUpCkdldFJlY3RzKCkKU2VuZFdTKG1zZykKVG9nZ2xlQ2xhc3MoZWxlbWVudCwgbmFtZSkKKC4uLmFyZ3MpID0+CiAgc3luY0hlaWdodCgpAAAAAAAAAADDBwAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				],
				[
					368,
					1,
					"outline_refresh",
					{
						"path": "/home/roman/Projects/plot-cv/lib/async/websocket.js",
						"symkeys":
						[
							[
								163,
								197
							],
							[
								325,
								336
							],
							[
								355,
								369
							],
							[
								581,
								592
							],
							[
								611,
								625
							],
							[
								825,
								839
							],
							[
								858,
								882
							],
							[
								1050,
								1085
							],
							[
								1517,
								1562
							],
							[
								1920,
								1973
							],
							[
								2188,
								2228
							],
							[
								2426,
								2447
							],
							[
								2535,
								2590
							],
							[
								2718,
								2757
							],
							[
								2984,
								2998
							],
							[
								3039,
								3054
							],
							[
								3086,
								3098
							],
							[
								3126,
								3139
							],
							[
								3178,
								3192
							],
							[
								3233,
								3259
							]
						],
						"symlist":
						[
							"oncePromise = (emitter, events) =>",
							" resolve =>",
							"handler = e =>",
							" resolve =>",
							"handler = e =>",
							"WebSocketError",
							"constructor(message, ws)",
							"async function* WebSocketIterator()",
							" function WebSocketURL(arg = '/', query = {})",
							" function CreateWebSocket(path = '/', protocols = [])",
							"async function* StreamReadIterator(strm)",
							"ReconnectingWebSocket",
							"constructor(url = '/ws', protocols = [], handlers = {})",
							"async connect(handlers = this.handlers)",
							"get writable()",
							"write: chunk =>",
							"close: () =>",
							"abort: err =>",
							"get readable()",
							"start: async controller =>"
						]
					},
					"AgAAAAAAAAAAAAAAAAAAAAAAAADDBwAAICBrZXkgPT4KKGtleSwgdmFsdWUpID0+CnYgPT4KdiA9PgooKSA9PgpvID0+ClJhbmRvbUJ5dGUoKQpNb2R1bG8obiwgbSkKICBpc05hdGl2ZU9iamVjdChvYmopCk9iamVjdDJKU09OKG9iaikKQ29weU9iamVjdChvYmopCkNyZWF0ZVBhbGV0dGUoKQpDcmVhdGVQYWxldHRlSFNMKCkKICB2ID0+CigpID0+CnYgPT4KICBiID0+CkRyYXdMaXN0CiAgY29uc3RydWN0b3IoKQogIGluc2VydChpdGVtKQppdCA9PgppdCA9PgpBbGxQYXJlbnRzKGVsZW0pCiAgZ2V0VHJhbnNmb3JtYXRpb25MaXN0KGUpCkRlY29tcG9zZVRyYW5zZm9ybUxpc3QoZWxlbSkKICBkcmF3UmVjdChyZWN0LCBzdHJva2UgPSAnIzBmMCcpCkdldEVsZW1lbnRNYXRyaXgoZWxlbWVudCkKU2V0Q3Jvc3NoYWlyKHBvcykKRXZlbnRQb3NpdGlvbnMoZXZlbnRPclRvdWNoKQogIG4gPT4KICBuID0+CihhY2MsIGtleSkgPT4KUG9zaXRpb25NYXRyaXgoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpClBvc2l0aW9uTWF0cml4MihlbGVtZW50ID0gY2FudmFzRWxlbWVudCkKUG9zaXRpb25Qcm9jZXNzb3IoY2FudmFzID0gCignY2FudmFzJyksIHJlY3QpCnBvcyA9PgpQcm9jZXNzUG9zaXRpb24ocG9zKQpUb3VjaFRyYW5zZm9ybWVyKHRmbiA9ICh4LCB5KSA9PiBbeCwgeV0pCnRvdWNoID0+ClRvdWNoUHJpbnRlcihpdGVyKQpHZW5lcmljUHJpbnRlcihpdGVyKQpUcmFuc2Zvcm1lcih0KQooaXRlcikKTW91c2VUb1RvdWNoKGV2ZW50KQpDYXRjaEl0ZXJhdG9yKGl0KQpUb3VjaEl0ZXJhdG9yKGVsZW1lbnQsIHQpCih4LCB5KSA9PgpNb3ZlSXRlcmF0b3IoZXZlbnRJdGVyYXRvcikKICBtYWluKCkKICBjaWQ6ICgpID0+CiAgY3VycmVudFVSTDogKCkgPT4KICBjdXJyZW50RmlsZTogKCkgPT4KUmVwYXJlbnQoY2FudmFzID0gZG9jdW1lbnQuCignY2FudmFzJylbMF0pCih2LCBpKSA9PgogIGFuaW1hdGlvbkZyYW1lID0gKG1pbkRlbGF5ID0gMCkgPT4KICByZXNvbHZlID0+CiAgcmVzb2x2ZSA9PgogIGFuaW1hdGlvbkZyYW1lKHQpCkxvb3AoKQogIGxvZyA9ICh0LCBuYW1lKSA9PgogIGZpcmUgPSAoLi4uYXJncykgPT4KICByZWRyYXcgPSAoLi4uYXJncykgPT4KRmlyZSgpCihhLCBwKSA9PgpSZWRyYXcoKQpEcmF3KHgsIHksIHRpbWUgPSBwZXJmb3JtYW5jZS4KKQpCcmVzZW5oYW0oeDAsIHkwLCB4MSwgeTEpCkJsYXplKHgsIHksIHIpClB1dEFycmF5KHgsIHksIGEpClB1dEFycmF5Mih4LCB5LCBhKQogIG9uT3BlbigpCktleUhhbmRsZXIoa2V5KQooKSA9PgpJbnB1dEhhbmRsZXIoKQooKSA9PgooKSA9PgpTZW5kVHJhaWwoc3RhcnQgPSB0aW1lZ2VuLnN0YXJ0KQooKSA9PgooKSA9PgplcnJvciA9PgpJbml0KCkKICBjYW52YXNFbGVtZW50OiAoKSA9PgogIGRpdkVsZW1lbnQ6ICgpID0+CiAgaHRtbEVsZW1lbnQ6ICgpID0+CiAgZ2Z4UmVjdDogKCkgPT4KICB3aW5kb3dSZWN0OiAoKSA9PgogIHdpbmRvd1NpemU6ICgpID0+CiAgc2Nyb2xsUG9zOiAoKSA9PgogIGJvZHlSZWN0OiAoKSA9PgogIGNhbnZhc1JlY3Q6ICgpID0+CigpID0+CnZhbHVlID0+ClNWR1BvbHlsaW5lID0gKHsgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIHB0ID0+ClNWR0NvbXBvbmVudCA9ICh7IGNpcmNsZSwgcG9pbnRzLCAuLi5wcm9wcyB9KSA9PgogIGZ1bmN0aW9uKCkKUmVzaXplSGFuZGxlcigpClBhcnNlSlNPTihzKQpSZXBsYXlUcmFpbCh0cmFpbCwgdGltZSA9IHBlcmZvcm1hbmNlLgorIDIwKQpOZXdXUyhoYW5kbGVycykKICBnZXQgd3MoKQogIGZ1bmN0aW9uKCkKTWFrZVVVSUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpNYWtlQ2xpZW50SUQocm5nID0gTWF0aC5yYW5kb20pCiAgbiA9PgpMb2FkV0FTTShmaWxlID0gJ2ZpcmUvYnVpbGQvZmlyZS53YXNtJykKRWxlbWVudE5hbWUoZSkKVGFyZ2V0TmFtZShlKQpHZXRSZWN0cygpClNlbmRXUyhtc2cpClRvZ2dsZUNsYXNzKGVsZW1lbnQsIG5hbWUpCiguLi5hcmdzKSA9PgogIHN5bmNIZWlnaHQoKQAAAAAAAAAA4QEAAAAAAAAAAAAA",
					"AQAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"contents": "import { existsSync, reader, readerSync, readSync, writeSync } from 'fs';\nimport { createServer, getSessions, LLL_INFO, LLL_NOTICE, LLL_USER, LLL_WARN, logLevels, setLog } from 'net';\nimport { kill, setReadHandler, SIGTERM, sleep, ttySetRaw, Worker } from 'os';\nimport { clearInterval, setInterval, setTimeout } from 'timers';\nimport { atexit, bindMethods, btoa, define, keys, filterKeys, getOpt, isObject, lazyProperties, memoize, mod, once, propertyLookup, quote, toString, tryCatch, types, mapWrapper } from 'util';\nimport { List, Table } from './cli-helpers.js';\nimport { DebuggerDispatcher, FindFunctions, GetFunctionName, TrivialSyntaxHighlighter } from './debugger.js';\nimport { DebuggerProtocol } from './debuggerprotocol.js';\nimport { ReadFile, ReadJSON, WriteJSON } from './io-helpers.js';\nimport { consume, map } from './lib/async/helpers.js';\nimport { absolute, basename, extname, relative } from './lib/path.js';\nimport { Repeater } from './lib/repeater/repeater.js';\nimport { Spawn, WNOHANG } from './os-helpers.js';\nimport { F_GETFL, F_SETFL, fcntl, O_NONBLOCK } from './quickjs/qjs-ffi/lib/fcntl.js';\nimport { REPL } from './quickjs/qjs-modules/lib/repl.js';\nimport { Console } from 'console';\nimport { Location } from 'location';\nimport process from 'process';\nimport * as path from 'path';\nimport extendArray from 'extendArray';\nimport { AF_INET, AsyncSocket, IPPROTO_TCP, SOCK_STREAM, SockAddr } from 'sockets';\nimport { err as stderr } from 'std';\nimport { codecs, RPCApi, RPCProxy, RPCObject, RPCFactory, Connection, RPCServer, RPCClient, RPCSocket, RPCConnect, RPCListen } from './quickjs/qjs-net/js/rpc.js';\n\nfunction decorate(decorators, obj, ...args) {\n  if(!Array.isArray(decorators)) decorators = [decorators];\n\n  for(let decorator of decorators)\n    for(let prop of keys(obj))\n      if(typeof obj[prop] == 'function') {\n        let newfn = decorator(obj[prop], obj, prop, ...args);\n        if(obj[prop] !== newfn) obj[prop] = newfn;\n      }\n\n  return obj;\n}\n\nextendArray(Array.prototype);\n\nconst scriptName = (arg = scriptArgs[0]) => basename(arg, extname(arg));\n\nconst children = new Set();\n\natexit(() => {\n  for(let pid of children) {\n    console.log('atexit killing child', pid);\n    kill(pid, SIGTERM);\n  }\n});\n\nObject.assign(globalThis, {\n  codecs,\n  RPCApi,\n  RPCProxy,\n  RPCObject,\n  RPCFactory,\n  Connection,\n  RPCServer,\n  RPCClient,\n  RPCSocket,\n  RPCConnect,\n  RPCListen\n});\n\nconst signalName = n =>\n  'SIG' +\n  [\n    ,\n    'HUP',\n    'INT',\n    'QUIT',\n    'ILL',\n    'TRAP',\n    'ABRT',\n    'BUS',\n    'FPE',\n    'KILL',\n    'USR1',\n    'SEGV',\n    'USR2',\n    'PIPE',\n    'ALRM',\n    'TERM',\n    'STKFLT',\n    'CHLD',\n    'CONT',\n    'STOP',\n    'TSTP',\n    'TTIN',\n    'TTOU',\n    'URG',\n    'XCPU',\n    'XFSZ',\n    'VTALRM',\n    'PROF',\n    'WINCH',\n    'IO',\n    'PWR',\n    'SYS'\n  ][n];\n\nfunction checkChildExited(child) {\n  const { exited, termsig, signaled, exitcode } = child;\n\n  return exited ? (signaled ? `signalled ${signalName(termsig)}` : `exitcode ${exitcode}`) : null;\n}\n\nfunction GetLoc(node) {\n  if(node.loc?.start?.line) {\n    const { line, column } = node.loc.start;\n    const [charOffset] = node.range ?? [node.start];\n    return new Location(line, column + 1, charOffset);\n  }\n}\n\nasync function LoadAST(source) {\n  if(!existsSync(source)) return null;\n  const child = Spawn('meriyah', ['-l', source], { block: false, stdio: ['inherit', 'pipe', 'inherit'] });\n\n  let s = '';\n  for(let chunk of readerSync(child.stdout)) s += toString(chunk);\n\n  const status = child.wait();\n  const { length } = s;\n  //console.log('loadAST', { source, length, status });\n\n  return JSON.parse(s);\n}\n\nfunction StartREPL(prefix = scriptName(), suffix = '') {\n  let repl = new REPL(`\\x1b[38;5;165m${prefix} \\x1b[38;5;39m${suffix}\\x1b[0m`, false);\n  repl.historyLoad(null);\n  let { log } = console;\n\n  console.log = repl.printFunction(log.bind(console, console.config({ compact: 2 })));\n  let { show } = repl;\n\n  repl.show = arg => {\n    if(isObject(arg)) {\n      if(arg[Symbol.for('print')]) return arg.toString ? arg.toString() : arg + '';\n\n      //if(Array.isArray(arg) && typeof arg[0] == 'object' &&  Array.isArray(arg[0])) {\n      if(Array.isArray(arg) && typeof arg[0] == 'object') {\n        if(!Array.isArray(arg[0]) && (arg.length !== 2 || !Array.isArray(arg[1]))) {\n          if(arg.length == 2 && Array.isArray(arg[1])) {\n            const [event, stack] = arg;\n            if(['type', 'reason'].every(k => k in event)) if (['id', 'name', 'line'].every(k => k in stack[0])) return [List([event]), List(stack)];\n          }\n\n          if(\n            arg.length >= 2 /*Object.keys(arg[0]).some(key => arg.every(a => key in a)) ||*/ &&\n            arg.map(item => Object.keys(item)).reduce((acc, keys, i) => (i == 0 ? keys : acc ? keys.equal(acc) && keys : false))\n          )\n            return repl.show(Table(arg));\n        }\n      }\n    }\n\n    return show.call(repl, arg);\n  };\n\n  repl.loadSaveOptions();\n  //repl.printPromise = () => {};\n  repl.run();\n  return repl;\n}\n\nexport function StartDebugger(args, connect, address) {\n  let env = {};\n\n  address ??= '127.0.0.1:9901';\n\n  env['DISPLAY'] ??= ':0.0';\n\n  if(connect) env['QUICKJS_DEBUG_ADDRESS'] = address;\n  else env['QUICKJS_DEBUG_LISTEN_ADDRESS'] = address;\n\n  const child = Spawn('qjsm', args, { block: false, env: { ...process.env, ...env }, stdio: ['pipe', 'pipe', 'pipe'] });\n\n  if(!connect) listeners[address] = child;\n\n  if(process.env.DEBUG) console.log('StartDebugger', { args, connect, address, env }, child);\n\n  children.add(child.pid);\n\n  return define(child, { args });\n}\n\nexport async function ConnectDebugger(address, skipToMain = true, callback) {\n  const addr = new SockAddr(AF_INET, ...address.split(':'));\n  const sock = new AsyncSocket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n\n  const ret = await sock.connect(addr);\n\n  if(typeof callback != 'function' && typeof callback == 'object') callback = callback.onMessage;\n\n  if(process.env.DEBUG) console.log('ConnectDebugger', { address, skipToMain, sock });\n\n  if(ret >= 0) {\n    if(process.env.DEBUG) console.log('Connected', +sock, 'to', sock.remote);\n    sockets.add(sock);\n  }\n\n  const dbg = this ?? {};\n\n  define(dbg, {\n    sock,\n    addr,\n    async process(callback) {\n      if(process.env.DEBUG) console.log('Debugger process()', callback);\n\n      let ret,\n        lenBuf = new ArrayBuffer(9);\n\n      try {\n        while((ret = await sock.recv(lenBuf, 0, 9)) > 0) {\n          let len = parseInt(toString(lenBuf, 0, ret), 16);\n\n          let dataBuf = new ArrayBuffer(len);\n          let offset = 0;\n\n          while(offset < len) {\n            ret = await sock.recv(dataBuf, offset, len - offset);\n\n            if(ret <= 0) {\n              sock.close();\n              break;\n            }\n            offset += ret;\n          }\n          if(ret <= 0) break;\n\n          let s = toString(dataBuf);\n          let obj = JSON.parse(s);\n\n          if(process.env.DEBUG) console.log('process() read:',obj);\n\n\n          const funcName = '\\x1b[38;5;208mPROCESS\\x1b[0m';\n\n          if(process.env.DEBUG) console.log(funcName + ' \\x1b[38;5;196mbefore callback\\x1b[0m', obj);\n          let result = callback(obj);\n          await result;\n        }\n      } catch(error) {\n        console.log('Socket error:', error.message + '\\n' + error.stack);\n      } finally {\n        sock.close();\n        return ret;\n      }\n    },\n    async sendMessage(msg) {\n      if(typeof msg != 'string') msg = JSON.stringify(msg);\n      const ret = sock.send(msg.length.toString(16).padStart(8, '0') + '\\n' + msg);\n\n      if(process.env.DEBUG) console.log('\\x1b[38;5;33mSEND\\x1b[0m[' + sock.fd + '] (' + ret + ') ' + msg);\n\n      return ret;\n    }\n  });\n\n  if(process.env.DEBUG) console.log('ConnectDebugger', console.config({ depth: 1, compact: 0 }), dbg);\n\n  LaunchDebugger(dbg, skipToMain);\n\n  return dbg;\n}\n\nfunction LaunchDebugger(dbg, skipToMain = true) {\n  if(process.env.DEBUG) console.log('LaunchDebugger', console.config({ depth: 1, compact: 0 }), { dbg, skipToMain });\n\n  if(skipToMain) {\n    dbg.onstopped = once(async (...args) => {\n      let st = await dispatch.stackTrace();\n\n      script ??= st[0].filename;\n\n      let fns = await files[script].match(/main$/gi);\n      console.log('matched /main$/gi', fns /*.map(({ name }) => name)*/);\n\n      dbg.onstopped = null;\n      let resp;\n      console.log('breakpoints()', console.config({ compact: 0 }), { script, fns });\n      resp = await dispatch.breakpoints(script, fns);\n      console.log('breakpoints() response:', console.config({ compact: 0 }), resp);\n\n      setTimeout(async () => {\n        resp = await dispatch.continue();\n        console.log('continue() response:', console.config({ compact: 0 }), resp);\n      }, 100);\n    });\n  }\n  //dbg.onstopped ??= OnStopped;\n  let dispatch = (dbg.dispatch = globalThis.dispatch = new DebuggerDispatcher(dbg));\n\n  Object.assign(globalThis, bindMethods(dispatch, DebuggerDispatcher.prototype, {}));\n  Object.assign(globalThis, {\n    GetLoc,\n    PrintStackFrame,\n    PrintStack,\n    async value(name) {\n      let stack = await dispatch.stackTrace();\n\n      for(let frame of stack) {\n        let { local } = await dispatch.variables(frame.id, 1);\n\n        let v = local.find(v => v.name == name);\n\n        return v;\n      }\n    }\n  });\n\n  return dbg;\n}\n\nasync function PrintStackFrame(frame) {\n  if(frame === undefined) frame = 0;\n\n  let { id, name, filename, line } = frame;\n  let params;\n\n  try {\n    params = (await files[filename].functions).find(f => f.name == name)?.params;\n  } catch(e) {}\n\n  if(params) name += `(${params.join(', ')})`;\n  let loc = line !== undefined ? new Location(filename, line) : undefined;\n  let code = line !== undefined ? files[filename].line(line - 1) : undefined;\n  return [`#${id}`, ` at ${name.padEnd(30)}`, loc ? ' in ' + loc : ''].concat(code ? [code] : []);\n}\n\nasync function PrintStack(stack) {\n  stack ??= await stackTrace();\n  let frames = [];\n  for(let frame of stack) {\n    frames.push(await PrintStackFrame(frame));\n  }\n  return List(frames);\n}\n\ndecorate(\n  (member, obj, prop) =>\n    ({\n      async breakpoints(...args) {\n        if(!(typeof args[0] == 'string')) args.unshift(globalThis.script);\n\n        let [file, breakpoints] = args;\n        \n        file = absolute(file);\n        \n        if(types.isPromise(breakpoints)) breakpoints = await breakpoints;\n        if(Array.isArray(breakpoints)) breakpoints = breakpoints.map(b => filterKeys(b, ['name', 'line', 'column']));\n        \n        let ret = await member.call(this, file, breakpoints);\n        \n        if(ret.path) ret.path = relative(ret.path);\n        if(ret?.breakpoints?.path) ret.breakpoints.path = relative(ret.breakpoints.path);\n        \n       // console.log('breakpoints =', ret);\n\n        return ret;\n      },\n      async stackTrace(frame) {\n        let ret = (await member.call(this, frame)).map(frame => (typeof frame.filename == 'string' && (frame.filename = relative(absolute(frame.filename))), frame));\n        console.log('stackTrace =', ret);\n        return ret;\n      },\n      async scopes(n) {\n        let stack = await this.stackTrace();\n        if(n >= stack.length) return null;\n        let scopes = [];\n\n        for(let scope of await member.call(this, n)) {\n          const variables = await this.variables(scope.reference);\n          scope.variables = variables.length;\n          scopes.push(scope);\n        }\n\n        return scopes;\n      },\n      async waitRun() {\n        const [event, stack] = await member.call(this);\n        define(globalThis, { event, stack });\n        //console.log('waitRun', { event, stack });\n\n        repl.printStatus((await PrintStackFrame(stack[0])).join(' ') + '\\n');\n\n        const { filename, line } = stack[0];\n\n        define(globalThis, { file: filename, line });\n        return [event, stack];\n      },\n      async variables(n, depth = 0) {\n        const list = await member.call(this, n);\n        const ret = [];\n        const add = item => (item.variablesReference === 0 && delete item.variablesReference, ret.push(item));\n\n        for(let item of list) {\n          add(item);\n\n          if(depth > 0) {\n            if(item.variablesReference > 0) {\n              let children = await this.variables(item.variablesReference, depth - 1);\n\n              for(let child of children) {\n                if(!isNaN(child.name)) child.name = '  [' + child.name + ']';\n                else child.name = '  .' + child.name;\n\n                if(child.value?.startsWith('function ')) continue;\n                add(child);\n              }\n            }\n          }\n        }\n\n        return define(ret, {\n          [Symbol.for('print')]: true,\n          toString() {\n            return Table(this, ['name', 'value', 'type', 'variablesReference']);\n          }\n        });\n      }\n    }[prop] || member),\n\n  DebuggerDispatcher.prototype\n);\n\nconst mkaddr = (\n  (port = 8777) =>\n  () =>\n    `127.0.0.1:${port--}`\n)();\n\nasync function NewDebugger(args, skipToMain = false, address) {\n  address ??= mkaddr();\n\n  const child = (globalThis.child = globalThis.listeners[address] || StartDebugger(args, false, address));\n  let dispatch;\n\n  globalThis.script = args[0];\n\n  sleep(500);\n\n  const dbg = this ?? {};\n\n  define(dbg, {\n    child,\n    args,\n    kill: () => (children.delete(child.pid), kill(child.pid, SIGTERM))\n  });\n\n  await ConnectDebugger.call(dbg, address, skipToMain);\n\n  return dbg; //dispatch;\n}\n\nasync function OnStopped(msg) {\n  const st = (globalThis.stack = await dispatch.stackTrace());\n  let [top] = st;\n  let { id, name, filename, line } = top;\n  repl.printStatus(`#${id} ${name}@${filename}:${line}  ` + files[filename].line(line));\n}\n\nfunction URLWorker(script) {\n  const dataURL = s => `data:application/javascript;charset=utf-8;base64,` + btoa(s).replaceAll('+', '-').replaceAll('/', '_').replaceAll('=', '');\n\n  const url = dataURL(script);\n  const w = new Worker(url);\n\n  return define(new Repeater((push, stop) => (w.onmessage = push)), {\n    postMessage: msg => w.postMessage(msg)\n  });\n}\n\nfunction main(...args) {\n  const base = scriptName().replace(/\\.[a-z]*$/, '');\n\n  const config = ReadJSON(`.${base}-config`) ?? {};\n\n  globalThis.console = new Console(stderr, {\n    inspectOptions: { depth: Infinity, compact: 1, maxArrayLength: Infinity, customInspect: true }\n  });\n\n  let params = getOpt(\n    {\n      verbose: [false, (a, v) => (v | 0) + 1, 'v'],\n      listen: [false, null, 'l'],\n      connect: [false, null, 'c'],\n      client: [false, null, 'C'],\n      server: [false, null, 'S'],\n      debug: [false, null, 'x'],\n      tls: [false, (v, pv, o) => ((o.tls = true), true), 't'],\n      'no-tls': [false, (v, pv, o) => ((o.tls = false), true), 'T'],\n      address: [true, null, 'a'],\n      port: [true, null, 'p'],\n      quiet: [false, null, 'q'],\n      'ssl-cert': [true, null],\n      'ssl-private-key': [true, null],\n      'ssl-ca': [true, null],\n      '@': 'address,port'\n    },\n    args\n  );\n  if(params['no-tls'] === true) params.tls = false;\n  const {\n    address = '0.0.0.0',\n    port = 8999,\n    'ssl-cert': sslCert = 'localhost.crt',\n    'ssl-private-key': sslPrivateKey = 'localhost.key',\n    'ssl-ca': sslCA = '/etc/ssl/certs/ca-certificates.crt',\n    quiet = false,\n    debug = false,\n    tls = true\n  } = params;\n\n  const listen = params.connect && !params.listen ? false : true;\n\n  let name = scriptArgs[0];\n  name = name\n    .replace(/.*\\//, '')\n    .replace(/-/g, ' ')\n    .replace(/\\.[^\\/.]*$/, '');\n\n  let [prefix, suffix] = name.split(' ');\n\n  let protocol = new WeakMap();\n  let ws2dbg = (globalThis.ws2dbg = mapWrapper(new WeakMap()));\n  let dbg2ws = (globalThis.dbg2ws = mapWrapper(new WeakMap()));\n\n  let sockets = (globalThis.sockets ??= new Set());\n  //console.log(name, params['@']);\n\n  function createWS(url, callbacks, listen) {\n    //console.log('createWS', { url, callbacks, listen });\n\n    setLog(\n      quiet ? 0 : LLL_USER | (((debug > 1 ? LLL_INFO : LLL_WARN) << 1) - 1),\n      quiet || params.debug <= 1\n        ? () => {}\n        : (level, str) => {\n            if(/BIND_PROTOCOL|DROP_PROTOCOL|CHECK_ACCESS_RIGHTS|ADD_HEADERS/.test(str)) return;\n            console.log(logLevels[level].padEnd(10), str.trim());\n          }\n    );\n\n    let options;\n    let dbg;\n    console.log('createWS', { url });\n    return createServer(\n      url,\n      (options = {\n        tls: params.tls,\n        sslCert,\n        sslPrivateKey,\n        sslCA,\n        mimetypes: [\n          ['.svgz', 'application/gzip'],\n          ['.mjs', 'application/javascript'],\n          ['.es', 'application/javascript'],\n          ['.wasm', 'application/octet-stream'],\n          ['.eot', 'application/vnd.ms-fontobject'],\n          ['.lib', 'application/x-archive'],\n          ['.bz2', 'application/x-bzip2'],\n          ['.gitignore', 'text/plain'],\n          ['.cmake', 'text/plain'],\n          ['.hex', 'text/plain'],\n          ['.md', 'text/plain'],\n          ['.pbxproj', 'text/plain'],\n          ['.wat', 'text/plain'],\n          ['.c', 'text/x-c'],\n          ['.h', 'text/x-c'],\n          ['.cpp', 'text/x-c++'],\n          ['.hpp', 'text/x-c++'],\n          ['.filters', 'text/xml'],\n          ['.plist', 'text/xml'],\n          ['.storyboard', 'text/xml'],\n          ['.vcxproj', 'text/xml'],\n          ['.bat', 'text/x-msdos-batch'],\n          ['.mm', 'text/x-objective-c'],\n          ['.m', 'text/x-objective-c'],\n          ['.sh', 'text/x-shellscript']\n        ],\n        mounts: [\n          ['/proxy', 'ipv4:127.0.0.1:22', null, 'proxy-ws-raw-ws'],\n          ['/lws', 'https://www.google.ch/', null, ''],\n          ['/', '.', 'debugger.html'],\n          function* config(req, res) {\n            const { body, headers } = req;\n            console.log('/config', { req, res });\n            console.log('*config', { body, headers });\n            yield '{}';\n          },\n          function* files(req, res) {\n            const { body, headers } = req;\n            yield fs\n              .readdirSync('.')\n              .sort()\n              .map(f => f + '\\n')\n              .join('');\n          }\n        ],\n        ...url,\n        ...callbacks,\n        block: false,\n        onConnect(ws, req) {\n          console.log('onConnect', { ws, req }, req && req.headers);\n\n          Object.defineProperties(ws, {\n            sendMessage: {\n              value: async function sendMessage(msg) {\n                let ret = await this.send(JSON.stringify(msg));\n                console.log(`ws.sendMessage(`, console.config({ compact: 1 }), msg, `) = ${ret}`);\n                return ret;\n              },\n              enumerable: false\n            },\n            dbg: { value: null, writable: true, enumerable: false }\n          });\n\n          sockets.add(ws);\n        },\n        onClose(ws) {\n          console.log('onClose', { ws, dbg });\n          dbg?.close();\n\n          protocol.delete(ws);\n          sockets.delete(ws);\n        },\n        onError(ws) {\n          console.log('onError', ws);\n        },\n        onRequest(req, resp) {\n          const { method, headers } = req;\n          //console.log('\\x1b[38;5;33monRequest\\x1b[0m [\\n  ', req, ',\\n  ', resp, '\\n]');\n          const { body, url } = resp;\n\n          const file = url.path.slice(1);\n          const dir = file.replace(/\\/[^\\/]*$/g, '');\n          console.log('\\x1b[38;5;33monRequest\\x1b[0m', { file, dir, body });\n\n          if(file.endsWith('.js') && resp.body) {\n            //console.log('onRequest', { file, dir });\n            const re = /^(\\s*(im|ex)port[^\\n]*from ['\"])([^./'\"]*)(['\"]\\s*;[\\t ]*\\n?)/gm;\n\n            resp.body = body.replaceAll(re, (match, p1, p0, p2, p3, offset) => {\n              if(!/[\\/\\.]/.test(p2)) {\n                let fname = `${p2}.js`;\n\n                if(!existsSync(dir + '/' + fname)) return `/* ${match} */`;\n\n                match = [p1, './' + fname, p3].join('');\n\n                //console.log('args', { match, p1, p2, p3, offset });\n              }\n              return match;\n            });\n          }\n\n          return resp;\n        },\n        onMessage(ws, data) {\n          dbg = ws2dbg(ws);\n\n          // showSessions();\n\n          handleCommand(ws, data);\n\n          async function handleCommand(ws, data) {\n            let obj = JSON.parse(data);\n\n            console.log('onMessage(x)', obj);\n\n            const { command, ...rest } = obj;\n            // console.log('onMessage', command, rest);\n            const { connect = true, address = '127.0.0.1:' + Math.round(Math.random() * (65535 - 1024)) + 1024, args = [] } = rest;\n\n            switch (obj.type ?? command) {\n              case 'start': {\n                dbg = globalThis.dbg = { child: StartDebugger(args, connect, address) };\n\n                ws2dbg(ws, dbg);\n                dbg2ws(dbg, ws);\n\n                const [stdin, stdout, stderr] = child.stdio;\n                for(let fd of [stdout, stderr]) {\n                  let flags = fcntl(fd, F_GETFL);\n                  flags |= O_NONBLOCK;\n                  fcntl(fd, F_SETFL, flags);\n                }\n\n                console.log('stdout flags', fcntl(stdout, F_GETFL) & O_NONBLOCK, 'O_NONBLOCK=', O_NONBLOCK);\n\n                const forward = (fd, name) =>\n                  consume(reader(fd), buf => {\n                    let data = toString(buf.slice(0, r));\n                    //console.log(`read(${fd}, buf) = ${r} (${quote(data, \"'\")})`);\n\n                    ws.sendMessage({\n                      type: 'output',\n                      channel: name,\n                      data\n                    });\n                  });\n                forward(stdout, 'stdout');\n                forward(stderr, 'stderr');\n                define(globalThis, { stdout, stderr, reader });\n\n                sleep(1000);\n\n                let tid, exited;\n\n                tid = setInterval(() => {\n                  let pid = child.wait(WNOHANG);\n\n                  if((exited = checkChildExited(child))) {\n                    ws.sendMessage({\n                      type: 'error',\n                      command: 'start',\n                      message: `child process ${pid} ${exited}`\n                    });\n                    clearInterval(tid);\n                  }\n                }, 1000);\n\n                let pid = child.wait(WNOHANG);\n\n                if((exited = checkChildExited(child))) {\n                  ws.sendMessage({\n                    type: 'error',\n                    command: 'start',\n                    message: `unable to start debugger: ${exited}`\n                  });\n                  break;\n                }\n\n                const cwd = process.cwd();\n                ws.sendMessage({\n                  type: 'response',\n                  response: {\n                    command: 'start',\n                    args,\n                    cwd,\n                    address\n                  }\n                });\n\n                break;\n              }\n\n              case 'connect': {\n                dbg = globalThis.dbg = await ConnectDebugger.call(globalThis.dbg, address, false, (dbg, sock) => {\n                  console.log('wait(WNOHANG) =', child.wait(WNOHANG));\n                  console.log('child', child);\n                });\n\n                ws2dbg(ws, dbg);\n                dbg2ws(dbg, ws);\n\n                console.log('connect command', { ws, dbg });\n                sockets.add(dbg.sock);\n\n                const cwd = process.cwd();\n                let connected;\n\n                console.log('dbg', dbg);\n                break;\n              }\n\n              case 'file': {\n                const { path } = rest;\n                const data = ReadFile(path, 'utf-8');\n                //ws.send(JSON.stringify({ type: 'response', response: { command: 'file', path, data } }));\n\n                const lexer = new Lexer(data, path);\n                console.log('lexer', lexer);\n                const lines = [];\n\n                for(;;) {\n                  const { pos, size } = lexer;\n                  console.log('lexer', { pos, size });\n                  let result = lexer.next();\n                  if(result.done) break;\n                  const token = result.value;\n                  console.log('token', {\n                    lexeme: token.lexeme,\n                    id: token.id,\n                    loc: token.loc + ''\n                  });\n                  const { type, id, lexeme, loc } = token;\n                  const { line, column, file } = loc;\n                  //console.log('token', {lexeme,id,line});\n\n                  if(!lines[line - 1]) lines.push([]);\n                  let a = lines[line - 1];\n                  a.push([lexeme, id]);\n                }\n                console.log('lines', lines);\n                break;\n              }\n\n              case 'request': {\n                const { request } = obj;\n                const { request_seq, command, args } = request;\n\n                let response = await dbg.dispatch.sendRequest(command, args, request_seq);\n\n                if(command == 'stackTrace') {\n                  response.body = response.body.map(frame => {\n                    if(frame.filename) frame.filename = path.relative(frame.filename);\n\n                    return frame;\n                  });\n                }\n                console.log('Request', { request, response });\n\n                ws.sendMessage(response);\n\n                break;\n              }\n\n              default: {\n                /*  console.log('send to debugger', { obj });\n                dbg.sendMessage(obj);*/\n                const dbg = ws2dbg(ws);\n                const { pid } = dbg.child;\n                console.log('send to debugger', { pid, obj });\n\n                dbg.sendMessage(obj);\n\n                //DebuggerProtocol.send(dbg, data);\n                break;\n              }\n            }\n          }\n        },\n        ...(url && url.host ? url : {})\n      })\n    );\n  }\n\n  console.log('XX');\n\n  delete globalThis.DEBUG;\n\n  let inputBuf = new ArrayBuffer(10);\n  ttySetRaw(0);\n\n  setReadHandler(0, () => {\n    let r = readSync(0, inputBuf, 0, inputBuf.byteLength);\n\n    if(r > 0) {\n      let a = new Uint8Array(inputBuf.slice(0, r));\n\n      //console.log('a', a);\n\n      for(let i = 0; i < a.length; i++) if(a[i] == 13) a[i] = 10;\n\n      if(a.length == 1 && a[0] == 127) a = new Uint8Array([8, 0x20, 8]);\n\n      if(a.length == 1 && a[0] == 27) showSessions();\n      else writeSync(1, a.buffer);\n    }\n  });\n\n  function showSessions() {\n    let sessions = getSessions();\n    console.log('sessions', console.config({ maxArrayLength: Infinity, depth: 4, customInspect: true, compact: 0 }), sessions);\n  }\n\n  //setInterval(() => console.log('interval'), 5000);\n\n  globalThis.server = createWS(`wss://${address}:8998/ws`, {}, true);\n\n  define(globalThis, {\n    get connections() {\n      return [...globalThis.sockets].map(ws => ws2dbg(ws));\n    },\n    get socklist() {\n      return [...globalThis.sockets];\n    },\n    net: { setLog, LLL_USER, LLL_NOTICE, LLL_WARN, createServer },\n    TrivialSyntaxHighlighter,\n    NewDebugger,\n    LaunchDebugger,\n    StartDebugger,\n    ConnectDebugger,\n    DebuggerDispatcher,\n    DebuggerProtocol,\n    GetFunctionName,\n    FindFunctions,\n    LoadAST,\n    Table,\n    List,\n    get file() {\n      return this.files[this.script];\n    },\n    files: propertyLookup(\n      (globalThis.fileCache = {}),\n      memoize((file, source) => {\n        source ??= tryCatch(\n          () => TrivialSyntaxHighlighter(ReadFile(file)),\n          s => s,\n          () => ReadFile(file)\n        );\n        return define(\n          {\n            source,\n            indexlist: [...source.matchAll(/^[^\\n]*/gm)].map(m => m.index)\n          },\n          lazyProperties(\n            {\n              line(i, j) {\n                if(i === undefined) return '';\n                const { source, indexlist } = this;\n                j ??= i + 1;\n                const m = mod(indexlist.length - 1);\n                const [start, end] = [indexlist[m(i)], indexlist[m(j)]];\n                let line = source.slice(start, (end ?? 0) - 1);\n\n                if([...line.matchAll(/\\x1b([^A-Za-z]*[A-Za-z])/g)].last != '\\x1b[0m') line += '\\x1b[0m';\n\n                return line;\n              },\n              match(re) {\n                if(typeof re == 'string') re = new RegExp(re, 'gi');\n\n                return this.functions.then(fns =>\n                  define(\n                    fns.filter(({ name }) => re.test(name)),\n                    { [Symbol.toStringTag]: 'FunctionList', file }\n                  )\n                );\n              }\n            },\n            {\n              // estree: () => ,\n              async functions() {\n                return (globalThis.functionCache = [...FindFunctions((globalThis.ast = await LoadAST(file)))].map(([name, loc, params, expression, path]) =>\n                  define(\n                    {\n                      name,\n                      params,\n                      ...loc,\n                      expression\n                    },\n                    { path }\n                  )\n                ));\n              }\n            },\n            { async: false }\n          )\n        );\n      })\n    ),\n    async repeat(cond, fn, ...args) {\n      let r;\n      if(typeof cond == 'number') {\n        let n = cond;\n        cond = (r, i) => i >= n || r === true;\n      }\n      for(let i = 0; ; i++) {\n        r = await fn(...args);\n\n        if(cond(r, i)) break;\n      }\n      return r;\n    },\n    repl: StartREPL()\n  });\n\n  function quit(why) {\n    console.log(`quit('${why}')`);\n\n    let cfg = { inspectOptions: console.options };\n    WriteJSON(`.${base}-config`, cfg);\n    // repl.cleanup(why);\n  }\n}\n\ntry {\n  main(...scriptArgs.slice(1));\n} catch(error) {\n  console.log(`FAIL: ${error?.message ?? error}\\n${error?.stack}`);\n} finally {\n  //console.log('SUCCESS');\n}\n",
			"file": "debugger-server.js",
			"file_size": 29794,
			"file_write_time": 133848823823310742,
			"settings":
			{
				"buffer_size": 29794,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					448,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALQpAAAAAAAAtSkAAAAAAAAAAAAAtSkAAAAAAAC9KQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtCkAAAAAAAC0KQAAAAAAAP///////+9/"
				],
				[
					459,
					1,
					"insert",
					{
						"characters": "let"
					},
					"BQAAABopAAAAAAAAGykAAAAAAAAAAAAAGykAAAAAAAAbKQAAAAAAAAYAAAByZXR1cm6wKQAAAAAAALApAAAAAAAACAAAACAgICAgICAgGykAAAAAAAAcKQAAAAAAAAAAAAAcKQAAAAAAAB0pAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAICkAAAAAAAAaKQAAAAAAAAAAAAAAAFJA"
				],
				[
					460,
					1,
					"insert",
					{
						"characters": " ret="
					},
					"BQAAAB0pAAAAAAAAHikAAAAAAAAAAAAAHikAAAAAAAAfKQAAAAAAAAAAAAAfKQAAAAAAACApAAAAAAAAAAAAACApAAAAAAAAISkAAAAAAAAAAAAAISkAAAAAAAAiKQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHSkAAAAAAAAdKQAAAAAAAAAAAAAAAPC/"
				],
				[
					462,
					1,
					"insert",
					{
						"characters": "\n\nreturn"
					},
					"CwAAALYpAAAAAAAAtykAAAAAAAAAAAAAtykAAAAAAAC/KQAAAAAAAAAAAAC/KQAAAAAAAMApAAAAAAAAAAAAAMApAAAAAAAAyCkAAAAAAAAAAAAAtykAAAAAAAC3KQAAAAAAAAgAAAAgICAgICAgIMApAAAAAAAAwSkAAAAAAAAAAAAAwSkAAAAAAADCKQAAAAAAAAAAAADCKQAAAAAAAMMpAAAAAAAAAAAAAMMpAAAAAAAAxCkAAAAAAAAAAAAAxCkAAAAAAADFKQAAAAAAAAAAAADFKQAAAAAAAMYpAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtikAAAAAAAC2KQAAAAAAAP///////+9/"
				],
				[
					463,
					1,
					"insert",
					{
						"characters": " ret;"
					},
					"BQAAAMYpAAAAAAAAxykAAAAAAAAAAAAAxykAAAAAAADIKQAAAAAAAAAAAADIKQAAAAAAAMkpAAAAAAAAAAAAAMkpAAAAAAAAyikAAAAAAAAAAAAAyikAAAAAAADLKQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxikAAAAAAADGKQAAAAAAAAAAAAAAAPC/"
				],
				[
					465,
					1,
					"insert",
					{
						"characters": "\nconsole.log"
					},
					"DAAAALcpAAAAAAAAuCkAAAAAAAAAAAAAuCkAAAAAAAC5KQAAAAAAAAAAAAC5KQAAAAAAALopAAAAAAAAAAAAALopAAAAAAAAuykAAAAAAAAAAAAAuykAAAAAAAC8KQAAAAAAAAAAAAC8KQAAAAAAAL0pAAAAAAAAAAAAAL0pAAAAAAAAvikAAAAAAAAAAAAAvikAAAAAAAC/KQAAAAAAAAAAAAC/KQAAAAAAAMApAAAAAAAAAAAAAMApAAAAAAAAwSkAAAAAAAAAAAAAwSkAAAAAAADCKQAAAAAAAAAAAADCKQAAAAAAAMMpAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtykAAAAAAAC3KQAAAAAAAAAAAAAAYGVA"
				],
				[
					466,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMMpAAAAAAAAxSkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwykAAAAAAADDKQAAAAAAAAAAAAAAAPC/"
				],
				[
					467,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAMQpAAAAAAAAxikAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxCkAAAAAAADEKQAAAAAAAAAAAAAAAPC/"
				],
				[
					468,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAMUpAAAAAAAAxikAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxSkAAAAAAADFKQAAAAAAAAAAAAAAAPC/"
				],
				[
					469,
					1,
					"left_delete",
					null,
					"AQAAAMUpAAAAAAAAxSkAAAAAAAABAAAAMA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxikAAAAAAADGKQAAAAAAAAAAAAAAAPC/"
				],
				[
					470,
					1,
					"insert",
					{
						"characters": "Stack:"
					},
					"BgAAAMUpAAAAAAAAxikAAAAAAAAAAAAAxikAAAAAAADHKQAAAAAAAAAAAADHKQAAAAAAAMgpAAAAAAAAAAAAAMgpAAAAAAAAySkAAAAAAAAAAAAAySkAAAAAAADKKQAAAAAAAAAAAADKKQAAAAAAAMspAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxSkAAAAAAADFKQAAAAAAAAAAAAAAAPC/"
				],
				[
					471,
					6,
					"left_delete",
					null,
					"BgAAAMopAAAAAAAAyikAAAAAAAABAAAAOskpAAAAAAAAySkAAAAAAAABAAAAa8gpAAAAAAAAyCkAAAAAAAABAAAAY8cpAAAAAAAAxykAAAAAAAABAAAAYcYpAAAAAAAAxikAAAAAAAABAAAAdMUpAAAAAAAAxSkAAAAAAAABAAAAUw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyykAAAAAAADLKQAAAAAAAAAAAAAAAPC/"
				],
				[
					472,
					1,
					"insert",
					{
						"characters": "stackTrace"
					},
					"CgAAAMUpAAAAAAAAxikAAAAAAAAAAAAAxikAAAAAAADHKQAAAAAAAAAAAADHKQAAAAAAAMgpAAAAAAAAAAAAAMgpAAAAAAAAySkAAAAAAAAAAAAAySkAAAAAAADKKQAAAAAAAAAAAADKKQAAAAAAAMspAAAAAAAAAAAAAMspAAAAAAAAzCkAAAAAAAAAAAAAzCkAAAAAAADNKQAAAAAAAAAAAADNKQAAAAAAAM4pAAAAAAAAAAAAAM4pAAAAAAAAzykAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxSkAAAAAAADFKQAAAAAAAAAAAAAAAPC/"
				],
				[
					473,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAM8pAAAAAAAA0CkAAAAAAAAAAAAA0CkAAAAAAADRKQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzykAAAAAAADPKQAAAAAAAAAAAAAAAPC/"
				],
				[
					475,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAANIpAAAAAAAA0ykAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0ikAAAAAAADSKQAAAAAAAAAAAAAAAPC/"
				],
				[
					476,
					1,
					"left_delete",
					null,
					"AQAAANIpAAAAAAAA0ikAAAAAAAABAAAAbQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0ykAAAAAAADTKQAAAAAAAAAAAAAAAPC/"
				],
				[
					477,
					1,
					"insert",
					{
						"characters": ",ret"
					},
					"BAAAANIpAAAAAAAA0ykAAAAAAAAAAAAA0ykAAAAAAADUKQAAAAAAAAAAAADUKQAAAAAAANUpAAAAAAAAAAAAANUpAAAAAAAA1ikAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0ikAAAAAAADSKQAAAAAAAAAAAAAAAPC/"
				],
				[
					479,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANcpAAAAAAAA2CkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1ykAAAAAAADXKQAAAAAAAAAAAAAAAPC/"
				],
				[
					483,
					1,
					"left_delete",
					null,
					"AQAAALYpAAAAAAAAtikAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtykAAAAAAAC3KQAAAAAAAAAAAAAAAHJA"
				],
				[
					496,
					6,
					"left_delete",
					null,
					"BgAAAKsoAAAAAAAAqygAAAAAAAABAAAAfakoAAAAAAAAqSgAAAAAAAACAAAAICCnKAAAAAAAAKcoAAAAAAAAAgAAACAgpSgAAAAAAAClKAAAAAAAAAIAAAAgIKMoAAAAAAAAoygAAAAAAAACAAAAICCiKAAAAAAAAKIoAAAAAAAAAQAAAAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArCgAAAAAAACsKAAAAAAAAAAAAAAAAPC/"
				],
				[
					498,
					2,
					"left_delete",
					null,
					"AgAAAEgoAAAAAAAASCgAAAAAAAABAAAAe0coAAAAAAAARygAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASSgAAAAAAABJKAAAAAAAAAAAAAAAwIhA"
				],
				[
					500,
					1,
					"left_delete",
					null,
					"AQAAAB8oAAAAAAAAHygAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAICgAAAAAAAAgKAAAAAAAAAAAAAAAYHVA"
				],
				[
					503,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAB8oAAAAAAAAICgAAAAAAAAAAAAAICgAAAAAAAAoKAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHygAAAAAAAAfKAAAAAAAAAAAAAAAiIRA"
				],
				[
					508,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyC8AAAAAAADILwAAAAAAAAAAAAAAAFJA"
				],
				[
					527,
					1,
					"insert",
					{
						"characters": "ket"
					},
					"BAAAAKAoAAAAAAAAoSgAAAAAAAAAAAAAoSgAAAAAAAChKAAAAAAAAAYAAAByZXR1cm6hKAAAAAAAAKIoAAAAAAAAAAAAAKIoAAAAAAAAoygAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoCgAAAAAAACmKAAAAAAAAAAAAAAAAPC/"
				],
				[
					528,
					3,
					"left_delete",
					null,
					"AwAAAKIoAAAAAAAAoigAAAAAAAABAAAAdKEoAAAAAAAAoSgAAAAAAAABAAAAZaAoAAAAAAAAoCgAAAAAAAABAAAAaw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoygAAAAAAACjKAAAAAAAAAAAAAAAAPC/"
				],
				[
					529,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAKAoAAAAAAAAoSgAAAAAAAAAAAAAoSgAAAAAAACiKAAAAAAAAAAAAACiKAAAAAAAAKMoAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoCgAAAAAAACgKAAAAAAAAAAAAAAAAPC/"
				],
				[
					530,
					1,
					"insert",
					{
						"characters": " ret="
					},
					"BQAAAKMoAAAAAAAApCgAAAAAAAAAAAAApCgAAAAAAAClKAAAAAAAAAAAAAClKAAAAAAAAKYoAAAAAAAAAAAAAKYoAAAAAAAApygAAAAAAAAAAAAApygAAAAAAACoKAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoygAAAAAAACjKAAAAAAAAAAAAAAAAPC/"
				],
				[
					532,
					1,
					"insert",
					{
						"characters": "\n\nreturn"
					},
					"CwAAANQoAAAAAAAA1SgAAAAAAAAAAAAA1SgAAAAAAADdKAAAAAAAAAAAAADdKAAAAAAAAN4oAAAAAAAAAAAAAN4oAAAAAAAA5igAAAAAAAAAAAAA1SgAAAAAAADVKAAAAAAAAAgAAAAgICAgICAgIN4oAAAAAAAA3ygAAAAAAAAAAAAA3ygAAAAAAADgKAAAAAAAAAAAAADgKAAAAAAAAOEoAAAAAAAAAAAAAOEoAAAAAAAA4igAAAAAAAAAAAAA4igAAAAAAADjKAAAAAAAAAAAAADjKAAAAAAAAOQoAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1CgAAAAAAADUKAAAAAAAAP///////+9/"
				],
				[
					533,
					1,
					"insert",
					{
						"characters": " ret;"
					},
					"BQAAAOQoAAAAAAAA5SgAAAAAAAAAAAAA5SgAAAAAAADmKAAAAAAAAAAAAADmKAAAAAAAAOcoAAAAAAAAAAAAAOcoAAAAAAAA6CgAAAAAAAAAAAAA6CgAAAAAAADpKAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5CgAAAAAAADkKAAAAAAAAAAAAAAAAPC/"
				],
				[
					545,
					1,
					"paste",
					null,
					"AQAAANUoAAAAAAAA/ygAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1SgAAAAAAADVKAAAAAAAAAAAAAAAAPC/"
				],
				[
					554,
					1,
					"insert",
					{
						"characters": "breajk"
					},
					"BwAAAOooAAAAAAAA6ygAAAAAAAAAAAAA6ygAAAAAAADrKAAAAAAAAAoAAABzdGFja1RyYWNl6ygAAAAAAADsKAAAAAAAAAAAAADsKAAAAAAAAO0oAAAAAAAAAAAAAO0oAAAAAAAA7igAAAAAAAAAAAAA7igAAAAAAADvKAAAAAAAAAAAAADvKAAAAAAAAPAoAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6igAAAAAAAD0KAAAAAAAAAAAAAAAAPC/"
				],
				[
					555,
					2,
					"left_delete",
					null,
					"AgAAAO8oAAAAAAAA7ygAAAAAAAABAAAAa+4oAAAAAAAA7igAAAAAAAABAAAAag",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8CgAAAAAAADwKAAAAAAAAAAAAAAAAPC/"
				],
				[
					556,
					1,
					"insert",
					{
						"characters": "kpoints"
					},
					"BwAAAO4oAAAAAAAA7ygAAAAAAAAAAAAA7ygAAAAAAADwKAAAAAAAAAAAAADwKAAAAAAAAPEoAAAAAAAAAAAAAPEoAAAAAAAA8igAAAAAAAAAAAAA8igAAAAAAADzKAAAAAAAAAAAAADzKAAAAAAAAPQoAAAAAAAAAAAAAPQoAAAAAAAA9SgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7igAAAAAAADuKAAAAAAAAAAAAAAAAPC/"
				],
				[
					624,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAP8oAAAAAAAAACkAAAAAAAAAAAAAACkAAAAAAAAIKQAAAAAAAAAAAAAIKQAAAAAAAAkpAAAAAAAAAAAAAAkpAAAAAAAAESkAAAAAAAAAAAAAACkAAAAAAAAAKQAAAAAAAAgAAAAgICAgICAgIAkpAAAAAAAACikAAAAAAAAAAAAACikAAAAAAAALKQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/ygAAAAAAAD/KAAAAAAAAAAAAAAAAPC/"
				],
				[
					625,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAspAAAAAAAADSkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACykAAAAAAAALKQAAAAAAAAAAAAAAAPC/"
				],
				[
					626,
					1,
					"insert",
					{
						"characters": "ret.path"
					},
					"CAAAAAwpAAAAAAAADSkAAAAAAAAAAAAADSkAAAAAAAAOKQAAAAAAAAAAAAAOKQAAAAAAAA8pAAAAAAAAAAAAAA8pAAAAAAAAECkAAAAAAAAAAAAAECkAAAAAAAARKQAAAAAAAAAAAAARKQAAAAAAABIpAAAAAAAAAAAAABIpAAAAAAAAEykAAAAAAAAAAAAAEykAAAAAAAAUKQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADCkAAAAAAAAMKQAAAAAAAAAAAAAAAPC/"
				],
				[
					628,
					1,
					"insert",
					{
						"characters": "\npr"
					},
					"BgAAABUpAAAAAAAAFikAAAAAAAAAAAAAFikAAAAAAAAeKQAAAAAAAAAAAAAWKQAAAAAAABYpAAAAAAAACAAAACAgICAgICAgFikAAAAAAAAgKQAAAAAAAAAAAAAgKQAAAAAAACEpAAAAAAAAAAAAACEpAAAAAAAAIikAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFSkAAAAAAAAVKQAAAAAAAAAAAAAAAPC/"
				],
				[
					629,
					2,
					"left_delete",
					null,
					"AgAAACEpAAAAAAAAISkAAAAAAAABAAAAciApAAAAAAAAICkAAAAAAAABAAAAcA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIikAAAAAAAAiKQAAAAAAAAAAAAAAAPC/"
				],
				[
					630,
					1,
					"insert",
					{
						"characters": "ret.path=relative"
					},
					"EQAAACApAAAAAAAAISkAAAAAAAAAAAAAISkAAAAAAAAiKQAAAAAAAAAAAAAiKQAAAAAAACMpAAAAAAAAAAAAACMpAAAAAAAAJCkAAAAAAAAAAAAAJCkAAAAAAAAlKQAAAAAAAAAAAAAlKQAAAAAAACYpAAAAAAAAAAAAACYpAAAAAAAAJykAAAAAAAAAAAAAJykAAAAAAAAoKQAAAAAAAAAAAAAoKQAAAAAAACkpAAAAAAAAAAAAACkpAAAAAAAAKikAAAAAAAAAAAAAKikAAAAAAAArKQAAAAAAAAAAAAArKQAAAAAAACwpAAAAAAAAAAAAACwpAAAAAAAALSkAAAAAAAAAAAAALSkAAAAAAAAuKQAAAAAAAAAAAAAuKQAAAAAAAC8pAAAAAAAAAAAAAC8pAAAAAAAAMCkAAAAAAAAAAAAAMCkAAAAAAAAxKQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAICkAAAAAAAAgKQAAAAAAAAAAAAAAAPC/"
				],
				[
					631,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADEpAAAAAAAAMykAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMSkAAAAAAAAxKQAAAAAAAAAAAAAAAPC/"
				],
				[
					632,
					1,
					"insert",
					{
						"characters": "ret.path"
					},
					"CAAAADIpAAAAAAAAMykAAAAAAAAAAAAAMykAAAAAAAA0KQAAAAAAAAAAAAA0KQAAAAAAADUpAAAAAAAAAAAAADUpAAAAAAAANikAAAAAAAAAAAAANikAAAAAAAA3KQAAAAAAAAAAAAA3KQAAAAAAADgpAAAAAAAAAAAAADgpAAAAAAAAOSkAAAAAAAAAAAAAOSkAAAAAAAA6KQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMikAAAAAAAAyKQAAAAAAAAAAAAAAAPC/"
				],
				[
					634,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADspAAAAAAAAPCkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOykAAAAAAAA7KQAAAAAAAAAAAAAAAPC/"
				],
				[
					641,
					1,
					"cut",
					null,
					"AQAAAAEpAAAAAAAAASkAAAAAAAA9AAAAICAgICAgICBpZihyZXQucGF0aCkKICAgICAgICAgIHJldC5wYXRoPXJlbGF0aXZlKHJldC5wYXRoKTsKCg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAASkAAAAAAAA+KQAAAAAAAAAAAAAAAAAA"
				],
				[
					643,
					1,
					"paste",
					null,
					"AQAAANUoAAAAAAAAEikAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1SgAAAAAAADVKAAAAAAAAAAAAAAAAAAA"
				],
				[
					644,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABIpAAAAAAAAEykAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEikAAAAAAAASKQAAAAAAAAAAAAAAAPC/"
				],
				[
					645,
					2,
					"left_delete",
					null,
					"AgAAABIpAAAAAAAAEikAAAAAAAABAAAAChEpAAAAAAAAESkAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEykAAAAAAAATKQAAAAAAAAAAAAAAAPC/"
				],
				[
					693,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANUoAAAAAAAA1igAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1SgAAAAAAADVKAAAAAAAAAAAAAAAAAAA"
				],
				[
					732,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAABEpAAAAAAAAEikAAAAAAAAAAAAAEikAAAAAAAAcKQAAAAAAAAAAAAASKQAAAAAAABIpAAAAAAAACgAAACAgICAgICAgICASKQAAAAAAABopAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAESkAAAAAAAARKQAAAAAAAAAAAAAAAPC/"
				],
				[
					753,
					1,
					"cut",
					null,
					"AQAAANUoAAAAAAAA1SgAAAAAAAA9AAAACiAgICAgICAgaWYocmV0LnBhdGgpCiAgICAgICAgICByZXQucGF0aD1yZWxhdGl2ZShyZXQucGF0aCk7Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1SgAAAAAAAASKQAAAAAAAAAAAAAAAAAA"
				],
				[
					754,
					2,
					"paste",
					null,
					"AgAAANUoAAAAAAAAEikAAAAAAAAAAAAAEikAAAAAAABPKQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1SgAAAAAAADVKAAAAAAAAAAAAAAAAPC/"
				],
				[
					759,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AwAAACIpAAAAAAAAIykAAAAAAAAAAAAAIykAAAAAAAAjKQAAAAAAAAQAAABwYXRoTCkAAAAAAABMKQAAAAAAAAgAAAAgICAgICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIikAAAAAAAAmKQAAAAAAAAAAAAAAAPC/"
				],
				[
					760,
					2,
					"left_delete",
					null,
					"AgAAACIpAAAAAAAAIikAAAAAAAABAAAAYiEpAAAAAAAAISkAAAAAAAABAAAALg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIykAAAAAAAAjKQAAAAAAAAAAAAAAAPC/"
				],
				[
					761,
					1,
					"insert",
					{
						"characters": "?b"
					},
					"AgAAACEpAAAAAAAAIikAAAAAAAAAAAAAIikAAAAAAAAjKQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAISkAAAAAAAAhKQAAAAAAAAAAAAAAAPC/"
				],
				[
					762,
					1,
					"left_delete",
					null,
					"AQAAACIpAAAAAAAAIikAAAAAAAABAAAAYg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIykAAAAAAAAjKQAAAAAAAAAAAAAAAPC/"
				],
				[
					763,
					1,
					"insert",
					{
						"characters": ".breakpoinst?.path"
					},
					"EgAAACIpAAAAAAAAIykAAAAAAAAAAAAAIykAAAAAAAAkKQAAAAAAAAAAAAAkKQAAAAAAACUpAAAAAAAAAAAAACUpAAAAAAAAJikAAAAAAAAAAAAAJikAAAAAAAAnKQAAAAAAAAAAAAAnKQAAAAAAACgpAAAAAAAAAAAAACgpAAAAAAAAKSkAAAAAAAAAAAAAKSkAAAAAAAAqKQAAAAAAAAAAAAAqKQAAAAAAACspAAAAAAAAAAAAACspAAAAAAAALCkAAAAAAAAAAAAALCkAAAAAAAAtKQAAAAAAAAAAAAAtKQAAAAAAAC4pAAAAAAAAAAAAAC4pAAAAAAAALykAAAAAAAAAAAAALykAAAAAAAAwKQAAAAAAAAAAAAAwKQAAAAAAADEpAAAAAAAAAAAAADEpAAAAAAAAMikAAAAAAAAAAAAAMikAAAAAAAAzKQAAAAAAAAAAAAAzKQAAAAAAADQpAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIikAAAAAAAAiKQAAAAAAAAAAAAAAAPC/"
				],
				[
					765,
					1,
					"left_delete",
					null,
					"AQAAACwpAAAAAAAALCkAAAAAAAABAAAAcw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALSkAAAAAAAAtKQAAAAAAAAAAAAAAAPC/"
				],
				[
					767,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAC0pAAAAAAAALikAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALSkAAAAAAAAtKQAAAAAAAAAAAAAAAPC/"
				],
				[
					777,
					1,
					"paste",
					null,
					"AQAAAEQpAAAAAAAATykAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARCkAAAAAAABEKQAAAAAAAAAAAAAAAPC/"
				],
				[
					778,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAE8pAAAAAAAAUCkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATykAAAAAAABPKQAAAAAAAAAAAAAAAPC/"
				],
				[
					784,
					1,
					"paste",
					null,
					"AQAAAGIpAAAAAAAAbikAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYikAAAAAAABiKQAAAAAAAAAAAAAAAPC/"
				],
				[
					809,
					1,
					"delete_blank_lines",
					{
						"surplus": false
					},
					"AQAAANUnAAAAAAAAmikAAAAAAADMAQAACiAgICAgICAgaWYodHlwZXMuaXNQcm9taXNlKGJyZWFrcG9pbnRzKSkgYnJlYWtwb2ludHMgPSBhd2FpdCBicmVha3BvaW50czsKCiAgICAgICAgaWYoQXJyYXkuaXNBcnJheShicmVha3BvaW50cykpIGJyZWFrcG9pbnRzID0gYnJlYWtwb2ludHMubWFwKGIgPT4gZmlsdGVyS2V5cyhiLCBbJ25hbWUnLCAnbGluZScsICdjb2x1bW4nXSkpOwoKICAgICAgICBsZXQgcmV0PSBhd2FpdCBtZW1iZXIuY2FsbCh0aGlzLCBmaWxlLCBicmVha3BvaW50cyk7CgogICAgICAgIGlmKHJldC5wYXRoKQogICAgICAgICAgcmV0LnBhdGg9cmVsYXRpdmUocmV0LnBhdGgpOwoKICAgICAgICBpZihyZXQ/LmJyZWFrcG9pbnRzPy5wYXRoKQogICAgICAgICAgcmV0LmJyZWFrcG9pbnRzLnBhdGg9cmVsYXRpdmUocmV0LmJyZWFrcG9pbnRzLnBhdGgpOwoKICAgICAgICBjb25zb2xlLmxvZygnYnJlYWtwb2ludHMgPScsIHJldCk7Cg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1ScAAAAAAAChKQAAAAAAAAAAAAAAAPC/"
				],
				[
					810,
					1,
					"delete_blank_lines",
					{
						"surplus": true
					},
					"AQAAANUnAAAAAAAAmikAAAAAAADFAQAAICAgICAgICBpZih0eXBlcy5pc1Byb21pc2UoYnJlYWtwb2ludHMpKSBicmVha3BvaW50cyA9IGF3YWl0IGJyZWFrcG9pbnRzOwogICAgICAgIGlmKEFycmF5LmlzQXJyYXkoYnJlYWtwb2ludHMpKSBicmVha3BvaW50cyA9IGJyZWFrcG9pbnRzLm1hcChiID0+IGZpbHRlcktleXMoYiwgWyduYW1lJywgJ2xpbmUnLCAnY29sdW1uJ10pKTsKICAgICAgICBsZXQgcmV0PSBhd2FpdCBtZW1iZXIuY2FsbCh0aGlzLCBmaWxlLCBicmVha3BvaW50cyk7CiAgICAgICAgaWYocmV0LnBhdGgpCiAgICAgICAgICByZXQucGF0aD1yZWxhdGl2ZShyZXQucGF0aCk7CiAgICAgICAgaWYocmV0Py5icmVha3BvaW50cz8ucGF0aCkKICAgICAgICAgIHJldC5icmVha3BvaW50cy5wYXRoPXJlbGF0aXZlKHJldC5icmVha3BvaW50cy5wYXRoKTsKICAgICAgICBjb25zb2xlLmxvZygnYnJlYWtwb2ludHMgPScsIHJldCk7",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1ScAAAAAAACaKQAAAAAAAAAAAAAAAPC/"
				],
				[
					820,
					1,
					"delete_blank_lines",
					{
						"surplus": true
					},
					"AQAAAPIsAAAAAAAApS0AAAAAAAC0AAAACiAgICAgICAgcmVwbC5wcmludFN0YXR1cygoYXdhaXQgUHJpbnRTdGFja0ZyYW1lKHN0YWNrWzBdKSkuam9pbignICcpICsgJ1xuJyk7CgogICAgICAgIGNvbnN0IHsgZmlsZW5hbWUsIGxpbmUgfSA9IHN0YWNrWzBdOwoKICAgICAgICBkZWZpbmUoZ2xvYmFsVGhpcywgeyBmaWxlOiBmaWxlbmFtZSwgbGluZSB9KTsK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8iwAAAAAAACmLQAAAAAAAAAAAAAAAPC/"
				],
				[
					825,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAD6cwAAaW1wb3J0IHsgZXhpc3RzU3luYywgcmVhZGVyLCByZWFkZXJTeW5jLCByZWFkU3luYywgd3JpdGVTeW5jIH0gZnJvbSAnZnMnOwppbXBvcnQgeyBjcmVhdGVTZXJ2ZXIsIGdldFNlc3Npb25zLCBMTExfSU5GTywgTExMX05PVElDRSwgTExMX1VTRVIsIExMTF9XQVJOLCBsb2dMZXZlbHMsIHNldExvZyB9IGZyb20gJ25ldCc7CmltcG9ydCB7IGtpbGwsIHNldFJlYWRIYW5kbGVyLCBTSUdURVJNLCBzbGVlcCwgdHR5U2V0UmF3LCBXb3JrZXIgfSBmcm9tICdvcyc7CmltcG9ydCB7IGNsZWFySW50ZXJ2YWwsIHNldEludGVydmFsLCBzZXRUaW1lb3V0IH0gZnJvbSAndGltZXJzJzsKaW1wb3J0IHsgYXRleGl0LCBiaW5kTWV0aG9kcywgYnRvYSwgZGVmaW5lLCBrZXlzLCBmaWx0ZXJLZXlzLCBnZXRPcHQsIGlzT2JqZWN0LCBsYXp5UHJvcGVydGllcywgbWVtb2l6ZSwgbW9kLCBvbmNlLCBwcm9wZXJ0eUxvb2t1cCwgcXVvdGUsIHRvU3RyaW5nLCB0cnlDYXRjaCwgdHlwZXMsIG1hcFdyYXBwZXIgfSBmcm9tICd1dGlsJzsKaW1wb3J0IHsgTGlzdCwgVGFibGUgfSBmcm9tICcuL2NsaS1oZWxwZXJzLmpzJzsKaW1wb3J0IHsgRGVidWdnZXJEaXNwYXRjaGVyLCBGaW5kRnVuY3Rpb25zLCBHZXRGdW5jdGlvbk5hbWUsIFRyaXZpYWxTeW50YXhIaWdobGlnaHRlciB9IGZyb20gJy4vZGVidWdnZXIuanMnOwppbXBvcnQgeyBEZWJ1Z2dlclByb3RvY29sIH0gZnJvbSAnLi9kZWJ1Z2dlcnByb3RvY29sLmpzJzsKaW1wb3J0IHsgUmVhZEZpbGUsIFJlYWRKU09OLCBXcml0ZUpTT04gfSBmcm9tICcuL2lvLWhlbHBlcnMuanMnOwppbXBvcnQgeyBjb25zdW1lLCBtYXAgfSBmcm9tICcuL2xpYi9hc3luYy9oZWxwZXJzLmpzJzsKaW1wb3J0IHsgYWJzb2x1dGUsIGJhc2VuYW1lLCBleHRuYW1lLCByZWxhdGl2ZSB9IGZyb20gJy4vbGliL3BhdGguanMnOwppbXBvcnQgeyBSZXBlYXRlciB9IGZyb20gJy4vbGliL3JlcGVhdGVyL3JlcGVhdGVyLmpzJzsKaW1wb3J0IHsgU3Bhd24sIFdOT0hBTkcgfSBmcm9tICcuL29zLWhlbHBlcnMuanMnOwppbXBvcnQgeyBGX0dFVEZMLCBGX1NFVEZMLCBmY250bCwgT19OT05CTE9DSyB9IGZyb20gJy4vcXVpY2tqcy9xanMtZmZpL2xpYi9mY250bC5qcyc7CmltcG9ydCB7IFJFUEwgfSBmcm9tICcuL3F1aWNranMvcWpzLW1vZHVsZXMvbGliL3JlcGwuanMnOwppbXBvcnQgeyBDb25zb2xlIH0gZnJvbSAnY29uc29sZSc7CmltcG9ydCB7IExvY2F0aW9uIH0gZnJvbSAnbG9jYXRpb24nOwppbXBvcnQgcHJvY2VzcyBmcm9tICdwcm9jZXNzJzsKaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJzsKaW1wb3J0IGV4dGVuZEFycmF5IGZyb20gJ2V4dGVuZEFycmF5JzsKaW1wb3J0IHsgQUZfSU5FVCwgQXN5bmNTb2NrZXQsIElQUFJPVE9fVENQLCBTT0NLX1NUUkVBTSwgU29ja0FkZHIgfSBmcm9tICdzb2NrZXRzJzsKaW1wb3J0IHsgZXJyIGFzIHN0ZGVyciB9IGZyb20gJ3N0ZCc7CmltcG9ydCB7IGNvZGVjcywgUlBDQXBpLCBSUENQcm94eSwgUlBDT2JqZWN0LCBSUENGYWN0b3J5LCBDb25uZWN0aW9uLCBSUENTZXJ2ZXIsIFJQQ0NsaWVudCwgUlBDU29ja2V0LCBSUENDb25uZWN0LCBSUENMaXN0ZW4gfSBmcm9tICcuL3F1aWNranMvcWpzLW5ldC9qcy9ycGMuanMnOwoKZnVuY3Rpb24gZGVjb3JhdGUoZGVjb3JhdG9ycywgb2JqLCAuLi5hcmdzKSB7CiAgaWYoIUFycmF5LmlzQXJyYXkoZGVjb3JhdG9ycykpIGRlY29yYXRvcnMgPSBbZGVjb3JhdG9yc107CgogIGZvcihsZXQgZGVjb3JhdG9yIG9mIGRlY29yYXRvcnMpCiAgICBmb3IobGV0IHByb3Agb2Yga2V5cyhvYmopKQogICAgICBpZih0eXBlb2Ygb2JqW3Byb3BdID09ICdmdW5jdGlvbicpIHsKICAgICAgICBsZXQgbmV3Zm4gPSBkZWNvcmF0b3Iob2JqW3Byb3BdLCBvYmosIHByb3AsIC4uLmFyZ3MpOwogICAgICAgIGlmKG9ialtwcm9wXSAhPT0gbmV3Zm4pIG9ialtwcm9wXSA9IG5ld2ZuOwogICAgICB9CgogIHJldHVybiBvYmo7Cn0KCmV4dGVuZEFycmF5KEFycmF5LnByb3RvdHlwZSk7Cgpjb25zdCBzY3JpcHROYW1lID0gKGFyZyA9IHNjcmlwdEFyZ3NbMF0pID0+IGJhc2VuYW1lKGFyZywgZXh0bmFtZShhcmcpKTsKCmNvbnN0IGNoaWxkcmVuID0gbmV3IFNldCgpOwoKYXRleGl0KCgpID0+IHsKICBmb3IobGV0IHBpZCBvZiBjaGlsZHJlbikgewogICAgY29uc29sZS5sb2coJ2F0ZXhpdCBraWxsaW5nIGNoaWxkJywgcGlkKTsKICAgIGtpbGwocGlkLCBTSUdURVJNKTsKICB9Cn0pOwoKT2JqZWN0LmFzc2lnbihnbG9iYWxUaGlzLCB7CiAgY29kZWNzLAogIFJQQ0FwaSwKICBSUENQcm94eSwKICBSUENPYmplY3QsCiAgUlBDRmFjdG9yeSwKICBDb25uZWN0aW9uLAogIFJQQ1NlcnZlciwKICBSUENDbGllbnQsCiAgUlBDU29ja2V0LAogIFJQQ0Nvbm5lY3QsCiAgUlBDTGlzdGVuCn0pOwoKY29uc3Qgc2lnbmFsTmFtZSA9IG4gPT4KICAnU0lHJyArCiAgWwogICAgLAogICAgJ0hVUCcsCiAgICAnSU5UJywKICAgICdRVUlUJywKICAgICdJTEwnLAogICAgJ1RSQVAnLAogICAgJ0FCUlQnLAogICAgJ0JVUycsCiAgICAnRlBFJywKICAgICdLSUxMJywKICAgICdVU1IxJywKICAgICdTRUdWJywKICAgICdVU1IyJywKICAgICdQSVBFJywKICAgICdBTFJNJywKICAgICdURVJNJywKICAgICdTVEtGTFQnLAogICAgJ0NITEQnLAogICAgJ0NPTlQnLAogICAgJ1NUT1AnLAogICAgJ1RTVFAnLAogICAgJ1RUSU4nLAogICAgJ1RUT1UnLAogICAgJ1VSRycsCiAgICAnWENQVScsCiAgICAnWEZTWicsCiAgICAnVlRBTFJNJywKICAgICdQUk9GJywKICAgICdXSU5DSCcsCiAgICAnSU8nLAogICAgJ1BXUicsCiAgICAnU1lTJwogIF1bbl07CgpmdW5jdGlvbiBjaGVja0NoaWxkRXhpdGVkKGNoaWxkKSB7CiAgY29uc3QgeyBleGl0ZWQsIHRlcm1zaWcsIHNpZ25hbGVkLCBleGl0Y29kZSB9ID0gY2hpbGQ7CgogIHJldHVybiBleGl0ZWQgPyAoc2lnbmFsZWQgPyBgc2lnbmFsbGVkICR7c2lnbmFsTmFtZSh0ZXJtc2lnKX1gIDogYGV4aXRjb2RlICR7ZXhpdGNvZGV9YCkgOiBudWxsOwp9CgpmdW5jdGlvbiBHZXRMb2Mobm9kZSkgewogIGlmKG5vZGUubG9jPy5zdGFydD8ubGluZSkgewogICAgY29uc3QgeyBsaW5lLCBjb2x1bW4gfSA9IG5vZGUubG9jLnN0YXJ0OwogICAgY29uc3QgW2NoYXJPZmZzZXRdID0gbm9kZS5yYW5nZSA/PyBbbm9kZS5zdGFydF07CiAgICByZXR1cm4gbmV3IExvY2F0aW9uKGxpbmUsIGNvbHVtbiArIDEsIGNoYXJPZmZzZXQpOwogIH0KfQoKYXN5bmMgZnVuY3Rpb24gTG9hZEFTVChzb3VyY2UpIHsKICBpZighZXhpc3RzU3luYyhzb3VyY2UpKSByZXR1cm4gbnVsbDsKICBjb25zdCBjaGlsZCA9IFNwYXduKCdtZXJpeWFoJywgWyctbCcsIHNvdXJjZV0sIHsgYmxvY2s6IGZhbHNlLCBzdGRpbzogWydpbmhlcml0JywgJ3BpcGUnLCAnaW5oZXJpdCddIH0pOwoKICBsZXQgcyA9ICcnOwogIGZvcihsZXQgY2h1bmsgb2YgcmVhZGVyU3luYyhjaGlsZC5zdGRvdXQpKSBzICs9IHRvU3RyaW5nKGNodW5rKTsKCiAgY29uc3Qgc3RhdHVzID0gY2hpbGQud2FpdCgpOwogIGNvbnN0IHsgbGVuZ3RoIH0gPSBzOwogIC8vY29uc29sZS5sb2coJ2xvYWRBU1QnLCB7IHNvdXJjZSwgbGVuZ3RoLCBzdGF0dXMgfSk7CgogIHJldHVybiBKU09OLnBhcnNlKHMpOwp9CgpmdW5jdGlvbiBTdGFydFJFUEwocHJlZml4ID0gc2NyaXB0TmFtZSgpLCBzdWZmaXggPSAnJykgewogIGxldCByZXBsID0gbmV3IFJFUEwoYFx4MWJbMzg7NTsxNjVtJHtwcmVmaXh9IFx4MWJbMzg7NTszOW0ke3N1ZmZpeH1ceDFiWzBtYCwgZmFsc2UpOwogIHJlcGwuaGlzdG9yeUxvYWQobnVsbCk7CiAgbGV0IHsgbG9nIH0gPSBjb25zb2xlOwoKICBjb25zb2xlLmxvZyA9IHJlcGwucHJpbnRGdW5jdGlvbihsb2cuYmluZChjb25zb2xlLCBjb25zb2xlLmNvbmZpZyh7IGNvbXBhY3Q6IDIgfSkpKTsKICBsZXQgeyBzaG93IH0gPSByZXBsOwoKICByZXBsLnNob3cgPSBhcmcgPT4gewogICAgaWYoaXNPYmplY3QoYXJnKSkgewogICAgICBpZihhcmdbU3ltYm9sLmZvcigncHJpbnQnKV0pIHJldHVybiBhcmcudG9TdHJpbmcgPyBhcmcudG9TdHJpbmcoKSA6IGFyZyArICcnOwoKICAgICAgLy9pZihBcnJheS5pc0FycmF5KGFyZykgJiYgdHlwZW9mIGFyZ1swXSA9PSAnb2JqZWN0JyAmJiAgQXJyYXkuaXNBcnJheShhcmdbMF0pKSB7CiAgICAgIGlmKEFycmF5LmlzQXJyYXkoYXJnKSAmJiB0eXBlb2YgYXJnWzBdID09ICdvYmplY3QnKSB7CiAgICAgICAgaWYoIUFycmF5LmlzQXJyYXkoYXJnWzBdKSAmJiAoYXJnLmxlbmd0aCAhPT0gMiB8fCAhQXJyYXkuaXNBcnJheShhcmdbMV0pKSkgewogICAgICAgICAgaWYoYXJnLmxlbmd0aCA9PSAyICYmIEFycmF5LmlzQXJyYXkoYXJnWzFdKSkgewogICAgICAgICAgICBjb25zdCBbZXZlbnQsIHN0YWNrXSA9IGFyZzsKICAgICAgICAgICAgaWYoWyd0eXBlJywgJ3JlYXNvbiddLmV2ZXJ5KGsgPT4gayBpbiBldmVudCkpIGlmIChbJ2lkJywgJ25hbWUnLCAnbGluZSddLmV2ZXJ5KGsgPT4gayBpbiBzdGFja1swXSkpIHJldHVybiBbTGlzdChbZXZlbnRdKSwgTGlzdChzdGFjayldOwogICAgICAgICAgfQoKICAgICAgICAgIGlmKAogICAgICAgICAgICBhcmcubGVuZ3RoID49IDIgLypPYmplY3Qua2V5cyhhcmdbMF0pLnNvbWUoa2V5ID0+IGFyZy5ldmVyeShhID0+IGtleSBpbiBhKSkgfHwqLyAmJgogICAgICAgICAgICBhcmcubWFwKGl0ZW0gPT4gT2JqZWN0LmtleXMoaXRlbSkpLnJlZHVjZSgoYWNjLCBrZXlzLCBpKSA9PiAoaSA9PSAwID8ga2V5cyA6IGFjYyA/IGtleXMuZXF1YWwoYWNjKSAmJiBrZXlzIDogZmFsc2UpKQogICAgICAgICAgKQogICAgICAgICAgICByZXR1cm4gcmVwbC5zaG93KFRhYmxlKGFyZykpOwogICAgICAgIH0KICAgICAgfQogICAgfQoKICAgIHJldHVybiBzaG93LmNhbGwocmVwbCwgYXJnKTsKICB9OwoKICByZXBsLmxvYWRTYXZlT3B0aW9ucygpOwogIC8vcmVwbC5wcmludFByb21pc2UgPSAoKSA9PiB7fTsKICByZXBsLnJ1bigpOwogIHJldHVybiByZXBsOwp9CgpleHBvcnQgZnVuY3Rpb24gU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKSB7CiAgbGV0IGVudiA9IHt9OwoKICBhZGRyZXNzID8/PSAnMTI3LjAuMC4xOjk5MDEnOwoKICBlbnZbJ0RJU1BMQVknXSA/Pz0gJzowLjAnOwoKICBpZihjb25uZWN0KSBlbnZbJ1FVSUNLSlNfREVCVUdfQUREUkVTUyddID0gYWRkcmVzczsKICBlbHNlIGVudlsnUVVJQ0tKU19ERUJVR19MSVNURU5fQUREUkVTUyddID0gYWRkcmVzczsKCiAgY29uc3QgY2hpbGQgPSBTcGF3bigncWpzbScsIGFyZ3MsIHsgYmxvY2s6IGZhbHNlLCBlbnY6IHsgLi4ucHJvY2Vzcy5lbnYsIC4uLmVudiB9LCBzdGRpbzogWydwaXBlJywgJ3BpcGUnLCAncGlwZSddIH0pOwoKICBpZighY29ubmVjdCkgbGlzdGVuZXJzW2FkZHJlc3NdID0gY2hpbGQ7CgogIGlmKHByb2Nlc3MuZW52LkRFQlVHKSBjb25zb2xlLmxvZygnU3RhcnREZWJ1Z2dlcicsIHsgYXJncywgY29ubmVjdCwgYWRkcmVzcywgZW52IH0sIGNoaWxkKTsKCiAgY2hpbGRyZW4uYWRkKGNoaWxkLnBpZCk7CgogIHJldHVybiBkZWZpbmUoY2hpbGQsIHsgYXJncyB9KTsKfQoKZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIENvbm5lY3REZWJ1Z2dlcihhZGRyZXNzLCBza2lwVG9NYWluID0gdHJ1ZSwgY2FsbGJhY2spIHsKICBjb25zdCBhZGRyID0gbmV3IFNvY2tBZGRyKEFGX0lORVQsIC4uLmFkZHJlc3Muc3BsaXQoJzonKSk7CiAgY29uc3Qgc29jayA9IG5ldyBBc3luY1NvY2tldChBRl9JTkVULCBTT0NLX1NUUkVBTSwgSVBQUk9UT19UQ1ApOwoKICBjb25zdCByZXQgPSBhd2FpdCBzb2NrLmNvbm5lY3QoYWRkcik7CgogIGlmKHR5cGVvZiBjYWxsYmFjayAhPSAnZnVuY3Rpb24nICYmIHR5cGVvZiBjYWxsYmFjayA9PSAnb2JqZWN0JykgY2FsbGJhY2sgPSBjYWxsYmFjay5vbk1lc3NhZ2U7CgogIGlmKHByb2Nlc3MuZW52LkRFQlVHKSBjb25zb2xlLmxvZygnQ29ubmVjdERlYnVnZ2VyJywgeyBhZGRyZXNzLCBza2lwVG9NYWluLCBzb2NrIH0pOwoKICBpZihyZXQgPj0gMCkgewogICAgaWYocHJvY2Vzcy5lbnYuREVCVUcpIGNvbnNvbGUubG9nKCdDb25uZWN0ZWQnLCArc29jaywgJ3RvJywgc29jay5yZW1vdGUpOwogICAgc29ja2V0cy5hZGQoc29jayk7CiAgfQoKICBjb25zdCBkYmcgPSB0aGlzID8/IHt9OwoKICBkZWZpbmUoZGJnLCB7CiAgICBzb2NrLAogICAgYWRkciwKICAgIGFzeW5jIHByb2Nlc3MoY2FsbGJhY2spIHsKICAgICAgaWYocHJvY2Vzcy5lbnYuREVCVUcpIGNvbnNvbGUubG9nKCdEZWJ1Z2dlciBwcm9jZXNzKCknLCBjYWxsYmFjayk7CgogICAgICBsZXQgcmV0LAogICAgICAgIGxlbkJ1ZiA9IG5ldyBBcnJheUJ1ZmZlcig5KTsKCiAgICAgIHRyeSB7CiAgICAgICAgd2hpbGUoKHJldCA9IGF3YWl0IHNvY2sucmVjdihsZW5CdWYsIDAsIDkpKSA+IDApIHsKICAgICAgICAgIGxldCBsZW4gPSBwYXJzZUludCh0b1N0cmluZyhsZW5CdWYsIDAsIHJldCksIDE2KTsKCiAgICAgICAgICBsZXQgZGF0YUJ1ZiA9IG5ldyBBcnJheUJ1ZmZlcihsZW4pOwogICAgICAgICAgbGV0IG9mZnNldCA9IDA7CgogICAgICAgICAgd2hpbGUob2Zmc2V0IDwgbGVuKSB7CiAgICAgICAgICAgIHJldCA9IGF3YWl0IHNvY2sucmVjdihkYXRhQnVmLCBvZmZzZXQsIGxlbiAtIG9mZnNldCk7CgogICAgICAgICAgICBpZihyZXQgPD0gMCkgewogICAgICAgICAgICAgIHNvY2suY2xvc2UoKTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgICBvZmZzZXQgKz0gcmV0OwogICAgICAgICAgfQogICAgICAgICAgaWYocmV0IDw9IDApIGJyZWFrOwogICAgICAgICAgbGV0IHMgPSB0b1N0cmluZyhkYXRhQnVmKTsKICAgICAgICAgIGxldCBvYmogPSBKU09OLnBhcnNlKHMpOwoKICAgICAgICAgIGNvbnN0IGZ1bmNOYW1lID0gJ1x4MWJbMzg7NTsyMDhtUFJPQ0VTU1x4MWJbMG0nOwoKICAgICAgICAgIGlmKHByb2Nlc3MuZW52LkRFQlVHKSBjb25zb2xlLmxvZyhmdW5jTmFtZSArICcgXHgxYlszODs1OzE5Nm1iZWZvcmUgY2FsbGJhY2tceDFiWzBtJywgb2JqKTsKICAgICAgICAgIGxldCByZXN1bHQgPSBjYWxsYmFjayhvYmopOwogICAgICAgICAgYXdhaXQgcmVzdWx0OwogICAgICAgIH0KICAgICAgfSBjYXRjaChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKCdTb2NrZXQgZXJyb3I6JywgZXJyb3IubWVzc2FnZSArICdcbicgKyBlcnJvci5zdGFjayk7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgc29jay5jbG9zZSgpOwogICAgICAgIHJldHVybiByZXQ7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBzZW5kTWVzc2FnZShtc2cpIHsKICAgICAgaWYodHlwZW9mIG1zZyAhPSAnc3RyaW5nJykgbXNnID0gSlNPTi5zdHJpbmdpZnkobXNnKTsKICAgICAgY29uc3QgcmV0ID0gc29jay5zZW5kKG1zZy5sZW5ndGgudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDgsICcwJykgKyAnXG4nICsgbXNnKTsKCiAgICAgIGlmKHByb2Nlc3MuZW52LkRFQlVHKSBjb25zb2xlLmxvZygnXHgxYlszODs1OzMzbVNFTkRceDFiWzBtWycgKyBzb2NrLmZkICsgJ10gKCcgKyByZXQgKyAnKSAnICsgbXNnKTsKCiAgICAgIHJldHVybiByZXQ7CiAgICB9CiAgfSk7CgogIGlmKHByb2Nlc3MuZW52LkRFQlVHKSBjb25zb2xlLmxvZygnQ29ubmVjdERlYnVnZ2VyJywgY29uc29sZS5jb25maWcoeyBkZXB0aDogMSwgY29tcGFjdDogMCB9KSwgZGJnKTsKCiAgTGF1bmNoRGVidWdnZXIoZGJnLCBza2lwVG9NYWluKTsKCiAgcmV0dXJuIGRiZzsKfQoKZnVuY3Rpb24gTGF1bmNoRGVidWdnZXIoZGJnLCBza2lwVG9NYWluID0gdHJ1ZSkgewogIGlmKHByb2Nlc3MuZW52LkRFQlVHKSBjb25zb2xlLmxvZygnTGF1bmNoRGVidWdnZXInLCBjb25zb2xlLmNvbmZpZyh7IGRlcHRoOiAxLCBjb21wYWN0OiAwIH0pLCB7IGRiZywgc2tpcFRvTWFpbiB9KTsKCiAgaWYoc2tpcFRvTWFpbikgewogICAgZGJnLm9uc3RvcHBlZCA9IG9uY2UoYXN5bmMgKC4uLmFyZ3MpID0+IHsKICAgICAgbGV0IHN0ID0gYXdhaXQgZGlzcGF0Y2guc3RhY2tUcmFjZSgpOwoKICAgICAgc2NyaXB0ID8/PSBzdFswXS5maWxlbmFtZTsKCiAgICAgIGxldCBmbnMgPSBhd2FpdCBmaWxlc1tzY3JpcHRdLm1hdGNoKC9tYWluJC9naSk7CiAgICAgIGNvbnNvbGUubG9nKCdtYXRjaGVkIC9tYWluJC9naScsIGZucyAvKi5tYXAoKHsgbmFtZSB9KSA9PiBuYW1lKSovKTsKCiAgICAgIGRiZy5vbnN0b3BwZWQgPSBudWxsOwogICAgICBsZXQgcmVzcDsKICAgICAgY29uc29sZS5sb2coJ2JyZWFrcG9pbnRzKCknLCBjb25zb2xlLmNvbmZpZyh7IGNvbXBhY3Q6IDAgfSksIHsgc2NyaXB0LCBmbnMgfSk7CiAgICAgIHJlc3AgPSBhd2FpdCBkaXNwYXRjaC5icmVha3BvaW50cyhzY3JpcHQsIGZucyk7CiAgICAgIGNvbnNvbGUubG9nKCdicmVha3BvaW50cygpIHJlc3BvbnNlOicsIGNvbnNvbGUuY29uZmlnKHsgY29tcGFjdDogMCB9KSwgcmVzcCk7CgogICAgICBzZXRUaW1lb3V0KGFzeW5jICgpID0+IHsKICAgICAgICByZXNwID0gYXdhaXQgZGlzcGF0Y2guY29udGludWUoKTsKICAgICAgICBjb25zb2xlLmxvZygnY29udGludWUoKSByZXNwb25zZTonLCBjb25zb2xlLmNvbmZpZyh7IGNvbXBhY3Q6IDAgfSksIHJlc3ApOwogICAgICB9LCAxMDApOwogICAgfSk7CiAgfQogIC8vZGJnLm9uc3RvcHBlZCA/Pz0gT25TdG9wcGVkOwogIGxldCBkaXNwYXRjaCA9IChkYmcuZGlzcGF0Y2ggPSBnbG9iYWxUaGlzLmRpc3BhdGNoID0gbmV3IERlYnVnZ2VyRGlzcGF0Y2hlcihkYmcpKTsKCiAgT2JqZWN0LmFzc2lnbihnbG9iYWxUaGlzLCBiaW5kTWV0aG9kcyhkaXNwYXRjaCwgRGVidWdnZXJEaXNwYXRjaGVyLnByb3RvdHlwZSwge30pKTsKICBPYmplY3QuYXNzaWduKGdsb2JhbFRoaXMsIHsKICAgIEdldExvYywKICAgIFByaW50U3RhY2tGcmFtZSwKICAgIFByaW50U3RhY2ssCiAgICBhc3luYyB2YWx1ZShuYW1lKSB7CiAgICAgIGxldCBzdGFjayA9IGF3YWl0IGRpc3BhdGNoLnN0YWNrVHJhY2UoKTsKCiAgICAgIGZvcihsZXQgZnJhbWUgb2Ygc3RhY2spIHsKICAgICAgICBsZXQgeyBsb2NhbCB9ID0gYXdhaXQgZGlzcGF0Y2gudmFyaWFibGVzKGZyYW1lLmlkLCAxKTsKCiAgICAgICAgbGV0IHYgPSBsb2NhbC5maW5kKHYgPT4gdi5uYW1lID09IG5hbWUpOwoKICAgICAgICByZXR1cm4gdjsKICAgICAgfQogICAgfQogIH0pOwoKICByZXR1cm4gZGJnOwp9Cgphc3luYyBmdW5jdGlvbiBQcmludFN0YWNrRnJhbWUoZnJhbWUpIHsKICBpZihmcmFtZSA9PT0gdW5kZWZpbmVkKSBmcmFtZSA9IDA7CgogIGxldCB7IGlkLCBuYW1lLCBmaWxlbmFtZSwgbGluZSB9ID0gZnJhbWU7CiAgbGV0IHBhcmFtczsKCiAgdHJ5IHsKICAgIHBhcmFtcyA9IChhd2FpdCBmaWxlc1tmaWxlbmFtZV0uZnVuY3Rpb25zKS5maW5kKGYgPT4gZi5uYW1lID09IG5hbWUpPy5wYXJhbXM7CiAgfSBjYXRjaChlKSB7fQoKICBpZihwYXJhbXMpIG5hbWUgKz0gYCgke3BhcmFtcy5qb2luKCcsICcpfSlgOwogIGxldCBsb2MgPSBsaW5lICE9PSB1bmRlZmluZWQgPyBuZXcgTG9jYXRpb24oZmlsZW5hbWUsIGxpbmUpIDogdW5kZWZpbmVkOwogIGxldCBjb2RlID0gbGluZSAhPT0gdW5kZWZpbmVkID8gZmlsZXNbZmlsZW5hbWVdLmxpbmUobGluZSAtIDEpIDogdW5kZWZpbmVkOwogIHJldHVybiBbYCMke2lkfWAsIGAgYXQgJHtuYW1lLnBhZEVuZCgzMCl9YCwgbG9jID8gJyBpbiAnICsgbG9jIDogJyddLmNvbmNhdChjb2RlID8gW2NvZGVdIDogW10pOwp9Cgphc3luYyBmdW5jdGlvbiBQcmludFN0YWNrKHN0YWNrKSB7CiAgc3RhY2sgPz89IGF3YWl0IHN0YWNrVHJhY2UoKTsKICBsZXQgZnJhbWVzID0gW107CiAgZm9yKGxldCBmcmFtZSBvZiBzdGFjaykgewogICAgZnJhbWVzLnB1c2goYXdhaXQgUHJpbnRTdGFja0ZyYW1lKGZyYW1lKSk7CiAgfQogIHJldHVybiBMaXN0KGZyYW1lcyk7Cn0KCmRlY29yYXRlKAogIChtZW1iZXIsIG9iaiwgcHJvcCkgPT4KICAgICh7CiAgICAgIGFzeW5jIGJyZWFrcG9pbnRzKC4uLmFyZ3MpIHsKICAgICAgICBpZighKHR5cGVvZiBhcmdzWzBdID09ICdzdHJpbmcnKSkgYXJncy51bnNoaWZ0KGdsb2JhbFRoaXMuc2NyaXB0KTsKCiAgICAgICAgbGV0IFtmaWxlLCBicmVha3BvaW50c10gPSBhcmdzOwogICAgICAgIGZpbGUgPSBhYnNvbHV0ZShmaWxlKTsKICAgICAgICBpZih0eXBlcy5pc1Byb21pc2UoYnJlYWtwb2ludHMpKSBicmVha3BvaW50cyA9IGF3YWl0IGJyZWFrcG9pbnRzOwogICAgICAgIGlmKEFycmF5LmlzQXJyYXkoYnJlYWtwb2ludHMpKSBicmVha3BvaW50cyA9IGJyZWFrcG9pbnRzLm1hcChiID0+IGZpbHRlcktleXMoYiwgWyduYW1lJywgJ2xpbmUnLCAnY29sdW1uJ10pKTsKICAgICAgICBsZXQgcmV0PSBhd2FpdCBtZW1iZXIuY2FsbCh0aGlzLCBmaWxlLCBicmVha3BvaW50cyk7CiAgICAgICAgaWYocmV0LnBhdGgpCiAgICAgICAgICByZXQucGF0aD1yZWxhdGl2ZShyZXQucGF0aCk7CiAgICAgICAgaWYocmV0Py5icmVha3BvaW50cz8ucGF0aCkKICAgICAgICAgIHJldC5icmVha3BvaW50cy5wYXRoPXJlbGF0aXZlKHJldC5icmVha3BvaW50cy5wYXRoKTsKICAgICAgICBjb25zb2xlLmxvZygnYnJlYWtwb2ludHMgPScsIHJldCk7CiAgICAgICAgcmV0dXJuIHJldDsKICAgICAgfSwKICAgICAgYXN5bmMgc3RhY2tUcmFjZShmcmFtZSkgewogICAgICAgIGxldCByZXQgPSAoYXdhaXQgbWVtYmVyLmNhbGwodGhpcywgZnJhbWUpKS5tYXAoZnJhbWUgPT4gKHR5cGVvZiBmcmFtZS5maWxlbmFtZSA9PSAnc3RyaW5nJyAmJiAoZnJhbWUuZmlsZW5hbWUgPSByZWxhdGl2ZShhYnNvbHV0ZShmcmFtZS5maWxlbmFtZSkpKSwgZnJhbWUpKTsKICAgICAgICBjb25zb2xlLmxvZygnc3RhY2tUcmFjZSA9JywgcmV0KTsKICAgICAgICByZXR1cm4gcmV0OwogICAgICB9LAogICAgICBhc3luYyBzY29wZXMobikgewogICAgICAgIGxldCBzdGFjayA9IGF3YWl0IHRoaXMuc3RhY2tUcmFjZSgpOwogICAgICAgIGlmKG4gPj0gc3RhY2subGVuZ3RoKSByZXR1cm4gbnVsbDsKICAgICAgICBsZXQgc2NvcGVzID0gW107CgogICAgICAgIGZvcihsZXQgc2NvcGUgb2YgYXdhaXQgbWVtYmVyLmNhbGwodGhpcywgbikpIHsKICAgICAgICAgIGNvbnN0IHZhcmlhYmxlcyA9IGF3YWl0IHRoaXMudmFyaWFibGVzKHNjb3BlLnJlZmVyZW5jZSk7CiAgICAgICAgICBzY29wZS52YXJpYWJsZXMgPSB2YXJpYWJsZXMubGVuZ3RoOwogICAgICAgICAgc2NvcGVzLnB1c2goc2NvcGUpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHNjb3BlczsKICAgICAgfSwKICAgICAgYXN5bmMgd2FpdFJ1bigpIHsKICAgICAgICBjb25zdCBbZXZlbnQsIHN0YWNrXSA9IGF3YWl0IG1lbWJlci5jYWxsKHRoaXMpOwogICAgICAgIGRlZmluZShnbG9iYWxUaGlzLCB7IGV2ZW50LCBzdGFjayB9KTsKICAgICAgICAvL2NvbnNvbGUubG9nKCd3YWl0UnVuJywgeyBldmVudCwgc3RhY2sgfSk7CgogICAgICAgIHJlcGwucHJpbnRTdGF0dXMoKGF3YWl0IFByaW50U3RhY2tGcmFtZShzdGFja1swXSkpLmpvaW4oJyAnKSArICdcbicpOwoKICAgICAgICBjb25zdCB7IGZpbGVuYW1lLCBsaW5lIH0gPSBzdGFja1swXTsKCiAgICAgICAgZGVmaW5lKGdsb2JhbFRoaXMsIHsgZmlsZTogZmlsZW5hbWUsIGxpbmUgfSk7CiAgICAgICAgcmV0dXJuIFtldmVudCwgc3RhY2tdOwogICAgICB9LAogICAgICBhc3luYyB2YXJpYWJsZXMobiwgZGVwdGggPSAwKSB7CiAgICAgICAgY29uc3QgbGlzdCA9IGF3YWl0IG1lbWJlci5jYWxsKHRoaXMsIG4pOwogICAgICAgIGNvbnN0IHJldCA9IFtdOwogICAgICAgIGNvbnN0IGFkZCA9IGl0ZW0gPT4gKGl0ZW0udmFyaWFibGVzUmVmZXJlbmNlID09PSAwICYmIGRlbGV0ZSBpdGVtLnZhcmlhYmxlc1JlZmVyZW5jZSwgcmV0LnB1c2goaXRlbSkpOwoKICAgICAgICBmb3IobGV0IGl0ZW0gb2YgbGlzdCkgewogICAgICAgICAgYWRkKGl0ZW0pOwoKICAgICAgICAgIGlmKGRlcHRoID4gMCkgewogICAgICAgICAgICBpZihpdGVtLnZhcmlhYmxlc1JlZmVyZW5jZSA+IDApIHsKICAgICAgICAgICAgICBsZXQgY2hpbGRyZW4gPSBhd2FpdCB0aGlzLnZhcmlhYmxlcyhpdGVtLnZhcmlhYmxlc1JlZmVyZW5jZSwgZGVwdGggLSAxKTsKCiAgICAgICAgICAgICAgZm9yKGxldCBjaGlsZCBvZiBjaGlsZHJlbikgewogICAgICAgICAgICAgICAgaWYoIWlzTmFOKGNoaWxkLm5hbWUpKSBjaGlsZC5uYW1lID0gJyAgWycgKyBjaGlsZC5uYW1lICsgJ10nOwogICAgICAgICAgICAgICAgZWxzZSBjaGlsZC5uYW1lID0gJyAgLicgKyBjaGlsZC5uYW1lOwoKICAgICAgICAgICAgICAgIGlmKGNoaWxkLnZhbHVlPy5zdGFydHNXaXRoKCdmdW5jdGlvbiAnKSkgY29udGludWU7CiAgICAgICAgICAgICAgICBhZGQoY2hpbGQpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGRlZmluZShyZXQsIHsKICAgICAgICAgIFtTeW1ib2wuZm9yKCdwcmludCcpXTogdHJ1ZSwKICAgICAgICAgIHRvU3RyaW5nKCkgewogICAgICAgICAgICByZXR1cm4gVGFibGUodGhpcywgWyduYW1lJywgJ3ZhbHVlJywgJ3R5cGUnLCAndmFyaWFibGVzUmVmZXJlbmNlJ10pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CiAgICB9W3Byb3BdIHx8IG1lbWJlciksCgogIERlYnVnZ2VyRGlzcGF0Y2hlci5wcm90b3R5cGUKKTsKCmNvbnN0IG1rYWRkciA9ICgKICAocG9ydCA9IDg3NzcpID0+CiAgKCkgPT4KICAgIGAxMjcuMC4wLjE6JHtwb3J0LS19YAopKCk7Cgphc3luYyBmdW5jdGlvbiBOZXdEZWJ1Z2dlcihhcmdzLCBza2lwVG9NYWluID0gZmFsc2UsIGFkZHJlc3MpIHsKICBhZGRyZXNzID8/PSBta2FkZHIoKTsKCiAgY29uc3QgY2hpbGQgPSAoZ2xvYmFsVGhpcy5jaGlsZCA9IGdsb2JhbFRoaXMubGlzdGVuZXJzW2FkZHJlc3NdIHx8IFN0YXJ0RGVidWdnZXIoYXJncywgZmFsc2UsIGFkZHJlc3MpKTsKICBsZXQgZGlzcGF0Y2g7CgogIGdsb2JhbFRoaXMuc2NyaXB0ID0gYXJnc1swXTsKCiAgc2xlZXAoNTAwKTsKCiAgY29uc3QgZGJnID0gdGhpcyA/PyB7fTsKCiAgZGVmaW5lKGRiZywgewogICAgY2hpbGQsCiAgICBhcmdzLAogICAga2lsbDogKCkgPT4gKGNoaWxkcmVuLmRlbGV0ZShjaGlsZC5waWQpLCBraWxsKGNoaWxkLnBpZCwgU0lHVEVSTSkpCiAgfSk7CgogIGF3YWl0IENvbm5lY3REZWJ1Z2dlci5jYWxsKGRiZywgYWRkcmVzcywgc2tpcFRvTWFpbik7CgogIHJldHVybiBkYmc7IC8vZGlzcGF0Y2g7Cn0KCmFzeW5jIGZ1bmN0aW9uIE9uU3RvcHBlZChtc2cpIHsKICBjb25zdCBzdCA9IChnbG9iYWxUaGlzLnN0YWNrID0gYXdhaXQgZGlzcGF0Y2guc3RhY2tUcmFjZSgpKTsKICBsZXQgW3RvcF0gPSBzdDsKICBsZXQgeyBpZCwgbmFtZSwgZmlsZW5hbWUsIGxpbmUgfSA9IHRvcDsKICByZXBsLnByaW50U3RhdHVzKGAjJHtpZH0gJHtuYW1lfUAke2ZpbGVuYW1lfToke2xpbmV9ICBgICsgZmlsZXNbZmlsZW5hbWVdLmxpbmUobGluZSkpOwp9CgpmdW5jdGlvbiBVUkxXb3JrZXIoc2NyaXB0KSB7CiAgY29uc3QgZGF0YVVSTCA9IHMgPT4gYGRhdGE6YXBwbGljYXRpb24vamF2YXNjcmlwdDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxgICsgYnRvYShzKS5yZXBsYWNlQWxsKCcrJywgJy0nKS5yZXBsYWNlQWxsKCcvJywgJ18nKS5yZXBsYWNlQWxsKCc9JywgJycpOwoKICBjb25zdCB1cmwgPSBkYXRhVVJMKHNjcmlwdCk7CiAgY29uc3QgdyA9IG5ldyBXb3JrZXIodXJsKTsKCiAgcmV0dXJuIGRlZmluZShuZXcgUmVwZWF0ZXIoKHB1c2gsIHN0b3ApID0+ICh3Lm9ubWVzc2FnZSA9IHB1c2gpKSwgewogICAgcG9zdE1lc3NhZ2U6IG1zZyA9PiB3LnBvc3RNZXNzYWdlKG1zZykKICB9KTsKfQoKZnVuY3Rpb24gbWFpbiguLi5hcmdzKSB7CiAgY29uc3QgYmFzZSA9IHNjcmlwdE5hbWUoKS5yZXBsYWNlKC9cLlthLXpdKiQvLCAnJyk7CgogIGNvbnN0IGNvbmZpZyA9IFJlYWRKU09OKGAuJHtiYXNlfS1jb25maWdgKSA/PyB7fTsKCiAgZ2xvYmFsVGhpcy5jb25zb2xlID0gbmV3IENvbnNvbGUoc3RkZXJyLCB7CiAgICBpbnNwZWN0T3B0aW9uczogeyBkZXB0aDogSW5maW5pdHksIGNvbXBhY3Q6IDEsIG1heEFycmF5TGVuZ3RoOiBJbmZpbml0eSwgY3VzdG9tSW5zcGVjdDogdHJ1ZSB9CiAgfSk7CgogIGxldCBwYXJhbXMgPSBnZXRPcHQoCiAgICB7CiAgICAgIHZlcmJvc2U6IFtmYWxzZSwgKGEsIHYpID0+ICh2IHwgMCkgKyAxLCAndiddLAogICAgICBsaXN0ZW46IFtmYWxzZSwgbnVsbCwgJ2wnXSwKICAgICAgY29ubmVjdDogW2ZhbHNlLCBudWxsLCAnYyddLAogICAgICBjbGllbnQ6IFtmYWxzZSwgbnVsbCwgJ0MnXSwKICAgICAgc2VydmVyOiBbZmFsc2UsIG51bGwsICdTJ10sCiAgICAgIGRlYnVnOiBbZmFsc2UsIG51bGwsICd4J10sCiAgICAgIHRsczogW2ZhbHNlLCAodiwgcHYsIG8pID0+ICgoby50bHMgPSB0cnVlKSwgdHJ1ZSksICd0J10sCiAgICAgICduby10bHMnOiBbZmFsc2UsICh2LCBwdiwgbykgPT4gKChvLnRscyA9IGZhbHNlKSwgdHJ1ZSksICdUJ10sCiAgICAgIGFkZHJlc3M6IFt0cnVlLCBudWxsLCAnYSddLAogICAgICBwb3J0OiBbdHJ1ZSwgbnVsbCwgJ3AnXSwKICAgICAgcXVpZXQ6IFtmYWxzZSwgbnVsbCwgJ3EnXSwKICAgICAgJ3NzbC1jZXJ0JzogW3RydWUsIG51bGxdLAogICAgICAnc3NsLXByaXZhdGUta2V5JzogW3RydWUsIG51bGxdLAogICAgICAnc3NsLWNhJzogW3RydWUsIG51bGxdLAogICAgICAnQCc6ICdhZGRyZXNzLHBvcnQnCiAgICB9LAogICAgYXJncwogICk7CiAgaWYocGFyYW1zWyduby10bHMnXSA9PT0gdHJ1ZSkgcGFyYW1zLnRscyA9IGZhbHNlOwogIGNvbnN0IHsKICAgIGFkZHJlc3MgPSAnMC4wLjAuMCcsCiAgICBwb3J0ID0gODk5OSwKICAgICdzc2wtY2VydCc6IHNzbENlcnQgPSAnbG9jYWxob3N0LmNydCcsCiAgICAnc3NsLXByaXZhdGUta2V5Jzogc3NsUHJpdmF0ZUtleSA9ICdsb2NhbGhvc3Qua2V5JywKICAgICdzc2wtY2EnOiBzc2xDQSA9ICcvZXRjL3NzbC9jZXJ0cy9jYS1jZXJ0aWZpY2F0ZXMuY3J0JywKICAgIHF1aWV0ID0gZmFsc2UsCiAgICBkZWJ1ZyA9IGZhbHNlLAogICAgdGxzID0gdHJ1ZQogIH0gPSBwYXJhbXM7CgogIGNvbnN0IGxpc3RlbiA9IHBhcmFtcy5jb25uZWN0ICYmICFwYXJhbXMubGlzdGVuID8gZmFsc2UgOiB0cnVlOwoKICBsZXQgbmFtZSA9IHNjcmlwdEFyZ3NbMF07CiAgbmFtZSA9IG5hbWUKICAgIC5yZXBsYWNlKC8uKlwvLywgJycpCiAgICAucmVwbGFjZSgvLS9nLCAnICcpCiAgICAucmVwbGFjZSgvXC5bXlwvLl0qJC8sICcnKTsKCiAgbGV0IFtwcmVmaXgsIHN1ZmZpeF0gPSBuYW1lLnNwbGl0KCcgJyk7CgogIGxldCBwcm90b2NvbCA9IG5ldyBXZWFrTWFwKCk7CiAgbGV0IHdzMmRiZyA9IChnbG9iYWxUaGlzLndzMmRiZyA9IG1hcFdyYXBwZXIobmV3IFdlYWtNYXAoKSkpOwogIGxldCBkYmcyd3MgPSAoZ2xvYmFsVGhpcy5kYmcyd3MgPSBtYXBXcmFwcGVyKG5ldyBXZWFrTWFwKCkpKTsKCiAgbGV0IHNvY2tldHMgPSAoZ2xvYmFsVGhpcy5zb2NrZXRzID8/PSBuZXcgU2V0KCkpOwogIC8vY29uc29sZS5sb2cobmFtZSwgcGFyYW1zWydAJ10pOwoKICBmdW5jdGlvbiBjcmVhdGVXUyh1cmwsIGNhbGxiYWNrcywgbGlzdGVuKSB7CiAgICAvL2NvbnNvbGUubG9nKCdjcmVhdGVXUycsIHsgdXJsLCBjYWxsYmFja3MsIGxpc3RlbiB9KTsKCiAgICBzZXRMb2coCiAgICAgIHF1aWV0ID8gMCA6IExMTF9VU0VSIHwgKCgoZGVidWcgPiAxID8gTExMX0lORk8gOiBMTExfV0FSTikgPDwgMSkgLSAxKSwKICAgICAgcXVpZXQgfHwgcGFyYW1zLmRlYnVnIDw9IDEKICAgICAgICA/ICgpID0+IHt9CiAgICAgICAgOiAobGV2ZWwsIHN0cikgPT4gewogICAgICAgICAgICBpZigvQklORF9QUk9UT0NPTHxEUk9QX1BST1RPQ09MfENIRUNLX0FDQ0VTU19SSUdIVFN8QUREX0hFQURFUlMvLnRlc3Qoc3RyKSkgcmV0dXJuOwogICAgICAgICAgICBjb25zb2xlLmxvZyhsb2dMZXZlbHNbbGV2ZWxdLnBhZEVuZCgxMCksIHN0ci50cmltKCkpOwogICAgICAgICAgfQogICAgKTsKCiAgICBsZXQgb3B0aW9uczsKICAgIGxldCBkYmc7CiAgICBjb25zb2xlLmxvZygnY3JlYXRlV1MnLCB7IHVybCB9KTsKICAgIHJldHVybiBjcmVhdGVTZXJ2ZXIoCiAgICAgIHVybCwKICAgICAgKG9wdGlvbnMgPSB7CiAgICAgICAgdGxzOiBwYXJhbXMudGxzLAogICAgICAgIHNzbENlcnQsCiAgICAgICAgc3NsUHJpdmF0ZUtleSwKICAgICAgICBzc2xDQSwKICAgICAgICBtaW1ldHlwZXM6IFsKICAgICAgICAgIFsnLnN2Z3onLCAnYXBwbGljYXRpb24vZ3ppcCddLAogICAgICAgICAgWycubWpzJywgJ2FwcGxpY2F0aW9uL2phdmFzY3JpcHQnXSwKICAgICAgICAgIFsnLmVzJywgJ2FwcGxpY2F0aW9uL2phdmFzY3JpcHQnXSwKICAgICAgICAgIFsnLndhc20nLCAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJ10sCiAgICAgICAgICBbJy5lb3QnLCAnYXBwbGljYXRpb24vdm5kLm1zLWZvbnRvYmplY3QnXSwKICAgICAgICAgIFsnLmxpYicsICdhcHBsaWNhdGlvbi94LWFyY2hpdmUnXSwKICAgICAgICAgIFsnLmJ6MicsICdhcHBsaWNhdGlvbi94LWJ6aXAyJ10sCiAgICAgICAgICBbJy5naXRpZ25vcmUnLCAndGV4dC9wbGFpbiddLAogICAgICAgICAgWycuY21ha2UnLCAndGV4dC9wbGFpbiddLAogICAgICAgICAgWycuaGV4JywgJ3RleHQvcGxhaW4nXSwKICAgICAgICAgIFsnLm1kJywgJ3RleHQvcGxhaW4nXSwKICAgICAgICAgIFsnLnBieHByb2onLCAndGV4dC9wbGFpbiddLAogICAgICAgICAgWycud2F0JywgJ3RleHQvcGxhaW4nXSwKICAgICAgICAgIFsnLmMnLCAndGV4dC94LWMnXSwKICAgICAgICAgIFsnLmgnLCAndGV4dC94LWMnXSwKICAgICAgICAgIFsnLmNwcCcsICd0ZXh0L3gtYysrJ10sCiAgICAgICAgICBbJy5ocHAnLCAndGV4dC94LWMrKyddLAogICAgICAgICAgWycuZmlsdGVycycsICd0ZXh0L3htbCddLAogICAgICAgICAgWycucGxpc3QnLCAndGV4dC94bWwnXSwKICAgICAgICAgIFsnLnN0b3J5Ym9hcmQnLCAndGV4dC94bWwnXSwKICAgICAgICAgIFsnLnZjeHByb2onLCAndGV4dC94bWwnXSwKICAgICAgICAgIFsnLmJhdCcsICd0ZXh0L3gtbXNkb3MtYmF0Y2gnXSwKICAgICAgICAgIFsnLm1tJywgJ3RleHQveC1vYmplY3RpdmUtYyddLAogICAgICAgICAgWycubScsICd0ZXh0L3gtb2JqZWN0aXZlLWMnXSwKICAgICAgICAgIFsnLnNoJywgJ3RleHQveC1zaGVsbHNjcmlwdCddCiAgICAgICAgXSwKICAgICAgICBtb3VudHM6IFsKICAgICAgICAgIFsnL3Byb3h5JywgJ2lwdjQ6MTI3LjAuMC4xOjIyJywgbnVsbCwgJ3Byb3h5LXdzLXJhdy13cyddLAogICAgICAgICAgWycvbHdzJywgJ2h0dHBzOi8vd3d3Lmdvb2dsZS5jaC8nLCBudWxsLCAnJ10sCiAgICAgICAgICBbJy8nLCAnLicsICdkZWJ1Z2dlci5odG1sJ10sCiAgICAgICAgICBmdW5jdGlvbiogY29uZmlnKHJlcSwgcmVzKSB7CiAgICAgICAgICAgIGNvbnN0IHsgYm9keSwgaGVhZGVycyB9ID0gcmVxOwogICAgICAgICAgICBjb25zb2xlLmxvZygnL2NvbmZpZycsIHsgcmVxLCByZXMgfSk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCcqY29uZmlnJywgeyBib2R5LCBoZWFkZXJzIH0pOwogICAgICAgICAgICB5aWVsZCAne30nOwogICAgICAgICAgfSwKICAgICAgICAgIGZ1bmN0aW9uKiBmaWxlcyhyZXEsIHJlcykgewogICAgICAgICAgICBjb25zdCB7IGJvZHksIGhlYWRlcnMgfSA9IHJlcTsKICAgICAgICAgICAgeWllbGQgZnMKICAgICAgICAgICAgICAucmVhZGRpclN5bmMoJy4nKQogICAgICAgICAgICAgIC5zb3J0KCkKICAgICAgICAgICAgICAubWFwKGYgPT4gZiArICdcbicpCiAgICAgICAgICAgICAgLmpvaW4oJycpOwogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgLi4udXJsLAogICAgICAgIC4uLmNhbGxiYWNrcywKICAgICAgICBibG9jazogZmFsc2UsCiAgICAgICAgb25Db25uZWN0KHdzLCByZXEpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdvbkNvbm5lY3QnLCB7IHdzLCByZXEgfSwgcmVxICYmIHJlcS5oZWFkZXJzKTsKCiAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh3cywgewogICAgICAgICAgICBzZW5kTWVzc2FnZTogewogICAgICAgICAgICAgIHZhbHVlOiBhc3luYyBmdW5jdGlvbiBzZW5kTWVzc2FnZShtc2cpIHsKICAgICAgICAgICAgICAgIGxldCByZXQgPSBhd2FpdCB0aGlzLnNlbmQoSlNPTi5zdHJpbmdpZnkobXNnKSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgd3Muc2VuZE1lc3NhZ2UoYCwgY29uc29sZS5jb25maWcoeyBjb21wYWN0OiAxIH0pLCBtc2csIGApID0gJHtyZXR9YCk7CiAgICAgICAgICAgICAgICByZXR1cm4gcmV0OwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGJnOiB7IHZhbHVlOiBudWxsLCB3cml0YWJsZTogdHJ1ZSwgZW51bWVyYWJsZTogZmFsc2UgfQogICAgICAgICAgfSk7CgogICAgICAgICAgc29ja2V0cy5hZGQod3MpOwogICAgICAgIH0sCiAgICAgICAgb25DbG9zZSh3cykgewogICAgICAgICAgY29uc29sZS5sb2coJ29uQ2xvc2UnLCB7IHdzLCBkYmcgfSk7CiAgICAgICAgICBkYmc/LmNsb3NlKCk7CgogICAgICAgICAgcHJvdG9jb2wuZGVsZXRlKHdzKTsKICAgICAgICAgIHNvY2tldHMuZGVsZXRlKHdzKTsKICAgICAgICB9LAogICAgICAgIG9uRXJyb3Iod3MpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdvbkVycm9yJywgd3MpOwogICAgICAgIH0sCiAgICAgICAgb25SZXF1ZXN0KHJlcSwgcmVzcCkgewogICAgICAgICAgY29uc3QgeyBtZXRob2QsIGhlYWRlcnMgfSA9IHJlcTsKICAgICAgICAgIC8vY29uc29sZS5sb2coJ1x4MWJbMzg7NTszM21vblJlcXVlc3RceDFiWzBtIFtcbiAgJywgcmVxLCAnLFxuICAnLCByZXNwLCAnXG5dJyk7CiAgICAgICAgICBjb25zdCB7IGJvZHksIHVybCB9ID0gcmVzcDsKCiAgICAgICAgICBjb25zdCBmaWxlID0gdXJsLnBhdGguc2xpY2UoMSk7CiAgICAgICAgICBjb25zdCBkaXIgPSBmaWxlLnJlcGxhY2UoL1wvW15cL10qJC9nLCAnJyk7CiAgICAgICAgICBjb25zb2xlLmxvZygnXHgxYlszODs1OzMzbW9uUmVxdWVzdFx4MWJbMG0nLCB7IGZpbGUsIGRpciwgYm9keSB9KTsKCiAgICAgICAgICBpZihmaWxlLmVuZHNXaXRoKCcuanMnKSAmJiByZXNwLmJvZHkpIHsKICAgICAgICAgICAgLy9jb25zb2xlLmxvZygnb25SZXF1ZXN0JywgeyBmaWxlLCBkaXIgfSk7CiAgICAgICAgICAgIGNvbnN0IHJlID0gL14oXHMqKGltfGV4KXBvcnRbXlxuXSpmcm9tIFsnIl0pKFteLi8nIl0qKShbJyJdXHMqO1tcdCBdKlxuPykvZ207CgogICAgICAgICAgICByZXNwLmJvZHkgPSBib2R5LnJlcGxhY2VBbGwocmUsIChtYXRjaCwgcDEsIHAwLCBwMiwgcDMsIG9mZnNldCkgPT4gewogICAgICAgICAgICAgIGlmKCEvW1wvXC5dLy50ZXN0KHAyKSkgewogICAgICAgICAgICAgICAgbGV0IGZuYW1lID0gYCR7cDJ9LmpzYDsKCiAgICAgICAgICAgICAgICBpZighZXhpc3RzU3luYyhkaXIgKyAnLycgKyBmbmFtZSkpIHJldHVybiBgLyogJHttYXRjaH0gKi9gOwoKICAgICAgICAgICAgICAgIG1hdGNoID0gW3AxLCAnLi8nICsgZm5hbWUsIHAzXS5qb2luKCcnKTsKCiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCdhcmdzJywgeyBtYXRjaCwgcDEsIHAyLCBwMywgb2Zmc2V0IH0pOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICByZXR1cm4gbWF0Y2g7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiByZXNwOwogICAgICAgIH0sCiAgICAgICAgb25NZXNzYWdlKHdzLCBkYXRhKSB7CiAgICAgICAgICBkYmcgPSB3czJkYmcod3MpOwoKICAgICAgICAgIC8vIHNob3dTZXNzaW9ucygpOwoKICAgICAgICAgIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpOwoKICAgICAgICAgIGFzeW5jIGZ1bmN0aW9uIGhhbmRsZUNvbW1hbmQod3MsIGRhdGEpIHsKICAgICAgICAgICAgbGV0IG9iaiA9IEpTT04ucGFyc2UoZGF0YSk7CgogICAgICAgICAgICBjb25zb2xlLmxvZygnb25NZXNzYWdlKHgpJywgb2JqKTsKCiAgICAgICAgICAgIGNvbnN0IHsgY29tbWFuZCwgLi4ucmVzdCB9ID0gb2JqOwogICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnb25NZXNzYWdlJywgY29tbWFuZCwgcmVzdCk7CiAgICAgICAgICAgIGNvbnN0IHsgY29ubmVjdCA9IHRydWUsIGFkZHJlc3MgPSAnMTI3LjAuMC4xOicgKyBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAoNjU1MzUgLSAxMDI0KSkgKyAxMDI0LCBhcmdzID0gW10gfSA9IHJlc3Q7CgogICAgICAgICAgICBzd2l0Y2ggKG9iai50eXBlID8/IGNvbW1hbmQpIHsKICAgICAgICAgICAgICBjYXNlICdzdGFydCc6IHsKICAgICAgICAgICAgICAgIGRiZyA9IGdsb2JhbFRoaXMuZGJnID0geyBjaGlsZDogU3RhcnREZWJ1Z2dlcihhcmdzLCBjb25uZWN0LCBhZGRyZXNzKSB9OwoKICAgICAgICAgICAgICAgIHdzMmRiZyh3cywgZGJnKTsKICAgICAgICAgICAgICAgIGRiZzJ3cyhkYmcsIHdzKTsKCiAgICAgICAgICAgICAgICBjb25zdCBbc3RkaW4sIHN0ZG91dCwgc3RkZXJyXSA9IGNoaWxkLnN0ZGlvOwogICAgICAgICAgICAgICAgZm9yKGxldCBmZCBvZiBbc3Rkb3V0LCBzdGRlcnJdKSB7CiAgICAgICAgICAgICAgICAgIGxldCBmbGFncyA9IGZjbnRsKGZkLCBGX0dFVEZMKTsKICAgICAgICAgICAgICAgICAgZmxhZ3MgfD0gT19OT05CTE9DSzsKICAgICAgICAgICAgICAgICAgZmNudGwoZmQsIEZfU0VURkwsIGZsYWdzKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnc3Rkb3V0IGZsYWdzJywgZmNudGwoc3Rkb3V0LCBGX0dFVEZMKSAmIE9fTk9OQkxPQ0ssICdPX05PTkJMT0NLPScsIE9fTk9OQkxPQ0spOwoKICAgICAgICAgICAgICAgIGNvbnN0IGZvcndhcmQgPSAoZmQsIG5hbWUpID0+CiAgICAgICAgICAgICAgICAgIGNvbnN1bWUocmVhZGVyKGZkKSwgYnVmID0+IHsKICAgICAgICAgICAgICAgICAgICBsZXQgZGF0YSA9IHRvU3RyaW5nKGJ1Zi5zbGljZSgwLCByKSk7CiAgICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhgcmVhZCgke2ZkfSwgYnVmKSA9ICR7cn0gKCR7cXVvdGUoZGF0YSwgIiciKX0pYCk7CgogICAgICAgICAgICAgICAgICAgIHdzLnNlbmRNZXNzYWdlKHsKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdvdXRwdXQnLAogICAgICAgICAgICAgICAgICAgICAgY2hhbm5lbDogbmFtZSwKICAgICAgICAgICAgICAgICAgICAgIGRhdGEKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBmb3J3YXJkKHN0ZG91dCwgJ3N0ZG91dCcpOwogICAgICAgICAgICAgICAgZm9yd2FyZChzdGRlcnIsICdzdGRlcnInKTsKICAgICAgICAgICAgICAgIGRlZmluZShnbG9iYWxUaGlzLCB7IHN0ZG91dCwgc3RkZXJyLCByZWFkZXIgfSk7CgogICAgICAgICAgICAgICAgc2xlZXAoMTAwMCk7CgogICAgICAgICAgICAgICAgbGV0IHRpZCwgZXhpdGVkOwoKICAgICAgICAgICAgICAgIHRpZCA9IHNldEludGVydmFsKCgpID0+IHsKICAgICAgICAgICAgICAgICAgbGV0IHBpZCA9IGNoaWxkLndhaXQoV05PSEFORyk7CgogICAgICAgICAgICAgICAgICBpZigoZXhpdGVkID0gY2hlY2tDaGlsZEV4aXRlZChjaGlsZCkpKSB7CiAgICAgICAgICAgICAgICAgICAgd3Muc2VuZE1lc3NhZ2UoewogICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2Vycm9yJywKICAgICAgICAgICAgICAgICAgICAgIGNvbW1hbmQ6ICdzdGFydCcsCiAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBgY2hpbGQgcHJvY2VzcyAke3BpZH0gJHtleGl0ZWR9YAogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGlkKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwgMTAwMCk7CgogICAgICAgICAgICAgICAgbGV0IHBpZCA9IGNoaWxkLndhaXQoV05PSEFORyk7CgogICAgICAgICAgICAgICAgaWYoKGV4aXRlZCA9IGNoZWNrQ2hpbGRFeGl0ZWQoY2hpbGQpKSkgewogICAgICAgICAgICAgICAgICB3cy5zZW5kTWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ2Vycm9yJywKICAgICAgICAgICAgICAgICAgICBjb21tYW5kOiAnc3RhcnQnLAogICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGB1bmFibGUgdG8gc3RhcnQgZGVidWdnZXI6ICR7ZXhpdGVkfWAKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNvbnN0IGN3ZCA9IHByb2Nlc3MuY3dkKCk7CiAgICAgICAgICAgICAgICB3cy5zZW5kTWVzc2FnZSh7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICdyZXNwb25zZScsCiAgICAgICAgICAgICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICAgICAgICAgICAgY29tbWFuZDogJ3N0YXJ0JywKICAgICAgICAgICAgICAgICAgICBhcmdzLAogICAgICAgICAgICAgICAgICAgIGN3ZCwKICAgICAgICAgICAgICAgICAgICBhZGRyZXNzCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSAnY29ubmVjdCc6IHsKICAgICAgICAgICAgICAgIGRiZyA9IGdsb2JhbFRoaXMuZGJnID0gYXdhaXQgQ29ubmVjdERlYnVnZ2VyLmNhbGwoZ2xvYmFsVGhpcy5kYmcsIGFkZHJlc3MsIGZhbHNlLCAoZGJnLCBzb2NrKSA9PiB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCd3YWl0KFdOT0hBTkcpID0nLCBjaGlsZC53YWl0KFdOT0hBTkcpKTsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2NoaWxkJywgY2hpbGQpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgd3MyZGJnKHdzLCBkYmcpOwogICAgICAgICAgICAgICAgZGJnMndzKGRiZywgd3MpOwoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjb25uZWN0IGNvbW1hbmQnLCB7IHdzLCBkYmcgfSk7CiAgICAgICAgICAgICAgICBzb2NrZXRzLmFkZChkYmcuc29jayk7CgogICAgICAgICAgICAgICAgY29uc3QgY3dkID0gcHJvY2Vzcy5jd2QoKTsKICAgICAgICAgICAgICAgIGxldCBjb25uZWN0ZWQ7CgogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2RiZycsIGRiZyk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNhc2UgJ2ZpbGUnOiB7CiAgICAgICAgICAgICAgICBjb25zdCB7IHBhdGggfSA9IHJlc3Q7CiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gUmVhZEZpbGUocGF0aCwgJ3V0Zi04Jyk7CiAgICAgICAgICAgICAgICAvL3dzLnNlbmQoSlNPTi5zdHJpbmdpZnkoeyB0eXBlOiAncmVzcG9uc2UnLCByZXNwb25zZTogeyBjb21tYW5kOiAnZmlsZScsIHBhdGgsIGRhdGEgfSB9KSk7CgogICAgICAgICAgICAgICAgY29uc3QgbGV4ZXIgPSBuZXcgTGV4ZXIoZGF0YSwgcGF0aCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnbGV4ZXInLCBsZXhlcik7CiAgICAgICAgICAgICAgICBjb25zdCBsaW5lcyA9IFtdOwoKICAgICAgICAgICAgICAgIGZvcig7OykgewogICAgICAgICAgICAgICAgICBjb25zdCB7IHBvcywgc2l6ZSB9ID0gbGV4ZXI7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdsZXhlcicsIHsgcG9zLCBzaXplIH0pOwogICAgICAgICAgICAgICAgICBsZXQgcmVzdWx0ID0gbGV4ZXIubmV4dCgpOwogICAgICAgICAgICAgICAgICBpZihyZXN1bHQuZG9uZSkgYnJlYWs7CiAgICAgICAgICAgICAgICAgIGNvbnN0IHRva2VuID0gcmVzdWx0LnZhbHVlOwogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygndG9rZW4nLCB7CiAgICAgICAgICAgICAgICAgICAgbGV4ZW1lOiB0b2tlbi5sZXhlbWUsCiAgICAgICAgICAgICAgICAgICAgaWQ6IHRva2VuLmlkLAogICAgICAgICAgICAgICAgICAgIGxvYzogdG9rZW4ubG9jICsgJycKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIGNvbnN0IHsgdHlwZSwgaWQsIGxleGVtZSwgbG9jIH0gPSB0b2tlbjsKICAgICAgICAgICAgICAgICAgY29uc3QgeyBsaW5lLCBjb2x1bW4sIGZpbGUgfSA9IGxvYzsKICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZygndG9rZW4nLCB7bGV4ZW1lLGlkLGxpbmV9KTsKCiAgICAgICAgICAgICAgICAgIGlmKCFsaW5lc1tsaW5lIC0gMV0pIGxpbmVzLnB1c2goW10pOwogICAgICAgICAgICAgICAgICBsZXQgYSA9IGxpbmVzW2xpbmUgLSAxXTsKICAgICAgICAgICAgICAgICAgYS5wdXNoKFtsZXhlbWUsIGlkXSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnbGluZXMnLCBsaW5lcyk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNhc2UgJ3JlcXVlc3QnOiB7CiAgICAgICAgICAgICAgICBjb25zdCB7IHJlcXVlc3QgfSA9IG9iajsKICAgICAgICAgICAgICAgIGNvbnN0IHsgcmVxdWVzdF9zZXEsIGNvbW1hbmQsIGFyZ3MgfSA9IHJlcXVlc3Q7CgogICAgICAgICAgICAgICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgZGJnLmRpc3BhdGNoLnNlbmRSZXF1ZXN0KGNvbW1hbmQsIGFyZ3MsIHJlcXVlc3Rfc2VxKTsKCiAgICAgICAgICAgICAgICBpZihjb21tYW5kID09ICdzdGFja1RyYWNlJykgewogICAgICAgICAgICAgICAgICByZXNwb25zZS5ib2R5ID0gcmVzcG9uc2UuYm9keS5tYXAoZnJhbWUgPT4gewogICAgICAgICAgICAgICAgICAgIGlmKGZyYW1lLmZpbGVuYW1lKSBmcmFtZS5maWxlbmFtZSA9IHBhdGgucmVsYXRpdmUoZnJhbWUuZmlsZW5hbWUpOwoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gZnJhbWU7CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1JlcXVlc3QnLCB7IHJlcXVlc3QsIHJlc3BvbnNlIH0pOwoKICAgICAgICAgICAgICAgIHdzLnNlbmRNZXNzYWdlKHJlc3BvbnNlKTsKCiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGRlZmF1bHQ6IHsKICAgICAgICAgICAgICAgIC8qICBjb25zb2xlLmxvZygnc2VuZCB0byBkZWJ1Z2dlcicsIHsgb2JqIH0pOwogICAgICAgICAgICAgICAgZGJnLnNlbmRNZXNzYWdlKG9iaik7Ki8KICAgICAgICAgICAgICAgIGNvbnN0IGRiZyA9IHdzMmRiZyh3cyk7CiAgICAgICAgICAgICAgICBjb25zdCB7IHBpZCB9ID0gZGJnLmNoaWxkOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3NlbmQgdG8gZGVidWdnZXInLCB7IHBpZCwgb2JqIH0pOwoKICAgICAgICAgICAgICAgIGRiZy5zZW5kTWVzc2FnZShvYmopOwoKICAgICAgICAgICAgICAgIC8vRGVidWdnZXJQcm90b2NvbC5zZW5kKGRiZywgZGF0YSk7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIC4uLih1cmwgJiYgdXJsLmhvc3QgPyB1cmwgOiB7fSkKICAgICAgfSkKICAgICk7CiAgfQoKICBjb25zb2xlLmxvZygnWFgnKTsKCiAgZGVsZXRlIGdsb2JhbFRoaXMuREVCVUc7CgogIGxldCBpbnB1dEJ1ZiA9IG5ldyBBcnJheUJ1ZmZlcigxMCk7CiAgdHR5U2V0UmF3KDApOwoKICBzZXRSZWFkSGFuZGxlcigwLCAoKSA9PiB7CiAgICBsZXQgciA9IHJlYWRTeW5jKDAsIGlucHV0QnVmLCAwLCBpbnB1dEJ1Zi5ieXRlTGVuZ3RoKTsKCiAgICBpZihyID4gMCkgewogICAgICBsZXQgYSA9IG5ldyBVaW50OEFycmF5KGlucHV0QnVmLnNsaWNlKDAsIHIpKTsKCiAgICAgIC8vY29uc29sZS5sb2coJ2EnLCBhKTsKCiAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSBpZihhW2ldID09IDEzKSBhW2ldID0gMTA7CgogICAgICBpZihhLmxlbmd0aCA9PSAxICYmIGFbMF0gPT0gMTI3KSBhID0gbmV3IFVpbnQ4QXJyYXkoWzgsIDB4MjAsIDhdKTsKCiAgICAgIGlmKGEubGVuZ3RoID09IDEgJiYgYVswXSA9PSAyNykgc2hvd1Nlc3Npb25zKCk7CiAgICAgIGVsc2Ugd3JpdGVTeW5jKDEsIGEuYnVmZmVyKTsKICAgIH0KICB9KTsKCiAgZnVuY3Rpb24gc2hvd1Nlc3Npb25zKCkgewogICAgbGV0IHNlc3Npb25zID0gZ2V0U2Vzc2lvbnMoKTsKICAgIGNvbnNvbGUubG9nKCdzZXNzaW9ucycsIGNvbnNvbGUuY29uZmlnKHsgbWF4QXJyYXlMZW5ndGg6IEluZmluaXR5LCBkZXB0aDogNCwgY3VzdG9tSW5zcGVjdDogdHJ1ZSwgY29tcGFjdDogMCB9KSwgc2Vzc2lvbnMpOwogIH0KCiAgLy9zZXRJbnRlcnZhbCgoKSA9PiBjb25zb2xlLmxvZygnaW50ZXJ2YWwnKSwgNTAwMCk7CgogIGdsb2JhbFRoaXMuc2VydmVyID0gY3JlYXRlV1MoYHdzczovLyR7YWRkcmVzc306ODk5OC93c2AsIHt9LCB0cnVlKTsKCiAgZGVmaW5lKGdsb2JhbFRoaXMsIHsKICAgIGdldCBjb25uZWN0aW9ucygpIHsKICAgICAgcmV0dXJuIFsuLi5nbG9iYWxUaGlzLnNvY2tldHNdLm1hcCh3cyA9PiB3czJkYmcod3MpKTsKICAgIH0sCiAgICBnZXQgc29ja2xpc3QoKSB7CiAgICAgIHJldHVybiBbLi4uZ2xvYmFsVGhpcy5zb2NrZXRzXTsKICAgIH0sCiAgICBuZXQ6IHsgc2V0TG9nLCBMTExfVVNFUiwgTExMX05PVElDRSwgTExMX1dBUk4sIGNyZWF0ZVNlcnZlciB9LAogICAgVHJpdmlhbFN5bnRheEhpZ2hsaWdodGVyLAogICAgTmV3RGVidWdnZXIsCiAgICBMYXVuY2hEZWJ1Z2dlciwKICAgIFN0YXJ0RGVidWdnZXIsCiAgICBDb25uZWN0RGVidWdnZXIsCiAgICBEZWJ1Z2dlckRpc3BhdGNoZXIsCiAgICBEZWJ1Z2dlclByb3RvY29sLAogICAgR2V0RnVuY3Rpb25OYW1lLAogICAgRmluZEZ1bmN0aW9ucywKICAgIExvYWRBU1QsCiAgICBUYWJsZSwKICAgIExpc3QsCiAgICBnZXQgZmlsZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuZmlsZXNbdGhpcy5zY3JpcHRdOwogICAgfSwKICAgIGZpbGVzOiBwcm9wZXJ0eUxvb2t1cCgKICAgICAgKGdsb2JhbFRoaXMuZmlsZUNhY2hlID0ge30pLAogICAgICBtZW1vaXplKChmaWxlLCBzb3VyY2UpID0+IHsKICAgICAgICBzb3VyY2UgPz89IHRyeUNhdGNoKAogICAgICAgICAgKCkgPT4gVHJpdmlhbFN5bnRheEhpZ2hsaWdodGVyKFJlYWRGaWxlKGZpbGUpKSwKICAgICAgICAgIHMgPT4gcywKICAgICAgICAgICgpID0+IFJlYWRGaWxlKGZpbGUpCiAgICAgICAgKTsKICAgICAgICByZXR1cm4gZGVmaW5lKAogICAgICAgICAgewogICAgICAgICAgICBzb3VyY2UsCiAgICAgICAgICAgIGluZGV4bGlzdDogWy4uLnNvdXJjZS5tYXRjaEFsbCgvXlteXG5dKi9nbSldLm1hcChtID0+IG0uaW5kZXgpCiAgICAgICAgICB9LAogICAgICAgICAgbGF6eVByb3BlcnRpZXMoCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBsaW5lKGksIGopIHsKICAgICAgICAgICAgICAgIGlmKGkgPT09IHVuZGVmaW5lZCkgcmV0dXJuICcnOwogICAgICAgICAgICAgICAgY29uc3QgeyBzb3VyY2UsIGluZGV4bGlzdCB9ID0gdGhpczsKICAgICAgICAgICAgICAgIGogPz89IGkgKyAxOwogICAgICAgICAgICAgICAgY29uc3QgbSA9IG1vZChpbmRleGxpc3QubGVuZ3RoIC0gMSk7CiAgICAgICAgICAgICAgICBjb25zdCBbc3RhcnQsIGVuZF0gPSBbaW5kZXhsaXN0W20oaSldLCBpbmRleGxpc3RbbShqKV1dOwogICAgICAgICAgICAgICAgbGV0IGxpbmUgPSBzb3VyY2Uuc2xpY2Uoc3RhcnQsIChlbmQgPz8gMCkgLSAxKTsKCiAgICAgICAgICAgICAgICBpZihbLi4ubGluZS5tYXRjaEFsbCgvXHgxYihbXkEtWmEtel0qW0EtWmEtel0pL2cpXS5sYXN0ICE9ICdceDFiWzBtJykgbGluZSArPSAnXHgxYlswbSc7CgogICAgICAgICAgICAgICAgcmV0dXJuIGxpbmU7CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBtYXRjaChyZSkgewogICAgICAgICAgICAgICAgaWYodHlwZW9mIHJlID09ICdzdHJpbmcnKSByZSA9IG5ldyBSZWdFeHAocmUsICdnaScpOwoKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmZ1bmN0aW9ucy50aGVuKGZucyA9PgogICAgICAgICAgICAgICAgICBkZWZpbmUoCiAgICAgICAgICAgICAgICAgICAgZm5zLmZpbHRlcigoeyBuYW1lIH0pID0+IHJlLnRlc3QobmFtZSkpLAogICAgICAgICAgICAgICAgICAgIHsgW1N5bWJvbC50b1N0cmluZ1RhZ106ICdGdW5jdGlvbkxpc3QnLCBmaWxlIH0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAvLyBlc3RyZWU6ICgpID0+ICwKICAgICAgICAgICAgICBhc3luYyBmdW5jdGlvbnMoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gKGdsb2JhbFRoaXMuZnVuY3Rpb25DYWNoZSA9IFsuLi5GaW5kRnVuY3Rpb25zKChnbG9iYWxUaGlzLmFzdCA9IGF3YWl0IExvYWRBU1QoZmlsZSkpKV0ubWFwKChbbmFtZSwgbG9jLCBwYXJhbXMsIGV4cHJlc3Npb24sIHBhdGhdKSA9PgogICAgICAgICAgICAgICAgICBkZWZpbmUoCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgbmFtZSwKICAgICAgICAgICAgICAgICAgICAgIHBhcmFtcywKICAgICAgICAgICAgICAgICAgICAgIC4uLmxvYywKICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb24KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsgcGF0aCB9CiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICkpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgeyBhc3luYzogZmFsc2UgfQogICAgICAgICAgKQogICAgICAgICk7CiAgICAgIH0pCiAgICApLAogICAgYXN5bmMgcmVwZWF0KGNvbmQsIGZuLCAuLi5hcmdzKSB7CiAgICAgIGxldCByOwogICAgICBpZih0eXBlb2YgY29uZCA9PSAnbnVtYmVyJykgewogICAgICAgIGxldCBuID0gY29uZDsKICAgICAgICBjb25kID0gKHIsIGkpID0+IGkgPj0gbiB8fCByID09PSB0cnVlOwogICAgICB9CiAgICAgIGZvcihsZXQgaSA9IDA7IDsgaSsrKSB7CiAgICAgICAgciA9IGF3YWl0IGZuKC4uLmFyZ3MpOwoKICAgICAgICBpZihjb25kKHIsIGkpKSBicmVhazsKICAgICAgfQogICAgICByZXR1cm4gcjsKICAgIH0sCiAgICByZXBsOiBTdGFydFJFUEwoKQogIH0pOwoKICBmdW5jdGlvbiBxdWl0KHdoeSkgewogICAgY29uc29sZS5sb2coYHF1aXQoJyR7d2h5fScpYCk7CgogICAgbGV0IGNmZyA9IHsgaW5zcGVjdE9wdGlvbnM6IGNvbnNvbGUub3B0aW9ucyB9OwogICAgV3JpdGVKU09OKGAuJHtiYXNlfS1jb25maWdgLCBjZmcpOwogICAgLy8gcmVwbC5jbGVhbnVwKHdoeSk7CiAgfQp9Cgp0cnkgewogIG1haW4oLi4uc2NyaXB0QXJncy5zbGljZSgxKSk7Cn0gY2F0Y2goZXJyb3IpIHsKICBjb25zb2xlLmxvZyhgRkFJTDogJHtlcnJvcj8ubWVzc2FnZSA/PyBlcnJvcn1cbiR7ZXJyb3I/LnN0YWNrfWApOwp9IGZpbmFsbHkgewogIC8vY29uc29sZS5sb2coJ1NVQ0NFU1MnKTsKfQoAAAAAAAAAAOtzAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArS8AAAAAAACtLwAAAAAAAAAAAAAAAPC/"
				],
				[
					844,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALMaAAAAAAAAtBoAAAAAAAAAAAAAtBoAAAAAAAC+GgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsxoAAAAAAACzGgAAAAAAAAAAAAAAAPC/"
				],
				[
					859,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BgAAAAYbAAAAAAAABxsAAAAAAAAAAAAABxsAAAAAAAARGwAAAAAAAAAAAAC0GgAAAAAAALQaAAAAAAAACgAAACAgICAgICAgICAHGwAAAAAAAAgbAAAAAAAAAAAAAAgbAAAAAAAAEhsAAAAAAAAAAAAA/RoAAAAAAAD9GgAAAAAAAAoAAAAgICAgICAgICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABhsAAAAAAAAGGwAAAAAAAAAAAAAAQHRA"
				],
				[
					860,
					1,
					"paste",
					null,
					"AQAAAAgbAAAAAAAAURsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACBsAAAAAAAAIGwAAAAAAAAAAAAAAAPC/"
				],
				[
					865,
					1,
					"insert",
					{
						"characters": "D"
					},
					"AgAAADEbAAAAAAAAMhsAAAAAAAAAAAAAMhsAAAAAAAAyGwAAAAAAAAgAAABEZWJ1Z2dlcg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMRsAAAAAAAA5GwAAAAAAAAAAAAAAAPC/"
				],
				[
					866,
					1,
					"left_delete",
					null,
					"AQAAADEbAAAAAAAAMRsAAAAAAAABAAAARA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMhsAAAAAAAAyGwAAAAAAAAAAAAAAAPC/"
				],
				[
					867,
					1,
					"insert",
					{
						"characters": "process"
					},
					"BwAAADEbAAAAAAAAMhsAAAAAAAAAAAAAMhsAAAAAAAAzGwAAAAAAAAAAAAAzGwAAAAAAADQbAAAAAAAAAAAAADQbAAAAAAAANRsAAAAAAAAAAAAANRsAAAAAAAA2GwAAAAAAAAAAAAA2GwAAAAAAADcbAAAAAAAAAAAAADcbAAAAAAAAOBsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMRsAAAAAAAAxGwAAAAAAAAAAAAAAAPC/"
				],
				[
					868,
					7,
					"left_delete",
					null,
					"BwAAADcbAAAAAAAANxsAAAAAAAABAAAAczYbAAAAAAAANhsAAAAAAAABAAAAczUbAAAAAAAANRsAAAAAAAABAAAAZTQbAAAAAAAANBsAAAAAAAABAAAAYzMbAAAAAAAAMxsAAAAAAAABAAAAbzIbAAAAAAAAMhsAAAAAAAABAAAAcjEbAAAAAAAAMRsAAAAAAAABAAAAcA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOBsAAAAAAAA4GwAAAAAAAAAAAAAAAPC/"
				],
				[
					869,
					1,
					"right_delete",
					null,
					"AQAAADEbAAAAAAAAMRsAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMRsAAAAAAAAxGwAAAAAAAAAAAAAAAPC/"
				],
				[
					872,
					1,
					"insert",
					{
						"characters": " read:"
					},
					"BgAAADobAAAAAAAAOxsAAAAAAAAAAAAAOxsAAAAAAAA8GwAAAAAAAAAAAAA8GwAAAAAAAD0bAAAAAAAAAAAAAD0bAAAAAAAAPhsAAAAAAAAAAAAAPhsAAAAAAAA/GwAAAAAAAAAAAAA/GwAAAAAAAEAbAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOhsAAAAAAAA6GwAAAAAAAAAAAAAAAPC/"
				],
				[
					873,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEAbAAAAAAAAQRsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQBsAAAAAAABAGwAAAAAAAAAAAAAAAPC/"
				],
				[
					874,
					1,
					"left_delete",
					null,
					"AQAAAEAbAAAAAAAAQBsAAAAAAAABAAAAIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQRsAAAAAAABBGwAAAAAAAAAAAAAAAPC/"
				],
				[
					878,
					1,
					"insert",
					{
						"characters": "obj"
					},
					"BAAAAEIbAAAAAAAAQxsAAAAAAAAAAAAAQxsAAAAAAABDGwAAAAAAAAkAAAAgY2FsbGJhY2tDGwAAAAAAAEQbAAAAAAAAAAAAAEQbAAAAAAAARRsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQhsAAAAAAABLGwAAAAAAAAAAAAAAAPC/"
				],
				[
					887,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAACMbAAAAAAAAJRsAAAAAAAAAAAAADhsAAAAAAAAQGwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADhsAAAAAAAAjGwAAAAAAAAAAAAAAAPC/"
				],
				[
					910,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANwpAAAAAAAA3SkAAAAAAAAAAAAA3SkAAAAAAADlKQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3CkAAAAAAADcKQAAAAAAAAAAAAAAAPC/"
				],
				[
					912,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAALopAAAAAAAAuykAAAAAAAAAAAAAuykAAAAAAADDKQAAAAAAAAAAAADmKQAAAAAAAOYpAAAAAAAACAAAACAgICAgICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuikAAAAAAAC6KQAAAAAAAAAAAAAAAFJA"
				],
				[
					914,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACwpAAAAAAAALSkAAAAAAAAAAAAALSkAAAAAAAA1KQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALCkAAAAAAAAsKQAAAAAAAAAAAAAAAFJA"
				],
				[
					916,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAO4oAAAAAAAA7ygAAAAAAAAAAAAA7ygAAAAAAAD3KAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7igAAAAAAADuKAAAAAAAAAAAAAAAAFJA"
				],
				[
					924,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAC4oAAAAAAAALygAAAAAAAAAAAAALygAAAAAAAA3KAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALigAAAAAAAAuKAAAAAAAAAAAAAAAAFJA"
				],
				[
					933,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAA8oAAAAAAAAECgAAAAAAAAAAAAAECgAAAAAAAAYKAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADygAAAAAAAAPKAAAAAAAAAAAAAAAAFJA"
				],
				[
					958,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAOYpAAAAAAAA5ykAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5ikAAAAAAADmKQAAAAAAAAAAAAAAAPC/"
				],
				[
					959,
					1,
					"left_delete",
					null,
					"AQAAAOYpAAAAAAAA5ikAAAAAAAABAAAALw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5ykAAAAAAADnKQAAAAAAAAAAAAAAAPC/"
				],
				[
					960,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAOYpAAAAAAAA5ykAAAAAAAAAAAAA5ykAAAAAAADoKQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5ikAAAAAAADmKQAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					2,
					"right_delete",
					null,
					"AgAAAA4bAAAAAAAADhsAAAAAAAABAAAALw4bAAAAAAAADhsAAAAAAAABAAAAKg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4bAAAAAAAADhsAAAAAAAAAAAAAAABiQA"
				],
				[
					20,
					2,
					"right_delete",
					null,
					"AgAAACMbAAAAAAAAIxsAAAAAAAABAAAAKiMbAAAAAAAAIxsAAAAAAAABAAAALw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACMbAAAAAAAAIxsAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					3,
					"left_delete",
					null,
					"AwAAAAwbAAAAAAAADBsAAAAAAAACAAAAICAKGwAAAAAAAAobAAAAAAAAAgAAACAgCBsAAAAAAAAIGwAAAAAAAAIAAAAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA4bAAAAAAAADhsAAAAAAAAAAAAAAABiQA"
				]
			]
		},
		{
			"file": "upload-server.js",
			"settings":
			{
				"buffer_size": 36010,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					45,
					1,
					"insert",
					{
						"characters": "logLevels,"
					},
					"CgAAAIECAAAAAAAAggIAAAAAAAAAAAAAggIAAAAAAACDAgAAAAAAAAAAAACDAgAAAAAAAIQCAAAAAAAAAAAAAIQCAAAAAAAAhQIAAAAAAAAAAAAAhQIAAAAAAACGAgAAAAAAAAAAAACGAgAAAAAAAIcCAAAAAAAAAAAAAIcCAAAAAAAAiAIAAAAAAAAAAAAAiAIAAAAAAACJAgAAAAAAAAAAAACJAgAAAAAAAIoCAAAAAAAAAAAAAIoCAAAAAAAAiwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgQIAAAAAAACBAgAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIsCAAAAAAAAjAIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwIAAAAAAACLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "  loL"
					},
					"BgAAAB8LAAAAAAAAIAsAAAAAAAAAAAAAIAsAAAAAAAAgCwAAAAAAAI4AAABbJ0VSUicsICdXQVJOJywgJ05PVElDRScsICdJTkZPJywgJ0RFQlVHJywgJ1BBUlNFUicsICdIRUFERVInLCAnRVhUJywgJ0NMSUVOVCcsICdMQVRFTkNZJywgJ01JTk5FVCcsICdUSFJFQUQnXVtNYXRoLmxvZzIobGV2ZWwpXSA/PyBsZXZlbCArICcnIAsAAAAAAAAhCwAAAAAAAAAAAAAhCwAAAAAAACILAAAAAAAAAAAAACILAAAAAAAAIwsAAAAAAAAAAAAAIwsAAAAAAAAkCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwsAAAAAAACtCwAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"left_delete",
					null,
					"AQAAACMLAAAAAAAAIwsAAAAAAAABAAAATA",
					"AQAAAAAAAAABAAAAJAsAAAAAAAAkCwAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "gLevels"
					},
					"BwAAACMLAAAAAAAAJAsAAAAAAAAAAAAAJAsAAAAAAAAlCwAAAAAAAAAAAAAlCwAAAAAAACYLAAAAAAAAAAAAACYLAAAAAAAAJwsAAAAAAAAAAAAAJwsAAAAAAAAoCwAAAAAAAAAAAAAoCwAAAAAAACkLAAAAAAAAAAAAACkLAAAAAAAAKgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIwsAAAAAAAAjCwAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACoLAAAAAAAALAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgsAAAAAAAAqCwAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAACoLAAAAAAAAKgsAAAAAAAABAAAAKCoLAAAAAAAAKgsAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAKwsAAAAAAAArCwAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAACoLAAAAAAAALAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgsAAAAAAAAqCwAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "lewv"
					},
					"BAAAACsLAAAAAAAALAsAAAAAAAAAAAAALAsAAAAAAAAtCwAAAAAAAAAAAAAtCwAAAAAAAC4LAAAAAAAAAAAAAC4LAAAAAAAALwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwsAAAAAAAArCwAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					2,
					"left_delete",
					null,
					"AgAAAC4LAAAAAAAALgsAAAAAAAABAAAAdi0LAAAAAAAALQsAAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAALwsAAAAAAAAvCwAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "vel"
					},
					"AwAAAC0LAAAAAAAALgsAAAAAAAAAAAAALgsAAAAAAAAvCwAAAAAAAAAAAAAvCwAAAAAAADALAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQsAAAAAAAAtCwAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					3,
					"left_delete",
					null,
					"AwAAACELAAAAAAAAIQsAAAAAAAABAAAAbCALAAAAAAAAIAsAAAAAAAABAAAAIB8LAAAAAAAAHwsAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAIgsAAAAAAAAiCwAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "l"
					},
					"AQAAAB8LAAAAAAAAIAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHwsAAAAAAAAfCwAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"right_delete",
					null,
					"AQAAADwLAAAAAAAAPAsAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAPAsAAAAAAAA8CwAAAAAAAP///////+9/"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAKGIAAAAAAAAoogAAAAAAAAAAAAAoogAAAAAAACiiAAAAAAAALEAAAAsCiAgICBuZXQ6IHsKICAgICAgY3JlYXRlU2VydmVyLAogICAgICBzZXRMb2csCiAgICAgIExMTF9VU0VSLAogICAgICBMTExfTk9USUNFLAogICAgICBMTExfV0FSTiwKICAgICAgTExMX0lORk8sCiAgICAgIEZvcm1QYXJzZXIsCiAgICAgIEhhc2gsCiAgICAgIFJlc3BvbnNlLAogICAgICBTb2NrZXQKICAgIH0",
					"AQAAAAAAAAABAAAAoYgAAAAAAABSiQAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"left_delete",
					null,
					"AQAAAKGIAAAAAAAAoYgAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAoogAAAAAAACiiAAAAAAAAAAAAAAAAPC/"
				],
				[
					274,
					1,
					"left_delete",
					null,
					"AQAAAOMKAAAAAAAA4woAAAAAAAAsAAAAICAgIC8vaWYocGFyYW1zLmRlYnVnIHx8IGxldmVsIDw9IExMTF9XQVJOKQo",
					"AQAAAAAAAAABAAAA4woAAAAAAAAPCwAAAAAAAAAAAAAAAPC/"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANEJAAAAAAAA0gkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QkAAAAAAADRCQAAAAAAAAAAAAAAAPC/"
				],
				[
					285,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANIJAAAAAAAA1AkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gkAAAAAAADSCQAAAAAAAAAAAAAAAPC/"
				],
				[
					286,
					1,
					"right_delete",
					null,
					"AQAAANMJAAAAAAAA0wkAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAA0wkAAAAAAADTCQAAAAAAAAAAAAAAAPC/"
				],
				[
					289,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAFoLAAAAAAAAWwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWgsAAAAAAABaCwAAAAAAAAAAAAAAAPC/"
				],
				[
					294,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAFkLAAAAAAAAWwsAAAAAAAAAAAAA1gkAAAAAAADYCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWQsAAAAAAADWCQAAAAAAAAAAAAAAAPC/"
				],
				[
					374,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAGuKAAAAAAAAbIoAAAAAAAAAAAAAbIoAAAAAAABsigAAAAAAAAUAAABhd2FpdA",
					"AQAAAAAAAAABAAAAa4oAAAAAAABwigAAAAAAAAAAAAAAAPC/"
				],
				[
					379,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAJ+JAAAAAAAAoIkAAAAAAAAAAAAAoIkAAAAAAACgiQAAAAAAAAUAAABhc3luYw",
					"AQAAAAAAAAABAAAAn4kAAAAAAACkiQAAAAAAAAAAAAAAAPC/"
				],
				[
					473,
					2,
					"left_delete",
					null,
					"AgAAAGiKAAAAAAAAaIoAAAAAAAABAAAAIGeKAAAAAAAAZ4oAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAaYoAAAAAAABpigAAAAAAAAAAAAAAAPC/"
				],
				[
					485,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAgYoAAAAAAACBigAAAAAAAAAAAAAAAAAA"
				],
				[
					497,
					1,
					"left_delete",
					null,
					"AQAAANYJAAAAAAAA1gkAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAA1wkAAAAAAADXCQAAAAAAAAAAAAAAAPC/"
				],
				[
					498,
					1,
					"right_delete",
					null,
					"AQAAANYJAAAAAAAA1gkAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAA1gkAAAAAAADWCQAAAAAAAAAAAAAAAPC/"
				],
				[
					501,
					2,
					"left_delete",
					null,
					"AgAAAFoLAAAAAAAAWgsAAAAAAAABAAAAL1kLAAAAAAAAWQsAAAAAAAABAAAAKg",
					"AQAAAAAAAAABAAAAWwsAAAAAAABbCwAAAAAAAP///////+9/"
				],
				[
					551,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAOQwAAAAAAAA5jAAAAAAAAAAAAAAsTAAAAAAAACzMAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsTAAAAAAAADkMAAAAAAAAAAAAAAAAPC/"
				],
				[
					589,
					1,
					"cut",
					null,
					"AQAAADaKAAAAAAAANooAAAAAAAASAAAAICAgICAgICAgICAgdHJ5IHsK",
					"AQAAAAAAAAABAAAANooAAAAAAABIigAAAAAAAAAAAAAAAAAA"
				],
				[
					593,
					1,
					"cut",
					null,
					"AQAAAO2KAAAAAAAA7YoAAAAAAAAaAAAAICAgICAgICAgICAgfSBjYXRjaChlKSB7fQo",
					"AQAAAAAAAAABAAAA7YoAAAAAAAAHiwAAAAAAAAAAAAAAAAAA"
				],
				[
					600,
					1,
					"insert",
					{
						"characters": "\n\nclon"
					},
					"CQAAANqJAAAAAAAA24kAAAAAAAAAAAAA24kAAAAAAADjiQAAAAAAAAAAAADjiQAAAAAAAOSJAAAAAAAAAAAAAOSJAAAAAAAA7IkAAAAAAAAAAAAA24kAAAAAAADbiQAAAAAAAAgAAAAgICAgICAgIOSJAAAAAAAA5YkAAAAAAAAAAAAA5YkAAAAAAADmiQAAAAAAAAAAAADmiQAAAAAAAOeJAAAAAAAAAAAAAOeJAAAAAAAA6IkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2okAAAAAAADaiQAAAAAAAAAAAAAAAPC/"
				],
				[
					601,
					3,
					"left_delete",
					null,
					"AwAAAOeJAAAAAAAA54kAAAAAAAABAAAAbuaJAAAAAAAA5okAAAAAAAABAAAAb+WJAAAAAAAA5YkAAAAAAAABAAAAbA",
					"AQAAAAAAAAABAAAA6IkAAAAAAADoiQAAAAAAAAAAAAAAAPC/"
				],
				[
					602,
					1,
					"insert",
					{
						"characters": "onsole.log"
					},
					"CgAAAOWJAAAAAAAA5okAAAAAAAAAAAAA5okAAAAAAADniQAAAAAAAAAAAADniQAAAAAAAOiJAAAAAAAAAAAAAOiJAAAAAAAA6YkAAAAAAAAAAAAA6YkAAAAAAADqiQAAAAAAAAAAAADqiQAAAAAAAOuJAAAAAAAAAAAAAOuJAAAAAAAA7IkAAAAAAAAAAAAA7IkAAAAAAADtiQAAAAAAAAAAAADtiQAAAAAAAO6JAAAAAAAAAAAAAO6JAAAAAAAA74kAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5YkAAAAAAADliQAAAAAAAAAAAAAAAPC/"
				],
				[
					603,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAO+JAAAAAAAA8YkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA74kAAAAAAADviQAAAAAAAAAAAAAAAPC/"
				],
				[
					604,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAPCJAAAAAAAA8okAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8IkAAAAAAADwiQAAAAAAAAAAAAAAAPC/"
				],
				[
					605,
					1,
					"insert",
					{
						"characters": "onMessage"
					},
					"CQAAAPGJAAAAAAAA8okAAAAAAAAAAAAA8okAAAAAAADziQAAAAAAAAAAAADziQAAAAAAAPSJAAAAAAAAAAAAAPSJAAAAAAAA9YkAAAAAAAAAAAAA9YkAAAAAAAD2iQAAAAAAAAAAAAD2iQAAAAAAAPeJAAAAAAAAAAAAAPeJAAAAAAAA+IkAAAAAAAAAAAAA+IkAAAAAAAD5iQAAAAAAAAAAAAD5iQAAAAAAAPqJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8YkAAAAAAADxiQAAAAAAAAAAAAAAAPC/"
				],
				[
					607,
					1,
					"insert",
					{
						"characters": ",msg"
					},
					"BAAAAPuJAAAAAAAA/IkAAAAAAAAAAAAA/IkAAAAAAAD9iQAAAAAAAAAAAAD9iQAAAAAAAP6JAAAAAAAAAAAAAP6JAAAAAAAA/4kAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+4kAAAAAAAD7iQAAAAAAAAAAAAAAAPC/"
				],
				[
					609,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAACKAAAAAAAAAYoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAIoAAAAAAAAAigAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "quickjs/qjs-net/js/rpc.js",
			"settings":
			{
				"buffer_size": 26723,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					55,
					1,
					"right_delete",
					null,
					"AQAAAAQxAAAAAAAABDEAAAAAAAAFAAAAYXN5bmM",
					"AQAAAAAAAAABAAAABDEAAAAAAAAJMQAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAAUyAAAAAAAABjIAAAAAAAAAAAAABjIAAAAAAAAGMgAAAAAAAAUAAABhd2FpdA",
					"AQAAAAAAAAABAAAABTIAAAAAAAAKMgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "fire.js",
			"settings":
			{
				"buffer_size": 27314,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					60,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAJeAAAAAAAAA14AAAAAAAAAAAAAA14AAAAAAAAJXgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAl4AAAAAAAACXgAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BwAAACteAAAAAAAALF4AAAAAAAAAAAAALF4AAAAAAAAwXgAAAAAAAAAAAAAwXgAAAAAAADJeAAAAAAAAAAAAAANeAAAAAAAAA14AAAAAAAAGAAAAICAgICAgLF4AAAAAAAAtXgAAAAAAAAAAAAAtXgAAAAAAADNeAAAAAAAAAAAAACZeAAAAAAAAJl4AAAAAAAAGAAAAICAgICAg",
					"AQAAAAAAAAABAAAAK14AAAAAAAArXgAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "console.log"
					},
					"DAAAACZeAAAAAAAAJ14AAAAAAAAAAAAAKF4AAAAAAAAoXgAAAAAAAAYAAAAgICAgICAnXgAAAAAAACheAAAAAAAAAAAAACheAAAAAAAAKV4AAAAAAAAAAAAAKV4AAAAAAAAqXgAAAAAAAAAAAAAqXgAAAAAAACteAAAAAAAAAAAAACteAAAAAAAALF4AAAAAAAAAAAAALF4AAAAAAAAtXgAAAAAAAAAAAAAtXgAAAAAAAC5eAAAAAAAAAAAAAC5eAAAAAAAAL14AAAAAAAAAAAAAL14AAAAAAAAwXgAAAAAAAAAAAAAwXgAAAAAAADFeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJl4AAAAAAAAmXgAAAAAAAAAAAAAAAEtA"
				],
				[
					72,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADFeAAAAAAAAM14AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMV4AAAAAAAAxXgAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAADJeAAAAAAAANF4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMl4AAAAAAAAyXgAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "data"
					},
					"BAAAADNeAAAAAAAANF4AAAAAAAAAAAAANF4AAAAAAAA1XgAAAAAAAAAAAAA1XgAAAAAAADZeAAAAAAAAAAAAADZeAAAAAAAAN14AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAM14AAAAAAAAzXgAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAADheAAAAAAAAOV4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOF4AAAAAAAA4XgAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					2,
					"left_delete",
					null,
					"AgAAADheAAAAAAAAOF4AAAAAAAABAAAAOjdeAAAAAAAAN14AAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAOV4AAAAAAAA5XgAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": ":',"
					},
					"AwAAADdeAAAAAAAAOF4AAAAAAAAAAAAAOF4AAAAAAAA5XgAAAAAAAAAAAAA5XgAAAAAAADpeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAN14AAAAAAAA3XgAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " chunk"
					},
					"BgAAADpeAAAAAAAAO14AAAAAAAAAAAAAO14AAAAAAAA8XgAAAAAAAAAAAAA8XgAAAAAAAD1eAAAAAAAAAAAAAD1eAAAAAAAAPl4AAAAAAAAAAAAAPl4AAAAAAAA/XgAAAAAAAAAAAAA/XgAAAAAAAEBeAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOl4AAAAAAAA6XgAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEFeAAAAAAAAQl4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQV4AAAAAAABBXgAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"right_delete",
					null,
					"AQAAAJ9nAAAAAAAAn2cAAAAAAAACAAAALy8",
					"AQAAAAAAAAABAAAAoWcAAAAAAACfZwAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"right_delete",
					null,
					"AQAAALZnAAAAAAAAtmcAAAAAAAAMAAAAIEpTT04ucGFyc2Uo",
					"AQAAAAAAAAABAAAAtmcAAAAAAADCZwAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"left_delete",
					null,
					"AQAAALlnAAAAAAAAuWcAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAumcAAAAAAAC6ZwAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"cut",
					null,
					"AQAAAJ1nAAAAAAAAnWcAAAAAAAAfAAAAICBjb25zb2xlLmxvZygnV1Mgc2VuZDonLG1zZyk7Cg",
					"AQAAAAAAAAABAAAAnWcAAAAAAAC8ZwAAAAAAAAAAAAAAAAAA"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGNnAAAAAAAAZGcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAY2cAAAAAAABjZwAAAAAAAAAAAAAAAAAA"
				],
				[
					203,
					1,
					"paste",
					null,
					"AQAAAGRnAAAAAAAAg2cAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZGcAAAAAAABkZwAAAAAAAAAAAAAAAPC/"
				],
				[
					216,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAGZnAAAAAAAAZ2cAAAAAAAAAAAAAZ2cAAAAAAABoZwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZmcAAAAAAABmZwAAAAAAAAAAAAAAAPC/"
				],
				[
					219,
					1,
					"left_delete",
					null,
					"AQAAAL1nAAAAAAAAvWcAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAvmcAAAAAAAC+ZwAAAAAAAAAAAAAAgE9A"
				],
				[
					285,
					2,
					"right_delete",
					null,
					"AgAAACZeAAAAAAAAJl4AAAAAAAAdAAAAY29uc29sZS5sb2coJ2RhdGE6JywgY2h1bmspOwomXgAAAAAAACZeAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAJl4AAAAAAABDXgAAAAAAAAAAAAAAAPC/"
				],
				[
					324,
					1,
					"cut",
					null,
					"AQAAALRCAAAAAAAAtEIAAAAAAABkAAAACiAgICAgIC8qIGlmKCFnbG9iYWxUaGlzLmNpZCkgCiAgICAgICAgZ2xvYmFsVGhpcy5jaWQgPSBsc3RvcmUuY2lkIHx8IChsc3RvcmUuY2lkPU1ha2VDbGllbnRJRCgpKTsqLw",
					"AQAAAAAAAAABAAAAGEMAAAAAAAC0QgAAAAAAAAAAAAAAAPC/"
				],
				[
					325,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALRCAAAAAAAAtUIAAAAAAAAAAAAAtUIAAAAAAAC7QgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtEIAAAAAAAC0QgAAAAAAAAAAAAAAAPC/"
				],
				[
					334,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAORCAAAAAAAA5UIAAAAAAAAAAAAA5UIAAAAAAADrQgAAAAAAAAAAAAC1QgAAAAAAALVCAAAAAAAABgAAACAgICAgIA",
					"AQAAAAAAAAABAAAA5EIAAAAAAADkQgAAAAAAAAAAAAAAAPC/"
				],
				[
					336,
					1,
					"left_delete",
					null,
					"AQAAAARDAAAAAAAABEMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAABUMAAAAAAAAFQwAAAAAAAAAAAAAAAEtA"
				],
				[
					359,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACdlAAAAAAAAKGUAAAAAAAAAAAAAKGUAAAAAAAAqZQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJ2UAAAAAAAAnZQAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					1,
					"left_delete",
					null,
					"AgAAAGllAAAAAAAAaWUAAAAAAAABAAAAeyhlAAAAAAAAKGUAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAamUAAAAAAABqZQAAAAAAAP///////+9/"
				],
				[
					366,
					1,
					"left_delete",
					null,
					"AQAAANtlAAAAAAAA22UAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAA3GUAAAAAAADcZQAAAAAAAAAAAAAAcIFA"
				],
				[
					416,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGpDAAAAAAAAa0MAAAAAAAAAAAAAa0MAAAAAAABtQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAakMAAAAAAABqQwAAAAAAAAAAAAAAAPC/"
				],
				[
					419,
					1,
					"right_delete",
					null,
					"AgAAAI1DAAAAAAAAjUMAAAAAAAAQAAAAICAvL3N0cis9a2V5OwogIGtDAAAAAAAAa0MAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAjUMAAAAAAACdQwAAAAAAAAAAAAAAADJA"
				],
				[
					476,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAD1DAAAAAAAAP0MAAAAAAAAAAAAAC0MAAAAAAAANQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAC0MAAAAAAAA9QwAAAAAAAP///////+9/"
				],
				[
					688,
					1,
					"insert",
					{
						"characters": "Element"
					},
					"BwAAAJxYAAAAAAAAnVgAAAAAAAAAAAAAnVgAAAAAAACeWAAAAAAAAAAAAACeWAAAAAAAAJ9YAAAAAAAAAAAAAJ9YAAAAAAAAoFgAAAAAAAAAAAAAoFgAAAAAAAChWAAAAAAAAAAAAAChWAAAAAAAAKJYAAAAAAAAAAAAAKJYAAAAAAAAo1gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnFgAAAAAAACcWAAAAAAAAAAAAAAAAPC/"
				],
				[
					698,
					1,
					"insert",
					{
						"characters": "Element"
					},
					"BwAAADBWAAAAAAAAMVYAAAAAAAAAAAAAMVYAAAAAAAAyVgAAAAAAAAAAAAAyVgAAAAAAADNWAAAAAAAAAAAAADNWAAAAAAAANFYAAAAAAAAAAAAANFYAAAAAAAA1VgAAAAAAAAAAAAA1VgAAAAAAADZWAAAAAAAAAAAAADZWAAAAAAAAN1YAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMFYAAAAAAAAwVgAAAAAAAAAAAAAAAPC/"
				],
				[
					709,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAFlWAAAAAAAAW1YAAAAAAAAAAAAATlUAAAAAAABQVQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATlUAAAAAAABZVgAAAAAAAAAAAAAAAPC/"
				],
				[
					723,
					1,
					"insert",
					{
						"characters": "globalThis."
					},
					"CwAAAKRYAAAAAAAApVgAAAAAAAAAAAAApVgAAAAAAACmWAAAAAAAAAAAAACmWAAAAAAAAKdYAAAAAAAAAAAAAKdYAAAAAAAAqFgAAAAAAAAAAAAAqFgAAAAAAACpWAAAAAAAAAAAAACpWAAAAAAAAKpYAAAAAAAAAAAAAKpYAAAAAAAAq1gAAAAAAAAAAAAAq1gAAAAAAACsWAAAAAAAAAAAAACsWAAAAAAAAK1YAAAAAAAAAAAAAK1YAAAAAAAArlgAAAAAAAAAAAAArlgAAAAAAACvWAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApFgAAAAAAACkWAAAAAAAAAAAAAAAAPC/"
				],
				[
					728,
					1,
					"insert",
					{
						"characters": "if("
					},
					"AwAAAJVYAAAAAAAAllgAAAAAAAAAAAAAllgAAAAAAACXWAAAAAAAAAAAAACXWAAAAAAAAJhYAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlVgAAAAAAACVWAAAAAAAAAAAAAAAADJA"
				],
				[
					729,
					1,
					"paste",
					null,
					"AQAAAJhYAAAAAAAArVgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmFgAAAAAAACYWAAAAAAAAAAAAAAAAPC/"
				],
				[
					730,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAK1YAAAAAAAArlgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArVgAAAAAAACtWAAAAAAAAAAAAAAAAPC/"
				],
				[
					733,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAK5YAAAAAAAAr1gAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArlgAAAAAAACuWAAAAAAAAAAAAAAAAPC/"
				],
				[
					748,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOZLAAAAAAAA50sAAAAAAAAAAAAA50sAAAAAAADxSwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5ksAAAAAAADmSwAAAAAAAAAAAAAAAPC/"
				],
				[
					750,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAMRLAAAAAAAAxUsAAAAAAAAAAAAAxUsAAAAAAADPSwAAAAAAAAAAAADySwAAAAAAAPJLAAAAAAAACgAAACAgICAgICAgICA",
					"AQAAAAAAAAABAAAAxEsAAAAAAADESwAAAAAAAAAAAAAAgFZA"
				],
				[
					752,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABdMAAAAAAAAGEwAAAAAAAAAAAAAGEwAAAAAAAAgTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAF0wAAAAAAAAXTAAAAAAAAAAAAAAAgFZA"
				],
				[
					756,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AwAAAM9LAAAAAAAA0EsAAAAAAAAAAAAAGUwAAAAAAAAZTAAAAAAAAAgAAAAgICAgICAgINBLAAAAAAAA0UsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAz0sAAAAAAADPSwAAAAAAAAAAAAAAAPC/"
				],
				[
					759,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMhKAAAAAAAAyUoAAAAAAAAAAAAAyUoAAAAAAADPSgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyEoAAAAAAADISgAAAAAAAAAAAAAAAFtA"
				],
				[
					764,
					1,
					"left_delete",
					null,
					"AgAAAABKAAAAAAAAAEoAAAAAAAABAAAAe8hKAAAAAAAAyEoAAAAAAAAGAAAAICAgICAg",
					"AQAAAAAAAAABAAAAAUoAAAAAAAABSgAAAAAAAP///////+9/"
				],
				[
					766,
					1,
					"left_delete",
					null,
					"AQAAADxKAAAAAAAAPEoAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAPUoAAAAAAAA9SgAAAAAAAAAAAAAAaINA"
				],
				[
					770,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAG5KAAAAAAAAb0oAAAAAAAAAAAAAb0oAAAAAAAB5SgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbkoAAAAAAABuSgAAAAAAAAAAAAAAAPC/"
				],
				[
					772,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAI1KAAAAAAAAjkoAAAAAAAAAAAAAjkoAAAAAAACYSgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjUoAAAAAAACNSgAAAAAAAAAAAAAAgFZA"
				],
				[
					774,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMBKAAAAAAAAwUoAAAAAAAAAAAAAwUoAAAAAAADLSgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwEoAAAAAAADASgAAAAAAAAAAAAAAgFZA"
				],
				[
					778,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAKJIAAAAAAAAo0gAAAAAAAAAAAAAo0gAAAAAAACrSAAAAAAAAAAAAACrSAAAAAAAAKtIAAAAAAAAAQAAAGk",
					"AQAAAAAAAAABAAAAo0gAAAAAAACiSAAAAAAAAAAAAAAAAPC/"
				],
				[
					782,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAC5JAAAAAAAAL0kAAAAAAAAAAAAAL0kAAAAAAAA4SQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALkkAAAAAAAAuSQAAAAAAAAAAAAAAQFRA"
				],
				[
					784,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAGFJAAAAAAAAYkkAAAAAAAAAAAAAYkkAAAAAAABrSQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYUkAAAAAAABhSQAAAAAAAAAAAAAAQFRA"
				],
				[
					786,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALBJAAAAAAAAsUkAAAAAAAAAAAAAsUkAAAAAAAC6SQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsEkAAAAAAACwSQAAAAAAAAAAAAAAQFRA"
				],
				[
					788,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANVJAAAAAAAA1kkAAAAAAAAAAAAA1kkAAAAAAADfSQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1UkAAAAAAADVSQAAAAAAAAAAAAAAQFRA"
				],
				[
					793,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAMNGAAAAAAAAxEYAAAAAAAAAAAAAxEYAAAAAAADHRgAAAAAAAAAAAADHRgAAAAAAAMdGAAAAAAAAAQAAACA",
					"AQAAAAAAAAABAAAAw0YAAAAAAADERgAAAAAAAAAAAAAAAPC/"
				],
				[
					798,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAF1FAAAAAAAAXkUAAAAAAAAAAAAAXkUAAAAAAABeRQAAAAAAALcAAAAKICAgICAgLy8gY29uc29sZS5sb2coJ2V2ZW50JywgeyB0eXBlLCBrZXksIGNoYXJDb2RlOiBrZXkuY29kZVBvaW50QXQoMCksIGtleUNvZGUsIHJlcGVhdCwgY3RybEtleSwgc2hpZnRLZXksIGFsdEtleSwgbWV0YUtleSB9KTsKCiAgICAgIC8vaWYoa2V5IGluIG1pc2NmaXhlZDZ4MTMgfHwga2V5Q29kZSA8IDB4MjApIHs",
					"AQAAAAAAAAABAAAAFEYAAAAAAABdRQAAAAAAAAAAAAAAAPC/"
				],
				[
					799,
					7,
					"left_delete",
					null,
					"BwAAAF1FAAAAAAAAXUUAAAAAAAABAAAAIFxFAAAAAAAAXEUAAAAAAAABAAAACltFAAAAAAAAW0UAAAAAAAABAAAAfVlFAAAAAAAAWUUAAAAAAAACAAAAICBXRQAAAAAAAFdFAAAAAAAAAgAAACAgVUUAAAAAAABVRQAAAAAAAAIAAAAgIFRFAAAAAAAAVEUAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAXkUAAAAAAABeRQAAAAAAAAAAAAAAAPC/"
				],
				[
					800,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFRFAAAAAAAAVUUAAAAAAAAAAAAAVUUAAAAAAABdRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVEUAAAAAAABURQAAAAAAAAAAAAAAAPC/"
				],
				[
					803,
					1,
					"left_delete",
					null,
					"AgAAACZFAAAAAAAAJkUAAAAAAAABAAAAe1RFAAAAAAAAVEUAAAAAAAAIAAAAICAgICAgICA",
					"AQAAAAAAAAABAAAAJ0UAAAAAAAAnRQAAAAAAAP///////+9/"
				],
				[
					807,
					1,
					"left_delete",
					null,
					"AQAAAPNBAAAAAAAA80EAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAA9EEAAAAAAAD0QQAAAAAAAAAAAAAAAPC/"
				],
				[
					809,
					1,
					"left_delete",
					null,
					"AQAAAMpBAAAAAAAAykEAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAAy0EAAAAAAADLQQAAAAAAAAAAAAAA8HVA"
				],
				[
					813,
					1,
					"left_delete",
					null,
					"AQAAADtCAAAAAAAAO0IAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAPEIAAAAAAAA8QgAAAAAAAAAAAAAAYHVA"
				],
				[
					815,
					8,
					"left_delete",
					null,
					"CAAAAEBCAAAAAAAAQEIAAAAAAAABAAAAfT5CAAAAAAAAPkIAAAAAAAACAAAAICA8QgAAAAAAADxCAAAAAAAAAgAAACAgO0IAAAAAAAA7QgAAAAAAAAEAAAAKOUIAAAAAAAA5QgAAAAAAAAIAAAAgIDdCAAAAAAAAN0IAAAAAAAACAAAAICA1QgAAAAAAADVCAAAAAAAAAgAAACAgNEIAAAAAAAA0QgAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAQUIAAAAAAABBQgAAAAAAAAAAAAAAAEtA"
				],
				[
					818,
					1,
					"left_delete",
					null,
					"AQAAALxAAAAAAAAAvEAAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAAvUAAAAAAAAC9QAAAAAAAAAAAAAAAAPC/"
				],
				[
					820,
					1,
					"left_delete",
					null,
					"AQAAAJNAAAAAAAAAk0AAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAAlEAAAAAAAACUQAAAAAAAAAAAAAAA8HVA"
				],
				[
					822,
					1,
					"left_delete",
					null,
					"AQAAAP9AAAAAAAAA/0AAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAAEEAAAAAAAAAQQAAAAAAAAAAAAAA0HRA"
				],
				[
					824,
					8,
					"left_delete",
					null,
					"CAAAAARBAAAAAAAABEEAAAAAAAABAAAAfQJBAAAAAAAAAkEAAAAAAAACAAAAICAAQQAAAAAAAABBAAAAAAAAAgAAACAg/0AAAAAAAAD/QAAAAAAAAAEAAAAK/UAAAAAAAAD9QAAAAAAAAAIAAAAgIPtAAAAAAAAA+0AAAAAAAAACAAAAICD5QAAAAAAAAPlAAAAAAAAAAgAAACAg+EAAAAAAAAD4QAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAABUEAAAAAAAAFQQAAAAAAAAAAAAAAAEtA"
				],
				[
					827,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAEA/AAAAAAAAQT8AAAAAAAAAAAAAQT8AAAAAAABBPwAAAAAAAJsAAAAKCiAgICAvKiAgICBmb3IobGV0IHR5ID0geSAtIDE7IHR5IDwgeSArIDE7IHR5KyspIAogICAgICBmb3IobGV0IHR4ID0geCAtIDE7IHR4IDwgeCArIDE7IHR4KyspIAogICAgICAgIHBpeGVsc1t0eV1bdHhdID0gcjsqLwoKICAgIC8vIHBpeGVsc1t5ICsgMV1beF0gPSByOw",
					"AQAAAAAAAAABAAAA2z8AAAAAAABAPwAAAAAAAAAAAAAAAPC/"
				],
				[
					830,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOk+AAAAAAAA6j4AAAAAAAAAAAAA6j4AAAAAAADuPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6T4AAAAAAADpPgAAAAAAAAAAAAAAAPC/"
				],
				[
					833,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAEo/AAAAAAAASz8AAAAAAAAAAAAASz8AAAAAAABNPwAAAAAAAAAAAADqPgAAAAAAAOo+AAAAAAAABAAAACAgICA",
					"AQAAAAAAAAABAAAASj8AAAAAAABKPwAAAAAAAAAAAAAAAEJA"
				],
				[
					836,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAD4+AAAAAAAAPz4AAAAAAAAAAAAAPz4AAAAAAABFPgAAAAAAAAAAAABOPwAAAAAAAE4/AAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAPj4AAAAAAAA+PgAAAAAAAAAAAAAAAPC/"
				],
				[
					838,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAI0+AAAAAAAAjj4AAAAAAAAAAAAAjj4AAAAAAACUPgAAAAAAAAAAAAA/PgAAAAAAAD8+AAAAAAAABgAAACAgICAgIA",
					"AQAAAAAAAAABAAAAjT4AAAAAAACNPgAAAAAAAAAAAAAAAEtA"
				],
				[
					840,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAP89AAAAAAAAAD4AAAAAAAAAAAAAAD4AAAAAAAAGPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/z0AAAAAAAD/PQAAAAAAAAAAAAAAAEtA"
				],
				[
					848,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAF05AAAAAAAAXjkAAAAAAAAAAAAAXjkAAAAAAABkOQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXTkAAAAAAABdOQAAAAAAAAAAAAAAAPC/"
				],
				[
					853,
					1,
					"insert",
					{
						"characters": " "
					},
					"AwAAAEIxAAAAAAAAQzEAAAAAAAAAAAAAQzEAAAAAAABDMQAAAAAAAMABAAAKICAvKiAgT2JqZWN0LmFzc2lnbihnbG9iYWxUaGlzLCB7CiAgICBidWZmZXIsCiAgICBwYWxldHRlLAogICAgcGFsZXR0ZUhTTCwKICAgIHBpeGVscywKICAgIGNvbnRleHQsCiAgICBpbWFnZSwKICAgIGZwcywKICAgIG1hdHJpeCwKICAgIFJlcGFyZW50LAogICAgZG9tOiB7IEVsZW1lbnQgfSwKICAgIGdlb206IHsgUmVjdCB9LAogICAgTW91c2VUb1RvdWNoLAogICAgQ2F0Y2hJdGVyYXRvciwKICAgIFRvdWNoSXRlcmF0b3IsCiAgICBUb3VjaFByaW50ZXIsCiAgICBHZXRFbGVtZW50TWF0cml4LAogICAgU2V0Q3Jvc3NoYWlyLAogICAgRXZlbnRQb3NpdGlvbnMsCiAgICBQb3NpdGlvblByb2Nlc3NvciwKICAgIFBvc2l0aW9uTWF0cml4LAogICAgUHJvY2Vzc1Bvc2l0aW9uLAogICAgUHV0QXJyYXksCiAgICB3YWl0Rm9yLAogICAgUmVwbGF5VHJhaWwsCiAgICBCbGF6ZQogIH0pOyovnzcAAAAAAACfNwAAAAAAAAYAAAAgICAgICA",
					"AQAAAAAAAAABAAAAQjEAAAAAAAACMwAAAAAAAAAAAAAAAPC/"
				],
				[
					854,
					2,
					"left_delete",
					null,
					"AgAAAEIxAAAAAAAAQjEAAAAAAAABAAAAIEExAAAAAAAAQTEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAQzEAAAAAAABDMQAAAAAAAAAAAAAAAPC/"
				],
				[
					856,
					1,
					"left_delete",
					null,
					"AQAAAPAwAAAAAAAA8DAAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA8TAAAAAAAADxMAAAAAAAAAAAAAAAKIFA"
				],
				[
					861,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACsqAAAAAAAALCoAAAAAAAAAAAAALCoAAAAAAAA0KgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKyoAAAAAAAArKgAAAAAAAAAAAAAAAPC/"
				],
				[
					867,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAADIpAAAAAAAAMykAAAAAAAAAAAAAMykAAAAAAAA3KQAAAAAAAAAAAAAxKgAAAAAAADEqAAAAAAAACAAAACAgICAgICAg",
					"AQAAAAAAAAABAAAAMikAAAAAAAAyKQAAAAAAAAAAAAAAAPC/"
				],
				[
					869,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAPEoAAAAAAAA8igAAAAAAAAAAAAA8igAAAAAAAD2KAAAAAAAAAAAAAA4KQAAAAAAADgpAAAAAAAABAAAACAgICA",
					"AQAAAAAAAAABAAAA8SgAAAAAAADxKAAAAAAAAAAAAAAAAEJA"
				],
				[
					871,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACspAAAAAAAALCkAAAAAAAAAAAAALCkAAAAAAAAwKQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKykAAAAAAAArKQAAAAAAAAAAAAAAAEJA"
				],
				[
					876,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMYkAAAAAAAAxyQAAAAAAAAAAAAAxyQAAAAAAADJJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxiQAAAAAAADGJAAAAAAAAAAAAAAAADJA"
				],
				[
					878,
					1,
					"left_delete",
					null,
					"AQAAAOMkAAAAAAAA4yQAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAA5CQAAAAAAADkJAAAAAAAAP///////+9/"
				],
				[
					880,
					3,
					"left_delete",
					null,
					"AwAAAEglAAAAAAAASCUAAAAAAAABAAAAfUYlAAAAAAAARiUAAAAAAAACAAAAICBFJQAAAAAAAEUlAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAASSUAAAAAAABJJQAAAAAAAAAAAAAAgG9A"
				],
				[
					882,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABkkAAAAAAAAGiQAAAAAAAAAAAAAGiQAAAAAAAAgJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGSQAAAAAAAAZJAAAAAAAAAAAAAAASItA"
				],
				[
					885,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAHcjAAAAAAAAeCMAAAAAAAAAAAAAeCMAAAAAAAB8IwAAAAAAAAAAAAAfJAAAAAAAAB8kAAAAAAAABgAAACAgICAgIA",
					"AQAAAAAAAAABAAAAdyMAAAAAAAB3IwAAAAAAAAAAAAAAAEJA"
				],
				[
					890,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAF8hAAAAAAAAYCEAAAAAAAAAAAAAYCEAAAAAAABkIQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXyEAAAAAAABfIQAAAAAAAAAAAAAAAPC/"
				],
				[
					893,
					1,
					"left_delete",
					null,
					"AgAAALkgAAAAAAAAuSAAAAAAAAAzAAAALy8gY29uc29sZS5sb2coJ1RvdWNoUHJpbnRlcicsIGV2ZW50KTsKICAgIC8vCgogICAgLSEAAAAAAAAtIQAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAAuSAAAAAAAADsIAAAAAAAAAAAAAAAAEJA"
				],
				[
					895,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMkgAAAAAAAAyiAAAAAAAAAAAAAAyiAAAAAAAADOIAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAySAAAAAAAADJIAAAAAAAAAAAAAAAAEJA"
				],
				[
					900,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADEgAAAAAAAAMiAAAAAAAAAAAAAAMiAAAAAAAAA2IAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMSAAAAAAAAAxIAAAAAAAAAAAAAAAAPC/"
				],
				[
					905,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAANkTAAAAAAAA2hMAAAAAAAAAAAAA2hMAAAAAAADgEwAAAAAAAAAAAAA5IAAAAAAAADkgAAAAAAAABAAAACAgICA",
					"AQAAAAAAAAABAAAA2RMAAAAAAADZEwAAAAAAAAAAAAAAAPC/"
				],
				[
					908,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAANoRAAAAAAAA2xEAAAAAAAAAAAAA2xEAAAAAAADfEQAAAAAAAAAAAADfEwAAAAAAAN8TAAAAAAAABgAAACAgICAgIA",
					"AQAAAAAAAAABAAAA2hEAAAAAAADaEQAAAAAAAAAAAAAAAPC/"
				],
				[
					911,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAPgQAAAAAAAA+RAAAAAAAAAAAAAA+RAAAAAAAAD7EAAAAAAAAAAAAADeEQAAAAAAAN4RAAAAAAAABAAAACAgICA",
					"AQAAAAAAAAABAAAA+BAAAAAAAAD4EAAAAAAAAAAAAAAAAPC/"
				],
				[
					914,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAHwOAAAAAAAAfQ4AAAAAAAAAAAAAfQ4AAAAAAAB/DgAAAAAAAAAAAAD8EAAAAAAAAPwQAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAfA4AAAAAAAB8DgAAAAAAAAAAAAAAAPC/"
				],
				[
					921,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAADsNAAAAAAAAPA0AAAAAAAAAAAAAPA0AAAAAAAA+DQAAAAAAAAAAAACADgAAAAAAAIAOAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAOw0AAAAAAAA7DQAAAAAAAAAAAAAAAPC/"
				],
				[
					924,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAABwNAAAAAAAAHQ0AAAAAAAAAAAAAHQ0AAAAAAAAjDQAAAAAAAAAAAABDDQAAAAAAAEMNAAAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAHA0AAAAAAAAcDQAAAAAAAAAAAAAAAPC/"
				],
				[
					927,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAK0MAAAAAAAArgwAAAAAAAAAAAAArgwAAAAAAACxDAAAAAAAAAAAAAAhDQAAAAAAACENAAAAAAAABgAAACAgICAgIA",
					"AQAAAAAAAAABAAAArQwAAAAAAACtDAAAAAAAAAAAAAAAAPC/"
				],
				[
					933,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJUMAAAAAAAAlgwAAAAAAAAAAAAAlgwAAAAAAACaDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQwAAAAAAACVDAAAAAAAAAAAAAAAAEJA"
				],
				[
					942,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJgLAAAAAAAAmQsAAAAAAAAAAAAAmQsAAAAAAACbCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmAsAAAAAAACYCwAAAAAAAAAAAAAAAPC/"
				],
				[
					945,
					2,
					"left_delete",
					null,
					"AwAAAHIIAAAAAAAAcggAAAAAAABiAAAACi8qZnVuY3Rpb24gU2V0TG9ja2VkKHN0YXRlKSB7CiAgaHRtbEVsZW1lbnQuY2xhc3NMaXN0W3N0YXRlID8gJ2FkZCcgOiAncmVtb3ZlJ10oJ2lzLWxvY2tlZCcpOwp9Ki83CwAAAAAAADcLAAAAAAAAAgAAACAgcQgAAAAAAABxCAAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAcggAAAAAAADUCAAAAAAAAAAAAAAAAPC/"
				],
				[
					950,
					2,
					"left_delete",
					null,
					"AgAAALMGAAAAAAAAswYAAAAAAABfAAAACi8vaW1wb3J0IHsgZmlyZSB9IGZyb20gJy4vZmlyZS9idWlsZC9maXJlLWRlYnVnLmpzJzsKLy9pbXBvcnQgbHNjYWNoZSBmcm9tICcuL2xpYi9sc2NhY2hlLmpzJzuyBgAAAAAAALIGAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAswYAAAAAAAASBwAAAAAAAAAAAAAAAPC/"
				],
				[
					961,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAALVEAAAAAAAAtkQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtUQAAAAAAAC1RAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lib/async/websocket.js",
			"settings":
			{
				"buffer_size": 4058,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					51,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAPoPAAAAAAAA+w8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+g8AAAAAAAD6DwAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " ev"
					},
					"AwAAAPsPAAAAAAAA/A8AAAAAAAAAAAAA/A8AAAAAAAD9DwAAAAAAAAAAAAD9DwAAAAAAAP4PAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+w8AAAAAAAD7DwAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "globalThis.ev="
					},
					"DgAAAPwPAAAAAAAA/Q8AAAAAAAAAAAAA/Q8AAAAAAAD+DwAAAAAAAAAAAAD+DwAAAAAAAP8PAAAAAAAAAAAAAP8PAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAAEEAAAAAAAAAAAAAAEEAAAAAAAAAUQAAAAAAAAAAAAAAUQAAAAAAAABhAAAAAAAAAAAAAABhAAAAAAAAAHEAAAAAAAAAAAAAAHEAAAAAAAAAgQAAAAAAAAAAAAAAgQAAAAAAAACRAAAAAAAAAAAAAACRAAAAAAAAAKEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/A8AAAAAAAD8DwAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEENAAAAAAAAQg0AAAAAAAAAAAAAQg0AAAAAAABGDQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQ0AAAAAAABBDQAAAAAAAAAAAAAAAPC/"
				],
				[
					380,
					5,
					"left_delete",
					null,
					"BgAAAHsLAAAAAAAAewsAAAAAAADAAQAALyogIGxhenlQcm9wZXJ0aWVzKHRoaXMsIHsKICAgICAgICB3cml0YWJsZTogKCkgPT4KICAgICAgICAgIG5ldyBXcml0YWJsZVN0cmVhbSh7CiAgICAgICAgICAgIHdyaXRlOiBjaHVuayA9PiB0aGlzLnNvY2tldC5zZW5kKGNodW5rKSwKICAgICAgICAgICAgY2xvc2U6ICgpID0+IHRoaXMuc29ja2V0LmNsb3NlKCksCiAgICAgICAgICAgIGFib3J0OiBlcnIgPT4gdGhpcy5zb2NrZXQuY2xvc2UoZXJyKQogICAgICAgICAgfSksCiAgICAgICAgcmVhZGFibGU6ICgpID0+CiAgICAgICAgICBuZXcgUmVhZGFibGVTdHJlYW0oewogICAgICAgICAgICBzdGFydDogYXN5bmMgY29udHJvbGxlciA9PiB7CiAgICAgICAgICAgICAgZm9yIGF3YWl0KGxldCBjaHVuayBvZiB0aGlzKSBjb250cm9sbGVyLmVucXVldWUoY2h1bmspOwogICAgICAgICAgICB9CiAgICAgICAgICB9KQogICAgICB9KTsqL4ILAAAAAAAAggsAAAAAAAAEAAAAICAgIHkLAAAAAAAAeQsAAAAAAAACAAAAICB3CwAAAAAAAHcLAAAAAAAAAgAAACAgdQsAAAAAAAB1CwAAAAAAAAIAAAAgIHQLAAAAAAAAdAsAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAewsAAAAAAAA7DQAAAAAAAAAAAAAAAPC/"
				],
				[
					382,
					1,
					"left_delete",
					null,
					"AQAAAEQLAAAAAAAARAsAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAARQsAAAAAAABFCwAAAAAAAAAAAAAA4HlA"
				],
				[
					385,
					4,
					"left_delete",
					null,
					"BAAAAHgLAAAAAAAAeAsAAAAAAAABAAAAfXYLAAAAAAAAdgsAAAAAAAACAAAAICB0CwAAAAAAAHQLAAAAAAAAAgAAACAgcwsAAAAAAABzCwAAAAAAAAEAAAAK",
					"AQAAAAAAAAABAAAAeQsAAAAAAAB5CwAAAAAAAAAAAAAAQG1A"
				],
				[
					483,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGgKAAAAAAAAaQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAoAAAAAAABoCgAAAAAAAAAAAAAAAPC/"
				],
				[
					485,
					1,
					"insert",
					{
						"characters": "this.handler"
					},
					"DAAAAGgKAAAAAAAAaQoAAAAAAAAAAAAAaQoAAAAAAABqCgAAAAAAAAAAAABqCgAAAAAAAGsKAAAAAAAAAAAAAGsKAAAAAAAAbAoAAAAAAAAAAAAAbAoAAAAAAABtCgAAAAAAAAAAAABtCgAAAAAAAG4KAAAAAAAAAAAAAG4KAAAAAAAAbwoAAAAAAAAAAAAAbwoAAAAAAABwCgAAAAAAAAAAAABwCgAAAAAAAHEKAAAAAAAAAAAAAHEKAAAAAAAAcgoAAAAAAAAAAAAAcgoAAAAAAABzCgAAAAAAAAAAAABzCgAAAAAAAHQKAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaAoAAAAAAABoCgAAAAAAAAAAAAAAAAAA"
				],
				[
					486,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAHQKAAAAAAAAdQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdAoAAAAAAAB0CgAAAAAAAAAAAAAAAPC/"
				],
				[
					487,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAHUKAAAAAAAAdgoAAAAAAAAAAAAAdgoAAAAAAAB3CgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQoAAAAAAAB1CgAAAAAAAAAAAAAAAPC/"
				],
				[
					488,
					1,
					"insert",
					{
						"characters": " handlers;"
					},
					"CgAAAHcKAAAAAAAAeAoAAAAAAAAAAAAAeAoAAAAAAAB5CgAAAAAAAAAAAAB5CgAAAAAAAHoKAAAAAAAAAAAAAHoKAAAAAAAAewoAAAAAAAAAAAAAewoAAAAAAAB8CgAAAAAAAAAAAAB8CgAAAAAAAH0KAAAAAAAAAAAAAH0KAAAAAAAAfgoAAAAAAAAAAAAAfgoAAAAAAAB/CgAAAAAAAAAAAAB/CgAAAAAAAIAKAAAAAAAAAAAAAIAKAAAAAAAAgQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwoAAAAAAAB3CgAAAAAAAAAAAAAAAPC/"
				],
				[
					499,
					8,
					"left_delete",
					null,
					"CAAAAJsKAAAAAAAAmwoAAAAAAAABAAAAc5oKAAAAAAAAmgoAAAAAAAABAAAAcpkKAAAAAAAAmQoAAAAAAAABAAAAZZgKAAAAAAAAmAoAAAAAAAABAAAAbJcKAAAAAAAAlwoAAAAAAAABAAAAZJYKAAAAAAAAlgoAAAAAAAABAAAAbpUKAAAAAAAAlQoAAAAAAAABAAAAYZQKAAAAAAAAlAoAAAAAAAABAAAAaA",
					"AQAAAAAAAAABAAAAnAoAAAAAAACcCgAAAAAAAAAAAAAAAPC/"
				],
				[
					504,
					1,
					"paste",
					null,
					"AgAAALcKAAAAAAAAxAoAAAAAAAAAAAAAxAoAAAAAAADECgAAAAAAAAIAAAB7fQ",
					"AQAAAAAAAAABAAAAtwoAAAAAAAC5CgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "draw.js",
			"settings":
			{
				"buffer_size": 16817,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					131,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKgrAAAAAAAAqSsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqCsAAAAAAACoKwAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"insert",
					{
						"characters": " this"
					},
					"BQAAAKkrAAAAAAAAqisAAAAAAAAAAAAAqisAAAAAAACrKwAAAAAAAAAAAACrKwAAAAAAAKwrAAAAAAAAAAAAAKwrAAAAAAAArSsAAAAAAAAAAAAArSsAAAAAAACuKwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqSsAAAAAAACpKwAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AgAAAHArAAAAAAAAcSsAAAAAAAAAAAAAcSsAAAAAAAByKwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcCsAAAAAAABwKwAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					4,
					"left_delete",
					null,
					"BAAAAK8rAAAAAAAArysAAAAAAAABAAAAc64rAAAAAAAArisAAAAAAAABAAAAaa0rAAAAAAAArSsAAAAAAAABAAAAaKwrAAAAAAAArCsAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAAsCsAAAAAAACwKwAAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AgAAAKwrAAAAAAAArSsAAAAAAAAAAAAArSsAAAAAAACuKwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArCsAAAAAAACsKwAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AgAAAHArAAAAAAAAcSsAAAAAAAAAAAAAcSsAAAAAAABxKwAAAAAAAAIAAAB3cw",
					"AQAAAAAAAAABAAAAcCsAAAAAAAByKwAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "e.tasrget"
					},
					"CgAAAKsrAAAAAAAArCsAAAAAAAAAAAAArCsAAAAAAACsKwAAAAAAAAIAAAB3c6wrAAAAAAAArSsAAAAAAAAAAAAArSsAAAAAAACuKwAAAAAAAAAAAACuKwAAAAAAAK8rAAAAAAAAAAAAAK8rAAAAAAAAsCsAAAAAAAAAAAAAsCsAAAAAAACxKwAAAAAAAAAAAACxKwAAAAAAALIrAAAAAAAAAAAAALIrAAAAAAAAsysAAAAAAAAAAAAAsysAAAAAAAC0KwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqysAAAAAAACtKwAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					5,
					"left_delete",
					null,
					"BQAAALMrAAAAAAAAsysAAAAAAAABAAAAdLIrAAAAAAAAsisAAAAAAAABAAAAZbErAAAAAAAAsSsAAAAAAAABAAAAZ7ArAAAAAAAAsCsAAAAAAAABAAAAcq8rAAAAAAAArysAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAtCsAAAAAAAC0KwAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "rget"
					},
					"BAAAAK8rAAAAAAAAsCsAAAAAAAAAAAAAsCsAAAAAAACxKwAAAAAAAAAAAACxKwAAAAAAALIrAAAAAAAAAAAAALIrAAAAAAAAsysAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArysAAAAAAACvKwAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"insert_snippet",
					{
						"contents": "{${0:$SELECTION}}"
					},
					"AgAAAHArAAAAAAAAcCsAAAAAAAABAAAAZXArAAAAAAAAcysAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcCsAAAAAAABxKwAAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"insert",
					{
						"characters": " target:"
					},
					"CQAAAHErAAAAAAAAcisAAAAAAAAAAAAAcisAAAAAAAByKwAAAAAAAAEAAABlcisAAAAAAABzKwAAAAAAAAAAAABzKwAAAAAAAHQrAAAAAAAAAAAAAHQrAAAAAAAAdSsAAAAAAAAAAAAAdSsAAAAAAAB2KwAAAAAAAAAAAAB2KwAAAAAAAHcrAAAAAAAAAAAAAHcrAAAAAAAAeCsAAAAAAAAAAAAAeCsAAAAAAAB5KwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcSsAAAAAAAByKwAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": " ws"
					},
					"AwAAAHkrAAAAAAAAeisAAAAAAAAAAAAAeisAAAAAAAB7KwAAAAAAAAAAAAB7KwAAAAAAAHwrAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeSsAAAAAAAB5KwAAAAAAAAAAAAAAAPC/"
				],
				[
					203,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHwrAAAAAAAAfSsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfCsAAAAAAAB8KwAAAAAAAAAAAAAAAPC/"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": "ws"
					},
					"AwAAALgrAAAAAAAAuSsAAAAAAAAAAAAAuSsAAAAAAAC5KwAAAAAAAAgAAABlLnRhcmdldLkrAAAAAAAAuisAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuCsAAAAAAADAKwAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"cut",
					null,
					"AQAAANEsAAAAAAAA0SwAAAAAAAA4AAAAICB3cy5zZW5kTWVzc2FnZSA9IG1zZyA9PiB3cy5zZW5kKEpTT04uc3RyaW5naWZ5KG1zZykpOwo",
					"AQAAAAAAAAABAAAA0SwAAAAAAAAJLQAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"paste",
					null,
					"AQAAAIYrAAAAAAAAvisAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhisAAAAAAACGKwAAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAL4rAAAAAAAAvysAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvisAAAAAAAC+KwAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					4,
					"left_delete",
					null,
					"BAAAAPIrAAAAAAAA8isAAAAAAAABAAAAc/ErAAAAAAAA8SsAAAAAAAABAAAAd/ArAAAAAAAA8CsAAAAAAAABAAAAIO8rAAAAAAAA7ysAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA8ysAAAAAAADzKwAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"left_delete",
					null,
					"AQAAAAQtAAAAAAAABC0AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAABS0AAAAAAAAFLQAAAAAAAAAAAAAAAHtA"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAO8rAAAAAAAA8CsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7ysAAAAAAADvKwAAAAAAAAAAAAAAAPC/"
				],
				[
					268,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPArAAAAAAAA8SsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8CsAAAAAAADwKwAAAAAAAAAAAAAAAPC/"
				],
				[
					269,
					1,
					"paste",
					null,
					"AQAAAPErAAAAAAAA/ysAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8SsAAAAAAADxKwAAAAAAAAAAAAAAAPC/"
				],
				[
					282,
					1,
					"left_delete",
					null,
					"AQAAAPMrAAAAAAAA8ysAAAAAAAAMAAAALnNlbmRNZXNzYWdl",
					"AQAAAAAAAAABAAAA8ysAAAAAAAD/KwAAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					1,
					"cut",
					null,
					"AQAAAIIrAAAAAAAAgisAAAAAAAA8AAAAICAgICAgd3Muc2VuZE1lc3NhZ2UgPSBtc2cgPT4gd3Muc2VuZChKU09OLnN0cmluZ2lmeShtc2cpKTsK",
					"AQAAAAAAAAABAAAAgisAAAAAAAC+KwAAAAAAAAAAAAAAAPC/"
				],
				[
					344,
					1,
					"paste",
					null,
					"AQAAAMMqAAAAAAAA/yoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwyoAAAAAAADDKgAAAAAAAAAAAAAAAPC/"
				],
				[
					349,
					1,
					"insert",
					{
						"characters": "func"
					},
					"BQAAAMkqAAAAAAAAyioAAAAAAAAAAAAAyioAAAAAAADKKgAAAAAAAAMAAAB3cy7KKgAAAAAAAMsqAAAAAAAAAAAAAMsqAAAAAAAAzCoAAAAAAAAAAAAAzCoAAAAAAADNKgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzCoAAAAAAADJKgAAAAAAAAAAAAAAAEtA"
				],
				[
					350,
					1,
					"insert",
					{
						"characters": " tion"
					},
					"BQAAAM0qAAAAAAAAzioAAAAAAAAAAAAAzioAAAAAAADPKgAAAAAAAAAAAADPKgAAAAAAANAqAAAAAAAAAAAAANAqAAAAAAAA0SoAAAAAAAAAAAAA0SoAAAAAAADSKgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzSoAAAAAAADNKgAAAAAAAAAAAAAAAPC/"
				],
				[
					351,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANIqAAAAAAAA0yoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0ioAAAAAAADSKgAAAAAAAAAAAAAAAPC/"
				],
				[
					352,
					6,
					"left_delete",
					null,
					"BgAAANIqAAAAAAAA0ioAAAAAAAABAAAAINEqAAAAAAAA0SoAAAAAAAABAAAAbtAqAAAAAAAA0CoAAAAAAAABAAAAb88qAAAAAAAAzyoAAAAAAAABAAAAac4qAAAAAAAAzioAAAAAAAABAAAAdM0qAAAAAAAAzSoAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA0yoAAAAAAADTKgAAAAAAAAAAAAAAAPC/"
				],
				[
					353,
					1,
					"insert",
					{
						"characters": "tion"
					},
					"BAAAAM0qAAAAAAAAzioAAAAAAAAAAAAAzioAAAAAAADPKgAAAAAAAAAAAADPKgAAAAAAANAqAAAAAAAAAAAAANAqAAAAAAAA0SoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzSoAAAAAAADNKgAAAAAAAAAAAAAAAPC/"
				],
				[
					354,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANEqAAAAAAAA0ioAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0SoAAAAAAADRKgAAAAAAAAAAAAAAAPC/"
				],
				[
					356,
					1,
					"left_delete",
					null,
					"AQAAAN4qAAAAAAAA3ioAAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAA3yoAAAAAAADfKgAAAAAAAAAAAAAAAPC/"
				],
				[
					357,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAN4qAAAAAAAA4CoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3ioAAAAAAADeKgAAAAAAAAAAAAAAAPC/"
				],
				[
					359,
					1,
					"left_delete",
					null,
					"AQAAAN8qAAAAAAAA3yoAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAA4CoAAAAAAADgKgAAAAAAAAAAAAAAAPC/"
				],
				[
					361,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAOMqAAAAAAAA5CoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4yoAAAAAAADjKgAAAAAAAAAAAAAAAPC/"
				],
				[
					362,
					1,
					"insert",
					{
						"characters": " }"
					},
					"AgAAAOQqAAAAAAAA5SoAAAAAAAAAAAAA5SoAAAAAAADmKgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5CoAAAAAAADkKgAAAAAAAAAAAAAAAPC/"
				],
				[
					363,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOYqAAAAAAAA6CoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5ioAAAAAAADmKgAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAOYqAAAAAAAA5ioAAAAAAAABAAAAe+YqAAAAAAAA5ioAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAA5yoAAAAAAADnKgAAAAAAAAAAAAAAAPC/"
				],
				[
					365,
					1,
					"left_delete",
					null,
					"AQAAAOUqAAAAAAAA5SoAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAA5ioAAAAAAADmKgAAAAAAAAAAAAAAAPC/"
				],
				[
					366,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOUqAAAAAAAA5yoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5SoAAAAAAADlKgAAAAAAAAAAAAAAAPC/"
				],
				[
					367,
					4,
					"right_delete",
					null,
					"BAAAAOYqAAAAAAAA5ioAAAAAAAABAAAAfeYqAAAAAAAA5ioAAAAAAAABAAAAIOYqAAAAAAAA5ioAAAAAAAABAAAAPeYqAAAAAAAA5ioAAAAAAAABAAAAPg",
					"AQAAAAAAAAABAAAA5ioAAAAAAADmKgAAAAAAAAAAAAAAAPC/"
				],
				[
					368,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOYqAAAAAAAA5yoAAAAAAAAAAAAA5yoAAAAAAADtKgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5ioAAAAAAADmKgAAAAAAAAAAAAAAAPC/"
				],
				[
					370,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAAsrAAAAAAAADCsAAAAAAAAAAAAADCsAAAAAAAATKwAAAAAAAAAAAAATKwAAAAAAABQrAAAAAAAAAAAAAAwrAAAAAAAADCsAAAAAAAAHAAAAICAgICAgIAwrAAAAAAAAESsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACysAAAAAAAALKwAAAAAAAP///////+9/"
				],
				[
					372,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAO0qAAAAAAAA7ioAAAAAAAAAAAAA7ioAAAAAAADvKgAAAAAAAAAAAADvKgAAAAAAAPAqAAAAAAAAAAAAAPAqAAAAAAAA8SoAAAAAAAAAAAAA8SoAAAAAAADyKgAAAAAAAAAAAADyKgAAAAAAAPMqAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7SoAAAAAAADtKgAAAAAAAAAAAAAAAEtA"
				],
				[
					401,
					2,
					"right_delete",
					null,
					"AgAAAOw5AAAAAAAA7DkAAAAAAAACAAAAd3PsOQAAAAAAAOw5AAAAAAAAAQAAAC4",
					"AQAAAAAAAAABAAAA7DkAAAAAAADuOQAAAAAAAAAAAAAAAPC/"
				],
				[
					418,
					1,
					"",
					null,
					"AQAAAE0GAAAAAAAAWAYAAAAAAAAOAAAAd3Muc2VuZE1lc3NhZ2U",
					"AQAAAAAAAAABAAAATQYAAAAAAABbBgAAAAAAAAAAAAAAAPC/"
				],
				[
					419,
					1,
					"",
					null,
					"AQAAAKsUAAAAAAAAthQAAAAAAAAOAAAAd3Muc2VuZE1lc3NhZ2U",
					"AQAAAAAAAAABAAAAqxQAAAAAAAC5FAAAAAAAAAAAAAAAAPC/"
				],
				[
					428,
					1,
					"insert",
					{
						"characters": "&&"
					},
					"AgAAAIYsAAAAAAAAhywAAAAAAAAAAAAAhywAAAAAAACILAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhiwAAAAAAACGLAAAAAAAAAAAAAAAAPC/"
				],
				[
					429,
					2,
					"left_delete",
					null,
					"AgAAAIcsAAAAAAAAhywAAAAAAAABAAAAJoYsAAAAAAAAhiwAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAiCwAAAAAAACILAAAAAAAAAAAAAAAAPC/"
				],
				[
					430,
					1,
					"insert",
					{
						"characters": "(//"
					},
					"AwAAAIYsAAAAAAAAhywAAAAAAAAAAAAAhywAAAAAAACILAAAAAAAAAAAAACILAAAAAAAAIksAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhiwAAAAAAACGLAAAAAAAAAAAAAAAAPC/"
				],
				[
					431,
					3,
					"left_delete",
					null,
					"AwAAAIgsAAAAAAAAiCwAAAAAAAABAAAAL4csAAAAAAAAhywAAAAAAAABAAAAL4YsAAAAAAAAhiwAAAAAAAABAAAAKA",
					"AQAAAAAAAAABAAAAiSwAAAAAAACJLAAAAAAAAAAAAAAAAPC/"
				],
				[
					432,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAIYsAAAAAAAAhywAAAAAAAAAAAAAhywAAAAAAACILAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhiwAAAAAAACGLAAAAAAAAAAAAAAAAPC/"
				],
				[
					445,
					2,
					"left_delete",
					null,
					"AgAAADsGAAAAAAAAOwYAAAAAAAAQAAAAJiB3cy5zZW5kTWVzc2FnZToGAAAAAAAAOgYAAAAAAAABAAAAJg",
					"AQAAAAAAAAABAAAAOwYAAAAAAABLBgAAAAAAAAAAAAAAAPC/"
				],
				[
					482,
					1,
					"insert",
					{
						"characters": "globalThis."
					},
					"CwAAAN0qAAAAAAAA3ioAAAAAAAAAAAAA3ioAAAAAAADfKgAAAAAAAAAAAADfKgAAAAAAAOAqAAAAAAAAAAAAAOAqAAAAAAAA4SoAAAAAAAAAAAAA4SoAAAAAAADiKgAAAAAAAAAAAADiKgAAAAAAAOMqAAAAAAAAAAAAAOMqAAAAAAAA5CoAAAAAAAAAAAAA5CoAAAAAAADlKgAAAAAAAAAAAADlKgAAAAAAAOYqAAAAAAAAAAAAAOYqAAAAAAAA5yoAAAAAAAAAAAAA5yoAAAAAAADoKgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3SoAAAAAAADdKgAAAAAAAAAAAAAAAPC/"
				],
				[
					495,
					1,
					"insert",
					{
						"characters": ",sendMessage"
					},
					"DAAAACMwAAAAAAAAJDAAAAAAAAAAAAAAJDAAAAAAAAAlMAAAAAAAAAAAAAAlMAAAAAAAACYwAAAAAAAAAAAAACYwAAAAAAAAJzAAAAAAAAAAAAAAJzAAAAAAAAAoMAAAAAAAAAAAAAAoMAAAAAAAACkwAAAAAAAAAAAAACkwAAAAAAAAKjAAAAAAAAAAAAAAKjAAAAAAAAArMAAAAAAAAAAAAAArMAAAAAAAACwwAAAAAAAAAAAAACwwAAAAAAAALTAAAAAAAAAAAAAALTAAAAAAAAAuMAAAAAAAAAAAAAAuMAAAAAAAAC8wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIzAAAAAAAAAjMAAAAAAAAAAAAAAAAPC/"
				],
				[
					500,
					1,
					"cut",
					null,
					"AQAAACMwAAAAAAAAIzAAAAAAAAAMAAAALHNlbmRNZXNzYWdl",
					"AQAAAAAAAAABAAAAIzAAAAAAAAAvMAAAAAAAAP///////+9/"
				],
				[
					504,
					1,
					"paste",
					null,
					"AQAAANQvAAAAAAAA4C8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1C8AAAAAAADULwAAAAAAAAAAAAAAAPC/"
				],
				[
					523,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAADwGAAAAAAAAPQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAYAAAAAAAA8BgAAAAAAAAAAAAAAAPC/"
				],
				[
					524,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BwAAAD0GAAAAAAAAPgYAAAAAAAAAAAAAPgYAAAAAAABABgAAAAAAAAAAAAA+BgAAAAAAAD4GAAAAAAAAAgAAACAgPgYAAAAAAABCBgAAAAAAAAAAAABCBgAAAAAAAEMGAAAAAAAAAAAAAEMGAAAAAAAARwYAAAAAAAAAAAAAPgYAAAAAAAA+BgAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAAPQYAAAAAAAA9BgAAAAAAAAAAAAAAAPC/"
				],
				[
					526,
					1,
					"insert",
					{
						"characters": "try"
					},
					"AwAAAD4GAAAAAAAAPwYAAAAAAAAAAAAAPwYAAAAAAABABgAAAAAAAAAAAABABgAAAAAAAEEGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPgYAAAAAAAA+BgAAAAAAAAAAAAAAAEJA"
				],
				[
					527,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEEGAAAAAAAAQgYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQYAAAAAAABBBgAAAAAAAAAAAAAAAPC/"
				],
				[
					528,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAEIGAAAAAAAARAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgYAAAAAAABCBgAAAAAAAAAAAAAAAPC/"
				],
				[
					529,
					1,
					"right_delete",
					null,
					"AQAAAEMGAAAAAAAAQwYAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAQwYAAAAAAABDBgAAAAAAAAAAAAAAAPC/"
				],
				[
					532,
					1,
					"insert",
					{
						"characters": "\n}catch"
					},
					"CgAAAG4GAAAAAAAAbwYAAAAAAAAAAAAAbwYAAAAAAABzBgAAAAAAAAAAAABzBgAAAAAAAHQGAAAAAAAAAAAAAG8GAAAAAAAAbwYAAAAAAAAEAAAAICAgIG8GAAAAAAAAcQYAAAAAAAAAAAAAcgYAAAAAAABzBgAAAAAAAAAAAABzBgAAAAAAAHQGAAAAAAAAAAAAAHQGAAAAAAAAdQYAAAAAAAAAAAAAdQYAAAAAAAB2BgAAAAAAAAAAAAB2BgAAAAAAAHcGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbgYAAAAAAABuBgAAAAAAAP///////+9/"
				],
				[
					533,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHcGAAAAAAAAeQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwYAAAAAAAB3BgAAAAAAAAAAAAAAAPC/"
				],
				[
					534,
					1,
					"insert",
					{
						"characters": "error"
					},
					"BQAAAHgGAAAAAAAAeQYAAAAAAAAAAAAAeQYAAAAAAAB6BgAAAAAAAAAAAAB6BgAAAAAAAHsGAAAAAAAAAAAAAHsGAAAAAAAAfAYAAAAAAAAAAAAAfAYAAAAAAAB9BgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeAYAAAAAAAB4BgAAAAAAAAAAAAAAAPC/"
				],
				[
					536,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAH4GAAAAAAAAgAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgYAAAAAAAB+BgAAAAAAAAAAAAAAAPC/"
				],
				[
					537,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAH8GAAAAAAAAgAYAAAAAAAAAAAAAgAYAAAAAAACCBgAAAAAAAAAAAACCBgAAAAAAAIMGAAAAAAAAAAAAAIMGAAAAAAAAhQYAAAAAAAAAAAAAgAYAAAAAAACABgAAAAAAAAIAAAAgIIAGAAAAAAAAhAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwYAAAAAAAB/BgAAAAAAAAAAAAAAAPC/"
				],
				[
					539,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AgAAAI0GAAAAAAAAjgYAAAAAAAAAAAAAgAYAAAAAAACABgAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAAjQYAAAAAAACNBgAAAAAAAAAAAAAAAEJA"
				],
				[
					540,
					1,
					"left_delete",
					null,
					"AQAAAIkGAAAAAAAAiQYAAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAigYAAAAAAACKBgAAAAAAAAAAAAAAAPC/"
				],
				[
					542,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAAIQGAAAAAAAAhQYAAAAAAAAAAAAAhQYAAAAAAACHBgAAAAAAAAAAAACHBgAAAAAAAIgGAAAAAAAAAAAAAIUGAAAAAAAAhQYAAAAAAAACAAAAICCFBgAAAAAAAIUGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhAYAAAAAAACEBgAAAAAAAAAAAAAAAEJA"
				],
				[
					548,
					1,
					"insert",
					{
						"characters": "console.error"
					},
					"DQAAAIAGAAAAAAAAgQYAAAAAAAAAAAAAgQYAAAAAAACCBgAAAAAAAAAAAACCBgAAAAAAAIMGAAAAAAAAAAAAAIMGAAAAAAAAhAYAAAAAAAAAAAAAhAYAAAAAAACFBgAAAAAAAAAAAACFBgAAAAAAAIYGAAAAAAAAAAAAAIYGAAAAAAAAhwYAAAAAAAAAAAAAhwYAAAAAAACIBgAAAAAAAAAAAACIBgAAAAAAAIkGAAAAAAAAAAAAAIkGAAAAAAAAigYAAAAAAAAAAAAAigYAAAAAAACLBgAAAAAAAAAAAACLBgAAAAAAAIwGAAAAAAAAAAAAAIwGAAAAAAAAjQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgAYAAAAAAACABgAAAAAAAAAAAAAAACJA"
				],
				[
					549,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAI0GAAAAAAAAjwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjQYAAAAAAACNBgAAAAAAAAAAAAAAAPC/"
				],
				[
					550,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAI4GAAAAAAAAkAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjgYAAAAAAACOBgAAAAAAAAAAAAAAAPC/"
				],
				[
					551,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAI8GAAAAAAAAkAYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwYAAAAAAACPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					552,
					1,
					"left_delete",
					null,
					"AQAAAI8GAAAAAAAAjwYAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAkAYAAAAAAACQBgAAAAAAAAAAAAAAAPC/"
				],
				[
					553,
					1,
					"insert",
					{
						"characters": "Log()"
					},
					"BQAAAI8GAAAAAAAAkAYAAAAAAAAAAAAAkAYAAAAAAACRBgAAAAAAAAAAAACRBgAAAAAAAJIGAAAAAAAAAAAAAJIGAAAAAAAAkwYAAAAAAAAAAAAAkwYAAAAAAACUBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjwYAAAAAAACPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					556,
					1,
					"insert",
					{
						"characters": " error:"
					},
					"BwAAAJQGAAAAAAAAlQYAAAAAAAAAAAAAlQYAAAAAAACWBgAAAAAAAAAAAACWBgAAAAAAAJcGAAAAAAAAAAAAAJcGAAAAAAAAmAYAAAAAAAAAAAAAmAYAAAAAAACZBgAAAAAAAAAAAACZBgAAAAAAAJoGAAAAAAAAAAAAAJoGAAAAAAAAmwYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlAYAAAAAAACUBgAAAAAAAAAAAAAAAPC/"
				],
				[
					558,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAJwGAAAAAAAAnQYAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAYAAAAAAACcBgAAAAAAAAAAAAAAAPC/"
				],
				[
					559,
					1,
					"insert",
					{
						"characters": " error"
					},
					"BgAAAJ0GAAAAAAAAngYAAAAAAAAAAAAAngYAAAAAAACfBgAAAAAAAAAAAACfBgAAAAAAAKAGAAAAAAAAAAAAAKAGAAAAAAAAoQYAAAAAAAAAAAAAoQYAAAAAAACiBgAAAAAAAAAAAACiBgAAAAAAAKMGAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnQYAAAAAAACdBgAAAAAAAAAAAAAAAPC/"
				],
				[
					601,
					1,
					"cut",
					null,
					"AQAAAActAAAAAAAABy0AAAAAAABaAAAAICB3cy5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgKHsgZGF0YSB9KSA9PiBjb25zb2xlLmxvZygnbWVzc2FnZScsIEpTT04ucGFyc2UoZGF0YSkpKTsK",
					"AQAAAAAAAAABAAAABy0AAAAAAABhLQAAAAAAAAAAAAAAAPC/"
				],
				[
					602,
					1,
					"paste",
					null,
					"AQAAAActAAAAAAAAYS0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABy0AAAAAAAAHLQAAAAAAAAAAAAAAAPC/"
				],
				[
					615,
					1,
					"cut",
					null,
					"AQAAAActAAAAAAAABy0AAAAAAABaAAAAICB3cy5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgKHsgZGF0YSB9KSA9PiBjb25zb2xlLmxvZygnbWVzc2FnZScsIEpTT04ucGFyc2UoZGF0YSkpKTsK",
					"AQAAAAAAAAABAAAABy0AAAAAAABhLQAAAAAAAAAAAAAAAPC/"
				],
				[
					620,
					1,
					"paste",
					null,
					"AQAAABQsAAAAAAAAbiwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFCwAAAAAAAAULAAAAAAAAAAAAAAAAPC/"
				],
				[
					665,
					1,
					"left_delete",
					null,
					"AQAAABQsAAAAAAAAFCwAAAAAAABaAAAAICB3cy5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgKHsgZGF0YSB9KSA9PiBjb25zb2xlLmxvZygnbWVzc2FnZScsIEpTT04ucGFyc2UoZGF0YSkpKTsK",
					"AQAAAAAAAAABAAAAFCwAAAAAAABuLAAAAAAAAAAAAAAAAPC/"
				],
				[
					708,
					1,
					"insert",
					{
						"characters": "await"
					},
					"BQAAAKMxAAAAAAAApDEAAAAAAAAAAAAApDEAAAAAAAClMQAAAAAAAAAAAAClMQAAAAAAAKYxAAAAAAAAAAAAAKYxAAAAAAAApzEAAAAAAAAAAAAApzEAAAAAAACoMQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAozEAAAAAAACjMQAAAAAAAAAAAAAAAPC/"
				],
				[
					762,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFEsAAAAAAAAUiwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUSwAAAAAAABRLAAAAAAAAAAAAAAAAPC/"
				],
				[
					763,
					1,
					"insert",
					{
						"characters": "\nopn"
					},
					"BQAAAFIsAAAAAAAAUywAAAAAAAAAAAAAUywAAAAAAABXLAAAAAAAAAAAAABXLAAAAAAAAFgsAAAAAAAAAAAAAFgsAAAAAAAAWSwAAAAAAAAAAAAAWSwAAAAAAABaLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUiwAAAAAAABSLAAAAAAAAAAAAAAAAPC/"
				],
				[
					764,
					2,
					"left_delete",
					null,
					"AgAAAFksAAAAAAAAWSwAAAAAAAABAAAAblgsAAAAAAAAWCwAAAAAAAABAAAAcA",
					"AQAAAAAAAAABAAAAWiwAAAAAAABaLAAAAAAAAAAAAAAAAPC/"
				],
				[
					765,
					1,
					"insert",
					{
						"characters": "nMessage"
					},
					"CAAAAFgsAAAAAAAAWSwAAAAAAAAAAAAAWSwAAAAAAABaLAAAAAAAAAAAAABaLAAAAAAAAFssAAAAAAAAAAAAAFssAAAAAAAAXCwAAAAAAAAAAAAAXCwAAAAAAABdLAAAAAAAAAAAAABdLAAAAAAAAF4sAAAAAAAAAAAAAF4sAAAAAAAAXywAAAAAAAAAAAAAXywAAAAAAABgLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWCwAAAAAAABYLAAAAAAAAAAAAAAAAPC/"
				],
				[
					766,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGAsAAAAAAAAYiwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYCwAAAAAAABgLAAAAAAAAAAAAAAAAPC/"
				],
				[
					768,
					1,
					"left_delete",
					null,
					"AQAAAGEsAAAAAAAAYSwAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAYiwAAAAAAABiLAAAAAAAAAAAAAAAAPC/"
				],
				[
					769,
					1,
					"insert",
					{
						"characters": "e)"
					},
					"AgAAAGEsAAAAAAAAYiwAAAAAAAAAAAAAYiwAAAAAAABjLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYSwAAAAAAABhLAAAAAAAAAAAAAAAAPC/"
				],
				[
					770,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGMsAAAAAAAAZCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYywAAAAAAABjLAAAAAAAAAAAAAAAAPC/"
				],
				[
					771,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAGQsAAAAAAAAZiwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZCwAAAAAAABkLAAAAAAAAAAAAAAAAPC/"
				],
				[
					772,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAGUsAAAAAAAAZiwAAAAAAAAAAAAAZiwAAAAAAABqLAAAAAAAAAAAAABqLAAAAAAAAGssAAAAAAAAAAAAAGssAAAAAAAAbywAAAAAAAAAAAAAZiwAAAAAAABmLAAAAAAAAAQAAAAgICAgZiwAAAAAAABsLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZSwAAAAAAABlLAAAAAAAAAAAAAAAAPC/"
				],
				[
					784,
					1,
					"paste",
					null,
					"AQAAAGwsAAAAAAAAoywAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbCwAAAAAAABsLAAAAAAAAAAAAAAAAPC/"
				],
				[
					791,
					1,
					"left_delete",
					null,
					"AQAAAHssAAAAAAAAeywAAAAAAAAgAAAAUmVjb25uZWN0aW5nV2ViU29ja2V0IGNvbm5lY3RlZCE",
					"AQAAAAAAAAABAAAAeywAAAAAAACbLAAAAAAAAAAAAAAAAPC/"
				],
				[
					792,
					1,
					"insert",
					{
						"characters": "onMesasg"
					},
					"CAAAAHssAAAAAAAAfCwAAAAAAAAAAAAAfCwAAAAAAAB9LAAAAAAAAAAAAAB9LAAAAAAAAH4sAAAAAAAAAAAAAH4sAAAAAAAAfywAAAAAAAAAAAAAfywAAAAAAACALAAAAAAAAAAAAACALAAAAAAAAIEsAAAAAAAAAAAAAIEsAAAAAAAAgiwAAAAAAAAAAAAAgiwAAAAAAACDLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeywAAAAAAAB7LAAAAAAAAAAAAAAAAPC/"
				],
				[
					793,
					3,
					"left_delete",
					null,
					"AwAAAIIsAAAAAAAAgiwAAAAAAAABAAAAZ4EsAAAAAAAAgSwAAAAAAAABAAAAc4AsAAAAAAAAgCwAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAgywAAAAAAACDLAAAAAAAAAAAAAAAAPC/"
				],
				[
					794,
					1,
					"insert",
					{
						"characters": "sage"
					},
					"BAAAAIAsAAAAAAAAgSwAAAAAAAAAAAAAgSwAAAAAAACCLAAAAAAAAAAAAACCLAAAAAAAAIMsAAAAAAAAAAAAAIMsAAAAAAAAhCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgCwAAAAAAACALAAAAAAAAAAAAAAAAPC/"
				],
				[
					796,
					2,
					"right_delete",
					null,
					"AgAAAIcsAAAAAAAAhywAAAAAAAABAAAAd4csAAAAAAAAhywAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAAhywAAAAAAACHLAAAAAAAAAAAAAAAAPC/"
				],
				[
					797,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAIcsAAAAAAAAiCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhywAAAAAAACHLAAAAAAAAAAAAAAAAPC/"
				],
				[
					800,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAiCwAAAAAAACILAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "test-alea.js",
			"settings":
			{
				"buffer_size": 443,
				"line_ending": "Unix"
			}
		},
		{
			"file": "quickjs/qjs-modules/quickjs-sockets.c",
			"settings":
			{
				"buffer_size": 65964,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					301,
					1,
					"insert",
					{
						"characters": "2]"
					},
					"AgAAACV4AAAAAAAAJngAAAAAAAAAAAAAJngAAAAAAAAneAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAleAAAAAAAACV4AAAAAAAAAAAAAAAA8L8"
				],
				[
					302,
					1,
					"insert",
					{
						"characters": " :"
					},
					"AgAAACd4AAAAAAAAKHgAAAAAAAAAAAAAKHgAAAAAAAApeAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAneAAAAAAAACd4AAAAAAAAAAAAAAAA8L8"
				],
				[
					316,
					2,
					"left_delete",
					null,
					"AgAAAFN2AAAAAAAAU3YAAAAAAAABAAAAClJ2AAAAAAAAUnYAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABUdgAAAAAAAFR2AAAAAAAAAAAAAAAAAAA"
				],
				[
					434,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3dwAAAAAAAEt4AAAAAAAAAAAAAAAA8L8"
				],
				[
					435,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3dwAAAAAAAPd3AAAAAAAAAAAAAAAA8L8"
				],
				[
					454,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3dwAAAAAAAEt4AAAAAAAAAAAAAAAA8L8"
				],
				[
					455,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3dwAAAAAAAPd3AAAAAAAAAAAAAAAA8L8"
				],
				[
					465,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMeAAAAAAAAAx4AAAAAAAAAAAAAAAA8L8"
				],
				[
					466,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3dwAAAAAAAPd3AAAAAAAAAAAAAAAA8L8"
				],
				[
					473,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3dwAAAAAAAEt4AAAAAAAAAAAAAAAA8L8"
				],
				[
					474,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3dwAAAAAAAPd3AAAAAAAAAAAAAAAA8L8"
				],
				[
					488,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3dwAAAAAAAEt4AAAAAAAAAAAAAAAA8L8"
				],
				[
					489,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3dwAAAAAAAPd3AAAAAAAAAAAAAAAA8L8"
				],
				[
					510,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3dwAAAAAAAEt4AAAAAAAAAAAAAAAA8L8"
				],
				[
					511,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3dwAAAAAAAPd3AAAAAAAAAAAAAAAA8L8"
				],
				[
					518,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3dwAAAAAAAEt4AAAAAAAAAAAAAAAA8L8"
				],
				[
					519,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3dwAAAAAAAPd3AAAAAAAAAAAAAAAA8L8"
				],
				[
					530,
					1,
					"cut",
					null,
					"AQAAAPd3AAAAAAAA93cAAAAAAABUAAAAICBKU19DYWxsKGN0eCwgSlNfSXNFeGNlcHRpb24odmFsdWUpID8gZGF0YVsyXSA6IGRhdGFbMV0sIEpTX1VOREVGSU5FRCwgMSwgJnZhbHVlKTsK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3dwAAAAAAAEt4AAAAAAAAAAAAAAAA8L8"
				],
				[
					531,
					1,
					"paste",
					null,
					"AQAAAPd3AAAAAAAAS3gAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3dwAAAAAAAPd3AAAAAAAAAAAAAAAA8L8"
				],
				[
					557,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAPZ3AAAAAAAA93cAAAAAAAAAAAAA93cAAAAAAAD4dwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2dwAAAAAAAPZ3AAAAAAAAAAAAAAAA8L8"
				],
				[
					559,
					1,
					"insert",
					{
						"characters": "iu"
					},
					"AgAAAPd3AAAAAAAA+HcAAAAAAAAAAAAA+HcAAAAAAAD5dwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD3dwAAAAAAAPd3AAAAAAAAAAAAAAAAAAA"
				],
				[
					560,
					1,
					"left_delete",
					null,
					"AQAAAPh3AAAAAAAA+HcAAAAAAAABAAAAdQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5dwAAAAAAAPl3AAAAAAAAAAAAAAAA8L8"
				],
				[
					561,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAPh3AAAAAAAA+XcAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4dwAAAAAAAPh3AAAAAAAAAAAAAAAA8L8"
				],
				[
					562,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAPl3AAAAAAAA+3cAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD5dwAAAAAAAPl3AAAAAAAAAAAAAAAA8L8"
				],
				[
					563,
					1,
					"insert",
					{
						"characters": "JS_Is"
					},
					"BQAAAPp3AAAAAAAA+3cAAAAAAAAAAAAA+3cAAAAAAAD8dwAAAAAAAAAAAAD8dwAAAAAAAP13AAAAAAAAAAAAAP13AAAAAAAA/ncAAAAAAAAAAAAA/ncAAAAAAAD/dwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6dwAAAAAAAPp3AAAAAAAAAAAAAAAA8L8"
				],
				[
					564,
					1,
					"insert_completion",
					{
						"completion": "JS_IsException",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "JS_IsException"
					},
					"AgAAAPp3AAAAAAAA+ncAAAAAAAAFAAAASlNfSXP6dwAAAAAAAAh4AAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/dwAAAAAAAP93AAAAAAAAAAAAAAAA8L8"
				],
				[
					565,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAh4AAAAAAAACngAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIeAAAAAAAAAh4AAAAAAAAAAAAAAAA8L8"
				],
				[
					566,
					1,
					"insert",
					{
						"characters": "vlae"
					},
					"BAAAAAl4AAAAAAAACngAAAAAAAAAAAAACngAAAAAAAALeAAAAAAAAAAAAAALeAAAAAAAAAx4AAAAAAAAAAAAAAx4AAAAAAAADXgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJeAAAAAAAAAl4AAAAAAAAAAAAAAAA8L8"
				],
				[
					567,
					3,
					"left_delete",
					null,
					"AwAAAAx4AAAAAAAADHgAAAAAAAABAAAAZQt4AAAAAAAAC3gAAAAAAAABAAAAYQp4AAAAAAAACngAAAAAAAABAAAAbA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANeAAAAAAAAA14AAAAAAAAAAAAAAAA8L8"
				],
				[
					568,
					1,
					"insert",
					{
						"characters": "alue"
					},
					"BAAAAAp4AAAAAAAAC3gAAAAAAAAAAAAAC3gAAAAAAAAMeAAAAAAAAAAAAAAMeAAAAAAAAA14AAAAAAAAAAAAAA14AAAAAAAADngAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAKeAAAAAAAAAp4AAAAAAAAAAAAAAAA8L8"
				],
				[
					570,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABB4AAAAAAAAEXgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAQeAAAAAAAABB4AAAAAAAAAAAAAAAA8L8"
				],
				[
					571,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAABF4AAAAAAAAE3gAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAReAAAAAAAABF4AAAAAAAAAAAAAAAA8L8"
				],
				[
					572,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAABJ4AAAAAAAAE3gAAAAAAAAAAAAAE3gAAAAAAAAUeAAAAAAAAAAAAAATeAAAAAAAABV4AAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASeAAAAAAAABJ4AAAAAAAAAAAAAAAA8L8"
				],
				[
					573,
					1,
					"insert",
					{
						"characters": "JS_GetEx"
					},
					"CAAAABV4AAAAAAAAFngAAAAAAAAAAAAAFngAAAAAAAAXeAAAAAAAAAAAAAAXeAAAAAAAABh4AAAAAAAAAAAAABh4AAAAAAAAGXgAAAAAAAAAAAAAGXgAAAAAAAAaeAAAAAAAAAAAAAAaeAAAAAAAABt4AAAAAAAAAAAAABt4AAAAAAAAHHgAAAAAAAAAAAAAHHgAAAAAAAAdeAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVeAAAAAAAABV4AAAAAAAAAAAAAAAA8L8"
				],
				[
					578,
					1,
					"paste",
					null,
					"AgAAABV4AAAAAAAAJHgAAAAAAAAAAAAAJHgAAAAAAAAkeAAAAAAAAAgAAABKU19HZXRFeA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVeAAAAAAAAB14AAAAAAAAAAAAAAAA8L8"
				],
				[
					579,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACR4AAAAAAAAJngAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAkeAAAAAAAACR4AAAAAAAAAAAAAAAA8L8"
				],
				[
					581,
					1,
					"left_delete",
					null,
					"AQAAACV4AAAAAAAAJXgAAAAAAAABAAAAKQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmeAAAAAAAACZ4AAAAAAAAAAAAAAAA8L8"
				],
				[
					582,
					1,
					"insert",
					{
						"characters": "ctx);"
					},
					"BQAAACV4AAAAAAAAJngAAAAAAAAAAAAAJngAAAAAAAAneAAAAAAAAAAAAAAneAAAAAAAACh4AAAAAAAAAAAAACh4AAAAAAAAKXgAAAAAAAAAAAAAKXgAAAAAAAAqeAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAleAAAAAAAACV4AAAAAAAAAAAAAAAA8L8"
				],
				[
					584,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABV4AAAAAAAAFngAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVeAAAAAAAABV4AAAAAAAAAAAAAAAAMkA"
				],
				[
					588,
					1,
					"insert",
					{
						"characters": "value="
					},
					"BgAAABV4AAAAAAAAFngAAAAAAAAAAAAAFngAAAAAAAAXeAAAAAAAAAAAAAAXeAAAAAAAABh4AAAAAAAAAAAAABh4AAAAAAAAGXgAAAAAAAAAAAAAGXgAAAAAAAAaeAAAAAAAAAAAAAAaeAAAAAAAABt4AAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVeAAAAAAAABV4AAAAAAAAAAAAAAAA8L8"
				],
				[
					616,
					1,
					"insert",
					{
						"characters": "={0,-1}"
					},
					"BwAAADSLAAAAAAAANYsAAAAAAAAAAAAANYsAAAAAAAA2iwAAAAAAAAAAAAA2iwAAAAAAADeLAAAAAAAAAAAAADeLAAAAAAAAOIsAAAAAAAAAAAAAOIsAAAAAAAA5iwAAAAAAAAAAAAA5iwAAAAAAADqLAAAAAAAAAAAAADqLAAAAAAAAO4sAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA0iwAAAAAAADSLAAAAAAAAAAAAAAAA8L8"
				],
				[
					676,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAF2zAAAAAAAAXrMAAAAAAAAAAAAAXrMAAAAAAABfswAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdswAAAAAAAF2zAAAAAAAAAAAAAAAAQkA"
				],
				[
					679,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJKzAAAAAAAAk7MAAAAAAAAAAAAAk7MAAAAAAACUswAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSswAAAAAAAJKzAAAAAAAAAAAAAAAA8L8"
				],
				[
					684,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAF2rAAAAAAAAXqsAAAAAAAAAAAAAXqsAAAAAAABfqwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdqwAAAAAAAF2rAAAAAAAAAAAAAAAA8L8"
				],
				[
					688,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AgAAAJKrAAAAAAAAk6sAAAAAAAAAAAAAk6sAAAAAAACUqwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSqwAAAAAAAJKrAAAAAAAAAAAAAAAA8L8"
				],
				[
					913,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAAAAAAAAAAAAAgAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					914,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAACAAAAICA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAACAAAAAAAAAAIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					964,
					1,
					"insert",
					{
						"characters": "\n\nuif"
					},
					"CAAAAImKAAAAAAAAiooAAAAAAAAAAAAAiooAAAAAAACQigAAAAAAAAAAAACQigAAAAAAAJGKAAAAAAAAAAAAAJGKAAAAAAAAl4oAAAAAAAAAAAAAiooAAAAAAACKigAAAAAAAAYAAAAgICAgICCRigAAAAAAAJKKAAAAAAAAAAAAAJKKAAAAAAAAk4oAAAAAAAAAAAAAk4oAAAAAAACUigAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJigAAAAAAAImKAAAAAAAAAAAAAAAA8L8"
				],
				[
					965,
					3,
					"left_delete",
					null,
					"AwAAAJOKAAAAAAAAk4oAAAAAAAABAAAAZpKKAAAAAAAAkooAAAAAAAABAAAAaZGKAAAAAAAAkYoAAAAAAAABAAAAdQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUigAAAAAAAJSKAAAAAAAAAAAAAAAA8L8"
				],
				[
					966,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAJGKAAAAAAAAkooAAAAAAAAAAAAAkooAAAAAAACTigAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRigAAAAAAAJGKAAAAAAAAAAAAAAAA8L8"
				],
				[
					967,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJOKAAAAAAAAlYoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTigAAAAAAAJOKAAAAAAAAAAAAAAAA8L8"
				],
				[
					968,
					1,
					"insert",
					{
						"characters": "JS_IsNumberr"
					},
					"DAAAAJSKAAAAAAAAlYoAAAAAAAAAAAAAlYoAAAAAAACWigAAAAAAAAAAAACWigAAAAAAAJeKAAAAAAAAAAAAAJeKAAAAAAAAmIoAAAAAAAAAAAAAmIoAAAAAAACZigAAAAAAAAAAAACZigAAAAAAAJqKAAAAAAAAAAAAAJqKAAAAAAAAm4oAAAAAAAAAAAAAm4oAAAAAAACcigAAAAAAAAAAAACcigAAAAAAAJ2KAAAAAAAAAAAAAJ2KAAAAAAAAnooAAAAAAAAAAAAAnooAAAAAAACfigAAAAAAAAAAAACfigAAAAAAAKCKAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUigAAAAAAAJSKAAAAAAAAAAAAAAAA8L8"
				],
				[
					969,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKCKAAAAAAAAoooAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgigAAAAAAAKCKAAAAAAAAAAAAAAAA8L8"
				],
				[
					970,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAKCKAAAAAAAAoIoAAAAAAAABAAAAKKCKAAAAAAAAoIoAAAAAAAABAAAAKQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChigAAAAAAAKGKAAAAAAAAAAAAAAAA8L8"
				],
				[
					971,
					1,
					"left_delete",
					null,
					"AQAAAJ+KAAAAAAAAn4oAAAAAAAABAAAAcg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgigAAAAAAAKCKAAAAAAAAAAAAAAAA8L8"
				],
				[
					972,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJ+KAAAAAAAAoYoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfigAAAAAAAJ+KAAAAAAAAAAAAAAAA8L8"
				],
				[
					973,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAKCKAAAAAAAAoYoAAAAAAAAAAAAAoYoAAAAAAACiigAAAAAAAAAAAACiigAAAAAAAKOKAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgigAAAAAAAKCKAAAAAAAAAAAAAAAA8L8"
				],
				[
					975,
					1,
					"left_delete",
					null,
					"AQAAAKSKAAAAAAAApIoAAAAAAAABAAAAKQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACligAAAAAAAKWKAAAAAAAAAAAAAAAA8L8"
				],
				[
					976,
					1,
					"insert",
					{
						"characters": " &&"
					},
					"AwAAAKSKAAAAAAAApYoAAAAAAAAAAAAApYoAAAAAAACmigAAAAAAAAAAAACmigAAAAAAAKeKAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACkigAAAAAAAKSKAAAAAAAAAAAAAAAA8L8"
				],
				[
					977,
					1,
					"insert",
					{
						"characters": " JS_ToInt32"
					},
					"CwAAAKeKAAAAAAAAqIoAAAAAAAAAAAAAqIoAAAAAAACpigAAAAAAAAAAAACpigAAAAAAAKqKAAAAAAAAAAAAAKqKAAAAAAAAq4oAAAAAAAAAAAAAq4oAAAAAAACsigAAAAAAAAAAAACsigAAAAAAAK2KAAAAAAAAAAAAAK2KAAAAAAAArooAAAAAAAAAAAAArooAAAAAAACvigAAAAAAAAAAAACvigAAAAAAALCKAAAAAAAAAAAAALCKAAAAAAAAsYoAAAAAAAAAAAAAsYoAAAAAAACyigAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACnigAAAAAAAKeKAAAAAAAAAAAAAAAA8L8"
				],
				[
					978,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAALKKAAAAAAAAtIoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACyigAAAAAAALKKAAAAAAAAAAAAAAAA8L8"
				],
				[
					979,
					1,
					"insert",
					{
						"characters": "ctx,"
					},
					"BAAAALOKAAAAAAAAtIoAAAAAAAAAAAAAtIoAAAAAAAC1igAAAAAAAAAAAAC1igAAAAAAALaKAAAAAAAAAAAAALaKAAAAAAAAt4oAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzigAAAAAAALOKAAAAAAAAAAAAAAAA8L8"
				],
				[
					980,
					1,
					"insert",
					{
						"characters": " ret"
					},
					"BAAAALeKAAAAAAAAuIoAAAAAAAAAAAAAuIoAAAAAAAC5igAAAAAAAAAAAAC5igAAAAAAALqKAAAAAAAAAAAAALqKAAAAAAAAu4oAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC3igAAAAAAALeKAAAAAAAAAAAAAAAA8L8"
				],
				[
					982,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAALyKAAAAAAAAvYoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8igAAAAAAALyKAAAAAAAAAAAAAAAA8L8"
				],
				[
					983,
					5,
					"left_delete",
					null,
					"BQAAALyKAAAAAAAAvIoAAAAAAAABAAAAKbuKAAAAAAAAu4oAAAAAAAABAAAAKbqKAAAAAAAAuooAAAAAAAABAAAAdLmKAAAAAAAAuYoAAAAAAAABAAAAZbiKAAAAAAAAuIoAAAAAAAABAAAAcg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC9igAAAAAAAL2KAAAAAAAAAAAAAAAA8L8"
				],
				[
					985,
					1,
					"insert",
					{
						"characters": "\nn"
					},
					"AgAAAIqKAAAAAAAAi4oAAAAAAAAAAAAAi4oAAAAAAACMigAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKigAAAAAAAIqKAAAAAAAAAAAAAABQeUA"
				],
				[
					986,
					1,
					"left_delete",
					null,
					"AQAAAIuKAAAAAAAAi4oAAAAAAAABAAAAbg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMigAAAAAAAIyKAAAAAAAAAAAAAAAA8L8"
				],
				[
					987,
					1,
					"insert",
					{
						"characters": "int32_t"
					},
					"BwAAAIuKAAAAAAAAjIoAAAAAAAAAAAAAjIoAAAAAAACNigAAAAAAAAAAAACNigAAAAAAAI6KAAAAAAAAAAAAAI6KAAAAAAAAj4oAAAAAAAAAAAAAj4oAAAAAAACQigAAAAAAAAAAAACQigAAAAAAAJGKAAAAAAAAAAAAAJGKAAAAAAAAkooAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLigAAAAAAAIuKAAAAAAAAAAAAAAAA8L8"
				],
				[
					988,
					1,
					"insert",
					{
						"characters": " res"
					},
					"BAAAAJKKAAAAAAAAk4oAAAAAAAAAAAAAk4oAAAAAAACUigAAAAAAAAAAAACUigAAAAAAAJWKAAAAAAAAAAAAAJWKAAAAAAAAlooAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSigAAAAAAAJKKAAAAAAAAAAAAAAAA8L8"
				],
				[
					989,
					1,
					"left_delete",
					null,
					"AQAAAJWKAAAAAAAAlYoAAAAAAAABAAAAcw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWigAAAAAAAJaKAAAAAAAAAAAAAAAA8L8"
				],
				[
					990,
					1,
					"insert",
					{
						"characters": "sult;"
					},
					"BQAAAJWKAAAAAAAAlooAAAAAAAAAAAAAlooAAAAAAACXigAAAAAAAAAAAACXigAAAAAAAJiKAAAAAAAAAAAAAJiKAAAAAAAAmYoAAAAAAAAAAAAAmYoAAAAAAACaigAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACVigAAAAAAAJWKAAAAAAAAAAAAAAAA8L8"
				],
				[
					991,
					1,
					"left_delete",
					null,
					"AQAAAJmKAAAAAAAAmYoAAAAAAAABAAAAOw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaigAAAAAAAJqKAAAAAAAAAAAAAAAA8L8"
				],
				[
					992,
					1,
					"insert",
					{
						"characters": "=-1;"
					},
					"BAAAAJmKAAAAAAAAmooAAAAAAAAAAAAAmooAAAAAAACbigAAAAAAAAAAAACbigAAAAAAAJyKAAAAAAAAAAAAAJyKAAAAAAAAnYoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZigAAAAAAAJmKAAAAAAAAAAAAAAAA8L8"
				],
				[
					993,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJ2KAAAAAAAAnooAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdigAAAAAAAJ2KAAAAAAAAAAAAAAAA8L8"
				],
				[
					997,
					1,
					"insert",
					{
						"characters": "&result,"
					},
					"CAAAAMuKAAAAAAAAzIoAAAAAAAAAAAAAzIoAAAAAAADNigAAAAAAAAAAAADNigAAAAAAAM6KAAAAAAAAAAAAAM6KAAAAAAAAz4oAAAAAAAAAAAAAz4oAAAAAAADQigAAAAAAAAAAAADQigAAAAAAANGKAAAAAAAAAAAAANGKAAAAAAAA0ooAAAAAAAAAAAAA0ooAAAAAAADTigAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADLigAAAAAAAMuKAAAAAAAAAAAAAAAA8L8"
				],
				[
					998,
					1,
					"insert",
					{
						"characters": " are"
					},
					"BAAAANOKAAAAAAAA1IoAAAAAAAAAAAAA1IoAAAAAAADVigAAAAAAAAAAAADVigAAAAAAANaKAAAAAAAAAAAAANaKAAAAAAAA14oAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTigAAAAAAANOKAAAAAAAAAAAAAAAA8L8"
				],
				[
					999,
					3,
					"left_delete",
					null,
					"AwAAANaKAAAAAAAA1ooAAAAAAAABAAAAZdWKAAAAAAAA1YoAAAAAAAABAAAActSKAAAAAAAA1IoAAAAAAAABAAAAYQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADXigAAAAAAANeKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1000,
					1,
					"insert",
					{
						"characters": "ret))"
					},
					"BQAAANSKAAAAAAAA1YoAAAAAAAAAAAAA1YoAAAAAAADWigAAAAAAAAAAAADWigAAAAAAANeKAAAAAAAAAAAAANeKAAAAAAAA2IoAAAAAAAAAAAAA2IoAAAAAAADZigAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADUigAAAAAAANSKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1001,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANmKAAAAAAAA2ooAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZigAAAAAAANmKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1002,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAANqKAAAAAAAA3IoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADaigAAAAAAANqKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1003,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAANuKAAAAAAAA3IoAAAAAAAAAAAAA3IoAAAAAAADiigAAAAAAAAAAAADiigAAAAAAAOOKAAAAAAAAAAAAAOOKAAAAAAAA6YoAAAAAAAAAAAAA3IoAAAAAAADcigAAAAAAAAYAAAAgICAgICDcigAAAAAAAOSKAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbigAAAAAAANuKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1008,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAOSKAAAAAAAA5YoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADkigAAAAAAAOSKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1009,
					1,
					"left_delete",
					null,
					"AQAAAOSKAAAAAAAA5IoAAAAAAAABAAAAaQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADligAAAAAAAOWKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1015,
					1,
					"cut",
					null,
					"AQAAALyKAAAAAAAAvIoAAAAAAAAcAAAASlNfVG9JbnQzMihjdHgsJnJlc3VsdCwgcmV0KQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8igAAAAAAANiKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1016,
					4,
					"left_delete",
					null,
					"BQAAALuKAAAAAAAAu4oAAAAAAAABAAAAIL+KAAAAAAAAv4oAAAAAAAAIAAAAICAgICAgICC6igAAAAAAALqKAAAAAAAAAQAAACa5igAAAAAAALmKAAAAAAAAAQAAACa4igAAAAAAALiKAAAAAAAAAQAAACA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8igAAAAAAALyKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1018,
					1,
					"paste",
					null,
					"AQAAALyKAAAAAAAA2IoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAC8igAAAAAAALyKAAAAAAAAAAAAAAAgbEA"
				],
				[
					1022,
					1,
					"cut",
					null,
					"AQAAAIuKAAAAAAAAi4oAAAAAAAATAAAAaW50MzJfdCByZXN1bHQ9LTE7Cg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLigAAAAAAAJ6KAAAAAAAAAAAAAAAAAAA"
				],
				[
					1024,
					1,
					"paste",
					null,
					"AQAAAKmKAAAAAAAAvIoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpigAAAAAAAKmKAAAAAAAAAAAAAAAAAAA"
				],
				[
					1029,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANiKAAAAAAAA2YoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADYigAAAAAAANiKAAAAAAAA////////738"
				],
				[
					1030,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BAAAANmKAAAAAAAA2ooAAAAAAAAAAAAA2ooAAAAAAADbigAAAAAAAAAAAADbigAAAAAAANyKAAAAAAAAAAAAANyKAAAAAAAA3YoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADZigAAAAAAANmKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1031,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAN2KAAAAAAAA34oAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdigAAAAAAAN2KAAAAAAAAAAAAAAAA8L8"
				],
				[
					1032,
					1,
					"insert",
					{
						"characters": "result==0"
					},
					"CQAAAN6KAAAAAAAA34oAAAAAAAAAAAAA34oAAAAAAADgigAAAAAAAAAAAADgigAAAAAAAOGKAAAAAAAAAAAAAOGKAAAAAAAA4ooAAAAAAAAAAAAA4ooAAAAAAADjigAAAAAAAAAAAADjigAAAAAAAOSKAAAAAAAAAAAAAOSKAAAAAAAA5YoAAAAAAAAAAAAA5YoAAAAAAADmigAAAAAAAAAAAADmigAAAAAAAOeKAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeigAAAAAAAN6KAAAAAAAAAAAAAAAA8L8"
				],
				[
					1034,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOiKAAAAAAAA6YoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADoigAAAAAAAOiKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1037,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOmKAAAAAAAA6ooAAAAAAAAAAAAA6ooAAAAAAADsigAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpigAAAAAAAOmKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1038,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOyKAAAAAAAA7YoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsigAAAAAAAOyKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1059,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAIuKAAAAAAAAjIoAAAAAAAAAAAAAjIoAAAAAAACMigAAAAAAAGsAAAAKICAgICAgaWYoSlNfSXNOdW1iZXIocmV0KSkgewppbnQzMl90IHJlc3VsdD0tMTsKSlNfVG9JbnQzMihjdHgsJnJlc3VsdCwgcmV0KTsKCmlmKHJlc3VsdD09MCkgCiAgIAogICAgICB9IA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLigAAAAAAAPaKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1076,
					1,
					"left_delete",
					null,
					"AQAAAIuKAAAAAAAAi4oAAAAAAAABAAAAIA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMigAAAAAAAIyKAAAAAAAAAAAAAABAjUA"
				],
				[
					1081,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAIuKAAAAAAAAjIoAAAAAAAAAAAAAjIoAAAAAAACNigAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACLigAAAAAAAIuKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1082,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAI2KAAAAAAAAj4oAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNigAAAAAAAI2KAAAAAAAAAAAAAAAA8L8"
				],
				[
					1083,
					1,
					"insert",
					{
						"characters": "JS_IsNumber"
					},
					"CwAAAI6KAAAAAAAAj4oAAAAAAAAAAAAAj4oAAAAAAACQigAAAAAAAAAAAACQigAAAAAAAJGKAAAAAAAAAAAAAJGKAAAAAAAAkooAAAAAAAAAAAAAkooAAAAAAACTigAAAAAAAAAAAACTigAAAAAAAJSKAAAAAAAAAAAAAJSKAAAAAAAAlYoAAAAAAAAAAAAAlYoAAAAAAACWigAAAAAAAAAAAACWigAAAAAAAJeKAAAAAAAAAAAAAJeKAAAAAAAAmIoAAAAAAAAAAAAAmIoAAAAAAACZigAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOigAAAAAAAI6KAAAAAAAAAAAAAAAA8L8"
				],
				[
					1084,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJmKAAAAAAAAm4oAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACZigAAAAAAAJmKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1085,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAJqKAAAAAAAAm4oAAAAAAAAAAAAAm4oAAAAAAACcigAAAAAAAAAAAACcigAAAAAAAJ2KAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaigAAAAAAAJqKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1087,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJ+KAAAAAAAAoIoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfigAAAAAAAJ+KAAAAAAAAAAAAAAAA8L8"
				],
				[
					1088,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKCKAAAAAAAAoooAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgigAAAAAAAKCKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1089,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAKGKAAAAAAAAoooAAAAAAAAAAAAAoooAAAAAAACjigAAAAAAAAAAAACiigAAAAAAAKSKAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChigAAAAAAAKGKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1144,
					1,
					"left_delete",
					null,
					"AgAAAHqrAAAAAAAAeqsAAAAAAAABAAAAL6KKAAAAAAAAoooAAAAAAAACAAAAICA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7qwAAAAAAAHurAAAAAAAAAAAAAAAA8L8"
				],
				[
					1145,
					1,
					"right_delete",
					null,
					"AQAAAHirAAAAAAAAeKsAAAAAAAABAAAALw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4qwAAAAAAAHirAAAAAAAAAAAAAAAA8L8"
				],
				[
					1148,
					1,
					"left_delete",
					null,
					"AQAAAKurAAAAAAAAq6sAAAAAAAABAAAALw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsqwAAAAAAAKyrAAAAAAAAAAAAAAAA8L8"
				],
				[
					1149,
					1,
					"right_delete",
					null,
					"AQAAAKurAAAAAAAAq6sAAAAAAAABAAAALw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrqwAAAAAAAKurAAAAAAAAAAAAAAAA8L8"
				],
				[
					1152,
					3,
					"right_delete",
					null,
					"AwAAAHezAAAAAAAAd7MAAAAAAAABAAAAIHezAAAAAAAAd7MAAAAAAAABAAAAL3ezAAAAAAAAd7MAAAAAAAABAAAALw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3swAAAAAAAHezAAAAAAAAAAAAAAAA8L8"
				],
				[
					1155,
					2,
					"left_delete",
					null,
					"AgAAAKuzAAAAAAAAq7MAAAAAAAABAAAAL6qzAAAAAAAAqrMAAAAAAAABAAAALw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsswAAAAAAAKyzAAAAAAAAAAAAAAAA8L8"
				],
				[
					1171,
					1,
					"insert",
					{
						"characters": "s->sysno"
					},
					"CQAAAI6KAAAAAAAAj4oAAAAAAAAAAAAAj4oAAAAAAACPigAAAAAAABAAAABKU19Jc051bWJlcihyZXQpj4oAAAAAAACQigAAAAAAAAAAAACQigAAAAAAAJGKAAAAAAAAAAAAAJGKAAAAAAAAkooAAAAAAAAAAAAAkooAAAAAAACTigAAAAAAAAAAAACTigAAAAAAAJSKAAAAAAAAAAAAAJSKAAAAAAAAlYoAAAAAAAAAAAAAlYoAAAAAAACWigAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOigAAAAAAAJ6KAAAAAAAAAAAAAAAA8L8"
				],
				[
					1172,
					5,
					"left_delete",
					null,
					"BQAAAJWKAAAAAAAAlYoAAAAAAAABAAAAb5SKAAAAAAAAlIoAAAAAAAABAAAAbpOKAAAAAAAAk4oAAAAAAAABAAAAc5KKAAAAAAAAkooAAAAAAAABAAAAeZGKAAAAAAAAkYoAAAAAAAABAAAAcw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWigAAAAAAAJaKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1173,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAJGKAAAAAAAAkooAAAAAAAAAAAAAkooAAAAAAACTigAAAAAAAAAAAACTigAAAAAAAJSKAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRigAAAAAAAJGKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1174,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAJSKAAAAAAAAlYoAAAAAAAAAAAAAlYoAAAAAAACWigAAAAAAAAAAAACWigAAAAAAAJeKAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUigAAAAAAAJSKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1175,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAJeKAAAAAAAAmIoAAAAAAAAAAAAAmIoAAAAAAACZigAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXigAAAAAAAJeKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1180,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJ2KAAAAAAAAnooAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdigAAAAAAAJ2KAAAAAAAA////////738"
				],
				[
					1181,
					1,
					"left_delete",
					null,
					"AQAAAJ2KAAAAAAAAnYoAAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACeigAAAAAAAJ6KAAAAAAAAAAAAAAAA8L8"
				],
				[
					1186,
					1,
					"paste",
					null,
					"AQAAAI+KAAAAAAAAmYoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPigAAAAAAAI+KAAAAAAAAAAAAAAAA8L8"
				],
				[
					1189,
					1,
					"left_delete",
					null,
					"AQAAAI6KAAAAAAAAjooAAAAAAAABAAAAcw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPigAAAAAAAI+KAAAAAAAAAAAAAAAA8L8"
				],
				[
					1192,
					1,
					"insert",
					{
						"characters": "(*s)"
					},
					"BAAAAJiKAAAAAAAAmYoAAAAAAAAAAAAAmYoAAAAAAACaigAAAAAAAAAAAACaigAAAAAAAJuKAAAAAAAAAAAAAJuKAAAAAAAAnIoAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYigAAAAAAAJiKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1195,
					1,
					"right_delete",
					null,
					"AQAAAJyKAAAAAAAAnIoAAAAAAAAKAAAALT5yZXQgPT0gMA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACcigAAAAAAAKaKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1215,
					2,
					"left_delete",
					null,
					"AgAAAIqKAAAAAAAAiooAAAAAAAAYAAAACmlmKHNvY2tldF9lb2YoKnMpKSB7Cgp9iYoAAAAAAACJigAAAAAAAAEAAAAK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKigAAAAAAAKKKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1220,
					1,
					"revert",
					null,
					"",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJigAAAAAAAImKAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "debugger.js",
			"settings":
			{
				"buffer_size": 9022,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					90,
					1,
					"insert",
					{
						"characters": ".cath"
					},
					"BQAAACITAAAAAAAAIxMAAAAAAAAAAAAAIxMAAAAAAAAkEwAAAAAAAAAAAAAkEwAAAAAAACUTAAAAAAAAAAAAACUTAAAAAAAAJhMAAAAAAAAAAAAAJhMAAAAAAAAnEwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiEwAAAAAAACITAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					1,
					"left_delete",
					null,
					"AQAAACYTAAAAAAAAJhMAAAAAAAABAAAAaA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAnEwAAAAAAACcTAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "ch"
					},
					"AgAAACYTAAAAAAAAJxMAAAAAAAAAAAAAJxMAAAAAAAAoEwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmEwAAAAAAACYTAAAAAAAAAAAAAAAA8L8"
				],
				[
					93,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAACgTAAAAAAAAKhMAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoEwAAAAAAACgTAAAAAAAAAAAAAAAA8L8"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAACkTAAAAAAAAKhMAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAApEwAAAAAAACkTAAAAAAAAAAAAAAAA8L8"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": " =>"
					},
					"AwAAACoTAAAAAAAAKxMAAAAAAAAAAAAAKxMAAAAAAAAsEwAAAAAAAAAAAAAsEwAAAAAAAC0TAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAqEwAAAAAAACoTAAAAAAAAAAAAAAAA8L8"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " console.lo"
					},
					"CwAAAC0TAAAAAAAALhMAAAAAAAAAAAAALhMAAAAAAAAvEwAAAAAAAAAAAAAvEwAAAAAAADATAAAAAAAAAAAAADATAAAAAAAAMRMAAAAAAAAAAAAAMRMAAAAAAAAyEwAAAAAAAAAAAAAyEwAAAAAAADMTAAAAAAAAAAAAADMTAAAAAAAANBMAAAAAAAAAAAAANBMAAAAAAAA1EwAAAAAAAAAAAAA1EwAAAAAAADYTAAAAAAAAAAAAADYTAAAAAAAANxMAAAAAAAAAAAAANxMAAAAAAAA4EwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtEwAAAAAAAC0TAAAAAAAAAAAAAAAA8L8"
				],
				[
					97,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADgTAAAAAAAAOhMAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4EwAAAAAAADgTAAAAAAAAAAAAAAAA8L8"
				],
				[
					98,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAADgTAAAAAAAAOBMAAAAAAAABAAAAKDgTAAAAAAAAOBMAAAAAAAABAAAAKQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5EwAAAAAAADkTAAAAAAAAAAAAAAAA8L8"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "g"
					},
					"AQAAADgTAAAAAAAAORMAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4EwAAAAAAADgTAAAAAAAAAAAAAAAA8L8"
				],
				[
					100,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADkTAAAAAAAAOxMAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5EwAAAAAAADkTAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": "proces"
					},
					"BgAAADoTAAAAAAAAOxMAAAAAAAAAAAAAOxMAAAAAAAA8EwAAAAAAAAAAAAA8EwAAAAAAAD0TAAAAAAAAAAAAAD0TAAAAAAAAPhMAAAAAAAAAAAAAPhMAAAAAAAA/EwAAAAAAAAAAAAA/EwAAAAAAAEATAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6EwAAAAAAADoTAAAAAAAAAAAAAAAA8L8"
				],
				[
					102,
					6,
					"left_delete",
					null,
					"BgAAAD8TAAAAAAAAPxMAAAAAAAABAAAAcz4TAAAAAAAAPhMAAAAAAAABAAAAZT0TAAAAAAAAPRMAAAAAAAABAAAAYzwTAAAAAAAAPBMAAAAAAAABAAAAbzsTAAAAAAAAOxMAAAAAAAABAAAAcjoTAAAAAAAAOhMAAAAAAAABAAAAcA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAEwAAAAAAAEATAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAADoTAAAAAAAAPBMAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6EwAAAAAAADoTAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAADsTAAAAAAAAPBMAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7EwAAAAAAADsTAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"left_delete",
					null,
					"AQAAADsTAAAAAAAAOxMAAAAAAAABAAAAcg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA8EwAAAAAAADwTAAAAAAAAAAAAAAAA8L8"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "process()"
					},
					"CQAAADsTAAAAAAAAPBMAAAAAAAAAAAAAPBMAAAAAAAA9EwAAAAAAAAAAAAA9EwAAAAAAAD4TAAAAAAAAAAAAAD4TAAAAAAAAPxMAAAAAAAAAAAAAPxMAAAAAAABAEwAAAAAAAAAAAABAEwAAAAAAAEETAAAAAAAAAAAAAEETAAAAAAAAQhMAAAAAAAAAAAAAQhMAAAAAAABDEwAAAAAAAAAAAABDEwAAAAAAAEQTAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA7EwAAAAAAADsTAAAAAAAAAAAAAAAA8L8"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": " exc"
					},
					"BAAAAEQTAAAAAAAARRMAAAAAAAAAAAAARRMAAAAAAABGEwAAAAAAAAAAAABGEwAAAAAAAEcTAAAAAAAAAAAAAEcTAAAAAAAASBMAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABEEwAAAAAAAEQTAAAAAAAAAAAAAAAA8L8"
				],
				[
					108,
					1,
					"left_delete",
					null,
					"AQAAAEcTAAAAAAAARxMAAAAAAAABAAAAYw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIEwAAAAAAAEgTAAAAAAAAAAAAAAAA8L8"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": "ception:"
					},
					"CAAAAEcTAAAAAAAASBMAAAAAAAAAAAAASBMAAAAAAABJEwAAAAAAAAAAAABJEwAAAAAAAEoTAAAAAAAAAAAAAEoTAAAAAAAASxMAAAAAAAAAAAAASxMAAAAAAABMEwAAAAAAAAAAAABMEwAAAAAAAE0TAAAAAAAAAAAAAE0TAAAAAAAAThMAAAAAAAAAAAAAThMAAAAAAABPEwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHEwAAAAAAAEcTAAAAAAAAAAAAAAAA8L8"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFATAAAAAAAAURMAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABQEwAAAAAAAFATAAAAAAAAAAAAAAAA8L8"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAFETAAAAAAAAUhMAAAAAAAAAAAAAUhMAAAAAAABTEwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABREwAAAAAAAFETAAAAAAAAAAAAAAAA8L8"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFYTAAAAAAAAVxMAAAAAAAAAAAAAVxMAAAAAAABdEwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABWEwAAAAAAAFYTAAAAAAAA////////738"
				],
				[
					150,
					1,
					"revert",
					null,
					"",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAjDQAAAAAAACMNAAAAAAAAAAAAAAAAAAA"
				],
				[
					168,
					10,
					"right_delete",
					null,
					"CgAAAHUOAAAAAAAAdQ4AAAAAAAABAAAACnUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAAIHUOAAAAAAAAdQ4AAAAAAAABAAAALg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1DgAAAAAAAHUOAAAAAAAAAAAAAAAA8L8"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAHUOAAAAAAAAdg4AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB1DgAAAAAAAHUOAAAAAAAAAAAAAAAA8L8"
				],
				[
					210,
					1,
					"cut",
					null,
					"AQAAAJodAAAAAAAAmh0AAAAAAAAZAAAAcmVxdWVzdF9zZXEgPSArK3RoaXMuI3NlcQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACaHQAAAAAAALMdAAAAAAAAAAAAAAAA8L8"
				],
				[
					213,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAIwdAAAAAAAAjR0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMHQAAAAAAAIwdAAAAAAAAAAAAAAAA8L8"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAI0dAAAAAAAAjh0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNHQAAAAAAAI0dAAAAAAAAAAAAAAAA8L8"
				],
				[
					215,
					1,
					"paste",
					null,
					"AQAAAI4dAAAAAAAApx0AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOHQAAAAAAAI4dAAAAAAAAAAAAAAAA8L8"
				],
				[
					222,
					1,
					"right_delete",
					null,
					"AQAAAKsdAAAAAAAAqx0AAAAAAAAMAAAAICAgIGNvbnN0IDsK",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrHQAAAAAAALcdAAAAAAAAAAAAAAAAAAA"
				],
				[
					223,
					1,
					"left_delete",
					null,
					"AQAAAKodAAAAAAAAqh0AAAAAAAABAAAACg",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrHQAAAAAAAKsdAAAAAAAAAAAAAAAA8L8"
				],
				[
					228,
					1,
					"revert",
					null,
					"",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACqHQAAAAAAAKodAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPoPAAAAAAAA+w8AAAAAAAAAAAAA+w8AAAAAAAAJEAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+g8AAAAAAAD6DwAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAMISAAAAAAAAwxIAAAAAAAAAAAAAwxIAAAAAAADPEgAAAAAAAAAAAAD7DwAAAAAAAPsPAAAAAAAADgAAACAgICAgICAgICAgICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwhIAAAAAAADCEgAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"",
					null,
					"AQAAAFMNAAAAAAAAXA0AAAAAAAAKAAAAI3Jlc3BvbnNlcw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUw0AAAAAAABdDQAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"",
					null,
					"AQAAAHYPAAAAAAAAfw8AAAAAAAAKAAAAI3Jlc3BvbnNlcw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdg8AAAAAAACADwAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"",
					null,
					"AQAAAFweAAAAAAAAZR4AAAAAAAAKAAAAI3Jlc3BvbnNlcw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXB4AAAAAAABmHgAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"",
					null,
					"AQAAAJkeAAAAAAAAoh4AAAAAAAAKAAAAI3Jlc3BvbnNlcw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmR4AAAAAAACjHgAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAMh4AAAAAAAAyHgAAAAAAAAAAAAAAAPC/CiAAAAAAAAAKIAAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"right_delete",
					null,
					"AQAAAHQOAAAAAAAAdA4AAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdA4AAAAAAAB0DgAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJ4PAAAAAAAAnw8AAAAAAAAAAAAAnw8AAAAAAACtDwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAng8AAAAAAACeDwAAAAAAAP///////+9/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "delete"
					},
					"BgAAAK0PAAAAAAAArg8AAAAAAAAAAAAArg8AAAAAAACvDwAAAAAAAAAAAACvDwAAAAAAALAPAAAAAAAAAAAAALAPAAAAAAAAsQ8AAAAAAAAAAAAAsQ8AAAAAAACyDwAAAAAAAAAAAACyDwAAAAAAALMPAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArQ8AAAAAAACtDwAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": " this.resposes"
					},
					"DgAAALMPAAAAAAAAtA8AAAAAAAAAAAAAtA8AAAAAAAC1DwAAAAAAAAAAAAC1DwAAAAAAALYPAAAAAAAAAAAAALYPAAAAAAAAtw8AAAAAAAAAAAAAtw8AAAAAAAC4DwAAAAAAAAAAAAC4DwAAAAAAALkPAAAAAAAAAAAAALkPAAAAAAAAug8AAAAAAAAAAAAAug8AAAAAAAC7DwAAAAAAAAAAAAC7DwAAAAAAALwPAAAAAAAAAAAAALwPAAAAAAAAvQ8AAAAAAAAAAAAAvQ8AAAAAAAC+DwAAAAAAAAAAAAC+DwAAAAAAAL8PAAAAAAAAAAAAAL8PAAAAAAAAwA8AAAAAAAAAAAAAwA8AAAAAAADBDwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsw8AAAAAAACzDwAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					3,
					"left_delete",
					null,
					"AwAAAMAPAAAAAAAAwA8AAAAAAAABAAAAc78PAAAAAAAAvw8AAAAAAAABAAAAZb4PAAAAAAAAvg8AAAAAAAABAAAAcw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwQ8AAAAAAADBDwAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "nses"
					},
					"BAAAAL4PAAAAAAAAvw8AAAAAAAAAAAAAvw8AAAAAAADADwAAAAAAAAAAAADADwAAAAAAAMEPAAAAAAAAAAAAAMEPAAAAAAAAwg8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvg8AAAAAAAC+DwAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAMIPAAAAAAAAxA8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwg8AAAAAAADCDwAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "request_sedq"
					},
					"DAAAAMMPAAAAAAAAxA8AAAAAAAAAAAAAxA8AAAAAAADFDwAAAAAAAAAAAADFDwAAAAAAAMYPAAAAAAAAAAAAAMYPAAAAAAAAxw8AAAAAAAAAAAAAxw8AAAAAAADIDwAAAAAAAAAAAADIDwAAAAAAAMkPAAAAAAAAAAAAAMkPAAAAAAAAyg8AAAAAAAAAAAAAyg8AAAAAAADLDwAAAAAAAAAAAADLDwAAAAAAAMwPAAAAAAAAAAAAAMwPAAAAAAAAzQ8AAAAAAAAAAAAAzQ8AAAAAAADODwAAAAAAAAAAAADODwAAAAAAAM8PAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAww8AAAAAAADDDwAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					2,
					"left_delete",
					null,
					"AgAAAM4PAAAAAAAAzg8AAAAAAAABAAAAcc0PAAAAAAAAzQ8AAAAAAAABAAAAZA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzw8AAAAAAADPDwAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": "q"
					},
					"AQAAAM0PAAAAAAAAzg8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzQ8AAAAAAADNDwAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAM8PAAAAAAAA0A8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzw8AAAAAAADPDwAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANAPAAAAAAAA0Q8AAAAAAAAAAAAA0Q8AAAAAAADfDwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0A8AAAAAAADQDwAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAK0PAAAAAAAArg8AAAAAAAAAAAAArg8AAAAAAAC8DwAAAAAAAAAAAADgDwAAAAAAAOAPAAAAAAAADgAAACAgICAgICAgICAgICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArQ8AAAAAAACtDwAAAAAAAAAAAAAAgF9A"
				],
				[
					166,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4A8AAAAAAADgDwAAAAAAAAAAAAAAAAAA"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAKYJAAAAAAAApwkAAAAAAAAAAAAApwkAAAAAAACnCQAAAAAAAHwDAAAKCi8qZXhwb3J0IGZ1bmN0aW9uIEVDTUFTY3JpcHRTeW50YXhIaWdobGlnaHRlcihpbnB1dCwgZmlsZW5hbWUpIHsKICBjb25zdCBsZXhlciA9IG5ldyBFQ01BU2NyaXB0TGV4ZXIoaW5wdXQsIGZpbGVuYW1lKTsKICBsZXQgcHJldiA9IDAsCiAgICBzID0gJyc7CiAgY29uc3VtZVN5bmMobGV4ZXIudmFsdWVzKCksICh7IGlkLCB0eXBlLCBsZXhlbWUgfSkgPT4gewogICAgbGV0IGNvbG9yID0gewogICAgICBzaGViYW5nOiAzMiwKICAgICAgY29tbWVudDogMzIsCiAgICAgIHJlZ2V4cExpdGVyYWw6IDM1LAogICAgICB0ZW1wbGF0ZUxpdGVyYWw6IDM1LAogICAgICB0ZW1wbGF0ZUxpdGVyYWxIZWFkOiAzNSwKICAgICAgdGVtcGxhdGVMaXRlcmFsUGFydDogMzUsCiAgICAgIHRlbXBsYXRlTGl0ZXJhbFRhaWw6IDM1LAogICAgICBwdW5jdHVhdG9yOiAzNiwKICAgICAgbnVtZXJpY0xpdGVyYWw6IDM2LAogICAgICBzdHJpbmdMaXRlcmFsOiAzNiwKICAgICAgYm9vbGVhbkxpdGVyYWw6IDMxLAogICAgICBudWxsTGl0ZXJhbDogMzUsCiAgICAgIGtleXdvcmQ6IDMxLAogICAgICBpZGVudGlmaWVyOiAzMywKICAgICAgcHJpdmF0ZUlkZW50aWZpZXI6IDMzLAogICAgICB3aGl0ZXNwYWNlOiBmYWxzZQogICAgfVt0eXBlXTsKCiAgICBpZihsZXhlbWUuaW5kZXhPZignXG4nKSAhPSAtMSkgY29sb3IgPSAwOwoKICAgIGlmKGNvbG9yICE9PSBmYWxzZSkgewogICAgICBpZihwcmV2ICE9IGNvbG9yKSBsZXhlbWUgPSAnXHgxYlsnICsgKGNvbG9yID8gJzE7JyA6ICcnKSArIGNvbG9yICsgJ20nICsgbGV4ZW1lOwogICAgICBwcmV2ID0gY29sb3I7CiAgICB9CgogICAgcyArPSBsZXhlbWU7CiAgfSk7CgogIGlmKHByZXYpIHMgKz0gJ1x4MWJbMG0nOwogIHJldHVybiBzOwp9Ciov",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApgkAAAAAAAAiDQAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAKcJAAAAAAAAqAkAAAAAAAAAAAAAqAkAAAAAAACpCQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApwkAAAAAAACnCQAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAC4cAAAAAAAALxwAAAAAAAAAAAAALxwAAAAAAAAvHAAAAAAAAOAFAAAKLypmdW5jdGlvbiBUZXN0V29ya2VyKCkgewogIGdsb2JhbFRoaXMuY29uc29sZSA9IG5ldyBDb25zb2xlKHsKICAgIGNvbG9yczogdHJ1ZSwKICAgIGNvbXBhY3Q6IDEsCiAgICBwcmVmaXg6ICdceDFiWzM4OzU7MjIwbVBBUkVOVFx4MWJbMG0nCiAgfSk7CiAgd29ya2VyID0gbmV3IFdvcmtlcignLi93cy13b3JrZXIuanMnKTsKICBjb3VudGVyID0gMDsKICB3b3JrZXIub25tZXNzYWdlID0gV29ya2VyTWVzc2FnZTsKICBzZXRSZWFkSGFuZGxlcigwLCAoKSA9PiB7CiAgICBsZXQgbGluZSA9IHByb2Nlc3Muc3RkaW4uZ2V0bGluZSgpOwogICAgd29ya2VyLnBvc3RNZXNzYWdlKHsgbGluZSB9KTsKICB9KTsKfQoKbGV0IHNvY2ssIGNvbm5lY3Rpb247CmZ1bmN0aW9uIFdvcmtlck1lc3NhZ2UoZSkgewogIHZhciBldiA9IGUuZGF0YTsKICBjb25zdCB7IG1lc3NhZ2UsIGlkIH0gPSBldjsKICBzd2l0Y2ggKGV2LnR5cGUpIHsKICAgIGNhc2UgJ21lc3NhZ2UnOiB7CiAgICAgIHN3aXRjaCAobWVzc2FnZS50eXBlKSB7CiAgICAgICAgY2FzZSAnc3RhcnQnOiB7CiAgICAgICAgICBjb25zb2xlLmxvZygnU1RBUlQnLCBtZXNzYWdlLnN0YXJ0KTsKICAgICAgICAgIGNvbnN0IHsgYXJncywgY29ubmVjdCwgYWRkcmVzcyB9ID0gbWVzc2FnZS5zdGFydDsKICAgICAgICAgIGxldCBjaGlsZCA9IFN0YXJ0RGVidWdnZXIoYXJncywgY29ubmVjdCwgYWRkcmVzcyk7CiAgICAgICAgICBzbGVlcCgxMDAwKTsKICAgICAgICAgIHNvY2sgPSBDb25uZWN0RGVidWdnZXIoYWRkcmVzcyk7CiAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgICAgZGVmYXVsdDogewogICAgICAgICAgY29uc29sZS5sb2coJ0Zyb20gV09SS0VSJywgZXYpOwogICAgICAgICAgY29ubmVjdGlvbi5zZW5kTWVzc2FnZShtZXNzYWdlKTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIH0KICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgJ251bSc6IHsKICAgICAgYXNzZXJ0KGV2Lm51bSwgY291bnRlcik7CiAgICAgIGNvdW50ZXIrKzsKICAgICAgaWYoY291bnRlciA9PSAxMCkgewogICAgICAgIGxldCBzYWIgPSBuZXcgU2hhcmVkQXJyYXlCdWZmZXIoMTApOwogICAgICAgIGxldCBidWYgPSBuZXcgVWludDhBcnJheShzYWIpOwogICAgICAgIHdvcmtlci5wb3N0TWVzc2FnZSh7IHR5cGU6ICdzYWInLCBidWY6IGJ1ZiB9KTsKICAgICAgICBjb3VudGVyID0gMDsKICAgICAgfQogICAgICBicmVhazsKICAgIH0KICAgIGNhc2UgJ3NhYl9kb25lJzogewogICAgICBsZXQgYnVmID0gZXYuYnVmOwogICAgICBhc3NlcnQoYnVmWzJdLCAxMCk7CiAgICAgIHdvcmtlci5wb3N0TWVzc2FnZSh7IHR5cGU6ICdhYm9ydCcgfSk7CiAgICAgIGJyZWFrOwogICAgfQogICAgY2FzZSAnZG9uZSc6IHsKICAgICAgYnJlYWs7CiAgICB9CiAgfQp9CgpmdW5jdGlvbiBzZW5kKGlkLCBib2R5KSB7CiAgd29ya2VyLnBvc3RNZXNzYWdlKHsgdHlwZTogJ3NlbmQnLCBpZCwgYm9keSB9KTsKfSov",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALhwAAAAAAAAOIgAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAOEhAAAAAAAA4iEAAAAAAAAAAAAA4iEAAAAAAADiIQAAAAAAAP0AAAAKICAgIC8qICAgIHRyeSB7CiAgICAgIGlmKHAubGFzdCA9PSAndmFsdWUnKSBuYW1lID0gZGVlcC5nZXQoYXN0LCBwLnNsaWNlKDAsIC0xKS5jb25jYXQoWydrZXknLCAnbmFtZSddKSk7CiAgICB9IGNhdGNoKGUpIHt9CgogICAgaWYocGFyZW50LnR5cGUgPT0gJ1Byb3BlcnR5JykgewogICAgICBpZihwYXJlbnQua2V5LnR5cGUgPT0gJ0xpdGVyYWwnKSB7CiAgICAgICAgbmFtZSA/Pz0gcGFyZW50LmtleS52YWx1ZTsKICAgICAgfQogICAgfSov",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4SEAAAAAAADeIgAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAF0iAAAAAAAAXiIAAAAAAAAAAAAAXiIAAAAAAABeIgAAAAAAABMAAAAKICAgICAgLyppZihuYW1lKSov",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcCIAAAAAAABdIgAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXiIAAAAAAABeIgAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"paste",
					null,
					"AQAAAJ0KAAAAAAAAswoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnQoAAAAAAACdCgAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"paste",
					null,
					"AQAAAG0QAAAAAAAAgxAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbRAAAAAAAABtEAAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"paste",
					null,
					"AQAAAPYRAAAAAAAADBIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9hEAAAAAAAD2EQAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATBIAAAAAAABMEgAAAAAAAAAAAAAAAPC/"
				],
				[
					268,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAADEXAAAAAAAAMhcAAAAAAAAAAAAAMhcAAAAAAAA2FwAAAAAAAAAAAAA2FwAAAAAAADcXAAAAAAAAAAAAADcXAAAAAAAAOxcAAAAAAAAAAAAAMhcAAAAAAAAyFwAAAAAAAAQAAAAgICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMRcAAAAAAAAxFwAAAAAAAAAAAAAAAEJA"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": "console.log"
					},
					"CwAAADEXAAAAAAAAMhcAAAAAAAAAAAAAMhcAAAAAAAAzFwAAAAAAAAAAAAAzFwAAAAAAADQXAAAAAAAAAAAAADQXAAAAAAAANRcAAAAAAAAAAAAANRcAAAAAAAA2FwAAAAAAAAAAAAA2FwAAAAAAADcXAAAAAAAAAAAAADcXAAAAAAAAOBcAAAAAAAAAAAAAOBcAAAAAAAA5FwAAAAAAAAAAAAA5FwAAAAAAADoXAAAAAAAAAAAAADoXAAAAAAAAOxcAAAAAAAAAAAAAOxcAAAAAAAA8FwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMRcAAAAAAAAxFwAAAAAAAAAAAAAAAEJA"
				],
				[
					271,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADwXAAAAAAAAPhcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPBcAAAAAAAA8FwAAAAAAAAAAAAAAAPC/"
				],
				[
					272,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAD0XAAAAAAAAPxcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPRcAAAAAAAA9FwAAAAAAAAAAAAAAAPC/"
				],
				[
					273,
					1,
					"insert",
					{
						"characters": "breakpoints"
					},
					"CwAAAD4XAAAAAAAAPxcAAAAAAAAAAAAAPxcAAAAAAABAFwAAAAAAAAAAAABAFwAAAAAAAEEXAAAAAAAAAAAAAEEXAAAAAAAAQhcAAAAAAAAAAAAAQhcAAAAAAABDFwAAAAAAAAAAAABDFwAAAAAAAEQXAAAAAAAAAAAAAEQXAAAAAAAARRcAAAAAAAAAAAAARRcAAAAAAABGFwAAAAAAAAAAAABGFwAAAAAAAEcXAAAAAAAAAAAAAEcXAAAAAAAASBcAAAAAAAAAAAAASBcAAAAAAABJFwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPhcAAAAAAAA+FwAAAAAAAAAAAAAAAPC/"
				],
				[
					274,
					1,
					"insert",
					{
						"characters": "(1)"
					},
					"AwAAAEkXAAAAAAAAShcAAAAAAAAAAAAAShcAAAAAAABLFwAAAAAAAAAAAABLFwAAAAAAAEwXAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASRcAAAAAAABJFwAAAAAAAAAAAAAAAPC/"
				],
				[
					276,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAE0XAAAAAAAAThcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATRcAAAAAAABNFwAAAAAAAAAAAAAAAPC/"
				],
				[
					277,
					1,
					"insert",
					{
						"characters": " b"
					},
					"AgAAAE4XAAAAAAAATxcAAAAAAAAAAAAATxcAAAAAAABQFwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAThcAAAAAAABOFwAAAAAAAAAAAAAAAPC/"
				],
				[
					278,
					1,
					"left_delete",
					null,
					"AQAAAE8XAAAAAAAATxcAAAAAAAABAAAAYg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUBcAAAAAAABQFwAAAAAAAAAAAAAAAPC/"
				],
				[
					279,
					1,
					"insert",
					{
						"characters": "msg"
					},
					"AwAAAE8XAAAAAAAAUBcAAAAAAAAAAAAAUBcAAAAAAABRFwAAAAAAAAAAAABRFwAAAAAAAFIXAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATxcAAAAAAABPFwAAAAAAAAAAAAAAAPC/"
				],
				[
					281,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFMXAAAAAAAAVBcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUxcAAAAAAABTFwAAAAAAAAAAAAAAAPC/"
				],
				[
					287,
					1,
					"insert",
					{
						"characters": "let"
					},
					"AwAAAFcXAAAAAAAAWBcAAAAAAAAAAAAAWBcAAAAAAABZFwAAAAAAAAAAAABZFwAAAAAAAFoXAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVxcAAAAAAABXFwAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"insert",
					{
						"characters": " ret="
					},
					"BQAAAFoXAAAAAAAAWxcAAAAAAAAAAAAAWxcAAAAAAABcFwAAAAAAAAAAAABcFwAAAAAAAF0XAAAAAAAAAAAAAF0XAAAAAAAAXhcAAAAAAAAAAAAAXhcAAAAAAABfFwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWhcAAAAAAABaFwAAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAHgXAAAAAAAAeRcAAAAAAAAAAAAAeRcAAAAAAAB6FwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeBcAAAAAAAB4FwAAAAAAAP///////+9/"
				],
				[
					293,
					1,
					"cut",
					null,
					"AQAAAC4XAAAAAAAALhcAAAAAAAAnAAAAICAgY29uc29sZS5sb2coJ2JyZWFrcG9pbnRzKDEpJywgbXNnKTsK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALhcAAAAAAABVFwAAAAAAAAAAAAAAACJA"
				],
				[
					294,
					1,
					"paste",
					null,
					"AQAAAC4XAAAAAAAAVRcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALhcAAAAAAAAuFwAAAAAAAAAAAAAAAPC/"
				],
				[
					296,
					1,
					"paste",
					null,
					"AQAAAHkXAAAAAAAAoBcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeRcAAAAAAAB5FwAAAAAAAAAAAAAAAAAA"
				],
				[
					301,
					1,
					"insert_snippet",
					{
						"contents": "{${0:$SELECTION}}"
					},
					"AwAAAJoXAAAAAAAAmhcAAAAAAAADAAAAbXNnmhcAAAAAAACfFwAAAAAAAAAAAACiFwAAAAAAAKIXAAAAAAAAAQAAACA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmhcAAAAAAACdFwAAAAAAAAAAAAAAAPC/"
				],
				[
					302,
					1,
					"insert",
					{
						"characters": "msg,ret"
					},
					"CAAAAJsXAAAAAAAAnBcAAAAAAAAAAAAAnBcAAAAAAACcFwAAAAAAAAMAAABtc2ecFwAAAAAAAJ0XAAAAAAAAAAAAAJ0XAAAAAAAAnhcAAAAAAAAAAAAAnhcAAAAAAACfFwAAAAAAAAAAAACfFwAAAAAAAKAXAAAAAAAAAAAAAKAXAAAAAAAAoRcAAAAAAAAAAAAAoRcAAAAAAACiFwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmxcAAAAAAACeFwAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					1,
					"cut",
					null,
					"AQAAADEXAAAAAAAAMRcAAAAAAAAkAAAAY29uc29sZS5sb2coJ2JyZWFrcG9pbnRzKDEpJywgbXNnKTsK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMRcAAAAAAABVFwAAAAAAAAAAAAAAAEJA"
				],
				[
					315,
					1,
					"insert",
					{
						"characters": "await"
					},
					"BQAAAD0XAAAAAAAAPhcAAAAAAAAAAAAAPhcAAAAAAAA/FwAAAAAAAAAAAAA/FwAAAAAAAEAXAAAAAAAAAAAAAEAXAAAAAAAAQRcAAAAAAAAAAAAAQRcAAAAAAABCFwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPRcAAAAAAAA9FwAAAAAAAAAAAAAAAPC/"
				],
				[
					316,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEIXAAAAAAAAQxcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQhcAAAAAAABCFwAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": "async"
					},
					"BQAAAAcWAAAAAAAACBYAAAAAAAAAAAAACBYAAAAAAAAJFgAAAAAAAAAAAAAJFgAAAAAAAAoWAAAAAAAAAAAAAAoWAAAAAAAACxYAAAAAAAAAAAAACxYAAAAAAAAMFgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABxYAAAAAAAAHFgAAAAAAAAAAAAAAADJA"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAwWAAAAAAAADRYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADBYAAAAAAAAMFgAAAAAAAAAAAAAAAPC/"
				],
				[
					337,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARhkAAAAAAABGGQAAAAAAAAAAAAAAAPC/"
				],
				[
					368,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAF4XAAAAAAAAXxcAAAAAAAAAAAAAXxcAAAAAAABjFwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXhcAAAAAAABeFwAAAAAAAAAAAAAAAPC/"
				],
				[
					416,
					1,
					"insert",
					{
						"characters": "//"
					},
					"AwAAAGgXAAAAAAAAaRcAAAAAAAAAAAAAXxcAAAAAAABfFwAAAAAAAAQAAAAgICAgZRcAAAAAAABmFwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaBcAAAAAAABoFwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "debugger-client.js",
			"settings":
			{
				"buffer_size": 10822,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					34,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAAOQSAAAAAAAA5RIAAAAAAAAAAAAA5RIAAAAAAADnEgAAAAAAAAAAAADnEgAAAAAAAOgSAAAAAAAAAAAAAOgSAAAAAAAA6RIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5BIAAAAAAADkEgAAAAAAAAAAAAAAkHJA"
				],
				[
					35,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOkSAAAAAAAA6xIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6RIAAAAAAADpEgAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "!address"
					},
					"CAAAAOoSAAAAAAAA6xIAAAAAAAAAAAAA6xIAAAAAAADsEgAAAAAAAAAAAADsEgAAAAAAAO0SAAAAAAAAAAAAAO0SAAAAAAAA7hIAAAAAAAAAAAAA7hIAAAAAAADvEgAAAAAAAAAAAADvEgAAAAAAAPASAAAAAAAAAAAAAPASAAAAAAAA8RIAAAAAAAAAAAAA8RIAAAAAAADyEgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6hIAAAAAAADqEgAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPMSAAAAAAAA9BIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA8xIAAAAAAADzEgAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAPQSAAAAAAAA9hIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9BIAAAAAAAD0EgAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"BgAAAPUSAAAAAAAA9hIAAAAAAAAAAAAA9hIAAAAAAAD4EgAAAAAAAAAAAAD4EgAAAAAAAPkSAAAAAAAAAAAAAPkSAAAAAAAA+xIAAAAAAAAAAAAA9hIAAAAAAAD2EgAAAAAAAAIAAAAgIPYSAAAAAAAA+hIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9RIAAAAAAAD1EgAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "globalThis.addr"
					},
					"DwAAAPoSAAAAAAAA+xIAAAAAAAAAAAAA+xIAAAAAAAD8EgAAAAAAAAAAAAD8EgAAAAAAAP0SAAAAAAAAAAAAAP0SAAAAAAAA/hIAAAAAAAAAAAAA/hIAAAAAAAD/EgAAAAAAAAAAAAD/EgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAARMAAAAAAAAAAAAAARMAAAAAAAACEwAAAAAAAAAAAAACEwAAAAAAAAMTAAAAAAAAAAAAAAMTAAAAAAAABBMAAAAAAAAAAAAABBMAAAAAAAAFEwAAAAAAAAAAAAAFEwAAAAAAAAYTAAAAAAAAAAAAAAYTAAAAAAAABxMAAAAAAAAAAAAABxMAAAAAAAAIEwAAAAAAAAAAAAAIEwAAAAAAAAkTAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+hIAAAAAAAD6EgAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "ess=address="
					},
					"DAAAAAkTAAAAAAAAChMAAAAAAAAAAAAAChMAAAAAAAALEwAAAAAAAAAAAAALEwAAAAAAAAwTAAAAAAAAAAAAAAwTAAAAAAAADRMAAAAAAAAAAAAADRMAAAAAAAAOEwAAAAAAAAAAAAAOEwAAAAAAAA8TAAAAAAAAAAAAAA8TAAAAAAAAEBMAAAAAAAAAAAAAEBMAAAAAAAAREwAAAAAAAAAAAAAREwAAAAAAABITAAAAAAAAAAAAABITAAAAAAAAExMAAAAAAAAAAAAAExMAAAAAAAAUEwAAAAAAAAAAAAAUEwAAAAAAABUTAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACRMAAAAAAAAJEwAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"",
					null,
					"AQAAABUTAAAAAAAAOBMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFRMAAAAAAAAVEwAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADgTAAAAAAAAOhMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOBMAAAAAAAA4EwAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					2,
					"left_delete",
					null,
					"AgAAADkTAAAAAAAAORMAAAAAAAABAAAAKTgTAAAAAAAAOBMAAAAAAAABAAAAKA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOhMAAAAAAAA6EwAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": ");"
					},
					"AgAAADgTAAAAAAAAORMAAAAAAAAAAAAAORMAAAAAAAA6EwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOBMAAAAAAAA4EwAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAABUTAAAAAAAAFhMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFRMAAAAAAAAVEwAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"left_delete",
					null,
					"AQAAABUTAAAAAAAAFRMAAAAAAAABAAAALw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFhMAAAAAAAAWEwAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAABUTAAAAAAAAFhMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFRMAAAAAAAAVEwAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "'127.0.0.1:"
					},
					"CwAAABUTAAAAAAAAFhMAAAAAAAAAAAAAFhMAAAAAAAAXEwAAAAAAAAAAAAAXEwAAAAAAABgTAAAAAAAAAAAAABgTAAAAAAAAGRMAAAAAAAAAAAAAGRMAAAAAAAAaEwAAAAAAAAAAAAAaEwAAAAAAABsTAAAAAAAAAAAAABsTAAAAAAAAHBMAAAAAAAAAAAAAHBMAAAAAAAAdEwAAAAAAAAAAAAAdEwAAAAAAAB4TAAAAAAAAAAAAAB4TAAAAAAAAHxMAAAAAAAAAAAAAHxMAAAAAAAAgEwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFRMAAAAAAAAVEwAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "'°+"
					},
					"AwAAACATAAAAAAAAIRMAAAAAAAAAAAAAIRMAAAAAAAAiEwAAAAAAAAAAAAAiEwAAAAAAACMTAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIBMAAAAAAAAgEwAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					2,
					"left_delete",
					null,
					"AgAAACITAAAAAAAAIhMAAAAAAAABAAAAKyETAAAAAAAAIRMAAAAAAAACAAAAwrA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIxMAAAAAAAAjEwAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAACETAAAAAAAAIhMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIRMAAAAAAAAhEwAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEwTAAAAAAAATRMAAAAAAAAAAAAATRMAAAAAAABPEwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATBMAAAAAAABMEwAAAAAAAP///////+9/"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AwAAAJ0TAAAAAAAAnhMAAAAAAAAAAAAATRMAAAAAAABNEwAAAAAAAAIAAAAgIJwTAAAAAAAAnRMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnRMAAAAAAACdEwAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": " globalThis.addr"
					},
					"EAAAAJ0TAAAAAAAAnhMAAAAAAAAAAAAAnhMAAAAAAACfEwAAAAAAAAAAAACfEwAAAAAAAKATAAAAAAAAAAAAAKATAAAAAAAAoRMAAAAAAAAAAAAAoRMAAAAAAACiEwAAAAAAAAAAAACiEwAAAAAAAKMTAAAAAAAAAAAAAKMTAAAAAAAApBMAAAAAAAAAAAAApBMAAAAAAAClEwAAAAAAAAAAAAClEwAAAAAAAKYTAAAAAAAAAAAAAKYTAAAAAAAApxMAAAAAAAAAAAAApxMAAAAAAACoEwAAAAAAAAAAAACoEwAAAAAAAKkTAAAAAAAAAAAAAKkTAAAAAAAAqhMAAAAAAAAAAAAAqhMAAAAAAACrEwAAAAAAAAAAAACrEwAAAAAAAKwTAAAAAAAAAAAAAKwTAAAAAAAArRMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnRMAAAAAAACdEwAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "ess"
					},
					"AwAAAK0TAAAAAAAArhMAAAAAAAAAAAAArhMAAAAAAACvEwAAAAAAAAAAAACvEwAAAAAAALATAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArRMAAAAAAACtEwAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAL0lAAAAAAAAviUAAAAAAAAAAAAAviUAAAAAAADGJQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvSUAAAAAAAC9JQAAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAIYlAAAAAAAAhyUAAAAAAAAAAAAAhyUAAAAAAACPJQAAAAAAAAAAAADHJQAAAAAAAMclAAAAAAAACAAAACAgICAgICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhiUAAAAAAACGJQAAAAAAAAAAAAAAAFJA"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANgkAAAAAAAA2SQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2CQAAAAAAADYJAAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					5,
					"left_delete",
					null,
					"BQAAANgkAAAAAAAA2CQAAAAAAAABAAAACtckAAAAAAAA1yQAAAAAAAABAAAAL9YkAAAAAAAA1iQAAAAAAAABAAAAKtUkAAAAAAAA1SQAAAAAAAABAAAACtQkAAAAAAAA1CQAAAAAAAABAAAAOw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2SQAAAAAAADZJAAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": ";*/"
					},
					"AwAAANQkAAAAAAAA1SQAAAAAAAAAAAAA1SQAAAAAAADWJAAAAAAAAAAAAADWJAAAAAAAANckAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1CQAAAAAAADUJAAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAANckAAAAAAAA2CQAAAAAAAAAAAAA2CQAAAAAAADaJAAAAAAAAAAAAADaJAAAAAAAANskAAAAAAAAAAAAANskAAAAAAAA3SQAAAAAAAAAAAAA2CQAAAAAAADYJAAAAAAAAAIAAAAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1yQAAAAAAADXJAAAAAAAAAAAAAAAAPC/"
				],
				[
					281,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEQeAAAAAAAARR4AAAAAAAAAAAAA2iQAAAAAAADaJAAAAAAAAAIAAAAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARB4AAAAAAABEHgAAAAAAAAAAAAAAAPC/"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": "\n\nresponses"
					},
					"DgAAAPYlAAAAAAAA9yUAAAAAAAAAAAAA9yUAAAAAAAD5JQAAAAAAAAAAAAD5JQAAAAAAAPolAAAAAAAAAAAAAPolAAAAAAAA/CUAAAAAAAAAAAAA9yUAAAAAAAD3JQAAAAAAAAIAAAAgIPolAAAAAAAA+yUAAAAAAAAAAAAA+yUAAAAAAAD8JQAAAAAAAAAAAAD8JQAAAAAAAP0lAAAAAAAAAAAAAP0lAAAAAAAA/iUAAAAAAAAAAAAA/iUAAAAAAAD/JQAAAAAAAAAAAAD/JQAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAASYAAAAAAAAAAAAAASYAAAAAAAACJgAAAAAAAAAAAAACJgAAAAAAAAMmAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9iUAAAAAAAD2JQAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"insert",
					{
						"characters": "glöo"
					},
					"BQAAAPolAAAAAAAA+yUAAAAAAAAAAAAA+yUAAAAAAAD7JQAAAAAAAAkAAAByZXNwb25zZXP7JQAAAAAAAPwlAAAAAAAAAAAAAPwlAAAAAAAA/SUAAAAAAAAAAAAA/SUAAAAAAAD+JQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAyYAAAAAAAD6JQAAAAAAAAAAAAAAADJA"
				],
				[
					306,
					4,
					"left_delete",
					null,
					"BAAAAP0lAAAAAAAA/SUAAAAAAAABAAAAb/wlAAAAAAAA/CUAAAAAAAACAAAAw7b7JQAAAAAAAPslAAAAAAAAAQAAAGz6JQAAAAAAAPolAAAAAAAAAQAAAGc",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/iUAAAAAAAD+JQAAAAAAAAAAAAAAAPC/"
				],
				[
					307,
					1,
					"insert",
					{
						"characters": "responses=dispatch"
					},
					"EgAAAPolAAAAAAAA+yUAAAAAAAAAAAAA+yUAAAAAAAD8JQAAAAAAAAAAAAD8JQAAAAAAAP0lAAAAAAAAAAAAAP0lAAAAAAAA/iUAAAAAAAAAAAAA/iUAAAAAAAD/JQAAAAAAAAAAAAD/JQAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAASYAAAAAAAAAAAAAASYAAAAAAAACJgAAAAAAAAAAAAACJgAAAAAAAAMmAAAAAAAAAAAAAAMmAAAAAAAABCYAAAAAAAAAAAAABCYAAAAAAAAFJgAAAAAAAAAAAAAFJgAAAAAAAAYmAAAAAAAAAAAAAAYmAAAAAAAAByYAAAAAAAAAAAAAByYAAAAAAAAIJgAAAAAAAAAAAAAIJgAAAAAAAAkmAAAAAAAAAAAAAAkmAAAAAAAACiYAAAAAAAAAAAAACiYAAAAAAAALJgAAAAAAAAAAAAALJgAAAAAAAAwmAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+iUAAAAAAAD6JQAAAAAAAAAAAAAAAPC/"
				],
				[
					308,
					1,
					"insert",
					{
						"characters": ".responses;"
					},
					"CwAAAAwmAAAAAAAADSYAAAAAAAAAAAAADSYAAAAAAAAOJgAAAAAAAAAAAAAOJgAAAAAAAA8mAAAAAAAAAAAAAA8mAAAAAAAAECYAAAAAAAAAAAAAECYAAAAAAAARJgAAAAAAAAAAAAARJgAAAAAAABImAAAAAAAAAAAAABImAAAAAAAAEyYAAAAAAAAAAAAAEyYAAAAAAAAUJgAAAAAAAAAAAAAUJgAAAAAAABUmAAAAAAAAAAAAABUmAAAAAAAAFiYAAAAAAAAAAAAAFiYAAAAAAAAXJgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADCYAAAAAAAAMJgAAAAAAAAAAAAAAAPC/"
				],
				[
					311,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABcmAAAAAAAAGCYAAAAAAAAAAAAAGCYAAAAAAAAaJgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFyYAAAAAAAAXJgAAAAAAAAAAAAAAAPC/"
				],
				[
					316,
					2,
					"left_delete",
					null,
					"AgAAABgmAAAAAAAAGCYAAAAAAAACAAAAICAXJgAAAAAAABcmAAAAAAAAAQAAAAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGiYAAAAAAAAaJgAAAAAAAAAAAAAAAPC/"
				],
				[
					388,
					1,
					"cut",
					null,
					"AQAAAK8bAAAAAAAArxsAAAAAAAAKAAAAcmVzcG9uc2VzLA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArxsAAAAAAAC5GwAAAAAAAAAAAAAAAPC/"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": "globalThis.responses"
					},
					"FAAAAPolAAAAAAAA+yUAAAAAAAAAAAAA+yUAAAAAAAD8JQAAAAAAAAAAAAD8JQAAAAAAAP0lAAAAAAAAAAAAAP0lAAAAAAAA/iUAAAAAAAAAAAAA/iUAAAAAAAD/JQAAAAAAAAAAAAD/JQAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAASYAAAAAAAAAAAAAASYAAAAAAAACJgAAAAAAAAAAAAACJgAAAAAAAAMmAAAAAAAAAAAAAAMmAAAAAAAABCYAAAAAAAAAAAAABCYAAAAAAAAFJgAAAAAAAAAAAAAFJgAAAAAAAAYmAAAAAAAAAAAAAAYmAAAAAAAAByYAAAAAAAAAAAAAByYAAAAAAAAIJgAAAAAAAAAAAAAIJgAAAAAAAAkmAAAAAAAAAAAAAAkmAAAAAAAACiYAAAAAAAAAAAAACiYAAAAAAAALJgAAAAAAAAAAAAALJgAAAAAAAAwmAAAAAAAAAAAAAAwmAAAAAAAADSYAAAAAAAAAAAAADSYAAAAAAAAOJgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+iUAAAAAAAD6JQAAAAAAAAAAAAAAAPC/"
				],
				[
					395,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAA4mAAAAAAAADyYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADiYAAAAAAAAOJgAAAAAAAAAAAAAAAPC/"
				],
				[
					401,
					1,
					"insert",
					{
						"characters": "36"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					402,
					2,
					"left_delete",
					null,
					"AgAAAAEAAAAAAAAAAQAAAAAAAAABAAAANgAAAAAAAAAAAAAAAAAAAAABAAAAMw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					492,
					1,
					"cut",
					null,
					"AQAAAGgGAAAAAAAAaAYAAAAAAAAUAAAARWxlbWVudC5maW5kKCdtYWluJyk",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaAYAAAAAAAB8BgAAAAAAAAAAAAAAAPC/"
				],
				[
					493,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAGgGAAAAAAAAaQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAaAYAAAAAAABoBgAAAAAAAAAAAAAAAPC/"
				],
				[
					495,
					1,
					"insert",
					{
						"characters": "\nlet"
					},
					"BQAAAEkGAAAAAAAASgYAAAAAAAAAAAAASgYAAAAAAABMBgAAAAAAAAAAAABMBgAAAAAAAE0GAAAAAAAAAAAAAE0GAAAAAAAATgYAAAAAAAAAAAAATgYAAAAAAABPBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASQYAAAAAAABJBgAAAAAAAAAAAAAAcHFA"
				],
				[
					496,
					1,
					"insert",
					{
						"characters": " e;"
					},
					"AwAAAE8GAAAAAAAAUAYAAAAAAAAAAAAAUAYAAAAAAABRBgAAAAAAAAAAAABRBgAAAAAAAFIGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATwYAAAAAAABPBgAAAAAAAAAAAAAAAPC/"
				],
				[
					497,
					1,
					"insert",
					{
						"characters": "\n\nif"
					},
					"BwAAAFIGAAAAAAAAUwYAAAAAAAAAAAAAUwYAAAAAAABVBgAAAAAAAAAAAABVBgAAAAAAAFYGAAAAAAAAAAAAAFYGAAAAAAAAWAYAAAAAAAAAAAAAUwYAAAAAAABTBgAAAAAAAAIAAAAgIFYGAAAAAAAAVwYAAAAAAAAAAAAAVwYAAAAAAABYBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUgYAAAAAAABSBgAAAAAAAAAAAAAAAPC/"
				],
				[
					498,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFgGAAAAAAAAWgYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWAYAAAAAAABYBgAAAAAAAAAAAAAAAPC/"
				],
				[
					499,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAFkGAAAAAAAAWgYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWQYAAAAAAABZBgAAAAAAAAAAAAAAAPC/"
				],
				[
					500,
					1,
					"left_delete",
					null,
					"AQAAAFkGAAAAAAAAWQYAAAAAAAABAAAAZQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWgYAAAAAAABaBgAAAAAAAAAAAAAAAPC/"
				],
				[
					501,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFkGAAAAAAAAWwYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWQYAAAAAAABZBgAAAAAAAAAAAAAAAPC/"
				],
				[
					502,
					1,
					"insert",
					{
						"characters": "e="
					},
					"AgAAAFoGAAAAAAAAWwYAAAAAAAAAAAAAWwYAAAAAAABcBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWgYAAAAAAABaBgAAAAAAAAAAAAAAAPC/"
				],
				[
					503,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFwGAAAAAAAAXQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXAYAAAAAAABcBgAAAAAAAAAAAAAAAPC/"
				],
				[
					504,
					1,
					"paste",
					null,
					"AQAAAF0GAAAAAAAAcQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAXQYAAAAAAABdBgAAAAAAAAAAAAAAAPC/"
				],
				[
					506,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHMGAAAAAAAAdAYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcwYAAAAAAABzBgAAAAAAAAAAAAAAAPC/"
				],
				[
					507,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAHQGAAAAAAAAdgYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdAYAAAAAAAB0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					508,
					1,
					"right_delete",
					null,
					"AQAAAHUGAAAAAAAAdQYAAAAAAAABAAAAfQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdQYAAAAAAAB1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					511,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"BQAAACwHAAAAAAAALQcAAAAAAAAAAAAALQcAAAAAAAAvBwAAAAAAAAAAAAAvBwAAAAAAADAHAAAAAAAAAAAAAC0HAAAAAAAALQcAAAAAAAACAAAAICAtBwAAAAAAAC0HAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALAcAAAAAAAAsBwAAAAAAAP///////+9/"
				],
				[
					515,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0wYAAAAAAADTBgAAAAAAAAAAAAAAACJA"
				],
				[
					590,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAIkPAAAAAAAAig8AAAAAAAAAAAAAig8AAAAAAACMDwAAAAAAAAAAAACMDwAAAAAAAI0PAAAAAAAAAAAAAI0PAAAAAAAAjw8AAAAAAAAAAAAAig8AAAAAAACKDwAAAAAAAAIAAAAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAiQ8AAAAAAACJDwAAAAAAAAAAAAAAAPC/"
				],
				[
					605,
					2,
					"left_delete",
					null,
					"AgAAAIsPAAAAAAAAiw8AAAAAAAACAAAAICCKDwAAAAAAAIoPAAAAAAAAAQAAAAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjQ8AAAAAAACNDwAAAAAAAAAAAAAAAPC/"
				],
				[
					613,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANEPAAAAAAAA0g8AAAAAAAAAAAAA0g8AAAAAAADUDwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0Q8AAAAAAADRDwAAAAAAAAAAAAAAADJA"
				],
				[
					667,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcRIAAAAAAABxEgAAAAAAAAAAAAAAAPC/"
				],
				[
					723,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAABcgAAAAAAAAGCAAAAAAAAAAAAAAGCAAAAAAAAAYIAAAAAAAAOYEAAAKICAvKiAoYXN5bmMgZnVuY3Rpb24gUmVhZFNvY2tldCgpIHsKICAgIGZvciBhd2FpdChsZXQgbXNnIG9mIHdzKSB7CiAgICAgIGxldCBkYXRhOwogICAgICB0cnkgewogICAgICAgIGRhdGEgPSBKU09OLnBhcnNlKG1zZy5kYXRhKTsKICAgICAgfSBjYXRjaChlKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1dTIEVSUk9SIHBhcnNpbmcnLCBtc2cuZGF0YSk7CiAgICAgIH0KICAgICAgZ2xvYmFsVGhpcy5yZXNwb25zZSA9IGRhdGE7CiAgICAgIGlmKGRhdGEpIHsKICAgICAgICBjb25zb2xlLmxvZygnd3MgcmVjZWl2ZWQgJywgZGF0YSk7CiAgICAgICAgY29uc3QgeyByZXNwb25zZSwgcmVxdWVzdF9zZXEgfSA9IGRhdGE7CiAgICAgICAgaWYocmVzcG9uc2UpIHsKICAgICAgICAgIGNvbnN0IHsgY29tbWFuZCB9ID0gcmVzcG9uc2U7CiAgICAgICAgICBpZihbJ3N0YXJ0JywgJ2Nvbm5lY3QnXS5pbmRleE9mKGNvbW1hbmQpID49IDApIHsKICAgICAgICAgICAgY3dkID0gcmVzcG9uc2UuY3dkOwogICAgICAgICAgICBjb25zb2xlLmxvZygnY29tbWFuZDonLCBjb21tYW5kKTsKICAgICAgICAgICAgY29uc29sZS5sb2coJ3Jlc3BvbnNlOicsIHJlc3BvbnNlKTsKICAgICAgICAgICAgaWYocmVzcG9uc2UuYXJnc1swXSkgewogICAgICAgICAgICAgIGN1cnJlbnRTb3VyY2UocmVzcG9uc2UuYXJnc1swXSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgVXBkYXRlUG9zaXRpb24oKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBSZW5kZXJVSSgpOwogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgIH0KICAgICAgICAgIGlmKGNvbW1hbmQgPT0gJ3N0YXJ0JykgewogICAgICAgICAgICBjd2QgPSByZXNwb25zZS5jd2Q7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdzdGFydCcsIHJlc3BvbnNlKTsKICAgICAgICAgICAgUmVuZGVyVUkocmVzcG9uc2UuYXJnc1swXSk7CiAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZihyZXNwb25zZXNbcmVxdWVzdF9zZXFdKSByZXNwb25zZXNbcmVxdWVzdF9zZXFdKGRhdGEpOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnNvbGUubG9nKCdXUycsIHdzKTsKICAgICAgfQogICAgICBpZihbJ2VuZCcsICdlcnJvciddLmluZGV4T2YoZGF0YS50eXBlKSA+PSAwKSB7CiAgICAgICAgZG9jdW1lbnQuYm9keS5pbm5lckhUTUwgPSAnJzsKICAgICAgICBjb250aW51ZTsKICAgICAgfQogICAgfQogIH0pKCk7Ki8",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFyAAAAAAAAD9JAAAAAAAAAAAAAAAAPC/"
				],
				[
					731,
					1,
					"insert",
					{
						"characters": " "
					},
					"AgAAAPUhAAAAAAAA9iEAAAAAAAAAAAAA9iEAAAAAAAD2IQAAAAAAAMMAAAAKICAvKiBpZih1cmwuc2VhcmNoUGFyYW1zLmhhcygncG9ydCcpKSBhd2FpdCBDb25uZWN0KCk7CiAgZWxzZSBhd2FpdCBTdGFydChbdXJsLnNlYXJjaFBhcmFtcy5nZXQoJ3NjcmlwdCcpID8/ICdxdWlja2pzL3Fqcy1tb2R1bGVzL3Rlc3RzL3Rlc3RfZG9tLmpzJ10pOyAvLyAndGVzdC12aWRlby5qcycsICduaWdodHdhdGNoLm1wNCddKTsKKi8",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuCIAAAAAAAD1IQAAAAAAAAAAAAAAAPC/"
				],
				[
					732,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPYhAAAAAAAA9yEAAAAAAAAAAAAA9yEAAAAAAAD5IQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9iEAAAAAAAD2IQAAAAAAAAAAAAAAAPC/"
				],
				[
					735,
					1,
					"left_delete",
					null,
					"AgAAAHEjAAAAAAAAcSMAAAAAAABLAAAACiAgLy8gZG9SZW5kZXIoY3VycmVudFNvdXJjZSk7CgogIC8vd2luZG93LmxvY2F0aW9uLmhhc2ggPSBgI2xpbmUtJHtsaW5lfWA79yEAAAAAAAD3IQAAAAAAAAIAAAAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvCMAAAAAAABxIwAAAAAAAAAAAAAAAPC/"
				],
				[
					738,
					2,
					"left_delete",
					null,
					"AgAAAMQlAAAAAAAAxCUAAAAAAADjAAAACi8qCiAgewogICAgInR5cGUiOiAiYnJlYWtwb2ludHMiLAogICAgImJyZWFrcG9pbnRzIjogewogICAgICAicGF0aCI6ICJsaWIvZWNtYXNjcmlwdC9wYXJzZXIyLmpzIiwKICAgICAgImJyZWFrcG9pbnRzIjogWyB7ICJsaW5lIjogNDcwLCAiY29sdW1uIjogMCB9LCB7ICJsaW5lIjogMjE1MSwgImNvbHVtbiI6IDAgfSwgeyAibGluZSI6IDI0MDEsICJjb2x1bW4iOiAwIH0gXQogICAgfQogIH0KKi/DJQAAAAAAAMMlAAAAAAAAAQAAAAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxCUAAAAAAACnJgAAAAAAAAAAAAAAAPC/"
				],
				[
					741,
					1,
					"left_delete",
					null,
					"AQAAALAmAAAAAAAAsCYAAAAAAAD+AAAACi8qY29uc3QgQnV0dG9uID0gKHtpbWFnZX0pID0+IHsKY29uc3QgcmVmID0gdXNlQ2xpY2soZSA9PiB7CiAgY29uc29sZS5sb2coJ2NsaWNrISEhIScpOwp9KTsKIHJldHVybiAgaCgnYnV0dG9uJywgeyByZWYsIGNsYXNzOiAnYnV0dG9uJyB9LCBoKCdpbWcnLCB7IHNyYzogaW1hZ2UgfSkpOwp9Ki8KLypjb25zdCBCdXR0b25CYXI9ICAoe2NoaWxkcmVufSkgPT4gCmgoJ2RpdicsIHtjbGFzczogJ2J1dHRvbi1iYXInIH0sIGNoaWxkcmVuKTsqLwo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAsCYAAAAAAACuJwAAAAAAAAAAAAAAAPC/"
				],
				[
					744,
					1,
					"left_delete",
					null,
					"AQAAAOEmAAAAAAAA4SYAAAAAAAA+AAAACiAgLyogaWYoY3VycmVudFNvdXJjZSgpICE9IGZpbGUpIAogICAgY3VycmVudFNvdXJjZShmaWxlKTsqLwo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHycAAAAAAADhJgAAAAAAAAAAAAAAAPC/"
				],
				[
					756,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACSkAAAAAAAAJKQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "test-video.js",
			"settings":
			{
				"buffer_size": 26264,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"right",
				"Browse Mode: Outline (Right)"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"prett",
				"JsPrettier: Format Code"
			],
			[
				":q",
				"Coffee: Quick Run Bar"
			],
			[
				"clang",
				"Clang Format: Format Selection"
			],
			[
				"out",
				"Browse Mode: Outline (Right)"
			],
			[
				"mode",
				"HTML: Encode Special Characters"
			],
			[
				"insert",
				"Snippet: Insert livereload.js script"
			],
			[
				":w",
				":w - Save"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"OUTLIN",
				"Browse Mode: Outline (Right)"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 142.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/roman/Projects/plot-cv",
		"/home/roman/Projects/plot-cv/ol-layerswitcher"
	],
	"file_history":
	[
		"/home/roman/Projects/plot-cv/webSocket.js",
		"/home/roman/Projects/plot-cv/debugger.html",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/include/utils.h",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-sockets.h",
		"/home/roman/Projects/plot-cv/debuggerprotocol.js",
		"/home/roman/Projects/plot-cv/lib/repeater/repeater.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/src/qjsm.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-imgui/cmake/BuildGLFW.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildBrotli.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildLibwebsockets.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGLFW.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildMbedTLS.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/BuildCURL.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-glfw/cmake/BuildGL3W.cmake",
		"/home/roman/Projects/plot-cv/quickjs/qjs-sound/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/libwebsockets/plugin-standalone/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/js/rpc.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/brotli/CMakeLists.txt",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/cmake/FindLibreSSL.cmake",
		"/home/roman/Projects/plot-cv/test-nanovg.js",
		"/home/roman/Projects/plot-cv/debugger-client.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/js/debugger-client.js",
		"/home/roman/Projects/plot-cv/debugger.js",
		"/home/roman/Projects/plot-cv/quickjs/quickjs.c",
		"/home/roman/Projects/plot-cv/test-alea.js",
		"/home/roman/Projects/plot-cv/test-repeater.js",
		"/home/roman/Projects/plot-cv/debugger-server.js",
		"/home/roman/Projects/plot-cv/inst/x86_64-linux-debug/usr/local/bin/wscli.js",
		"/home/roman/Projects/plot-cv/quickjs.c",
		"/home/roman/Projects/plot-cv/repredator/pre8.png",
		"/home/roman/Projects/plot-cv/repredator/pre7.png",
		"/home/roman/Projects/plot-cv/repredator/pre2.png",
		"/home/roman/Projects/plot-cv/repredator/pre1.png",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/test-rpc.js",
		"/home/roman/Projects/plot-cv/clang-ast.js",
		"/home/roman/Projects/plot-cv/portaudio2.js",
		"/usr/include/portaudio.h",
		"/home/roman/Projects/plot-cv/portaudio.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-misc.c",
		"/home/roman/Projects/plot-cv/os-helpers.js",
		"/home/roman/Projects/plot-cv/io-helpers.js",
		"/usr/include/portmidi.h",
		"/home/roman/Projects/plot-cv/portmidi.js",
		"/home/roman/Projects/plot-cv/ast-shell.js",
		"/home/roman/Projects/plot-cv/list.html",
		"/home/roman/Projects/plot-cv/eagle-shell.js",
		"/home/roman/Projects/plot-cv/out.tmp",
		"/home/roman/Projects/plot-cv/webakeit.js",
		"/home/roman/Projects/plot-cv/webakeit-telegram.js",
		"/home/roman/Downloads/Telegram Desktop/ChatExport_2024-04-09/messages.html",
		"/home/roman/Projects/plot-cv/static/css/webakeit.css",
		"/home/roman/Projects/plot-cv/webakeit.tmp",
		"/home/roman/Projects/plot-cv/webakeit.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/xml-shell.js",
		"/home/roman/Projects/plot-cv/plot-cv.sublime-project",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/xml-shell.es",
		"/home/roman/Projects/plot-cv/lib/geom/splines.js",
		"/home/roman/Projects/plot-cv/fire.html",
		"/home/roman/Projects/plot-cv/numbers2.c",
		"/home/roman/Projects/plot-cv/main.js",
		"/home/roman/Projects/plot-cv/lib/geom/pointList.js",
		"/home/roman/Projects/plot-cv/draw.js",
		"/home/roman/Projects/plot-cv/lib/autoStore.js",
		"/home/roman/Projects/plot-cv/lib/async/events.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/resolve-imports.js",
		"/home/roman/Projects/plot-cv/fire.js",
		"/home/roman/Projects/plot-cv/upload-server.js",
		"/home/roman/Projects/plot-cv/lib/geom/point.js",
		"/home/roman/Projects/plot-cv/lib/misc.js",
		"/home/roman/Projects/plot-cv/components.js",
		"/home/roman/Projects/plot-cv/draw.html",
		"/home/roman/Projects/plot-cv/static/css/draw.css",
		"/home/roman/Projects/plot-cv/qjs-opencv/point.js",
		"/home/roman/Projects/plot-cv/draw-utils.js",
		"/home/roman/Projects/plot-cv/lib/fd-graph.js",
		"/home/roman/Projects/plot-cv/svg-box.js",
		"/home/roman/Projects/plot-cv/numbers.c",
		"/home/roman/Projects/plot-cv/hex.c",
		"/home/roman/Projects/plot-cv/upload-worker.js",
		"/home/roman/Projects/plot-cv/mailcow-db.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/examples/ssl-client.js",
		"/home/roman/Projects/plot-cv/promise-worker.js",
		"/home/roman/Projects/plot-cv/upload.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/quickjs-mysql.c",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/wscli.js",
		"/home/roman/Projects/plot-cv/lib/geom/graph.js",
		"/home/roman/Projects/plot-cv/lib/eagle/node.js",
		"/home/roman/Projects/plot-cv/lib/eagle/element.js",
		"/home/roman/Projects/plot-cv/workertest.js",
		"/home/roman/Projects/plot-cv/test-worker.js",
		"/home/roman/Projects/plot-cv/static/css/upload.css",
		"/home/roman/Projects/plot-cv/upload.html",
		"/home/roman/Projects/plot-cv/test-opencv.js",
		"/home/roman/Projects/plot-cv/map.html",
		"/home/roman/Projects/plot-cv/quickjs/qjs-net/tests/server.js",
		"/home/roman/Projects/plot-cv/quickjs/qjs-modules/lib/util.js",
		"/home/roman/Projects/plot-cv/directory.js",
		"/home/roman/Projects/plot-cv/test-video.js",
		"/home/roman/Projects/plot-cv/cv-shell.js",
		"/home/roman/Projects/plot-cv/directory.html",
		"/home/roman/Projects/plot-cv/coil.html",
		"/home/roman/Projects/plot-cv/filelist.html",
		"/home/roman/Projects/plot-cv/noise.js",
		"/home/roman/Projects/plot-cv/pinkNoise.js",
		"/home/roman/Projects/plot-cv/noise.html",
		"/home/roman/Projects/plot-cv/landing.html",
		"/home/roman/Projects/plot-cv/404.html",
		"/home/roman/Projects/plot-cv/index.html",
		"/home/roman/Projects/plot-cv/style.css",
		"/home/roman/Projects/plot-cv/lib/lscache.js",
		"/home/roman/Projects/plot-cv/example.html",
		"/home/roman/Projects/plot-cv/clock.html",
		"/home/roman/Projects/plot-cv/eagle2svg.js",
		"/home/roman/Projects/plot-cv/Pink-Noise-Generator-Thomas-Henry.brd",
		"/home/roman/Projects/plot-cv/lib/eagle/schematicRenderer.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/grid.js",
		"/home/roman/Projects/plot-cv/lib/eagle/renderUtils.js",
		"/home/roman/Projects/plot-cv/lib/geom/transformation.js",
		"/home/roman/Projects/plot-cv/lib/eagle/nodeList.js",
		"/home/roman/Projects/plot-cv/lib/eagle/ref.js",
		"/home/roman/Projects/plot-cv/lib/eagle/project.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/polygon.js",
		"/home/roman/Projects/plot-cv/lib/geom/polygon.js",
		"/home/roman/Projects/plot-cv/lib/eagle/components/symbol.js",
		"/home/roman/Projects/plot-cv/lib/eagle/boardRenderer.js"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 107.0,
		"where_history":
		[
			"/home/roman/Projects/plot-cv,*.js,*.c,*.h,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv,*.jsx,*.c,*.h,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv,*.js,*.c,*.h,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv,*.jsx,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv,*.js,*.cmake,CMakeLists.txt",
			"/home/roman/Projects/plot-cv,*.js",
			"/home/roman/Projects/plot-cv/lib/eagle,*.js",
			"/home/roman/Projects/plot-cv/lib,*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"\\bsvg\\b",
			"svgContainer",
			"SVGCom",
			"SVGComponent",
			"overlay",
			"\\bsvg\\b",
			"svgContainer",
			"overlay",
			"GetRects",
			"hello",
			"'hello'",
			"rects",
			"'rects'",
			"'hello'",
			"'rects'",
			"GetRects",
			"NewWS\\(",
			"NewWS",
			"Reconnect",
			"waitFor",
			"\\bconnect\\b",
			"connect",
			"CreateWebSocket",
			"WebSocketURL",
			"CreateWebSocket",
			"createServer",
			"createSewr",
			"onMessage",
			"\\bcid\\b",
			"cid =",
			"SendWS",
			" //",
			"SendWS",
			"cid",
			"uuid",
			"WebSocket",
			"CreateWebSock",
			"oncePromise",
			"resolve\\(",
			"setLog",
			"onMessage",
			"createServer",
			"main",
			"async ",
			"processMessage",
			"serv\\b",
			"serv",
			"processMessage",
			"async",
			"setLog",
			"CreateSocket",
			"uuid",
			"\\.uuid",
			"'uuid'",
			"uuid",
			"logLevel",
			"setLog",
			"sendMessage",
			"ws.sendMessage",
			"sendMessa",
			"onOpen",
			"ReconnectingWeb",
			"sendMessage",
			"CreateWebSocket",
			"'net'",
			"\\bnet\\b",
			"'net'",
			"logLevels",
			"setLog",
			"process.. read",
			"breakpoints",
			"main",
			"absolute",
			"stackTrace\\(",
			"stackTrace",
			"'StartDe",
			"'StartDebu",
			"'process\\(",
			"'process",
			"'Debugger proc",
			"'DebuggerDis",
			"'LaunchDe",
			"'ConnectDebug",
			"after call",
			"lineno",
			"send to debugger",
			"SendReq",
			"'breakpoint",
			"Next",
			"'path'",
			"class Deb",
			"responses",
			"\\bmain\\b",
			"main",
			"Element.find",
			"Element",
			"responses",
			"globalThis.responses",
			"globalThis.response",
			"globalThis.responses",
			"responses",
			"#responses",
			"DebuggerDispa",
			"responses",
			"SendRequest",
			"StepIn",
			"class Debugger",
			"process",
			"process\\(",
			"Start\\(",
			"Start",
			"ConnectDebugger",
			"StartDebugger",
			"'start'",
			"dbg",
			"ws.sendMessa",
			"DebuggerDis",
			"SendRequest",
			"dispatch =",
			"default:",
			"StepIn",
			"Dispatcher",
			"'onMessage",
			"DebuggerDispatcher",
			"LaunchDebugger",
			"ConnectDebu",
			"StartDebugger",
			"'start'"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"sendMessage",
			"responses",
			"import",
			"",
			"{ArrayBuffer}   buffer",
			"{ArrayBuffer}      buffer",
			"{Object|null}   outputDriverInfo",
			"{ArrayBuffer}   stream",
			", ",
			"m",
			"{ ",
			"export const ",
			"nameKey",
			", GetStream(stream)",
			"GetStream",
			"DereferenceStream",
			"export ",
			"export class ",
			"export class",
			"}\\n\n  get ",
			"); /**",
			"",
			"export const \\1 = ",
			"export function ",
			"&auml;",
			"&uuml;",
			"&ouml;",
			"\\1",
			"let",
			"this",
			"ret",
			"factor",
			"GetCirclePosition",
			"index",
			"dist",
			"}\\n\\n\\1",
			"}\\n\\1",
			"Log",
			"format_base",
			"\\1u",
			"format",
			"GREEN",
			"c",
			"output",
			"TYPE_MASK",
			" + (obj?.cacheBucket ?? '') + ",
			"\\1//\\2",
			"opts",
			"}\\n\\n",
			"}\\n\\n\\1",
			"",
			"\n      t = 'l';"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 481,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"current_file": "/home/roman/Projects/plot-cv/lib/async/websocket.js",
							"function_name_status_row": 53,
							"outline_rename_mode": false,
							"symkeys":
							[
								[
									163,
									197
								],
								[
									325,
									336
								],
								[
									355,
									369
								],
								[
									581,
									592
								],
								[
									611,
									625
								],
								[
									825,
									839
								],
								[
									858,
									882
								],
								[
									1050,
									1085
								],
								[
									1517,
									1562
								],
								[
									1920,
									1973
								],
								[
									2188,
									2228
								],
								[
									2426,
									2447
								],
								[
									2535,
									2590
								],
								[
									2718,
									2757
								],
								[
									2984,
									2998
								],
								[
									3039,
									3054
								],
								[
									3086,
									3098
								],
								[
									3126,
									3139
								],
								[
									3178,
									3192
								],
								[
									3233,
									3259
								]
							],
							"symlist":
							[
								"  oncePromise = (emitter, events) =>",
								"resolve =>",
								"  handler = e =>",
								"resolve =>",
								"  handler = e =>",
								"WebSocketError",
								"  constructor(message, ws)",
								"WebSocketIterator()",
								"WebSocketURL(arg = '/', query = {})",
								"CreateWebSocket(path = '/', protocols = [])",
								"StreamReadIterator(strm)",
								"ReconnectingWebSocket",
								"  constructor(url = '/ws', protocols = [], handlers = {})",
								"  connect(handlers = this.handlers)",
								"  get writable()",
								"  write: chunk =>",
								"  close: () =>",
								"  abort: err =>",
								"  get readable()",
								"  start: controller =>"
							],
							"syntax": "Packages/Outline/outline.hidden-tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740602845.39,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 1,
					"file": "debugger-server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 29794,
						"regions":
						{
						},
						"selection":
						[
							[
								16011,
								16027
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 540,
							"rulers":
							[
							],
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740608090.05,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true,
							"wrap_width": 0
						},
						"translation.x": 0.0,
						"translation.y": 8804.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "upload-server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 36010,
						"regions":
						{
						},
						"selection":
						[
							[
								16120,
								16120
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 522,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740631217.86,
							"tabs_extra_last_activated_sheet_index": 1,
							"tabs_extra_moving":
							[
								2,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9040.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "quickjs/qjs-net/js/rpc.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26723,
						"regions":
						{
						},
						"selection":
						[
							[
								12944,
								12944
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 453,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740631205.79,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7596.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "fire.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27314,
						"regions":
						{
						},
						"selection":
						[
							[
								17590,
								17590
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 684,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740634451.64,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 11956.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "lib/async/websocket.js",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4058,
						"regions":
						{
						},
						"selection":
						[
							[
								3261,
								3261
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 120,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740634452.7,
							"tabs_extra_last_activated_sheet_index": 4,
							"tabs_extra_moving":
							[
								2,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1894.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "draw.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16817,
						"regions":
						{
						},
						"selection":
						[
							[
								11400,
								11400
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 415,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740628257.49,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6579.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "test-alea.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 443,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 0,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740631205.49,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "quickjs/qjs-modules/quickjs-sockets.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 65964,
						"regions":
						{
						},
						"selection":
						[
							[
								32293,
								32293
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 1324,
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740631037.39,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 24827.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "debugger.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9022,
						"regions":
						{
						},
						"selection":
						[
							[
								5022,
								5022
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 131,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740631204.52,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2329.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "debugger-client.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10822,
						"regions":
						{
						},
						"selection":
						[
							[
								10505,
								10505
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 384,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740388769.41,
							"tabs_extra_last_activated_sheet_index": 5,
							"tabs_extra_moving":
							[
								3,
								1
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6562.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "test-video.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 26264,
						"regions":
						{
						},
						"selection":
						[
							[
								5485,
								5489
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "./",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"function_name_status_row": 134,
							"syntax": "Packages/JavaScriptNext - ES6 Syntax/JavaScriptNext.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1740388757.58,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1921.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 41.0
	},
	"layout":
	{
		"cells":
		[
			[
				2,
				0,
				3,
				2
			],
			[
				0,
				0,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.2,
			0.8,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 300.0
	},
	"output.Debugger Console":
	{
		"height": 300.0
	},
	"output.exec":
	{
		"height": 138.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "plot-cv.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"fire.js",
				"fire.js"
			],
			[
				"rpc.js",
				"quickjs/qjs-net/js/rpc.js"
			],
			[
				"draw",
				"draw.js"
			],
			[
				"draw.js",
				"draw.js"
			],
			[
				"async/web",
				"lib/async/websocket.js"
			],
			[
				"websocket",
				"webSocket.js"
			],
			[
				"upload-ser",
				"upload-server.js"
			],
			[
				"test-vide",
				"test-video.js"
			],
			[
				"test-alea",
				"test-alea.js"
			],
			[
				"test-vid",
				"test-video.js"
			],
			[
				"debugger.ht",
				"debugger.html"
			],
			[
				"debugger.js",
				"debugger.js"
			],
			[
				"utils.h",
				"quickjs/qjs-modules/include/utils.h"
			],
			[
				"quickjs-socket",
				"quickjs/qjs-modules/quickjs-sockets.c"
			],
			[
				"debugger-clie",
				"debugger-client.js"
			],
			[
				"debugger-ser",
				"debugger-server.js"
			],
			[
				"test-nanovg",
				"test-nanovg.js"
			],
			[
				"repeater",
				"lib/repeater/repeater.js"
			],
			[
				"repeater.js",
				"lib/repeater/repeater.js"
			],
			[
				"qjsm.c",
				"quickjs/qjs-modules/src/qjsm.c"
			],
			[
				"quickjs.c",
				"quickjs.c"
			],
			[
				"test-repea",
				"test-repeater.js"
			],
			[
				"debugger.htm",
				"debugger.html"
			],
			[
				"debugger",
				"debuggerprotocol.js"
			],
			[
				"portmidi",
				"/usr/include/portmidi.h"
			],
			[
				"portmidi.js",
				"portmidi.js"
			],
			[
				"portmidi.h",
				"/usr/include/portmidi.h"
			],
			[
				"clang-as",
				"clang-ast.js"
			],
			[
				"ast-she",
				"ast-shell.js"
			],
			[
				"-helpers",
				"os-helpers.js"
			],
			[
				"io-helper",
				"io-helpers.js"
			],
			[
				"portaudio.h",
				"/usr/include/portaudio.h"
			],
			[
				"portaudio",
				"portaudio.js"
			],
			[
				"quickjs.h",
				"quickjs/quickjs.h"
			],
			[
				"quickjs-misc",
				"quickjs/qjs-modules/quickjs-misc.c"
			],
			[
				"portaudio.js",
				"portaudio.js"
			],
			[
				"portaudio2.js",
				"portaudio2.js"
			],
			[
				"list.ht",
				"list.html"
			],
			[
				"eagle-she",
				"eagle-shell.js"
			],
			[
				"webka",
				"webakeit-telegram.js"
			],
			[
				"xml-she",
				"quickjs/qjs-modules/xml-shell.js"
			],
			[
				".html",
				"fire.html"
			],
			[
				"numbers2",
				"numbers2.c"
			],
			[
				"main.js",
				"main.js"
			],
			[
				"main",
				"main.js"
			],
			[
				"splines",
				"lib/geom/splines.js"
			],
			[
				"pointList",
				"lib/geom/pointList.js"
			],
			[
				"compon",
				"components.js"
			],
			[
				"ointlist",
				"lib/geom/pointList.js"
			],
			[
				"events.js",
				"lib/async/events.js"
			],
			[
				"point.js",
				"lib/geom/point.js"
			],
			[
				"misc.js",
				"lib/misc.js"
			],
			[
				"draw.css",
				"static/css/draw.css"
			],
			[
				"upload-server",
				"upload-server.js"
			],
			[
				"draw.html",
				"draw.html"
			],
			[
				"autoStore",
				"lib/autoStore.js"
			],
			[
				"resolve-im",
				"quickjs/qjs-modules/resolve-imports.js"
			],
			[
				"svg-box",
				"svg-box.js"
			],
			[
				"fd-graph",
				"lib/fd-graph.js"
			],
			[
				"draw-u",
				"draw-utils.js"
			],
			[
				"draw-util",
				"draw-utils.js"
			],
			[
				"test-nano",
				"test-nanovg.js"
			],
			[
				"fd-gra",
				"lib/fd-graph.js"
			],
			[
				"graph.js",
				"lib/geom/graph.js"
			],
			[
				"eagle-shell",
				"eagle-shell.js"
			],
			[
				"node.js",
				"lib/eagle/node.js"
			],
			[
				"eleme",
				"lib/eagle/element.js"
			],
			[
				"quickjs-mysql.c",
				"quickjs/qjs-modules/quickjs-mysql.c"
			],
			[
				"mailcow-db",
				"mailcow-db.js"
			],
			[
				"wscli.js",
				"quickjs/qjs-net/wscli.js"
			],
			[
				"upload.js",
				"upload.js"
			],
			[
				"workertest",
				"workertest.js"
			],
			[
				"promise-wor",
				"promise-worker.js"
			],
			[
				"test-work",
				"test-worker.js"
			],
			[
				"upload.css",
				"static/css/upload.css"
			],
			[
				"upload.html",
				"upload.html"
			],
			[
				"draw-ut",
				"draw-utils.js"
			],
			[
				"test-nan",
				"test-nanovg.js"
			],
			[
				"cv-shell",
				"cv-shell.js"
			],
			[
				"test-open",
				"test-opencv.js"
			],
			[
				"test-opencv",
				"test-opencv.js"
			],
			[
				"noise.js",
				"noise.js"
			],
			[
				"noise",
				"noise.html"
			],
			[
				"dire",
				"directory.html"
			],
			[
				"upload",
				"upload.html"
			],
			[
				"map.ht",
				"map.html"
			],
			[
				"landing",
				"landing.html"
			],
			[
				"fire",
				"fire.html"
			],
			[
				"filelist",
				"filelist.html"
			],
			[
				"coil",
				"coil.html"
			],
			[
				"util.js",
				"quickjs/qjs-modules/lib/util.js"
			],
			[
				"inde",
				"index.html"
			],
			[
				"404.ht",
				"404.html"
			],
			[
				"lscac",
				"lib/lscache.js"
			],
			[
				"style.css",
				"style.css"
			],
			[
				"direcot",
				"directory.html"
			],
			[
				"direc",
				"directory.html"
			],
			[
				"smd.js",
				"lib/eagle/components/smd.js"
			],
			[
				"smd.jy",
				"quickjs/qjs-modules/3rdparty/denodrivers-postgres/docs/.nojekyll"
			],
			[
				"via.js",
				"lib/eagle/components/via.js"
			],
			[
				"hole.js",
				"lib/eagle/components/hole.js"
			],
			[
				"eagle2sv",
				"eagle2svg.js"
			],
			[
				"svgRe",
				"lib/eagle/svgRenderer.js"
			],
			[
				"boardre",
				"lib/eagle/boardRenderer.js"
			],
			[
				"polygon",
				"lib/eagle/components/polygon.js"
			],
			[
				"polygon.js",
				"lib/geom/polygon.js"
			],
			[
				"symbol",
				"lib/eagle/components/symbol.js"
			],
			[
				"wire.js",
				"lib/eagle/components/wire.js"
			],
			[
				"components/sym",
				"lib/eagle/components/symbol.js"
			],
			[
				"eagle/ele",
				"lib/eagle/element.js"
			],
			[
				"github-user",
				"github-userscript.js"
			],
			[
				"line.js",
				"lib/geom/line.js"
			],
			[
				"rect.",
				"lib/geom/rect.js"
			],
			[
				"repl.js",
				"quickjs/qjs-modules/lib/repl.js"
			],
			[
				"minnet-clie",
				"quickjs/qjs-net/src/minnet-client.c"
			],
			[
				"callbaCK.C",
				"quickjs/qjs-net/lib/callback.c"
			],
			[
				"internal",
				"quickjs/qjs-modules/quickjs-internal.h"
			],
			[
				"utils.c",
				"quickjs/qjs-modules/src/utils.c"
			],
			[
				"eagle2",
				"eagle2gerber.js"
			],
			[
				"pcb-con",
				"pcb-conversion.js"
			],
			[
				"test_free",
				"qjs-opencv/tests/test_freetype.js"
			],
			[
				"param.js",
				"param.js"
			],
			[
				"make",
				"make-bitmap.js"
			],
			[
				"test_png",
				"qjs-opencv/tests/test_png.js"
			],
			[
				"stream/utils",
				"lib/stream/utils.js"
			],
			[
				"svg-cr",
				"svg-crop-pad.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 230.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
